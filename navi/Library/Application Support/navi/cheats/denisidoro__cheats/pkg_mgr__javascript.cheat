% npm, node, js

# initial new package
npm init

# initial immediately a new package
npm init -y

# install all dependencies packages
npm install

# install all dependencies packages for specific folder
npm install --prefix <folder>

# install all dev dependencies packages
npm install --save-dev

# install all dev dependencies for a specific folder
npm install --save-dev --prefix <folder>

# install a specified package
npm install <package_name>

# install a specified dev package
npm install <package_name> --save-dev

# install globally a specified package
npm install <package_name> -g

# install for a specific folder
npm install <package_name> --prefix <folder>

# install a specified dev package for a specific folder
npm install <package_name> --save-dev --prefix <folder>

# run a script
npm run <script>

# run a script for a specific folder
npm run <script> --prefix <folder>

$ script: node -p "Object.keys(require('./package.json').scripts).join('\n')"



% yarn, node, js

# initial new package
yarn init

# install all dependencies packages
yarn install

# install all dev dependencies packages
yarn install --save-dev

# install a specified package
yarn add <package_name>

# install a specified dev package
yarn add <package_name> --dev

# install globally a specified package
yarn global add <package_name>

# run a script
yarn run <script>

$ script: node -p "Object.keys(require('./package.json').scripts).join('\n')"



% nvm, node, js

# install a specified version of node
nvm install <version>

# list available versions
nvm ls-remote

# use installed node's version
nvm use <version>

# set a node's version as default
nvm alias default <version>
