{
  "version": 3,
  "sources": ["../node_modules/dequal/lite/index.js", "../node_modules/@raycast/utils/dist/useDeepMemo.js", "../node_modules/@raycast/utils/dist/useLatest.js", "../node_modules/@raycast/utils/dist/usePromise.js", "../node_modules/@raycast/utils/dist/useCachedState.js", "../node_modules/object-hash/index.js", "../node_modules/@raycast/utils/dist/useCachedPromise.js", "../node_modules/media-typer/index.js", "../node_modules/content-type/index.js", "../node_modules/webidl-conversions/lib/index.js", "../node_modules/whatwg-url/lib/utils.js", "../node_modules/tr46/index.js", "../node_modules/whatwg-url/lib/url-state-machine.js", "../node_modules/whatwg-url/lib/URL-impl.js", "../node_modules/whatwg-url/lib/URL.js", "../node_modules/whatwg-url/lib/public-api.js", "../node_modules/cross-fetch/node_modules/node-fetch/lib/index.js", "../node_modules/cross-fetch/dist/node-ponyfill.js", "../node_modules/@raycast/utils/dist/useFetch.js", "../node_modules/signal-exit/signals.js", "../node_modules/signal-exit/index.js", "../node_modules/@raycast/utils/dist/exec-utils.js", "../node_modules/@raycast/utils/dist/useExec.js", "../node_modules/@raycast/utils/dist/useSQL.js", "../node_modules/@raycast/utils/dist/useForm.js", "../node_modules/@raycast/utils/dist/icon/color.js", "../node_modules/@raycast/utils/dist/icon/avatar.js", "../node_modules/@raycast/utils/dist/icon/favicon.js", "../node_modules/@raycast/utils/dist/icon/progress.js", "../node_modules/@raycast/utils/dist/icon/index.js", "../node_modules/@raycast/utils/dist/index.js", "../node_modules/graphql/jsutils/isObjectLike.js", "../node_modules/graphql/jsutils/invariant.js", "../node_modules/graphql/language/location.js", "../node_modules/graphql/language/printLocation.js", "../node_modules/graphql/error/GraphQLError.js", "../node_modules/graphql/error/syntaxError.js", "../node_modules/graphql/language/ast.js", "../node_modules/graphql/language/directiveLocation.js", "../node_modules/graphql/language/kinds.js", "../node_modules/graphql/language/characterClasses.js", "../node_modules/graphql/language/blockString.js", "../node_modules/graphql/language/tokenKind.js", "../node_modules/graphql/language/lexer.js", "../node_modules/graphql/jsutils/devAssert.js", "../node_modules/graphql/jsutils/inspect.js", "../node_modules/graphql/jsutils/instanceOf.js", "../node_modules/graphql/language/source.js", "../node_modules/graphql/language/parser.js", "../node_modules/graphql/language/printString.js", "../node_modules/graphql/language/visitor.js", "../node_modules/graphql/language/printer.js", "../node_modules/graphql-request/node_modules/extract-files/public/ReactNativeFile.js", "../node_modules/graphql-request/node_modules/extract-files/public/isExtractableFile.js", "../node_modules/graphql-request/node_modules/extract-files/public/extractFiles.js", "../node_modules/graphql-request/node_modules/extract-files/public/index.js", "../node_modules/delayed-stream/lib/delayed_stream.js", "../node_modules/combined-stream/lib/combined_stream.js", "../node_modules/mime-db/index.js", "../node_modules/mime-types/index.js", "../node_modules/asynckit/lib/defer.js", "../node_modules/asynckit/lib/async.js", "../node_modules/asynckit/lib/abort.js", "../node_modules/asynckit/lib/iterate.js", "../node_modules/asynckit/lib/state.js", "../node_modules/asynckit/lib/terminator.js", "../node_modules/asynckit/parallel.js", "../node_modules/asynckit/serialOrdered.js", "../node_modules/asynckit/serial.js", "../node_modules/asynckit/index.js", "../node_modules/form-data/lib/populate.js", "../node_modules/form-data/lib/form_data.js", "../node_modules/graphql-request/src/defaultJsonSerializer.ts", "../node_modules/graphql-request/src/createRequestBody.ts", "../node_modules/graphql-request/src/parseArgs.ts", "../node_modules/graphql-request/src/types.ts", "../node_modules/graphql-request/src/graphql-ws.ts", "../node_modules/graphql-request/src/index.ts", "../node_modules/universal-user-agent/dist-src/index.js", "../node_modules/before-after-hook/lib/register.js", "../node_modules/before-after-hook/lib/add.js", "../node_modules/before-after-hook/lib/remove.js", "../node_modules/before-after-hook/index.js", "../node_modules/is-plain-object/dist/is-plain-object.js", "../node_modules/@octokit/endpoint/dist-src/util/lowercase-keys.js", "../node_modules/@octokit/endpoint/dist-src/util/merge-deep.js", "../node_modules/@octokit/endpoint/dist-src/util/remove-undefined-properties.js", "../node_modules/@octokit/endpoint/dist-src/merge.js", "../node_modules/@octokit/endpoint/dist-src/util/add-query-parameters.js", "../node_modules/@octokit/endpoint/dist-src/util/extract-url-variable-names.js", "../node_modules/@octokit/endpoint/dist-src/util/omit.js", "../node_modules/@octokit/endpoint/dist-src/util/url-template.js", "../node_modules/@octokit/endpoint/dist-src/parse.js", "../node_modules/@octokit/endpoint/dist-src/endpoint-with-defaults.js", "../node_modules/@octokit/endpoint/dist-src/with-defaults.js", "../node_modules/@octokit/endpoint/dist-src/version.js", "../node_modules/@octokit/endpoint/dist-src/defaults.js", "../node_modules/@octokit/endpoint/dist-src/index.js", "../node_modules/@octokit/request/node_modules/node-fetch/lib/index.js", "../node_modules/deprecation/dist-node/index.js", "../node_modules/wrappy/wrappy.js", "../node_modules/once/once.js", "../node_modules/@octokit/request-error/dist-src/index.js", "../node_modules/@octokit/request/dist-src/version.js", "../node_modules/@octokit/request/dist-src/get-buffer-response.js", "../node_modules/@octokit/request/dist-src/fetch-wrapper.js", "../node_modules/@octokit/request/dist-src/with-defaults.js", "../node_modules/@octokit/request/dist-src/index.js", "../node_modules/@octokit/graphql/dist-src/version.js", "../node_modules/@octokit/graphql/dist-src/error.js", "../node_modules/@octokit/graphql/dist-src/graphql.js", "../node_modules/@octokit/graphql/dist-src/with-defaults.js", "../node_modules/@octokit/graphql/dist-src/index.js", "../node_modules/@octokit/auth-token/dist-src/auth.js", "../node_modules/@octokit/auth-token/dist-src/with-authorization-prefix.js", "../node_modules/@octokit/auth-token/dist-src/hook.js", "../node_modules/@octokit/auth-token/dist-src/index.js", "../node_modules/@octokit/core/dist-src/version.js", "../node_modules/@octokit/core/dist-src/index.js", "../node_modules/@octokit/plugin-paginate-rest/dist-src/version.js", "../node_modules/@octokit/plugin-paginate-rest/dist-src/normalize-paginated-list-response.js", "../node_modules/@octokit/plugin-paginate-rest/dist-src/iterator.js", "../node_modules/@octokit/plugin-paginate-rest/dist-src/paginate.js", "../node_modules/@octokit/plugin-paginate-rest/dist-src/compose-paginate.js", "../node_modules/@octokit/plugin-paginate-rest/dist-src/generated/paginating-endpoints.js", "../node_modules/@octokit/plugin-paginate-rest/dist-src/paginating-endpoints.js", "../node_modules/@octokit/plugin-paginate-rest/dist-src/index.js", "../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/generated/endpoints.js", "../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/version.js", "../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/endpoints-to-methods.js", "../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js", "../node_modules/bottleneck/light.js", "../node_modules/@octokit/plugin-retry/dist-src/error-request.js", "../node_modules/@octokit/plugin-retry/dist-src/wrap-request.js", "../node_modules/@octokit/plugin-retry/dist-src/index.js", "../node_modules/@octokit/plugin-throttling/dist-src/version.js", "../node_modules/@octokit/plugin-throttling/dist-src/wrap-request.js", "../node_modules/@octokit/plugin-throttling/dist-src/generated/triggers-notification-paths.js", "../node_modules/@octokit/plugin-throttling/dist-src/route-matcher.js", "../node_modules/@octokit/plugin-throttling/dist-src/index.js", "../node_modules/btoa-lite/btoa-node.js", "../node_modules/@octokit/oauth-authorization-url/dist-src/index.js", "../node_modules/@octokit/oauth-methods/dist-src/version.js", "../node_modules/@octokit/oauth-methods/dist-src/utils.js", "../node_modules/@octokit/oauth-methods/dist-src/get-web-flow-authorization-url.js", "../node_modules/@octokit/oauth-methods/dist-src/exchange-web-flow-code.js", "../node_modules/@octokit/oauth-methods/dist-src/create-device-code.js", "../node_modules/@octokit/oauth-methods/dist-src/exchange-device-code.js", "../node_modules/@octokit/oauth-methods/dist-src/check-token.js", "../node_modules/@octokit/oauth-methods/dist-src/refresh-token.js", "../node_modules/@octokit/oauth-methods/dist-src/scope-token.js", "../node_modules/@octokit/oauth-methods/dist-src/reset-token.js", "../node_modules/@octokit/oauth-methods/dist-src/delete-token.js", "../node_modules/@octokit/oauth-methods/dist-src/delete-authorization.js", "../node_modules/@octokit/auth-oauth-device/dist-src/get-oauth-access-token.js", "../node_modules/@octokit/auth-oauth-device/dist-src/auth.js", "../node_modules/@octokit/auth-oauth-device/dist-src/hook.js", "../node_modules/@octokit/auth-oauth-device/dist-src/version.js", "../node_modules/@octokit/auth-oauth-device/dist-src/index.js", "../node_modules/@octokit/auth-oauth-user/dist-src/version.js", "../node_modules/@octokit/auth-oauth-user/dist-src/get-authentication.js", "../node_modules/@octokit/auth-oauth-user/dist-src/auth.js", "../node_modules/@octokit/auth-oauth-user/dist-src/requires-basic-auth.js", "../node_modules/@octokit/auth-oauth-user/dist-src/hook.js", "../node_modules/@octokit/auth-oauth-user/dist-src/index.js", "../node_modules/@octokit/auth-oauth-app/dist-src/auth.js", "../node_modules/@octokit/auth-oauth-app/dist-src/hook.js", "../node_modules/@octokit/auth-oauth-app/dist-src/version.js", "../node_modules/@octokit/auth-oauth-app/dist-src/index.js", "../node_modules/safe-buffer/index.js", "../node_modules/jws/lib/data-stream.js", "../node_modules/buffer-equal-constant-time/index.js", "../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js", "../node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js", "../node_modules/jwa/index.js", "../node_modules/jws/lib/tostring.js", "../node_modules/jws/lib/sign-stream.js", "../node_modules/jws/lib/verify-stream.js", "../node_modules/jws/index.js", "../node_modules/jsonwebtoken/decode.js", "../node_modules/jsonwebtoken/lib/JsonWebTokenError.js", "../node_modules/jsonwebtoken/lib/NotBeforeError.js", "../node_modules/jsonwebtoken/lib/TokenExpiredError.js", "../node_modules/ms/index.js", "../node_modules/jsonwebtoken/lib/timespan.js", "../node_modules/jsonwebtoken/node_modules/semver/semver.js", "../node_modules/jsonwebtoken/lib/psSupported.js", "../node_modules/jsonwebtoken/verify.js", "../node_modules/lodash.includes/index.js", "../node_modules/lodash.isboolean/index.js", "../node_modules/lodash.isinteger/index.js", "../node_modules/lodash.isnumber/index.js", "../node_modules/lodash.isplainobject/index.js", "../node_modules/lodash.isstring/index.js", "../node_modules/lodash.once/index.js", "../node_modules/jsonwebtoken/sign.js", "../node_modules/jsonwebtoken/index.js", "../node_modules/universal-github-app-jwt/dist-src/get-token.js", "../node_modules/universal-github-app-jwt/dist-src/index.js", "../node_modules/yallist/iterator.js", "../node_modules/yallist/yallist.js", "../node_modules/lru-cache/index.js", "../node_modules/@octokit/auth-app/dist-src/get-app-authentication.js", "../node_modules/@octokit/auth-app/dist-src/cache.js", "../node_modules/@octokit/auth-app/dist-src/to-token-authentication.js", "../node_modules/@octokit/auth-app/dist-src/get-installation-authentication.js", "../node_modules/@octokit/auth-app/dist-src/auth.js", "../node_modules/@octokit/auth-app/dist-src/requires-app-auth.js", "../node_modules/@octokit/auth-app/dist-src/hook.js", "../node_modules/@octokit/auth-app/dist-src/version.js", "../node_modules/@octokit/auth-app/dist-src/index.js", "../node_modules/@octokit/auth-unauthenticated/dist-src/auth.js", "../node_modules/@octokit/auth-unauthenticated/dist-src/is-rate-limit-error.js", "../node_modules/@octokit/auth-unauthenticated/dist-src/is-abuse-limit-error.js", "../node_modules/@octokit/auth-unauthenticated/dist-src/hook.js", "../node_modules/@octokit/auth-unauthenticated/dist-src/index.js", "../node_modules/fromentries/index.js", "../node_modules/@octokit/oauth-app/dist-src/version.js", "../node_modules/@octokit/oauth-app/dist-src/add-event-handler.js", "../node_modules/@octokit/oauth-app/dist-src/oauth-app-octokit.js", "../node_modules/@octokit/oauth-app/dist-src/emit-event.js", "../node_modules/@octokit/oauth-app/dist-src/methods/get-user-octokit.js", "../node_modules/@octokit/oauth-app/dist-src/methods/get-web-flow-authorization-url.js", "../node_modules/@octokit/oauth-app/dist-src/methods/create-token.js", "../node_modules/@octokit/oauth-app/dist-src/methods/check-token.js", "../node_modules/@octokit/oauth-app/dist-src/methods/reset-token.js", "../node_modules/@octokit/oauth-app/dist-src/methods/refresh-token.js", "../node_modules/@octokit/oauth-app/dist-src/methods/scope-token.js", "../node_modules/@octokit/oauth-app/dist-src/methods/delete-token.js", "../node_modules/@octokit/oauth-app/dist-src/methods/delete-authorization.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/handle-request.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/node/parse-request.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/node/send-response.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/on-unhandled-request-default.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/node/index.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/parse-request.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/send-response.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/index.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2-parse-request.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2-send-response.js", "../node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2.js", "../node_modules/@octokit/oauth-app/dist-src/index.js", "../node_modules/indent-string/index.js", "../node_modules/clean-stack/index.js", "../node_modules/aggregate-error/index.js", "../node_modules/@octokit/webhooks-methods/dist-src/types.js", "../node_modules/@octokit/webhooks-methods/dist-src/version.js", "../node_modules/@octokit/webhooks-methods/dist-src/node/sign.js", "../node_modules/@octokit/webhooks-methods/dist-src/utils.js", "../node_modules/@octokit/webhooks-methods/dist-src/node/verify.js", "../node_modules/@octokit/webhooks/dist-src/createLogger.js", "../node_modules/@octokit/webhooks/dist-src/generated/webhook-names.js", "../node_modules/@octokit/webhooks/dist-src/event-handler/on.js", "../node_modules/@octokit/webhooks/dist-src/event-handler/wrap-error-handler.js", "../node_modules/@octokit/webhooks/dist-src/event-handler/receive.js", "../node_modules/@octokit/webhooks/dist-src/event-handler/remove-listener.js", "../node_modules/@octokit/webhooks/dist-src/event-handler/index.js", "../node_modules/@octokit/webhooks/dist-src/to-normalized-json-string.js", "../node_modules/@octokit/webhooks/dist-src/sign.js", "../node_modules/@octokit/webhooks/dist-src/verify.js", "../node_modules/@octokit/webhooks/dist-src/verify-and-receive.js", "../node_modules/@octokit/webhooks/dist-src/middleware/node/get-missing-headers.js", "../node_modules/@octokit/webhooks/dist-src/middleware/node/get-payload.js", "../node_modules/@octokit/webhooks/dist-src/middleware/node/middleware.js", "../node_modules/@octokit/webhooks/dist-src/middleware/node/on-unhandled-request-default.js", "../node_modules/@octokit/webhooks/dist-src/middleware/node/index.js", "../node_modules/@octokit/webhooks/dist-src/index.js", "../node_modules/@octokit/app/dist-src/version.js", "../node_modules/@octokit/app/dist-src/webhooks.js", "../node_modules/@octokit/app/dist-src/get-installation-octokit.js", "../node_modules/@octokit/app/dist-src/each-installation.js", "../node_modules/@octokit/app/dist-src/each-repository.js", "../node_modules/@octokit/app/dist-src/middleware/node/on-unhandled-request-default.js", "../node_modules/@octokit/app/dist-src/middleware/node/index.js", "../node_modules/@octokit/app/dist-src/index.js", "../node_modules/octokit/dist-src/version.js", "../node_modules/octokit/dist-src/octokit.js", "../node_modules/octokit/dist-src/app.js", "../node_modules/web-streams-polyfill/src/stub/symbol.ts", "../node_modules/web-streams-polyfill/src/utils.ts", "../node_modules/web-streams-polyfill/src/lib/helpers/miscellaneous.ts", "../node_modules/web-streams-polyfill/src/lib/helpers/webidl.ts", "../node_modules/web-streams-polyfill/src/lib/simple-queue.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/generic-reader.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/internal-methods.ts", "../node_modules/web-streams-polyfill/src/stub/number-isfinite.ts", "../node_modules/web-streams-polyfill/src/stub/math-trunc.ts", "../node_modules/web-streams-polyfill/src/lib/validators/basic.ts", "../node_modules/web-streams-polyfill/src/lib/validators/readable-stream.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/default-reader.ts", "../node_modules/web-streams-polyfill/src/target/es2018/stub/async-iterator-prototype.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/async-iterator.ts", "../node_modules/web-streams-polyfill/src/stub/number-isnan.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/ecmascript.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/miscellaneous.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/queue-with-sizes.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/byte-stream-controller.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/byob-reader.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/queuing-strategy.ts", "../node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy.ts", "../node_modules/web-streams-polyfill/src/lib/validators/underlying-sink.ts", "../node_modules/web-streams-polyfill/src/lib/validators/writable-stream.ts", "../node_modules/web-streams-polyfill/src/lib/abort-signal.ts", "../node_modules/web-streams-polyfill/src/lib/writable-stream.ts", "../node_modules/web-streams-polyfill/src/stub/native.ts", "../node_modules/web-streams-polyfill/src/stub/dom-exception.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/pipe.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/default-controller.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/tee.ts", "../node_modules/web-streams-polyfill/src/lib/validators/underlying-source.ts", "../node_modules/web-streams-polyfill/src/lib/validators/reader-options.ts", "../node_modules/web-streams-polyfill/src/lib/validators/iterator-options.ts", "../node_modules/web-streams-polyfill/src/lib/validators/pipe-options.ts", "../node_modules/web-streams-polyfill/src/lib/validators/readable-writable-pair.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream.ts", "../node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy-init.ts", "../node_modules/web-streams-polyfill/src/lib/byte-length-queuing-strategy.ts", "../node_modules/web-streams-polyfill/src/lib/count-queuing-strategy.ts", "../node_modules/web-streams-polyfill/src/lib/validators/transformer.ts", "../node_modules/web-streams-polyfill/src/lib/transform-stream.ts", "../node_modules/fetch-blob/streams.cjs", "../node_modules/fetch-blob/index.js", "../node_modules/fetch-blob/file.js", "../node_modules/formdata-polyfill/esm.min.js", "../node_modules/node-domexception/index.js", "../node_modules/fetch-blob/from.js", "../node_modules/node-fetch/src/utils/multipart-parser.js", "../node_modules/graphql-tag/node_modules/tslib/tslib.js", "../node_modules/graphql/version.js", "../node_modules/graphql/jsutils/isPromise.js", "../node_modules/graphql/jsutils/didYouMean.js", "../node_modules/graphql/jsutils/identityFunc.js", "../node_modules/graphql/jsutils/keyMap.js", "../node_modules/graphql/jsutils/keyValMap.js", "../node_modules/graphql/jsutils/mapValue.js", "../node_modules/graphql/jsutils/naturalCompare.js", "../node_modules/graphql/jsutils/suggestionList.js", "../node_modules/graphql/jsutils/toObjMap.js", "../node_modules/graphql/utilities/valueFromASTUntyped.js", "../node_modules/graphql/type/assertName.js", "../node_modules/graphql/type/definition.js", "../node_modules/graphql/utilities/typeComparators.js", "../node_modules/graphql/type/scalars.js", "../node_modules/graphql/type/directives.js", "../node_modules/graphql/jsutils/isIterableObject.js", "../node_modules/graphql/utilities/astFromValue.js", "../node_modules/graphql/type/introspection.js", "../node_modules/graphql/type/schema.js", "../node_modules/graphql/type/validate.js", "../node_modules/graphql/utilities/typeFromAST.js", "../node_modules/graphql/utilities/TypeInfo.js", "../node_modules/graphql/language/predicates.js", "../node_modules/graphql/validation/rules/ExecutableDefinitionsRule.js", "../node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.js", "../node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.js", "../node_modules/graphql/validation/rules/KnownArgumentNamesRule.js", "../node_modules/graphql/validation/rules/KnownDirectivesRule.js", "../node_modules/graphql/validation/rules/KnownFragmentNamesRule.js", "../node_modules/graphql/validation/rules/KnownTypeNamesRule.js", "../node_modules/graphql/validation/rules/LoneAnonymousOperationRule.js", "../node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.js", "../node_modules/graphql/validation/rules/NoFragmentCyclesRule.js", "../node_modules/graphql/validation/rules/NoUndefinedVariablesRule.js", "../node_modules/graphql/validation/rules/NoUnusedFragmentsRule.js", "../node_modules/graphql/validation/rules/NoUnusedVariablesRule.js", "../node_modules/graphql/utilities/sortValueNode.js", "../node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.js", "../node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.js", "../node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.js", "../node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.js", "../node_modules/graphql/validation/rules/ScalarLeafsRule.js", "../node_modules/graphql/jsutils/printPathArray.js", "../node_modules/graphql/jsutils/Path.js", "../node_modules/graphql/utilities/coerceInputValue.js", "../node_modules/graphql/utilities/valueFromAST.js", "../node_modules/graphql/execution/values.js", "../node_modules/graphql/execution/collectFields.js", "../node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.js", "../node_modules/graphql/jsutils/groupBy.js", "../node_modules/graphql/validation/rules/UniqueArgumentDefinitionNamesRule.js", "../node_modules/graphql/validation/rules/UniqueArgumentNamesRule.js", "../node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.js", "../node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.js", "../node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.js", "../node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.js", "../node_modules/graphql/validation/rules/UniqueFragmentNamesRule.js", "../node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.js", "../node_modules/graphql/validation/rules/UniqueOperationNamesRule.js", "../node_modules/graphql/validation/rules/UniqueOperationTypesRule.js", "../node_modules/graphql/validation/rules/UniqueTypeNamesRule.js", "../node_modules/graphql/validation/rules/UniqueVariableNamesRule.js", "../node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.js", "../node_modules/graphql/validation/rules/VariablesAreInputTypesRule.js", "../node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.js", "../node_modules/graphql/validation/specifiedRules.js", "../node_modules/graphql/validation/ValidationContext.js", "../node_modules/graphql/validation/validate.js", "../node_modules/graphql/jsutils/memoize3.js", "../node_modules/graphql/jsutils/promiseForObject.js", "../node_modules/graphql/jsutils/promiseReduce.js", "../node_modules/graphql/jsutils/toError.js", "../node_modules/graphql/error/locatedError.js", "../node_modules/graphql/execution/execute.js", "../node_modules/graphql/graphql.js", "../node_modules/graphql/type/index.js", "../node_modules/graphql/language/index.js", "../node_modules/graphql/jsutils/isAsyncIterable.js", "../node_modules/graphql/execution/mapAsyncIterator.js", "../node_modules/graphql/execution/subscribe.js", "../node_modules/graphql/execution/index.js", "../node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.js", "../node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.js", "../node_modules/graphql/validation/index.js", "../node_modules/graphql/error/index.js", "../node_modules/graphql/utilities/getIntrospectionQuery.js", "../node_modules/graphql/utilities/getOperationAST.js", "../node_modules/graphql/utilities/getOperationRootType.js", "../node_modules/graphql/utilities/introspectionFromSchema.js", "../node_modules/graphql/utilities/buildClientSchema.js", "../node_modules/graphql/utilities/extendSchema.js", "../node_modules/graphql/utilities/buildASTSchema.js", "../node_modules/graphql/utilities/lexicographicSortSchema.js", "../node_modules/graphql/utilities/printSchema.js", "../node_modules/graphql/utilities/concatAST.js", "../node_modules/graphql/utilities/separateOperations.js", "../node_modules/graphql/utilities/stripIgnoredCharacters.js", "../node_modules/graphql/utilities/assertValidName.js", "../node_modules/graphql/utilities/findBreakingChanges.js", "../node_modules/graphql/utilities/index.js", "../node_modules/graphql/index.js", "../node_modules/graphql-tag/src/index.ts", "../node_modules/graphql-tag/main.js", "../src/create-branch.tsx", "../src/helpers/withGithubClient.tsx", "../src/api/oauth.ts", "../node_modules/node-fetch/src/index.js", "../node_modules/data-uri-to-buffer/src/index.ts", "../node_modules/node-fetch/src/body.js", "../node_modules/node-fetch/src/errors/base.js", "../node_modules/node-fetch/src/errors/fetch-error.js", "../node_modules/node-fetch/src/utils/is.js", "../node_modules/node-fetch/src/headers.js", "../node_modules/node-fetch/src/utils/is-redirect.js", "../node_modules/node-fetch/src/response.js", "../node_modules/node-fetch/src/request.js", "../node_modules/node-fetch/src/utils/get-search.js", "../node_modules/node-fetch/src/utils/referrer.js", "../node_modules/node-fetch/src/errors/abort-error.js", "../src/generated/graphql.ts", "../src/components/View.tsx", "../src/helpers/errors.ts", "../src/helpers/issue.ts", "../src/helpers/users.ts", "../src/hooks/useRepositories.ts", "../src/hooks/useViewer.ts"],
  "sourcesContent": ["var has = Object.prototype.hasOwnProperty;\n\nfunction dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n\nexports.dequal = dequal;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useDeepMemo = void 0;\nconst react_1 = require(\"react\");\nconst lite_1 = require(\"dequal/lite\");\n/**\n * @param value the value to be memoized (usually a dependency list)\n * @returns a memoized version of the value as long as it remains deeply equal\n */\nfunction useDeepMemo(value) {\n    const ref = (0, react_1.useRef)(value);\n    const signalRef = (0, react_1.useRef)(0);\n    if (!(0, lite_1.dequal)(value, ref.current)) {\n        ref.current = value;\n        signalRef.current += 1;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return (0, react_1.useMemo)(() => ref.current, [signalRef.current]);\n}\nexports.useDeepMemo = useDeepMemo;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useLatest = void 0;\nconst react_1 = require(\"react\");\n/**\n * Returns the latest state.\n *\n * This is mostly useful to get access to the latest value of some props or state inside an asynchronous callback, instead of that value at the time the callback was created from.\n */\nfunction useLatest(value) {\n    const ref = (0, react_1.useRef)(value);\n    ref.current = value;\n    return ref;\n}\nexports.useLatest = useLatest;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.usePromise = void 0;\nconst react_1 = require(\"react\");\nconst api_1 = require(\"@raycast/api\");\nconst useDeepMemo_1 = require(\"./useDeepMemo\");\nconst useLatest_1 = require(\"./useLatest\");\nfunction usePromise(fn, args, options) {\n    const lastCallId = (0, react_1.useRef)(0);\n    const [state, set] = (0, react_1.useState)({ isLoading: true });\n    const fnRef = (0, useLatest_1.useLatest)(fn);\n    const latestAbortable = (0, useLatest_1.useLatest)(options?.abortable);\n    const latestArgs = (0, useLatest_1.useLatest)(args || []);\n    const latestOnError = (0, useLatest_1.useLatest)(options?.onError);\n    const latestOnData = (0, useLatest_1.useLatest)(options?.onData);\n    const latestOnWillExecute = (0, useLatest_1.useLatest)(options?.onWillExecute);\n    const latestValue = (0, useLatest_1.useLatest)(state.data);\n    const latestCallback = (0, react_1.useRef)();\n    const callback = (0, react_1.useCallback)((...args) => {\n        const callId = ++lastCallId.current;\n        if (latestAbortable.current) {\n            latestAbortable.current.current?.abort();\n            latestAbortable.current.current = new AbortController();\n        }\n        latestOnWillExecute.current?.(args);\n        set((prevState) => ({ ...prevState, isLoading: true }));\n        return fnRef.current(...args).then((data) => {\n            if (callId === lastCallId.current) {\n                if (latestOnData.current) {\n                    latestOnData.current(data);\n                }\n                set({ data, isLoading: false });\n            }\n            return data;\n        }, (error) => {\n            if (error.name == \"AbortError\") {\n                return error;\n            }\n            if (callId === lastCallId.current) {\n                // handle errors\n                if (latestOnError.current) {\n                    latestOnError.current(error);\n                }\n                else {\n                    console.error(error);\n                    if (api_1.environment.launchType !== api_1.LaunchType.Background) {\n                        (0, api_1.showToast)({\n                            style: api_1.Toast.Style.Failure,\n                            title: \"Failed to fetch latest data\",\n                            message: error.message,\n                            primaryAction: {\n                                title: \"Retry\",\n                                onAction(toast) {\n                                    toast.hide();\n                                    latestCallback.current?.(...(latestArgs.current || []));\n                                },\n                            },\n                            secondaryAction: {\n                                title: \"Copy Logs\",\n                                onAction(toast) {\n                                    toast.hide();\n                                    api_1.Clipboard.copy(error?.stack || error?.message || \"\");\n                                },\n                            },\n                        });\n                    }\n                }\n                set({ error, isLoading: false });\n            }\n            return error;\n        });\n    }, [latestAbortable, latestOnData, latestOnError, latestArgs, fnRef, set, latestCallback, latestOnWillExecute]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    );\n    latestCallback.current = callback;\n    const revalidate = (0, react_1.useCallback)(() => {\n        return callback(...(latestArgs.current || []));\n    }, [callback, latestArgs]);\n    const mutate = (0, react_1.useCallback)(async (asyncUpdate, options) => {\n        let dataBeforeOptimisticUpdate;\n        try {\n            if (options?.optimisticUpdate) {\n                if (typeof options?.rollbackOnError !== \"function\" && options?.rollbackOnError !== false) {\n                    // keep track of the data before the optimistic update,\n                    // but only if we need it (eg. only when we want to automatically rollback after)\n                    dataBeforeOptimisticUpdate = structuredClone(latestValue.current?.value);\n                }\n                const update = options.optimisticUpdate;\n                set((prevState) => ({ ...prevState, data: update(prevState.data) }));\n            }\n            return await asyncUpdate;\n        }\n        catch (err) {\n            if (typeof options?.rollbackOnError === \"function\") {\n                const update = options.rollbackOnError;\n                set((prevState) => ({ ...prevState, data: update(prevState.data) }));\n            }\n            else if (options?.optimisticUpdate && options?.rollbackOnError !== false) {\n                set((prevState) => ({ ...prevState, data: dataBeforeOptimisticUpdate }));\n            }\n            throw err;\n        }\n        finally {\n            if (options?.shouldRevalidateAfter !== false) {\n                if (api_1.environment.launchType === api_1.LaunchType.Background || api_1.environment.commandMode === \"menu-bar\") {\n                    // when in the background or in a menu bar, we are going to await the revalidation\n                    // to make sure we get the right data at the end of the mutation\n                    await revalidate();\n                }\n                else {\n                    revalidate();\n                }\n            }\n        }\n    }, [revalidate, latestValue, set]);\n    // revalidate when the args change\n    (0, react_1.useEffect)(() => {\n        if (options?.execute !== false) {\n            callback(...(args || []));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [(0, useDeepMemo_1.useDeepMemo)([args, options?.execute, callback])]);\n    // abort request when unmounting\n    (0, react_1.useEffect)(() => {\n        return () => {\n            if (latestAbortable.current) {\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n                latestAbortable.current.current?.abort();\n            }\n        };\n    }, [latestAbortable]);\n    return { ...state, revalidate, mutate };\n}\nexports.usePromise = usePromise;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCachedState = void 0;\nconst react_1 = require(\"react\");\nconst api_1 = require(\"@raycast/api\");\nconst useLatest_1 = require(\"./useLatest\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction replacer(key, _value) {\n    const value = this[key];\n    if (value instanceof Date) {\n        return `__raycast_cached_date__${value.toString()}`;\n    }\n    if (Buffer.isBuffer(value)) {\n        return `__raycast_cached_buffer__${value.toString(\"base64\")}`;\n    }\n    return _value;\n}\nfunction reviver(_key, value) {\n    if (typeof value === \"string\" && value.startsWith(\"__raycast_cached_date__\")) {\n        return new Date(value.replace(\"__raycast_cached_date__\", \"\"));\n    }\n    if (typeof value === \"string\" && value.startsWith(\"__raycast_cached_buffer__\")) {\n        return Buffer.from(value.replace(\"__raycast_cached_buffer__\", \"\"), \"base64\");\n    }\n    return value;\n}\nconst rootCache = Symbol(\"cache without namespace\");\nconst cacheMap = new Map();\nfunction useCachedState(key, initialState, config) {\n    const cacheKey = config?.cacheNamespace || rootCache;\n    const cache = cacheMap.get(cacheKey) || cacheMap.set(cacheKey, new api_1.Cache({ namespace: config?.cacheNamespace })).get(cacheKey);\n    if (!cache) {\n        throw new Error(\"Missing cache\");\n    }\n    const keyRef = (0, useLatest_1.useLatest)(key);\n    const initialValueRef = (0, useLatest_1.useLatest)(initialState);\n    const cachedState = (0, react_1.useSyncExternalStore)(cache.subscribe, () => {\n        try {\n            return cache.get(keyRef.current);\n        }\n        catch (error) {\n            console.error(\"Could not get Cache data:\", error);\n            return undefined;\n        }\n    });\n    const state = (0, react_1.useMemo)(() => {\n        if (typeof cachedState !== \"undefined\") {\n            if (cachedState === \"undefined\") {\n                return undefined;\n            }\n            try {\n                return JSON.parse(cachedState, reviver);\n            }\n            catch (err) {\n                // the data got corrupted somehow\n                console.warn(\"The cached data is corrupted\", err);\n                return initialValueRef.current;\n            }\n        }\n        else {\n            return initialValueRef.current;\n        }\n    }, [cachedState, initialValueRef]);\n    const stateRef = (0, useLatest_1.useLatest)(state);\n    const setStateAndCache = (0, react_1.useCallback)((updater) => {\n        // @ts-expect-error TS struggles to infer the types as T could potentially be a function\n        const newValue = typeof updater === \"function\" ? updater(stateRef.current) : updater;\n        if (typeof newValue === \"undefined\") {\n            cache.set(keyRef.current, \"undefined\");\n        }\n        else {\n            const stringifiedValue = JSON.stringify(newValue, replacer);\n            cache.set(keyRef.current, stringifiedValue);\n        }\n        return newValue;\n    }, [cache, keyRef, stateRef]);\n    return [state, setStateAndCache];\n}\nexports.useCachedState = useCachedState;\n", "'use strict';\n\nvar crypto = require('crypto');\n\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */\nexports = module.exports = objectHash;\n\nfunction objectHash(object, options){\n  options = applyDefaults(object, options);\n\n  return hash(object, options);\n}\n\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */\nexports.sha1 = function(object){\n  return objectHash(object);\n};\nexports.keys = function(object){\n  return objectHash(object, {excludeValues: true, algorithm: 'sha1', encoding: 'hex'});\n};\nexports.MD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex'});\n};\nexports.keysMD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex', excludeValues: true});\n};\n\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : ['sha1', 'md5'];\nhashes.push('passthrough');\nvar encodings = ['buffer', 'hex', 'binary', 'base64'];\n\nfunction applyDefaults(object, sourceOptions){\n  sourceOptions = sourceOptions || {};\n\n  // create a copy rather than mutating\n  var options = {};\n  options.algorithm = sourceOptions.algorithm || 'sha1';\n  options.encoding = sourceOptions.encoding || 'hex';\n  options.excludeValues = sourceOptions.excludeValues ? true : false;\n  options.algorithm = options.algorithm.toLowerCase();\n  options.encoding = options.encoding.toLowerCase();\n  options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n  options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n  options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n  options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n  options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n  options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n  options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n  options.replacer = sourceOptions.replacer || undefined;\n  options.excludeKeys = sourceOptions.excludeKeys || undefined;\n\n  if(typeof object === 'undefined') {\n    throw new Error('Object argument required.');\n  }\n\n  // if there is a case-insensitive match in the hashes list, accept it\n  // (i.e. SHA256 for sha256)\n  for (var i = 0; i < hashes.length; ++i) {\n    if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n      options.algorithm = hashes[i];\n    }\n  }\n\n  if(hashes.indexOf(options.algorithm) === -1){\n    throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' +\n      'supported values: ' + hashes.join(', '));\n  }\n\n  if(encodings.indexOf(options.encoding) === -1 &&\n     options.algorithm !== 'passthrough'){\n    throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' +\n      'supported values: ' + encodings.join(', '));\n  }\n\n  return options;\n}\n\n/** Check if the given function is a native function */\nfunction isNativeFunction(f) {\n  if ((typeof f) !== 'function') {\n    return false;\n  }\n  var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\n\nfunction hash(object, options) {\n  var hashingStream;\n\n  if (options.algorithm !== 'passthrough') {\n    hashingStream = crypto.createHash(options.algorithm);\n  } else {\n    hashingStream = new PassThrough();\n  }\n\n  if (typeof hashingStream.write === 'undefined') {\n    hashingStream.write = hashingStream.update;\n    hashingStream.end   = hashingStream.update;\n  }\n\n  var hasher = typeHasher(options, hashingStream);\n  hasher.dispatch(object);\n  if (!hashingStream.update) {\n    hashingStream.end('');\n  }\n\n  if (hashingStream.digest) {\n    return hashingStream.digest(options.encoding === 'buffer' ? undefined : options.encoding);\n  }\n\n  var buf = hashingStream.read();\n  if (options.encoding === 'buffer') {\n    return buf;\n  }\n\n  return buf.toString(options.encoding);\n}\n\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */\nexports.writeToStream = function(object, options, stream) {\n  if (typeof stream === 'undefined') {\n    stream = options;\n    options = {};\n  }\n\n  options = applyDefaults(object, options);\n\n  return typeHasher(options, stream).dispatch(object);\n};\n\nfunction typeHasher(options, writeTo, context){\n  context = context || [];\n  var write = function(str) {\n    if (writeTo.update) {\n      return writeTo.update(str, 'utf8');\n    } else {\n      return writeTo.write(str, 'utf8');\n    }\n  };\n\n  return {\n    dispatch: function(value){\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n\n      var type = typeof value;\n      if (value === null) {\n        type = 'null';\n      }\n\n      //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n\n      return this['_' + type](value);\n    },\n    _object: function(object) {\n      var pattern = (/\\[object (.*)\\]/i);\n      var objString = Object.prototype.toString.call(object);\n      var objType = pattern.exec(objString);\n      if (!objType) { // object type did not match [object ...]\n        objType = 'unknown:[' + objString + ']';\n      } else {\n        objType = objType[1]; // take only the class name\n      }\n\n      objType = objType.toLowerCase();\n\n      var objectNumber = null;\n\n      if ((objectNumber = context.indexOf(object)) >= 0) {\n        return this.dispatch('[CIRCULAR:' + objectNumber + ']');\n      } else {\n        context.push(object);\n      }\n\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        return write(object);\n      }\n\n      if(objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if(this['_' + objType]) {\n          this['_' + objType](object);\n        } else if (options.ignoreUnknown) {\n          return write('[' + objType + ']');\n        } else {\n          throw new Error('Unknown object type \"' + objType + '\"');\n        }\n      }else{\n        var keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        // Make sure to incorporate special properties, so\n        // Types with different prototypes will produce\n        // a different hash and objects derived from\n        // different functions (`new Foo`, `new Bar`) will\n        // produce different hashes.\n        // We never do this for native functions since some\n        // seem to break because of that.\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          keys.splice(0, 0, 'prototype', '__proto__', 'constructor');\n        }\n\n        if (options.excludeKeys) {\n          keys = keys.filter(function(key) { return !options.excludeKeys(key); });\n        }\n\n        write('object:' + keys.length + ':');\n        var self = this;\n        return keys.forEach(function(key){\n          self.dispatch(key);\n          write(':');\n          if(!options.excludeValues) {\n            self.dispatch(object[key]);\n          }\n          write(',');\n        });\n      }\n    },\n    _array: function(arr, unordered){\n      unordered = typeof unordered !== 'undefined' ? unordered :\n        options.unorderedArrays !== false; // default to options.unorderedArrays\n\n      var self = this;\n      write('array:' + arr.length + ':');\n      if (!unordered || arr.length <= 1) {\n        return arr.forEach(function(entry) {\n          return self.dispatch(entry);\n        });\n      }\n\n      // the unordered case is a little more complicated:\n      // since there is no canonical ordering on objects,\n      // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n      // we first serialize each entry using a PassThrough stream\n      // before sorting.\n      // also: we can\u2019t use the same context array for all entries\n      // since the order of hashing should *not* matter. instead,\n      // we keep track of the additions to a copy of the context array\n      // and add all of them to the global context array when we\u2019re done\n      var contextAdditions = [];\n      var entries = arr.map(function(entry) {\n        var strm = new PassThrough();\n        var localContext = context.slice(); // make copy\n        var hasher = typeHasher(options, strm, localContext);\n        hasher.dispatch(entry);\n        // take only what was added to localContext and append it to contextAdditions\n        contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n        return strm.read().toString();\n      });\n      context = context.concat(contextAdditions);\n      entries.sort();\n      return this._array(entries, false);\n    },\n    _date: function(date){\n      return write('date:' + date.toJSON());\n    },\n    _symbol: function(sym){\n      return write('symbol:' + sym.toString());\n    },\n    _error: function(err){\n      return write('error:' + err.toString());\n    },\n    _boolean: function(bool){\n      return write('bool:' + bool.toString());\n    },\n    _string: function(string){\n      write('string:' + string.length + ':');\n      write(string.toString());\n    },\n    _function: function(fn){\n      write('fn:');\n      if (isNativeFunction(fn)) {\n        this.dispatch('[native]');\n      } else {\n        this.dispatch(fn.toString());\n      }\n\n      if (options.respectFunctionNames !== false) {\n        // Make sure we can still distinguish native functions\n        // by their name, otherwise String and Function will\n        // have the same hash\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n\n      if (options.respectFunctionProperties) {\n        this._object(fn);\n      }\n    },\n    _number: function(number){\n      return write('number:' + number.toString());\n    },\n    _xml: function(xml){\n      return write('xml:' + xml.toString());\n    },\n    _null: function() {\n      return write('Null');\n    },\n    _undefined: function() {\n      return write('Undefined');\n    },\n    _regexp: function(regex){\n      return write('regex:' + regex.toString());\n    },\n    _uint8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray: function(arr){\n      write('uint8clampedarray:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array: function(arr){\n      write('int8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array: function(arr){\n      write('int16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array: function(arr){\n      write('int32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array: function(arr){\n      write('float32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array: function(arr){\n      write('float64array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer: function(arr){\n      write('arraybuffer:');\n      return this.dispatch(new Uint8Array(arr));\n    },\n    _url: function(url) {\n      return write('url:' + url.toString(), 'utf8');\n    },\n    _map: function(map) {\n      write('map:');\n      var arr = Array.from(map);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _set: function(set) {\n      write('set:');\n      var arr = Array.from(set);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _file: function(file) {\n      write('file:');\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    _blob: function() {\n      if (options.ignoreUnknown) {\n        return write('[blob]');\n      }\n\n      throw Error('Hashing Blob objects is currently not supported\\n' +\n        '(see https://github.com/puleos/object-hash/issues/26)\\n' +\n        'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n    },\n    _domwindow: function() { return write('domwindow'); },\n    _bigint: function(number){\n      return write('bigint:' + number.toString());\n    },\n    /* Node.js standard native objects */\n    _process: function() { return write('process'); },\n    _timer: function() { return write('timer'); },\n    _pipe: function() { return write('pipe'); },\n    _tcp: function() { return write('tcp'); },\n    _udp: function() { return write('udp'); },\n    _tty: function() { return write('tty'); },\n    _statwatcher: function() { return write('statwatcher'); },\n    _securecontext: function() { return write('securecontext'); },\n    _connection: function() { return write('connection'); },\n    _zlib: function() { return write('zlib'); },\n    _context: function() { return write('context'); },\n    _nodescript: function() { return write('nodescript'); },\n    _httpparser: function() { return write('httpparser'); },\n    _dataview: function() { return write('dataview'); },\n    _signal: function() { return write('signal'); },\n    _fsevent: function() { return write('fsevent'); },\n    _tlswrap: function() { return write('tlswrap'); },\n  };\n}\n\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n  return {\n    buf: '',\n\n    write: function(b) {\n      this.buf += b;\n    },\n\n    end: function(b) {\n      this.buf += b;\n    },\n\n    read: function() {\n      return this.buf;\n    }\n  };\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCachedPromise = void 0;\nconst react_1 = require(\"react\");\nconst object_hash_1 = __importDefault(require(\"object-hash\"));\nconst useCachedState_1 = require(\"./useCachedState\");\nconst usePromise_1 = require(\"./usePromise\");\nconst useLatest_1 = require(\"./useLatest\");\n// Symbol to differentiate an empty cache from `undefined`\nconst emptyCache = Symbol();\nfunction useCachedPromise(fn, args, options) {\n    const { initialData, keepPreviousData, ...usePromiseOptions } = options || {};\n    const lastUpdateFrom = (0, react_1.useRef)();\n    const [cachedData, mutateCache] = (0, useCachedState_1.useCachedState)((0, object_hash_1.default)(args || []), emptyCache, {\n        cacheNamespace: (0, object_hash_1.default)(fn),\n    });\n    // Use a ref to store previous returned data. Use the inital data as its inital value from the cache.\n    const laggyDataRef = (0, react_1.useRef)(cachedData !== emptyCache ? cachedData : initialData);\n    const { mutate: _mutate, revalidate, ...state\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n     } = (0, usePromise_1.usePromise)(fn, args || [], {\n        ...usePromiseOptions,\n        onData(data) {\n            if (usePromiseOptions.onData) {\n                usePromiseOptions.onData(data);\n            }\n            // update the cache when we fetch new values\n            lastUpdateFrom.current = \"promise\";\n            laggyDataRef.current = data;\n            mutateCache(data);\n        },\n    });\n    // data returned if there are no special cases\n    const data = cachedData !== emptyCache ? cachedData : initialData;\n    const returnedData = \n    // if the latest update if from the Promise, we keep it\n    lastUpdateFrom.current === \"promise\"\n        ? laggyDataRef.current\n        : // if we want to keep the latest data, we pick the cache but only if it's not empty\n            keepPreviousData\n                ? cachedData !== emptyCache\n                    ? cachedData\n                    : // if the cache is empty, we will return the previous data\n                        laggyDataRef.current\n                : data;\n    const latestData = (0, useLatest_1.useLatest)(returnedData);\n    // we rewrite the mutate function to update the cache instead\n    const mutate = (0, react_1.useCallback)(async (asyncUpdate, options) => {\n        let dataBeforeOptimisticUpdate;\n        try {\n            if (options?.optimisticUpdate) {\n                if (typeof options?.rollbackOnError !== \"function\" && options?.rollbackOnError !== false) {\n                    // keep track of the data before the optimistic update,\n                    // but only if we need it (eg. only when we want to automatically rollback after)\n                    dataBeforeOptimisticUpdate = structuredClone(latestData.current);\n                }\n                const data = options.optimisticUpdate(latestData.current);\n                lastUpdateFrom.current = \"cache\";\n                laggyDataRef.current = data;\n                mutateCache(data);\n            }\n            return await _mutate(asyncUpdate, { shouldRevalidateAfter: options?.shouldRevalidateAfter });\n        }\n        catch (err) {\n            if (typeof options?.rollbackOnError === \"function\") {\n                const data = options.rollbackOnError(latestData.current);\n                lastUpdateFrom.current = \"cache\";\n                laggyDataRef.current = data;\n                mutateCache(data);\n            }\n            else if (options?.optimisticUpdate && options?.rollbackOnError !== false) {\n                lastUpdateFrom.current = \"cache\";\n                // @ts-expect-error when undefined, it's expected\n                laggyDataRef.current = dataBeforeOptimisticUpdate;\n                // @ts-expect-error when undefined, it's expected\n                mutateCache(dataBeforeOptimisticUpdate);\n            }\n            throw err;\n        }\n    }, [mutateCache, _mutate, latestData, laggyDataRef, lastUpdateFrom]);\n    (0, react_1.useEffect)(() => {\n        if (cachedData !== emptyCache) {\n            lastUpdateFrom.current = \"cache\";\n            laggyDataRef.current = cachedData;\n        }\n    }, [cachedData]);\n    return {\n        data: returnedData,\n        isLoading: state.isLoading,\n        error: state.error,\n        mutate,\n        revalidate,\n    };\n}\nexports.useCachedPromise = useCachedPromise;\n", "/*!\n * media-typer\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar SUBTYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar TYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar TYPE_REGEXP = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\nexports.test = test\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !TYPE_NAME_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !SUBTYPE_NAME_REGEXP.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!TYPE_NAME_REGEXP.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  return string\n}\n\n/**\n * Test media type.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction test (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  return TYPE_REGEXP.test(string.toLowerCase())\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var match = TYPE_REGEXP.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  return new MediaType(type, subtype, suffix)\n}\n\n/**\n * Class for MediaType object.\n * @public\n */\n\nfunction MediaType (type, subtype, suffix) {\n  this.type = type\n  this.subtype = subtype\n  this.suffix = suffix\n}\n", "/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n", "\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n", "const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useFetch = void 0;\nconst react_1 = require(\"react\");\nconst media_typer_1 = __importDefault(require(\"media-typer\"));\nconst content_type_1 = __importDefault(require(\"content-type\"));\nconst useCachedPromise_1 = require(\"./useCachedPromise\");\nconst useLatest_1 = require(\"./useLatest\");\nconst cross_fetch_1 = require(\"cross-fetch\");\nfunction isJSON(contentTypeHeader) {\n    if (contentTypeHeader) {\n        const ct = content_type_1.default.parse(contentTypeHeader);\n        const mediaType = media_typer_1.default.parse(ct.type);\n        if (mediaType.subtype === \"json\") {\n            return true;\n        }\n        if (mediaType.suffix === \"json\") {\n            return true;\n        }\n        if (mediaType.suffix && /\\bjson\\b/i.test(mediaType.suffix)) {\n            return true;\n        }\n        if (mediaType.subtype && /\\bjson\\b/i.test(mediaType.subtype)) {\n            return true;\n        }\n    }\n    return false;\n}\nasync function defaultParsing(response) {\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n    const contentTypeHeader = response.headers.get(\"content-type\");\n    if (contentTypeHeader && isJSON(contentTypeHeader)) {\n        return await response.json();\n    }\n    return await response.text();\n}\n/**\n * Fetch the URL and returns the {@link AsyncState} corresponding to the execution of the fetch. The last value will be kept between command runs.\n *\n * @example\n * ```\n * import { useFetch } from '@raycast/utils';\n *\n * const Demo = () => {\n *   const { isLoading, data, revalidate } = useFetch('https://api.example');\n *\n *   return (\n *     <Detail\n *       isLoading={isLoading}\n *       markdown={data}\n *       actions={\n *         <ActionPanel>\n *           <Action title=\"Reload\" onAction={() => revalidate()} />\n *         </ActionPanel>\n *       }\n *     />\n *   );\n * };\n * ```\n */\nfunction useFetch(url, options) {\n    const { parseResponse, initialData, execute, keepPreviousData, onError, onData, onWillExecute, ...fetchOptions } = options || {};\n    const useCachedPromiseOptions = {\n        initialData,\n        execute,\n        keepPreviousData,\n        onError,\n        onData,\n        onWillExecute,\n    };\n    const parseResponseRef = (0, useLatest_1.useLatest)(parseResponse || defaultParsing);\n    const abortable = (0, react_1.useRef)();\n    const fn = (0, react_1.useCallback)(async (url, options) => {\n        const res = await (0, cross_fetch_1.fetch)(url, { signal: abortable.current?.signal, ...options });\n        return (await parseResponseRef.current(res));\n    }, [parseResponseRef]);\n    // @ts-expect-error T can't be a Promise so it's actually the same\n    return (0, useCachedPromise_1.useCachedPromise)(fn, [url, fetchOptions], { ...useCachedPromiseOptions, abortable });\n}\nexports.useFetch = useFetch;\n", "// This is not the set of all possible signals.\n//\n// It IS, however, the set of all signals that trigger\n// an exit on either Linux or BSD systems.  Linux is a\n// superset of the signal names supported on BSD, and\n// the unknown signals just fail to register, so we can\n// catch that easily enough.\n//\n// Don't bother with SIGKILL.  It's uncatchable, which\n// means that we can't fire any callbacks anyway.\n//\n// If a user does happen to register a handler on a non-\n// fatal signal like SIGWINCH or something, and then\n// exit, it'll end up firing `process.emit('exit')`, so\n// the handler will be fired anyway.\n//\n// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n// artificially, inherently leave the process in a\n// state from which it is not safe to try and enter JS\n// listeners.\nmodule.exports = [\n  'SIGABRT',\n  'SIGALRM',\n  'SIGHUP',\n  'SIGINT',\n  'SIGTERM'\n]\n\nif (process.platform !== 'win32') {\n  module.exports.push(\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  module.exports.push(\n    'SIGIO',\n    'SIGPOLL',\n    'SIGPWR',\n    'SIGSTKFLT',\n    'SIGUNUSED'\n  )\n}\n", "// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nvar process = global.process\n\nconst processOk = function (process) {\n  return process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function'\n}\n\n// some kind of non-node environment, just no-op\n/* istanbul ignore if */\nif (!processOk(process)) {\n  module.exports = function () {\n    return function () {}\n  }\n} else {\n  var assert = require('assert')\n  var signals = require('./signals.js')\n  var isWin = /^win/i.test(process.platform)\n\n  var EE = require('events')\n  /* istanbul ignore if */\n  if (typeof EE !== 'function') {\n    EE = EE.EventEmitter\n  }\n\n  var emitter\n  if (process.__signal_exit_emitter__) {\n    emitter = process.__signal_exit_emitter__\n  } else {\n    emitter = process.__signal_exit_emitter__ = new EE()\n    emitter.count = 0\n    emitter.emitted = {}\n  }\n\n  // Because this emitter is a global, we have to check to see if a\n  // previous version of this library failed to enable infinite listeners.\n  // I know what you're about to say.  But literally everything about\n  // signal-exit is a compromise with evil.  Get used to it.\n  if (!emitter.infinite) {\n    emitter.setMaxListeners(Infinity)\n    emitter.infinite = true\n  }\n\n  module.exports = function (cb, opts) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return function () {}\n    }\n    assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n    if (loaded === false) {\n      load()\n    }\n\n    var ev = 'exit'\n    if (opts && opts.alwaysLast) {\n      ev = 'afterexit'\n    }\n\n    var remove = function () {\n      emitter.removeListener(ev, cb)\n      if (emitter.listeners('exit').length === 0 &&\n          emitter.listeners('afterexit').length === 0) {\n        unload()\n      }\n    }\n    emitter.on(ev, cb)\n\n    return remove\n  }\n\n  var unload = function unload () {\n    if (!loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = false\n\n    signals.forEach(function (sig) {\n      try {\n        process.removeListener(sig, sigListeners[sig])\n      } catch (er) {}\n    })\n    process.emit = originalProcessEmit\n    process.reallyExit = originalProcessReallyExit\n    emitter.count -= 1\n  }\n  module.exports.unload = unload\n\n  var emit = function emit (event, code, signal) {\n    /* istanbul ignore if */\n    if (emitter.emitted[event]) {\n      return\n    }\n    emitter.emitted[event] = true\n    emitter.emit(event, code, signal)\n  }\n\n  // { <signal>: <listener fn>, ... }\n  var sigListeners = {}\n  signals.forEach(function (sig) {\n    sigListeners[sig] = function listener () {\n      /* istanbul ignore if */\n      if (!processOk(global.process)) {\n        return\n      }\n      // If there are no other listeners, an exit is coming!\n      // Simplest way: remove us and then re-send the signal.\n      // We know that this will kill the process, so we can\n      // safely emit now.\n      var listeners = process.listeners(sig)\n      if (listeners.length === emitter.count) {\n        unload()\n        emit('exit', null, sig)\n        /* istanbul ignore next */\n        emit('afterexit', null, sig)\n        /* istanbul ignore next */\n        if (isWin && sig === 'SIGHUP') {\n          // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n          // so use a supported signal instead\n          sig = 'SIGINT'\n        }\n        /* istanbul ignore next */\n        process.kill(process.pid, sig)\n      }\n    }\n  })\n\n  module.exports.signals = function () {\n    return signals\n  }\n\n  var loaded = false\n\n  var load = function load () {\n    if (loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    emitter.count += 1\n\n    signals = signals.filter(function (sig) {\n      try {\n        process.on(sig, sigListeners[sig])\n        return true\n      } catch (er) {\n        return false\n      }\n    })\n\n    process.emit = processEmit\n    process.reallyExit = processReallyExit\n  }\n  module.exports.load = load\n\n  var originalProcessReallyExit = process.reallyExit\n  var processReallyExit = function processReallyExit (code) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return\n    }\n    process.exitCode = code || /* istanbul ignore next */ 0\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    /* istanbul ignore next */\n    originalProcessReallyExit.call(process, process.exitCode)\n  }\n\n  var originalProcessEmit = process.emit\n  var processEmit = function processEmit (ev, arg) {\n    if (ev === 'exit' && processOk(global.process)) {\n      /* istanbul ignore else */\n      if (arg !== undefined) {\n        process.exitCode = arg\n      }\n      var ret = originalProcessEmit.apply(this, arguments)\n      /* istanbul ignore next */\n      emit('exit', process.exitCode, null)\n      /* istanbul ignore next */\n      emit('afterexit', process.exitCode, null)\n      /* istanbul ignore next */\n      return ret\n    } else {\n      return originalProcessEmit.apply(this, arguments)\n    }\n  }\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSpawnedResult = exports.getSpawnedPromise = void 0;\nconst node_buffer_1 = require(\"node:buffer\");\nconst node_stream_1 = __importDefault(require(\"node:stream\"));\nconst node_util_1 = require(\"node:util\");\nconst signal_exit_1 = __importDefault(require(\"signal-exit\"));\nfunction getSpawnedPromise(spawned, { timeout } = {}) {\n    const spawnedPromise = new Promise((resolve, reject) => {\n        spawned.on(\"exit\", (exitCode, signal) => {\n            resolve({ exitCode, signal, timedOut: false });\n        });\n        spawned.on(\"error\", (error) => {\n            reject(error);\n        });\n        if (spawned.stdin) {\n            spawned.stdin.on(\"error\", (error) => {\n                reject(error);\n            });\n        }\n    });\n    if (timeout === 0 || timeout === undefined) {\n        return spawnedPromise;\n    }\n    let timeoutId;\n    const timeoutPromise = new Promise((_resolve, reject) => {\n        timeoutId = setTimeout(() => {\n            spawned.kill(\"SIGTERM\");\n            reject(Object.assign(new Error(\"Timed out\"), { timedOut: true, signal: \"SIGTERM\" }));\n        }, timeout);\n    });\n    const safeSpawnedPromise = spawnedPromise.finally(() => {\n        clearTimeout(timeoutId);\n    });\n    const removeExitHandler = (0, signal_exit_1.default)(() => {\n        spawned.kill();\n    });\n    return Promise.race([timeoutPromise, safeSpawnedPromise]).finally(() => removeExitHandler());\n}\nexports.getSpawnedPromise = getSpawnedPromise;\nclass MaxBufferError extends Error {\n    constructor() {\n        super(\"The output is too big\");\n        this.name = \"MaxBufferError\";\n    }\n}\nconst streamPipelinePromisified = (0, node_util_1.promisify)(node_stream_1.default.pipeline);\nfunction bufferStream(options) {\n    const { encoding } = options;\n    const isBuffer = encoding === \"buffer\";\n    // @ts-expect-error missing the methods we are adding below\n    const stream = new node_stream_1.default.PassThrough({ objectMode: false });\n    if (encoding && encoding !== \"buffer\") {\n        stream.setEncoding(encoding);\n    }\n    let length = 0;\n    const chunks = [];\n    stream.on(\"data\", (chunk) => {\n        chunks.push(chunk);\n        length += chunk.length;\n    });\n    stream.getBufferedValue = () => {\n        return (isBuffer ? Buffer.concat(chunks, length) : chunks.join(\"\"));\n    };\n    stream.getBufferedLength = () => length;\n    return stream;\n}\nasync function getStream(inputStream, options) {\n    const stream = bufferStream(options);\n    await new Promise((resolve, reject) => {\n        const rejectPromise = (error) => {\n            // Don't retrieve an oversized buffer.\n            if (error && stream.getBufferedLength() <= node_buffer_1.constants.MAX_LENGTH) {\n                error.bufferedData = stream.getBufferedValue();\n            }\n            reject(error);\n        };\n        (async () => {\n            try {\n                await streamPipelinePromisified(inputStream, stream);\n                resolve();\n            }\n            catch (error) {\n                rejectPromise(error);\n            }\n        })();\n        stream.on(\"data\", () => {\n            // 80mb\n            if (stream.getBufferedLength() > 1000 * 1000 * 80) {\n                rejectPromise(new MaxBufferError());\n            }\n        });\n    });\n    return stream.getBufferedValue();\n}\n// On failure, `result.stdout|stderr` should contain the currently buffered stream\nasync function getBufferedData(stream, streamPromise) {\n    stream.destroy();\n    try {\n        return await streamPromise;\n    }\n    catch (error) {\n        return error.bufferedData;\n    }\n}\nasync function getSpawnedResult({ stdout, stderr }, { encoding }, processDone) {\n    const stdoutPromise = getStream(stdout, { encoding });\n    const stderrPromise = getStream(stderr, { encoding });\n    try {\n        return await Promise.all([processDone, stdoutPromise, stderrPromise]);\n    }\n    catch (error) {\n        return Promise.all([\n            {\n                error: error,\n                exitCode: null,\n                signal: error.signal,\n                timedOut: error.timedOut || false,\n            },\n            getBufferedData(stdout, stdoutPromise),\n            getBufferedData(stderr, stderrPromise),\n        ]);\n    }\n}\nexports.getSpawnedResult = getSpawnedResult;\n", "\"use strict\";\n/*\n * Inspired by Execa\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useExec = void 0;\nconst node_child_process_1 = __importDefault(require(\"node:child_process\"));\nconst react_1 = require(\"react\");\nconst useCachedPromise_1 = require(\"./useCachedPromise\");\nconst useLatest_1 = require(\"./useLatest\");\nconst exec_utils_1 = require(\"./exec-utils\");\nconst SPACES_REGEXP = / +/g;\nfunction parseCommand(command, args) {\n    if (args) {\n        return [command, ...args];\n    }\n    const tokens = [];\n    for (const token of command.trim().split(SPACES_REGEXP)) {\n        // Allow spaces to be escaped by a backslash if not meant as a delimiter\n        const previousToken = tokens[tokens.length - 1];\n        if (previousToken && previousToken.endsWith(\"\\\\\")) {\n            // Merge previous token with current one\n            tokens[tokens.length - 1] = `${previousToken.slice(0, -1)} ${token}`;\n        }\n        else {\n            tokens.push(token);\n        }\n    }\n    return tokens;\n}\nfunction stripFinalNewline(input) {\n    const LF = typeof input === \"string\" ? \"\\n\" : \"\\n\".charCodeAt(0);\n    const CR = typeof input === \"string\" ? \"\\r\" : \"\\r\".charCodeAt(0);\n    if (input[input.length - 1] === LF) {\n        // @ts-expect-error we are doing some nasty stuff here\n        input = input.slice(0, -1);\n    }\n    if (input[input.length - 1] === CR) {\n        // @ts-expect-error we are doing some nasty stuff here\n        input = input.slice(0, -1);\n    }\n    return input;\n}\nfunction handleOutput(options, value) {\n    if (options.stripFinalNewline) {\n        return stripFinalNewline(value);\n    }\n    return value;\n}\nconst getErrorPrefix = ({ timedOut, timeout, signal, exitCode, }) => {\n    if (timedOut) {\n        return `timed out after ${timeout} milliseconds`;\n    }\n    if (signal !== undefined) {\n        return `was killed with ${signal}`;\n    }\n    if (exitCode !== undefined) {\n        return `failed with exit code ${exitCode}`;\n    }\n    return \"failed\";\n};\nconst makeError = ({ stdout, stderr, error, signal, exitCode, command, timedOut, options, }) => {\n    const prefix = getErrorPrefix({ timedOut, timeout: options?.timeout, signal, exitCode });\n    const execaMessage = `Command ${prefix}: ${command}`;\n    const shortMessage = error ? `${execaMessage}\\n${error.message}` : execaMessage;\n    const message = [shortMessage, stderr, stdout].filter(Boolean).join(\"\\n\");\n    if (error) {\n        // @ts-expect-error not on Error\n        error.originalMessage = error.message;\n        error.message = message;\n    }\n    else {\n        error = new Error(message);\n    }\n    // @ts-expect-error not on Error\n    error.shortMessage = shortMessage;\n    // @ts-expect-error not on Error\n    error.command = command;\n    // @ts-expect-error not on Error\n    error.exitCode = exitCode;\n    // @ts-expect-error not on Error\n    error.signal = signal;\n    // @ts-expect-error not on Error\n    error.stdout = stdout;\n    // @ts-expect-error not on Error\n    error.stderr = stderr;\n    if (\"bufferedData\" in error) {\n        delete error[\"bufferedData\"];\n    }\n    return error;\n};\nfunction defaultParsing({ stdout, stderr, error, exitCode, signal, timedOut, command, options, }) {\n    if (error || exitCode !== 0 || signal !== null) {\n        const returnedError = makeError({\n            error,\n            exitCode,\n            signal,\n            stdout,\n            stderr,\n            command,\n            timedOut,\n            options,\n        });\n        throw returnedError;\n    }\n    return stdout;\n}\nfunction useExec(command, optionsOrArgs, options) {\n    const { parseOutput, input, onData, onWillExecute, initialData, execute, keepPreviousData, onError, ...execOptions } = Array.isArray(optionsOrArgs) ? options || {} : optionsOrArgs || {};\n    const useCachedPromiseOptions = {\n        initialData,\n        execute,\n        keepPreviousData,\n        onError,\n        onData,\n        onWillExecute,\n    };\n    const abortable = (0, react_1.useRef)();\n    const parseOutputRef = (0, useLatest_1.useLatest)(parseOutput || defaultParsing);\n    const fn = (0, react_1.useCallback)(async (_command, _args, _options, input) => {\n        const [file, ...args] = parseCommand(_command, _args);\n        const command = [file, ...args].join(\" \");\n        const options = {\n            stripFinalNewline: true,\n            ..._options,\n            signal: abortable.current?.signal,\n            encoding: _options?.encoding === null ? \"buffer\" : _options?.encoding || \"utf8\",\n            env: { ...process.env, ..._options?.env },\n        };\n        const spawned = node_child_process_1.default.spawn(file, args, options);\n        const spawnedPromise = (0, exec_utils_1.getSpawnedPromise)(spawned, options);\n        if (input) {\n            spawned.stdin.end(input);\n        }\n        const [{ error, exitCode, signal, timedOut }, stdoutResult, stderrResult] = await (0, exec_utils_1.getSpawnedResult)(spawned, options, spawnedPromise);\n        const stdout = handleOutput(options, stdoutResult);\n        const stderr = handleOutput(options, stderrResult);\n        return parseOutputRef.current({\n            // @ts-expect-error too many generics, I give up\n            stdout,\n            // @ts-expect-error too many generics, I give up\n            stderr,\n            error,\n            exitCode,\n            signal,\n            timedOut,\n            command,\n            options,\n        });\n    }, [parseOutputRef]);\n    // @ts-expect-error T can't be a Promise so it's actually the same\n    return (0, useCachedPromise_1.useCachedPromise)(fn, [command, Array.isArray(optionsOrArgs) ? optionsOrArgs : [], execOptions, input], {\n        ...useCachedPromiseOptions,\n        abortable,\n    });\n}\nexports.useExec = useExec;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSQL = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst api_1 = require(\"@raycast/api\");\nconst node_fs_1 = require(\"node:fs\");\nconst promises_1 = require(\"node:fs/promises\");\nconst node_os_1 = __importDefault(require(\"node:os\"));\nconst node_child_process_1 = __importDefault(require(\"node:child_process\"));\nconst node_path_1 = __importDefault(require(\"node:path\"));\nconst object_hash_1 = __importDefault(require(\"object-hash\"));\nconst react_1 = require(\"react\");\nconst usePromise_1 = require(\"./usePromise\");\nconst useLatest_1 = require(\"./useLatest\");\nconst exec_utils_1 = require(\"./exec-utils\");\n/**\n * Executes a query on a local SQL database and returns the {@link AsyncState} corresponding to the query of the command. The last value will be kept between command runs.\n *\n * @example\n * ```\n * import { useSQL } from \"@raycast/utils\";\n * import { resolve } from \"path\";\n * import { homedir } from \"os\";\n *\n * const NOTES_DB = resolve(homedir(), \"Library/Group Containers/group.com.apple.notes/NoteStore.sqlite\");\n * const notesQuery = `SELECT id, title FROM ...`;\n * type NoteItem = {\n *   id: string;\n *   title: string;\n * };\n *\n * const Demo = () => {\n *   const { isLoading, data, permissionView } = useSQL<NoteItem>(NOTES_DB, notesQuery);\n *\n *   if (permissionView) {\n *     return permissionView;\n *   }\n *\n *   return (\n *     <List isLoading={isLoading}>\n *       {(data || []).map((item) => (\n *         <List.Item key={item.id} title={item.title} />\n *       ))}\n *     </List>\n *  );\n * };\n * ```\n */\nfunction useSQL(databasePath, query, options) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { permissionPriming, ...usePromiseOptions } = options || {};\n    const [permissionView, setPermissionView] = (0, react_1.useState)();\n    const latestOptions = (0, useLatest_1.useLatest)(options || {});\n    const abortable = (0, react_1.useRef)();\n    const handleError = (0, react_1.useCallback)((_error) => {\n        console.error(_error);\n        const error = _error instanceof Error && _error.message.includes(\"authorization denied\")\n            ? new PermissionError(\"You do not have permission to access the database.\")\n            : _error;\n        if (isPermissionError(error)) {\n            setPermissionView((0, jsx_runtime_1.jsx)(PermissionErrorScreen, { priming: latestOptions.current.permissionPriming }));\n        }\n        else {\n            if (latestOptions.current.onError) {\n                latestOptions.current.onError(error);\n            }\n            else {\n                console.error(error);\n                if (api_1.environment.launchType !== api_1.LaunchType.Background) {\n                    (0, api_1.showToast)({\n                        style: api_1.Toast.Style.Failure,\n                        title: \"Cannot query the data\",\n                        message: error.message,\n                        primaryAction: {\n                            title: \"Copy Logs\",\n                            onAction(toast) {\n                                toast.hide();\n                                api_1.Clipboard.copy(error?.stack || error?.message || \"\");\n                            },\n                        },\n                    });\n                }\n            }\n        }\n    }, [latestOptions]);\n    const fn = (0, react_1.useMemo)(() => {\n        if (!(0, node_fs_1.existsSync)(databasePath)) {\n            throw new Error(\"The database does not exist\");\n        }\n        let workaroundCopiedDb = undefined;\n        return async (query) => {\n            const abortSignal = abortable.current?.signal;\n            const spawned = node_child_process_1.default.spawn(\"sqlite3\", [\"--json\", \"--readonly\", databasePath, query], {\n                signal: abortSignal,\n            });\n            const spawnedPromise = (0, exec_utils_1.getSpawnedPromise)(spawned);\n            let [{ error, exitCode, signal }, stdoutResult, stderrResult] = await (0, exec_utils_1.getSpawnedResult)(spawned, { encoding: \"utf-8\" }, spawnedPromise);\n            checkAborted(abortSignal);\n            if (stderrResult.match(\"(5)\") || stderrResult.match(\"(14)\")) {\n                // That means that the DB is busy because of another app is locking it\n                // This happens when Chrome or Arc is opened: they lock the History db.\n                // As an ugly workaround, we duplicate the file and read that instead\n                // (with vfs unix - none to just not care about locks)\n                if (!workaroundCopiedDb) {\n                    const tempFolder = node_path_1.default.join(node_os_1.default.tmpdir(), \"useSQL\", (0, object_hash_1.default)(databasePath));\n                    await (0, promises_1.mkdir)(tempFolder, { recursive: true });\n                    checkAborted(abortSignal);\n                    workaroundCopiedDb = node_path_1.default.join(tempFolder, \"db.db\");\n                    await (0, promises_1.copyFile)(databasePath, workaroundCopiedDb);\n                    // needed for certain db\n                    await (0, promises_1.writeFile)(workaroundCopiedDb + \"-shm\", \"\");\n                    await (0, promises_1.writeFile)(workaroundCopiedDb + \"-wal\", \"\");\n                    checkAborted(abortSignal);\n                }\n                const spawned = node_child_process_1.default.spawn(\"sqlite3\", [\"--json\", \"--readonly\", \"--vfs\", \"unix-none\", workaroundCopiedDb, query], {\n                    signal: abortSignal,\n                });\n                const spawnedPromise = (0, exec_utils_1.getSpawnedPromise)(spawned);\n                [{ error, exitCode, signal }, stdoutResult, stderrResult] = await (0, exec_utils_1.getSpawnedResult)(spawned, { encoding: \"utf-8\" }, spawnedPromise);\n                checkAborted(abortSignal);\n            }\n            if (error || exitCode !== 0 || signal !== null) {\n                throw new Error(stderrResult);\n            }\n            return JSON.parse(stdoutResult.trim() || \"[]\");\n        };\n    }, [databasePath]);\n    return {\n        ...(0, usePromise_1.usePromise)(fn, [query], { ...usePromiseOptions, onError: handleError }),\n        permissionView,\n    };\n}\nexports.useSQL = useSQL;\nclass PermissionError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"PermissionError\";\n    }\n}\nfunction isPermissionError(error) {\n    return error instanceof Error && error.name === \"PermissionError\";\n}\nconst macosVenturaAndLater = parseInt(node_os_1.default.release().split(\".\")[0]) >= 22;\nconst preferencesString = macosVenturaAndLater ? \"Settings\" : \"Preferences\";\nfunction PermissionErrorScreen(props) {\n    const action = macosVenturaAndLater\n        ? {\n            title: \"Open System Settings -> Privacy\",\n            target: \"x-apple.systempreferences:com.apple.preference.security?Privacy_AllFiles\",\n        }\n        : {\n            title: \"Open System Preferences -> Security\",\n            target: \"x-apple.systempreferences:com.apple.preference.security?Privacy_AllFiles\",\n        };\n    if (api_1.environment.commandMode === \"menu-bar\") {\n        return ((0, jsx_runtime_1.jsxs)(api_1.MenuBarExtra, { icon: api_1.Icon.Warning, title: api_1.environment.commandName, children: [(0, jsx_runtime_1.jsx)(api_1.MenuBarExtra.Item, { title: \"Raycast needs full disk access\", tooltip: `You can revert this access in ${preferencesString} whenever you want` }), props.priming ? ((0, jsx_runtime_1.jsx)(api_1.MenuBarExtra.Item, { title: props.priming, tooltip: `You can revert this access in ${preferencesString} whenever you want` })) : null, (0, jsx_runtime_1.jsx)(api_1.MenuBarExtra.Separator, {}), (0, jsx_runtime_1.jsx)(api_1.MenuBarExtra.Item, { title: action.title, onAction: () => (0, api_1.open)(action.target) })] }));\n    }\n    return ((0, jsx_runtime_1.jsx)(api_1.List, { children: (0, jsx_runtime_1.jsx)(api_1.List.EmptyView, { icon: {\n                source: {\n                    light: \"https://raycast.com/uploads/extensions-utils-security-permissions-light.png\",\n                    dark: \"https://raycast.com/uploads/extensions-utils-security-permissions-dark.png\",\n                },\n            }, title: \"Raycast needs full disk access.\", description: `${props.priming ? props.priming + \"\\n\" : \"\"}You can revert this access in ${preferencesString} whenever you want.`, actions: (0, jsx_runtime_1.jsx)(api_1.ActionPanel, { children: (0, jsx_runtime_1.jsx)(api_1.Action.Open, { ...action }) }) }) }));\n}\nfunction checkAborted(signal) {\n    if (signal?.aborted) {\n        const error = new Error(\"aborted\");\n        error.name = \"AbortError\";\n        throw error;\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useForm = exports.FormValidation = void 0;\nconst react_1 = require(\"react\");\nconst useLatest_1 = require(\"./useLatest\");\n/**\n * Shorthands for common validation cases\n */\nvar FormValidation;\n(function (FormValidation) {\n    /** Show an error when the value of the item is empty */\n    FormValidation[\"Required\"] = \"required\";\n})(FormValidation = exports.FormValidation || (exports.FormValidation = {}));\nfunction validationError(validation, value) {\n    if (validation) {\n        if (typeof validation === \"function\") {\n            return validation(value);\n        }\n        else if (validation === FormValidation.Required) {\n            let valueIsValid = typeof value !== \"undefined\" && value !== null;\n            if (valueIsValid) {\n                switch (typeof value) {\n                    case \"string\":\n                        valueIsValid = value.length > 0;\n                        break;\n                    case \"object\":\n                        if (Array.isArray(value)) {\n                            valueIsValid = value.length > 0;\n                        }\n                        else if (value instanceof Date) {\n                            valueIsValid = value.getTime() > 0;\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if (!valueIsValid) {\n                return \"The item is required\";\n            }\n        }\n    }\n}\n/**\n * Hook that provides a high-level interface to work with Forms, and more particularly, with Form validations. It incorporates all the good practices to provide a great User Experience for your Forms.\n *\n * @returns an object which contains the necessary methods and props to provide a good User Experience in your Form.\n *\n * @example\n * ```\n * import { Action, ActionPanel, Form, showToast, Toast } from \"@raycast/api\";\n * import { useForm, FormValidation } from \"@raycast/utils\";\n *\n * interface SignUpFormValues {\n *   nickname: string;\n *   password: string;\n * }\n *\n * export default function Main() {\n *   const { handleSubmit, itemProps } = useForm<SignUpFormValues>({\n *     onSubmit(values) {\n *       showToast(Toast.Style.Success, \"Yay!\", `${values.nickname} account created`);\n *     },\n *     validation: {\n *       nickname: FormValidation.Required,\n *       password: (value) => {\n *         if (value && value.length < 8) {\n *           return \"Password must be at least 8 symbols\";\n *         } else if (!value) {\n *           return \"The item is required\";\n *         }\n *       },\n *     },\n *   });\n *\n *   return (\n *     <Form\n *       actions={\n *         <ActionPanel>\n *           <Action.SubmitForm title=\"Submit\" onSubmit={handleSubmit} />\n *         </ActionPanel>\n *       }\n *     >\n *       <Form.TextField title=\"Nickname\" placeholder=\"Enter your nickname\" {...itemProps.nickname} />\n *       <Form.PasswordField\n *         title=\"Password\"\n *         placeholder=\"Enter password at least 8 characters long\"\n *         {...itemProps.password}\n *       />\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction useForm(props) {\n    const { onSubmit: _onSubmit, validation, initialValues = {} } = props;\n    // @ts-expect-error it's fine if we don't specify all the values\n    const [values, setValues] = (0, react_1.useState)(initialValues);\n    const [errors, setErrors] = (0, react_1.useState)({});\n    const refs = (0, react_1.useRef)({});\n    const latestValidation = (0, useLatest_1.useLatest)(validation || {});\n    const latestOnSubmit = (0, useLatest_1.useLatest)(_onSubmit);\n    const focus = (0, react_1.useCallback)((id) => {\n        refs.current[id]?.focus();\n    }, [refs]);\n    const handleSubmit = (0, react_1.useCallback)(async (values) => {\n        let validationErrors = false;\n        for (const [id, validation] of Object.entries(latestValidation.current)) {\n            const error = validationError(validation, values[id]);\n            if (error) {\n                if (!validationErrors) {\n                    validationErrors = {};\n                    // we focus the first item that has an error\n                    focus(id);\n                }\n                validationErrors[id] = error;\n            }\n        }\n        if (validationErrors) {\n            setErrors(validationErrors);\n            return false;\n        }\n        const result = await latestOnSubmit.current(values);\n        return typeof result === \"boolean\" ? result : true;\n    }, [latestValidation, latestOnSubmit, focus]);\n    const setValidationError = (0, react_1.useCallback)((id, error) => {\n        setErrors((errors) => ({ ...errors, [id]: error }));\n    }, [setErrors]);\n    const setValue = (0, react_1.useCallback)(function (id, value) {\n        setValues((values) => ({ ...values, [id]: value }));\n    }, [setValues]);\n    const itemProps = (0, react_1.useMemo)(() => {\n        // we have to use a proxy because we don't actually have any object to iterate through\n        // so instead we dynamically create the props when required\n        return new Proxy(\n        // @ts-expect-error the whole point of a proxy...\n        {}, {\n            get(target, id) {\n                const validation = latestValidation.current[id];\n                const value = values[id];\n                return {\n                    onChange(value) {\n                        if (errors[id]) {\n                            const error = validationError(validation, value);\n                            if (!error) {\n                                setValidationError(id, undefined);\n                            }\n                        }\n                        setValue(id, value);\n                    },\n                    onBlur(event) {\n                        const error = validationError(validation, event.target.value);\n                        if (error) {\n                            setValidationError(id, error);\n                        }\n                    },\n                    error: errors[id],\n                    id,\n                    // we shouldn't return `undefined` otherwise it will be an uncontrolled component\n                    value: typeof value === \"undefined\" ? null : value,\n                    ref: (instance) => {\n                        refs.current[id] = instance;\n                    },\n                };\n            },\n        });\n    }, [errors, latestValidation, setValidationError, values, refs, setValue]);\n    const reset = (0, react_1.useCallback)((initialValues = {}) => {\n        // @ts-expect-error it's fine if we don't specify all the values\n        setValues(initialValues);\n        setErrors({});\n    }, [setValues, setErrors]);\n    return { handleSubmit, setValidationError, setValue, values, itemProps, focus, reset };\n}\nexports.useForm = useForm;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.slightlyLighterColor = exports.slightlyDarkerColor = void 0;\nfunction hexToRGB(hex) {\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    // 3 digits\n    if (hex.length === 4) {\n        r = parseInt(`${hex[1]}${hex[1]}`, 16);\n        g = parseInt(`${hex[2]}${hex[2]}`, 16);\n        b = parseInt(`${hex[3]}${hex[3]}`, 16);\n        // 6 digits\n    }\n    else if (hex.length === 7) {\n        r = parseInt(`${hex[1]}${hex[2]}`, 16);\n        g = parseInt(`${hex[3]}${hex[4]}`, 16);\n        b = parseInt(`${hex[5]}${hex[6]}`, 16);\n    }\n    else {\n        throw new Error(`Malformed hex color: ${hex}`);\n    }\n    return { r, g, b };\n}\nfunction rgbToHex({ r, g, b }) {\n    let rString = r.toString(16);\n    let gString = g.toString(16);\n    let bString = b.toString(16);\n    if (rString.length === 1) {\n        rString = `0${rString}`;\n    }\n    if (gString.length === 1) {\n        gString = `0${gString}`;\n    }\n    if (bString.length === 1) {\n        bString = `0${bString}`;\n    }\n    return `#${rString}${gString}${bString}`;\n}\nfunction rgbToHSL({ r, g, b }) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    // Find greatest and smallest channel values\n    const cmin = Math.min(r, g, b);\n    const cmax = Math.max(r, g, b);\n    const delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let l = 0;\n    // Calculate hue\n    // No difference\n    if (delta === 0) {\n        h = 0;\n    }\n    // Red is max\n    else if (cmax === r) {\n        h = ((g - b) / delta) % 6;\n    }\n    // Green is max\n    else if (cmax === g) {\n        h = (b - r) / delta + 2;\n    }\n    // Blue is max\n    else {\n        h = (r - g) / delta + 4;\n    }\n    h = Math.round(h * 60);\n    // Make negative hues positive behind 360\u00B0\n    if (h < 0) {\n        h += 360;\n    }\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n    // Calculate saturation\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n    return { h, s, l };\n}\nfunction hslToRGB({ h, s, l }) {\n    // Must be fractions of 1\n    s /= 100;\n    l /= 100;\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    const m = l - c / 2;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    if (h >= 0 && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    }\n    else if (h >= 60 && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    }\n    else if (h >= 120 && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    }\n    else if (h >= 180 && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    }\n    else if (h >= 240 && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    }\n    else if (h >= 300 && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    return { r, g, b };\n}\nfunction hexToHSL(hex) {\n    return rgbToHSL(hexToRGB(hex));\n}\nfunction hslToHex(hsl) {\n    return rgbToHex(hslToRGB(hsl));\n}\nfunction clamp(value, min, max) {\n    return min < max ? (value < min ? min : value > max ? max : value) : value < max ? max : value > min ? min : value;\n}\nconst offset = 12;\nfunction slightlyDarkerColor(hex) {\n    const hsl = hexToHSL(hex);\n    return hslToHex({\n        h: hsl.h,\n        s: hsl.s,\n        l: clamp(hsl.l - offset, 0, 100),\n    });\n}\nexports.slightlyDarkerColor = slightlyDarkerColor;\nfunction slightlyLighterColor(hex) {\n    const hsl = hexToHSL(hex);\n    return hslToHex({\n        h: hsl.h,\n        s: hsl.s,\n        l: clamp(hsl.l + offset, 0, 100),\n    });\n}\nexports.slightlyLighterColor = slightlyLighterColor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAvatarIcon = void 0;\nconst color_1 = require(\"./color\");\nfunction getWholeCharAndI(str, i) {\n    const code = str.charCodeAt(i);\n    if (Number.isNaN(code)) {\n        return [\"\", i];\n    }\n    if (code < 0xd800 || code > 0xdfff) {\n        return [str.charAt(i), i]; // Normal character, keeping 'i' the same\n    }\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xd800 <= code && code <= 0xdbff) {\n        if (str.length <= i + 1) {\n            throw new Error(\"High surrogate without following low surrogate\");\n        }\n        const next = str.charCodeAt(i + 1);\n        if (0xdc00 > next || next > 0xdfff) {\n            throw new Error(\"High surrogate without following low surrogate\");\n        }\n        return [str.charAt(i) + str.charAt(i + 1), i + 1];\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n        throw new Error(\"Low surrogate without preceding high surrogate\");\n    }\n    const prev = str.charCodeAt(i - 1);\n    // (could change last hex to 0xDB7F to treat high private surrogates\n    // as single characters)\n    if (0xd800 > prev || prev > 0xdbff) {\n        throw new Error(\"Low surrogate without preceding high surrogate\");\n    }\n    // Return the next character instead (and increment)\n    return [str.charAt(i + 1), i + 1];\n}\nconst avatarColorSet = [\n    \"#DC829A\",\n    \"#D64854\",\n    \"#D47600\",\n    \"#D36CDD\",\n    \"#52A9E4\",\n    \"#7871E8\",\n    \"#70920F\",\n    \"#43B93A\",\n    \"#EB6B3E\",\n    \"#26B795\",\n    \"#D85A9B\",\n    \"#A067DC\",\n    \"#BD9500\",\n    \"#5385D9\", // Blue\n];\n/**\n * Icon to represent an avatar when you don't have one. The generated avatar\n * will be generated from the initials of the name and have a colorful but consistent background.\n *\n * @returns an Image that can be used where Raycast expects them.\n *\n * @example\n * ```\n * <List.Item icon={getAvatarIcon('Mathieu Dutour')} title=\"Project\" />\n * ```\n */\nfunction getAvatarIcon(name, options) {\n    const words = name.trim().split(\" \");\n    let initials;\n    if (words.length == 1 && getWholeCharAndI(words[0], 0)[0]) {\n        initials = getWholeCharAndI(words[0], 0)[0];\n    }\n    else if (words.length > 1) {\n        const firstWordFirstLetter = getWholeCharAndI(words[0], 0)[0] || \"\";\n        const lastWordFirstLetter = getWholeCharAndI(words[words.length - 1], 0)[0] ?? \"\";\n        initials = firstWordFirstLetter + lastWordFirstLetter;\n    }\n    else {\n        initials = \"\";\n    }\n    let backgroundColor;\n    if (options?.background) {\n        backgroundColor = options?.background;\n    }\n    else {\n        let initialsCharIndex = 0;\n        let [char, i] = getWholeCharAndI(initials, 0);\n        while (char) {\n            initialsCharIndex += char.charCodeAt(0);\n            [char, i] = getWholeCharAndI(initials, i + 1);\n        }\n        const colorIndex = initialsCharIndex % avatarColorSet.length;\n        backgroundColor = avatarColorSet[colorIndex];\n    }\n    const padding = 0;\n    const radius = 50 - padding;\n    const svg = `<svg width=\"100px\" height=\"100px\">\n  ${options?.gradient !== false\n        ? `<defs>\n      <linearGradient id=\"Gradient\" x1=\"0.25\" x2=\"0.75\" y1=\"0\" y2=\"1\">\n        <stop offset=\"0%\" stop-color=\"${(0, color_1.slightlyLighterColor)(backgroundColor)}\"/>\n        <stop offset=\"50%\" stop-color=\"${backgroundColor}\"/>\n        <stop offset=\"100%\" stop-color=\"${(0, color_1.slightlyDarkerColor)(backgroundColor)}\"/>\n      </linearGradient>\n  </defs>`\n        : \"\"}\n      <circle cx=\"50\" cy=\"50\" r=\"${radius}\" fill=\"${options?.gradient !== false ? \"url(#Gradient)\" : backgroundColor}\" />\n      ${initials\n        ? `<text x=\"50\" y=\"80\" font-size=\"${radius - 1}\" font-family=\"Inter, sans-serif\" text-anchor=\"middle\" fill=\"white\">${initials.toUpperCase()}</text>`\n        : \"\"}\n    </svg>\n  `.replaceAll(\"\\n\", \"\");\n    return `data:image/svg+xml,${svg}`;\n}\nexports.getAvatarIcon = getAvatarIcon;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFavicon = void 0;\nconst api_1 = require(\"@raycast/api\");\nconst url_1 = require(\"url\");\n/**\n * Icon showing the favicon of a website.\n *\n * A favicon (favorite icon) is a tiny icon included along with a website, which is displayed in places like the browser's address bar, page tabs, and bookmarks menu.\n *\n * @param url The URL of the website to represent.\n *\n * @returns an Image that can be used where Raycast expects them.\n *\n * @example\n * ```\n * <List.Item icon={getFavicon(\"https://raycast.com\")} title=\"Raycast Website\" />\n * ```\n */\nfunction getFavicon(url, options) {\n    try {\n        const urlObj = typeof url === \"string\" ? new url_1.URL(url) : url;\n        const hostname = urlObj.hostname;\n        return {\n            source: `https://www.google.com/s2/favicons?sz=${options?.size ?? 64}&domain=${hostname}`,\n            fallback: options?.fallback ?? api_1.Icon.Link,\n            mask: options?.mask,\n        };\n    }\n    catch (e) {\n        console.error(e);\n        return api_1.Icon.Link;\n    }\n}\nexports.getFavicon = getFavicon;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProgressIcon = void 0;\nconst api_1 = require(\"@raycast/api\");\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    };\n}\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n    const start = polarToCartesian(x, y, radius, endAngle);\n    const end = polarToCartesian(x, y, radius, startAngle);\n    const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n    const d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(\" \");\n    return d;\n}\n/**\n * Icon to represent the progress of _something_.\n *\n * @param progress Number between 0 and 1.\n * @param color Hex color (default `\"#FF6363\"`).\n *\n * @returns an Image that can be used where Raycast expects them.\n *\n * @example\n * ```\n * <List.Item icon={getProgressIcon(0.1)} title=\"Project\" />\n * ```\n */\nfunction getProgressIcon(progress, color = \"#FF6363\", options) {\n    const background = options?.background || (api_1.environment.theme === \"light\" ? \"black\" : \"white\");\n    const backgroundOpacity = options?.backgroundOpacity || 0.1;\n    const stroke = 10;\n    const padding = 5;\n    const radius = 50 - padding - stroke / 2;\n    const svg = `<svg width=\"100px\" height=\"100px\">\n      <circle cx=\"50\" cy=\"50\" r=\"${radius}\" stroke-width=\"${stroke}\" stroke=\"${progress < 1 ? background : color}\" opacity=\"${progress < 1 ? backgroundOpacity : \"1\"}\" fill=\"none\" />\n      ${progress > 0 && progress < 1\n        ? `<path d=\"${describeArc(50, 50, radius, 0, progress * 360)}\" stroke=\"${color}\" stroke-width=\"${stroke}\" fill=\"none\" />`\n        : \"\"}\n    </svg>\n  `.replaceAll(\"\\n\", \"\");\n    return `data:image/svg+xml,${svg}`;\n}\nexports.getProgressIcon = getProgressIcon;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./avatar\"), exports);\n__exportStar(require(\"./favicon\"), exports);\n__exportStar(require(\"./progress\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./usePromise\"), exports);\n__exportStar(require(\"./useCachedState\"), exports);\n__exportStar(require(\"./useCachedPromise\"), exports);\n__exportStar(require(\"./useFetch\"), exports);\n__exportStar(require(\"./useExec\"), exports);\n__exportStar(require(\"./useSQL\"), exports);\n__exportStar(require(\"./useForm\"), exports);\n//export * as suspense from \"./suspense\";\n__exportStar(require(\"./icon\"), exports);\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isObjectLike = isObjectLike;\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nfunction isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.invariant = invariant;\n\nfunction invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getLocation = getLocation;\n\nvar _invariant = require('../jsutils/invariant.js');\n\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || (0, _invariant.invariant)(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printLocation = printLocation;\nexports.printSourceLocation = printSourceLocation;\n\nvar _location = require('./location.js');\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nfunction printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    (0, _location.getLocation)(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nfunction printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLError = void 0;\nexports.formatError = formatError;\nexports.printError = printError;\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _location = require('../language/location.js');\n\nvar _printLocation = require('../language/printLocation.js');\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nclass GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => (0, _location.getLocation)(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) =>\n            (0, _location.getLocation)(loc.source, loc.start),\n          );\n    const originalExtensions = (0, _isObjectLike.isObjectLike)(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + (0, _printLocation.printLocation)(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output +=\n          '\\n\\n' +\n          (0, _printLocation.printSourceLocation)(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nexports.GraphQLError = GraphQLError;\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nfunction printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nfunction formatError(error) {\n  return error.toJSON();\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Token =\n  exports.QueryDocumentKeys =\n  exports.OperationTypeNode =\n  exports.Location =\n    void 0;\nexports.isNode = isNode;\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nclass Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexports.Location = Location;\n\nclass Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\nexports.Token = Token;\n\n/**\n * @internal\n */\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\nexports.OperationTypeNode = OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (exports.OperationTypeNode = OperationTypeNode = {}));\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.DirectiveLocation = void 0;\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\nexports.DirectiveLocation = DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (exports.DirectiveLocation = DirectiveLocation = {}));\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\nexports.Kind = Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (exports.Kind = Kind = {}));\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isDigit = isDigit;\nexports.isLetter = isLetter;\nexports.isNameContinue = isNameContinue;\nexports.isNameStart = isNameStart;\nexports.isWhiteSpace = isWhiteSpace;\n\n/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nfunction isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nfunction isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nfunction isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.dedentBlockStringLines = dedentBlockStringLines;\nexports.isPrintableAsBlockString = isPrintableAsBlockString;\nexports.printBlockString = printBlockString;\n\nvar _characterClasses = require('./characterClasses.js');\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (\n    i < str.length &&\n    (0, _characterClasses.isWhiteSpace)(str.charCodeAt(i))\n  ) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nfunction isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nfunction printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every(\n        (line) =>\n          line.length === 0 ||\n          (0, _characterClasses.isWhiteSpace)(line.charCodeAt(0)),\n      ); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine =\n    isSingleLine && (0, _characterClasses.isWhiteSpace)(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.TokenKind = void 0;\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\nexports.TokenKind = TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (exports.TokenKind = TokenKind = {}));\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Lexer = void 0;\nexports.isPunctuatorTokenKind = isPunctuatorTokenKind;\n\nvar _syntaxError = require('../error/syntaxError.js');\n\nvar _ast = require('./ast.js');\n\nvar _blockString = require('./blockString.js');\n\nvar _characterClasses = require('./characterClasses.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nclass Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new _ast.Token(\n      _tokenKind.TokenKind.SOF,\n      0,\n      0,\n      0,\n      0,\n    );\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== _tokenKind.TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === _tokenKind.TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexports.Lexer = Lexer;\n\nfunction isPunctuatorTokenKind(kind) {\n  return (\n    kind === _tokenKind.TokenKind.BANG ||\n    kind === _tokenKind.TokenKind.DOLLAR ||\n    kind === _tokenKind.TokenKind.AMP ||\n    kind === _tokenKind.TokenKind.PAREN_L ||\n    kind === _tokenKind.TokenKind.PAREN_R ||\n    kind === _tokenKind.TokenKind.SPREAD ||\n    kind === _tokenKind.TokenKind.COLON ||\n    kind === _tokenKind.TokenKind.EQUALS ||\n    kind === _tokenKind.TokenKind.AT ||\n    kind === _tokenKind.TokenKind.BRACKET_L ||\n    kind === _tokenKind.TokenKind.BRACKET_R ||\n    kind === _tokenKind.TokenKind.BRACE_L ||\n    kind === _tokenKind.TokenKind.PIPE ||\n    kind === _tokenKind.TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return _tokenKind.TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new _ast.Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BANG,\n          position,\n          position + 1,\n        );\n\n      case 0x0024:\n        // $\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.DOLLAR,\n          position,\n          position + 1,\n        );\n\n      case 0x0026:\n        // &\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.AMP,\n          position,\n          position + 1,\n        );\n\n      case 0x0028:\n        // (\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PAREN_L,\n          position,\n          position + 1,\n        );\n\n      case 0x0029:\n        // )\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PAREN_R,\n          position,\n          position + 1,\n        );\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(\n            lexer,\n            _tokenKind.TokenKind.SPREAD,\n            position,\n            position + 3,\n          );\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.COLON,\n          position,\n          position + 1,\n        );\n\n      case 0x003d:\n        // =\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.EQUALS,\n          position,\n          position + 1,\n        );\n\n      case 0x0040:\n        // @\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.AT,\n          position,\n          position + 1,\n        );\n\n      case 0x005b:\n        // [\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACKET_L,\n          position,\n          position + 1,\n        );\n\n      case 0x005d:\n        // ]\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACKET_R,\n          position,\n          position + 1,\n        );\n\n      case 0x007b:\n        // {\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACE_L,\n          position,\n          position + 1,\n        );\n\n      case 0x007c:\n        // |\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PIPE,\n          position,\n          position + 1,\n        );\n\n      case 0x007d:\n        // }\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACE_R,\n          position,\n          position + 1,\n        );\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if ((0, _characterClasses.isDigit)(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if ((0, _characterClasses.isNameStart)(code)) {\n      return readName(lexer, position);\n    }\n\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, _tokenKind.TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    _tokenKind.TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if ((0, _characterClasses.isDigit)(code)) {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || (0, _characterClasses.isNameStart)(code)) {\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? _tokenKind.TokenKind.FLOAT : _tokenKind.TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!(0, _characterClasses.isDigit)(firstCode)) {\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while ((0, _characterClasses.isDigit)(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(\n        lexer,\n        _tokenKind.TokenKind.STRING,\n        start,\n        position + 1,\n        value,\n      );\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    'Unterminated string.',\n  );\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        _tokenKind.TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        (0, _blockString.dedentBlockStringLines)(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    'Unterminated string.',\n  );\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if ((0, _characterClasses.isNameContinue)(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    _tokenKind.TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.devAssert = devAssert;\n\nfunction devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.inspect = inspect;\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.instanceOf = void 0;\n\nvar _inspect = require('./inspect.js');\n\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\nconst instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = (0, _inspect.inspect)(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\nexports.instanceOf = instanceOf;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Source = void 0;\nexports.isSource = isSource;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nclass Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Body must be a string. Received: ${(0, _inspect.inspect)(body)}.`,\n      );\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexports.Source = Source;\n\nfunction isSource(source) {\n  return (0, _instanceOf.instanceOf)(source, Source);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Parser = void 0;\nexports.parse = parse;\nexports.parseConstValue = parseConstValue;\nexports.parseType = parseType;\nexports.parseValue = parseValue;\n\nvar _syntaxError = require('../error/syntaxError.js');\n\nvar _ast = require('./ast.js');\n\nvar _directiveLocation = require('./directiveLocation.js');\n\nvar _kinds = require('./kinds.js');\n\nvar _lexer = require('./lexer.js');\n\nvar _source = require('./source.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nfunction parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nfunction parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nfunction parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nclass Parser {\n  constructor(source, options = {}) {\n    const sourceObj = (0, _source.isSource)(source)\n      ? source\n      : new _source.Source(source);\n    this._lexer = new _lexer.Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(_tokenKind.TokenKind.NAME);\n    return this.node(token, {\n      kind: _kinds.Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: this.many(\n        _tokenKind.TokenKind.SOF,\n        this.parseDefinition,\n        _tokenKind.TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw (0, _syntaxError.syntaxError)(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: _kinds.Kind.OPERATION_DEFINITION,\n        operation: _ast.OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(_tokenKind.TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return _ast.OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return _ast.OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return _ast.OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type:\n        (this.expectToken(_tokenKind.TokenKind.COLON),\n        this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: _kinds.Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.SELECTION_SET,\n      selections: this.many(\n        _tokenKind.TokenKind.BRACE_L,\n        this.parseSelection,\n        _tokenKind.TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(_tokenKind.TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(_tokenKind.TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      item,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds.Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(_tokenKind.TokenKind.NAME)) {\n      return this.node(start, {\n        kind: _kinds.Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: _kinds.Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case _tokenKind.TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case _tokenKind.TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case _tokenKind.TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds.Kind.INT,\n          value: token.value,\n        });\n\n      case _tokenKind.TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds.Kind.FLOAT,\n          value: token.value,\n        });\n\n      case _tokenKind.TokenKind.STRING:\n      case _tokenKind.TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case _tokenKind.TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: _kinds.Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: _kinds.Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: _kinds.Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: _kinds.Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case _tokenKind.TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(_tokenKind.TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === _tokenKind.TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw (0, _syntaxError.syntaxError)(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: _kinds.Kind.STRING,\n      value: token.value,\n      block: token.kind === _tokenKind.TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.LIST,\n      values: this.any(\n        _tokenKind.TokenKind.BRACKET_L,\n        item,\n        _tokenKind.TokenKind.BRACKET_R,\n      ),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.OBJECT,\n      fields: this.any(\n        _tokenKind.TokenKind.BRACE_L,\n        item,\n        _tokenKind.TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(_tokenKind.TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.AT);\n    return this.node(start, {\n      kind: _kinds.Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(_tokenKind.TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: _kinds.Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BANG)) {\n      return this.node(start, {\n        kind: _kinds.Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return (\n      this.peek(_tokenKind.TokenKind.STRING) ||\n      this.peek(_tokenKind.TokenKind.BLOCK_STRING)\n    );\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: _kinds.Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(_tokenKind.TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: _kinds.Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)\n      ? this.delimitedMany(_tokenKind.TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw (0, _syntaxError.syntaxError)(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(_tokenKind.TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: _kinds.Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(\n      _tokenKind.TokenKind.PIPE,\n      this.parseDirectiveLocation,\n    );\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (\n      Object.prototype.hasOwnProperty.call(\n        _directiveLocation.DirectiveLocation,\n        name.value,\n      )\n    ) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new _ast.Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw (0, _syntaxError.syntaxError)(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return (0, _syntaxError.syntaxError)(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== _tokenKind.TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw (0, _syntaxError.syntaxError)(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nexports.Parser = Parser;\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return (0, _lexer.isPunctuatorTokenKind)(kind) ? `\"${kind}\"` : kind;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printString = printString;\n\n/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nfunction printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.BREAK = void 0;\nexports.getEnterLeaveForKind = getEnterLeaveForKind;\nexports.getVisitFn = getVisitFn;\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _ast = require('./ast.js');\n\nvar _kinds = require('./kinds.js');\n\nconst BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor, visitorKeys = _ast.QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      (0, _ast.isNode)(node) ||\n        (0, _devAssert.devAssert)(\n          false,\n          `Invalid AST Node: ${(0, _inspect.inspect)(node)}.`,\n        );\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if ((0, _ast.isNode)(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nfunction visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nfunction getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.print = print;\n\nvar _blockString = require('./blockString.js');\n\nvar _printString = require('./printString.js');\n\nvar _visitor = require('./visitor.js');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, printDocASTReducer);\n}\n\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString\n        ? (0, _blockString.printBlockString)(value)\n        : (0, _printString.printString)(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n", "'use strict';\n\nmodule.exports = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type;\n  this.uri = uri;\n  this.name = name;\n  this.type = type;\n};\n", "'use strict';\n\nvar ReactNativeFile = require('./ReactNativeFile');\n\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n", "'use strict';\n\nvar defaultIsExtractableFile = require('./isExtractableFile');\n\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile;\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);\n    else files.set(file, paths);\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function (file, i) {\n        addFile(['' + prefix + i], file);\n        return null;\n      });\n    else if (Array.isArray(value))\n      clone = value.map(function (child, i) {\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        return result.clone;\n      });\n    else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files,\n  };\n};\n", "'use strict';\n\nexports.ReactNativeFile = require('./ReactNativeFile');\nexports.extractFiles = require('./extractFiles');\nexports.isExtractableFile = require('./isExtractableFile');\n", "var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n", "var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n", "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n", "/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n", "module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n", "var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n", "// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n", "var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n", "// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n", "var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n", "var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n", "var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n", "var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n", "module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n", "// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n", "var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity \u2013> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err) {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    request.setHeader('Content-Length', length);\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n", null, null, null, null, null, null, "export function getUserAgent() {\n    if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n        return navigator.userAgent;\n    }\n    if (typeof process === \"object\" && \"version\" in process) {\n        return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;\n    }\n    return \"<environment undetectable>\";\n}\n", "module.exports = register;\n\nfunction register(state, name, method, options) {\n  if (typeof method !== \"function\") {\n    throw new Error(\"method for before hook must be a function\");\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (Array.isArray(name)) {\n    return name.reverse().reduce(function (callback, name) {\n      return register.bind(null, state, name, callback, options);\n    }, method)();\n  }\n\n  return Promise.resolve().then(function () {\n    if (!state.registry[name]) {\n      return method(options);\n    }\n\n    return state.registry[name].reduce(function (method, registered) {\n      return registered.hook.bind(null, method, options);\n    }, method)();\n  });\n}\n", "module.exports = addHook;\n\nfunction addHook(state, kind, name, hook) {\n  var orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n\n  if (kind === \"before\") {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options));\n    };\n  }\n\n  if (kind === \"after\") {\n    hook = function (method, options) {\n      var result;\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then(function (result_) {\n          result = result_;\n          return orig(result, options);\n        })\n        .then(function () {\n          return result;\n        });\n    };\n  }\n\n  if (kind === \"error\") {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch(function (error) {\n          return orig(error, options);\n        });\n    };\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig,\n  });\n}\n", "module.exports = removeHook;\n\nfunction removeHook(state, name, method) {\n  if (!state.registry[name]) {\n    return;\n  }\n\n  var index = state.registry[name]\n    .map(function (registered) {\n      return registered.orig;\n    })\n    .indexOf(method);\n\n  if (index === -1) {\n    return;\n  }\n\n  state.registry[name].splice(index, 1);\n}\n", "var register = require(\"./lib/register\");\nvar addHook = require(\"./lib/add\");\nvar removeHook = require(\"./lib/remove\");\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nvar bind = Function.bind;\nvar bindable = bind.bind(bind);\n\nfunction bindApi(hook, state, name) {\n  var removeHookRef = bindable(removeHook, null).apply(\n    null,\n    name ? [state, name] : [state]\n  );\n  hook.api = { remove: removeHookRef };\n  hook.remove = removeHookRef;\n  [\"before\", \"error\", \"after\", \"wrap\"].forEach(function (kind) {\n    var args = name ? [state, kind, name] : [state, kind];\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n  });\n}\n\nfunction HookSingular() {\n  var singularHookName = \"h\";\n  var singularHookState = {\n    registry: {},\n  };\n  var singularHook = register.bind(null, singularHookState, singularHookName);\n  bindApi(singularHook, singularHookState, singularHookName);\n  return singularHook;\n}\n\nfunction HookCollection() {\n  var state = {\n    registry: {},\n  };\n\n  var hook = register.bind(null, state);\n  bindApi(hook, state);\n\n  return hook;\n}\n\nvar collectionHookDeprecationMessageDisplayed = false;\nfunction Hook() {\n  if (!collectionHookDeprecationMessageDisplayed) {\n    console.warn(\n      '[before-after-hook]: \"Hook()\" repurposing warning, use \"Hook.Collection()\". Read more: https://git.io/upgrade-before-after-hook-to-1.4'\n    );\n    collectionHookDeprecationMessageDisplayed = true;\n  }\n  return HookCollection();\n}\n\nHook.Singular = HookSingular.bind();\nHook.Collection = HookCollection.bind();\n\nmodule.exports = Hook;\n// expose constructors as a named property for TypeScript\nmodule.exports.Hook = Hook;\nmodule.exports.Singular = Hook.Singular;\nmodule.exports.Collection = Hook.Collection;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n", "export function lowercaseKeys(object) {\n    if (!object) {\n        return {};\n    }\n    return Object.keys(object).reduce((newObj, key) => {\n        newObj[key.toLowerCase()] = object[key];\n        return newObj;\n    }, {});\n}\n", "import { isPlainObject } from \"is-plain-object\";\nexport function mergeDeep(defaults, options) {\n    const result = Object.assign({}, defaults);\n    Object.keys(options).forEach((key) => {\n        if (isPlainObject(options[key])) {\n            if (!(key in defaults))\n                Object.assign(result, { [key]: options[key] });\n            else\n                result[key] = mergeDeep(defaults[key], options[key]);\n        }\n        else {\n            Object.assign(result, { [key]: options[key] });\n        }\n    });\n    return result;\n}\n", "export function removeUndefinedProperties(obj) {\n    for (const key in obj) {\n        if (obj[key] === undefined) {\n            delete obj[key];\n        }\n    }\n    return obj;\n}\n", "import { lowercaseKeys } from \"./util/lowercase-keys\";\nimport { mergeDeep } from \"./util/merge-deep\";\nimport { removeUndefinedProperties } from \"./util/remove-undefined-properties\";\nexport function merge(defaults, route, options) {\n    if (typeof route === \"string\") {\n        let [method, url] = route.split(\" \");\n        options = Object.assign(url ? { method, url } : { url: method }, options);\n    }\n    else {\n        options = Object.assign({}, route);\n    }\n    // lowercase header names before merging with defaults to avoid duplicates\n    options.headers = lowercaseKeys(options.headers);\n    // remove properties with undefined values before merging\n    removeUndefinedProperties(options);\n    removeUndefinedProperties(options.headers);\n    const mergedOptions = mergeDeep(defaults || {}, options);\n    // mediaType.previews arrays are merged, instead of overwritten\n    if (defaults && defaults.mediaType.previews.length) {\n        mergedOptions.mediaType.previews = defaults.mediaType.previews\n            .filter((preview) => !mergedOptions.mediaType.previews.includes(preview))\n            .concat(mergedOptions.mediaType.previews);\n    }\n    mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, \"\"));\n    return mergedOptions;\n}\n", "export function addQueryParameters(url, parameters) {\n    const separator = /\\?/.test(url) ? \"&\" : \"?\";\n    const names = Object.keys(parameters);\n    if (names.length === 0) {\n        return url;\n    }\n    return (url +\n        separator +\n        names\n            .map((name) => {\n            if (name === \"q\") {\n                return (\"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\"));\n            }\n            return `${name}=${encodeURIComponent(parameters[name])}`;\n        })\n            .join(\"&\"));\n}\n", "const urlVariableRegex = /\\{[^}]+\\}/g;\nfunction removeNonChars(variableName) {\n    return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\nexport function extractUrlVariableNames(url) {\n    const matches = url.match(urlVariableRegex);\n    if (!matches) {\n        return [];\n    }\n    return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n", "export function omit(object, keysToOmit) {\n    return Object.keys(object)\n        .filter((option) => !keysToOmit.includes(option))\n        .reduce((obj, key) => {\n        obj[key] = object[key];\n        return obj;\n    }, {});\n}\n", "// Based on https://github.com/bramstein/url-template, licensed under BSD\n// TODO: create separate package.\n//\n// Copyright (c) 2012-2014, Bram Stein\n// All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  1. Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//  3. The name of the author may not be used to endorse or promote products\n//     derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n/* istanbul ignore file */\nfunction encodeReserved(str) {\n    return str\n        .split(/(%[0-9A-Fa-f]{2})/g)\n        .map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n        }\n        return part;\n    })\n        .join(\"\");\n}\nfunction encodeUnreserved(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nfunction encodeValue(operator, value, key) {\n    value =\n        operator === \"+\" || operator === \"#\"\n            ? encodeReserved(value)\n            : encodeUnreserved(value);\n    if (key) {\n        return encodeUnreserved(key) + \"=\" + value;\n    }\n    else {\n        return value;\n    }\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isKeyOperator(operator) {\n    return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\nfunction getValues(context, operator, key, modifier) {\n    var value = context[key], result = [];\n    if (isDefined(value) && value !== \"\") {\n        if (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\") {\n            value = value.toString();\n            if (modifier && modifier !== \"*\") {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n        }\n        else {\n            if (modifier === \"*\") {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n                    });\n                }\n                else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            }\n            else {\n                const tmp = [];\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                }\n                else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeUnreserved(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n                if (isKeyOperator(operator)) {\n                    result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n                }\n                else if (tmp.length !== 0) {\n                    result.push(tmp.join(\",\"));\n                }\n            }\n        }\n    }\n    else {\n        if (operator === \";\") {\n            if (isDefined(value)) {\n                result.push(encodeUnreserved(key));\n            }\n        }\n        else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n            result.push(encodeUnreserved(key) + \"=\");\n        }\n        else if (value === \"\") {\n            result.push(\"\");\n        }\n    }\n    return result;\n}\nexport function parseUrl(template) {\n    return {\n        expand: expand.bind(null, template),\n    };\n}\nfunction expand(template, context) {\n    var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n    return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n        if (expression) {\n            let operator = \"\";\n            const values = [];\n            if (operators.indexOf(expression.charAt(0)) !== -1) {\n                operator = expression.charAt(0);\n                expression = expression.substr(1);\n            }\n            expression.split(/,/g).forEach(function (variable) {\n                var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n            });\n            if (operator && operator !== \"+\") {\n                var separator = \",\";\n                if (operator === \"?\") {\n                    separator = \"&\";\n                }\n                else if (operator !== \"#\") {\n                    separator = operator;\n                }\n                return (values.length !== 0 ? operator : \"\") + values.join(separator);\n            }\n            else {\n                return values.join(\",\");\n            }\n        }\n        else {\n            return encodeReserved(literal);\n        }\n    });\n}\n", "import { addQueryParameters } from \"./util/add-query-parameters\";\nimport { extractUrlVariableNames } from \"./util/extract-url-variable-names\";\nimport { omit } from \"./util/omit\";\nimport { parseUrl } from \"./util/url-template\";\nexport function parse(options) {\n    // https://fetch.spec.whatwg.org/#methods\n    let method = options.method.toUpperCase();\n    // replace :varname with {varname} to make it RFC 6570 compatible\n    let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n    let headers = Object.assign({}, options.headers);\n    let body;\n    let parameters = omit(options, [\n        \"method\",\n        \"baseUrl\",\n        \"url\",\n        \"headers\",\n        \"request\",\n        \"mediaType\",\n    ]);\n    // extract variable names from URL to calculate remaining variables later\n    const urlVariableNames = extractUrlVariableNames(url);\n    url = parseUrl(url).expand(parameters);\n    if (!/^http/.test(url)) {\n        url = options.baseUrl + url;\n    }\n    const omittedParameters = Object.keys(options)\n        .filter((option) => urlVariableNames.includes(option))\n        .concat(\"baseUrl\");\n    const remainingParameters = omit(parameters, omittedParameters);\n    const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n    if (!isBinaryRequest) {\n        if (options.mediaType.format) {\n            // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw\n            headers.accept = headers.accept\n                .split(/,/)\n                .map((preview) => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`))\n                .join(\",\");\n        }\n        if (options.mediaType.previews.length) {\n            const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n            headers.accept = previewsFromAcceptHeader\n                .concat(options.mediaType.previews)\n                .map((preview) => {\n                const format = options.mediaType.format\n                    ? `.${options.mediaType.format}`\n                    : \"+json\";\n                return `application/vnd.github.${preview}-preview${format}`;\n            })\n                .join(\",\");\n        }\n    }\n    // for GET/HEAD requests, set URL query parameters from remaining parameters\n    // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters\n    if ([\"GET\", \"HEAD\"].includes(method)) {\n        url = addQueryParameters(url, remainingParameters);\n    }\n    else {\n        if (\"data\" in remainingParameters) {\n            body = remainingParameters.data;\n        }\n        else {\n            if (Object.keys(remainingParameters).length) {\n                body = remainingParameters;\n            }\n        }\n    }\n    // default content-type for JSON if body is set\n    if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n        headers[\"content-type\"] = \"application/json; charset=utf-8\";\n    }\n    // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.\n    // fetch does not allow to set `content-length` header, but we can set body to an empty string\n    if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n        body = \"\";\n    }\n    // Only return body/request keys if present\n    return Object.assign({ method, url, headers }, typeof body !== \"undefined\" ? { body } : null, options.request ? { request: options.request } : null);\n}\n", "import { merge } from \"./merge\";\nimport { parse } from \"./parse\";\nexport function endpointWithDefaults(defaults, route, options) {\n    return parse(merge(defaults, route, options));\n}\n", "import { endpointWithDefaults } from \"./endpoint-with-defaults\";\nimport { merge } from \"./merge\";\nimport { parse } from \"./parse\";\nexport function withDefaults(oldDefaults, newDefaults) {\n    const DEFAULTS = merge(oldDefaults, newDefaults);\n    const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n    return Object.assign(endpoint, {\n        DEFAULTS,\n        defaults: withDefaults.bind(null, DEFAULTS),\n        merge: merge.bind(null, DEFAULTS),\n        parse,\n    });\n}\n", "export const VERSION = \"7.0.3\";\n", "import { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nconst userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;\n// DEFAULTS has all properties set that EndpointOptions has, except url.\n// So we use RequestParameters and add method as additional required property.\nexport const DEFAULTS = {\n    method: \"GET\",\n    baseUrl: \"https://api.github.com\",\n    headers: {\n        accept: \"application/vnd.github.v3+json\",\n        \"user-agent\": userAgent,\n    },\n    mediaType: {\n        format: \"\",\n        previews: [],\n    },\n};\n", "import { withDefaults } from \"./with-defaults\";\nimport { DEFAULTS } from \"./defaults\";\nexport const endpoint = withDefaults(null, DEFAULTS);\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass Deprecation extends Error {\n  constructor(message) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'Deprecation';\n  }\n\n}\n\nexports.Deprecation = Deprecation;\n", "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n", "import { Deprecation } from \"deprecation\";\nimport once from \"once\";\nconst logOnceCode = once((deprecation) => console.warn(deprecation));\nconst logOnceHeaders = once((deprecation) => console.warn(deprecation));\n/**\n * Error with extra properties to help with debugging\n */\nexport class RequestError extends Error {\n    constructor(message, statusCode, options) {\n        super(message);\n        // Maintains proper stack trace (only available on V8)\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        this.name = \"HttpError\";\n        this.status = statusCode;\n        let headers;\n        if (\"headers\" in options && typeof options.headers !== \"undefined\") {\n            headers = options.headers;\n        }\n        if (\"response\" in options) {\n            this.response = options.response;\n            headers = options.response.headers;\n        }\n        // redact request credentials without mutating original request options\n        const requestCopy = Object.assign({}, options.request);\n        if (options.request.headers.authorization) {\n            requestCopy.headers = Object.assign({}, options.request.headers, {\n                authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\"),\n            });\n        }\n        requestCopy.url = requestCopy.url\n            // client_id & client_secret can be passed as URL query parameters to increase rate limit\n            // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n            .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\")\n            // OAuth tokens can be passed as URL query parameters, although it is not recommended\n            // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n            .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n        this.request = requestCopy;\n        // deprecations\n        Object.defineProperty(this, \"code\", {\n            get() {\n                logOnceCode(new Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n                return statusCode;\n            },\n        });\n        Object.defineProperty(this, \"headers\", {\n            get() {\n                logOnceHeaders(new Deprecation(\"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"));\n                return headers || {};\n            },\n        });\n    }\n}\n", "export const VERSION = \"6.2.2\";\n", "export default function getBufferResponse(response) {\n    return response.arrayBuffer();\n}\n", "import { isPlainObject } from \"is-plain-object\";\nimport nodeFetch from \"node-fetch\";\nimport { RequestError } from \"@octokit/request-error\";\nimport getBuffer from \"./get-buffer-response\";\nexport default function fetchWrapper(requestOptions) {\n    const log = requestOptions.request && requestOptions.request.log\n        ? requestOptions.request.log\n        : console;\n    if (isPlainObject(requestOptions.body) ||\n        Array.isArray(requestOptions.body)) {\n        requestOptions.body = JSON.stringify(requestOptions.body);\n    }\n    let headers = {};\n    let status;\n    let url;\n    const fetch = (requestOptions.request && requestOptions.request.fetch) ||\n        globalThis.fetch ||\n        /* istanbul ignore next */ nodeFetch;\n    return fetch(requestOptions.url, Object.assign({\n        method: requestOptions.method,\n        body: requestOptions.body,\n        headers: requestOptions.headers,\n        redirect: requestOptions.redirect,\n    }, \n    // `requestOptions.request.agent` type is incompatible\n    // see https://github.com/octokit/types.ts/pull/264\n    requestOptions.request))\n        .then(async (response) => {\n        url = response.url;\n        status = response.status;\n        for (const keyAndValue of response.headers) {\n            headers[keyAndValue[0]] = keyAndValue[1];\n        }\n        if (\"deprecation\" in headers) {\n            const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n            const deprecationLink = matches && matches.pop();\n            log.warn(`[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`);\n        }\n        if (status === 204 || status === 205) {\n            return;\n        }\n        // GitHub API returns 200 for HEAD requests\n        if (requestOptions.method === \"HEAD\") {\n            if (status < 400) {\n                return;\n            }\n            throw new RequestError(response.statusText, status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data: undefined,\n                },\n                request: requestOptions,\n            });\n        }\n        if (status === 304) {\n            throw new RequestError(\"Not modified\", status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data: await getResponseData(response),\n                },\n                request: requestOptions,\n            });\n        }\n        if (status >= 400) {\n            const data = await getResponseData(response);\n            const error = new RequestError(toErrorMessage(data), status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data,\n                },\n                request: requestOptions,\n            });\n            throw error;\n        }\n        return getResponseData(response);\n    })\n        .then((data) => {\n        return {\n            status,\n            url,\n            headers,\n            data,\n        };\n    })\n        .catch((error) => {\n        if (error instanceof RequestError)\n            throw error;\n        else if (error.name === \"AbortError\")\n            throw error;\n        throw new RequestError(error.message, 500, {\n            request: requestOptions,\n        });\n    });\n}\nasync function getResponseData(response) {\n    const contentType = response.headers.get(\"content-type\");\n    if (/application\\/json/.test(contentType)) {\n        return response.json();\n    }\n    if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n        return response.text();\n    }\n    return getBuffer(response);\n}\nfunction toErrorMessage(data) {\n    if (typeof data === \"string\")\n        return data;\n    // istanbul ignore else - just in case\n    if (\"message\" in data) {\n        if (Array.isArray(data.errors)) {\n            return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n        }\n        return data.message;\n    }\n    // istanbul ignore next - just in case\n    return `Unknown error: ${JSON.stringify(data)}`;\n}\n", "import fetchWrapper from \"./fetch-wrapper\";\nexport default function withDefaults(oldEndpoint, newDefaults) {\n    const endpoint = oldEndpoint.defaults(newDefaults);\n    const newApi = function (route, parameters) {\n        const endpointOptions = endpoint.merge(route, parameters);\n        if (!endpointOptions.request || !endpointOptions.request.hook) {\n            return fetchWrapper(endpoint.parse(endpointOptions));\n        }\n        const request = (route, parameters) => {\n            return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n        };\n        Object.assign(request, {\n            endpoint,\n            defaults: withDefaults.bind(null, endpoint),\n        });\n        return endpointOptions.request.hook(request, endpointOptions);\n    };\n    return Object.assign(newApi, {\n        endpoint,\n        defaults: withDefaults.bind(null, endpoint),\n    });\n}\n", "import { endpoint } from \"@octokit/endpoint\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nimport withDefaults from \"./with-defaults\";\nexport const request = withDefaults(endpoint, {\n    headers: {\n        \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`,\n    },\n});\n", "export const VERSION = \"5.0.3\";\n", "function _buildMessageForResponseErrors(data) {\n    return (`Request failed due to following response errors:\\n` +\n        data.errors.map((e) => ` - ${e.message}`).join(\"\\n\"));\n}\nexport class GraphqlResponseError extends Error {\n    constructor(request, headers, response) {\n        super(_buildMessageForResponseErrors(response));\n        this.request = request;\n        this.headers = headers;\n        this.response = response;\n        this.name = \"GraphqlResponseError\";\n        // Expose the errors and response data in their shorthand properties.\n        this.errors = response.errors;\n        this.data = response.data;\n        // Maintains proper stack trace (only available on V8)\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\n", "import { GraphqlResponseError } from \"./error\";\nconst NON_VARIABLE_OPTIONS = [\n    \"method\",\n    \"baseUrl\",\n    \"url\",\n    \"headers\",\n    \"request\",\n    \"query\",\n    \"mediaType\",\n];\nconst FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nexport function graphql(request, query, options) {\n    if (options) {\n        if (typeof query === \"string\" && \"query\" in options) {\n            return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n        }\n        for (const key in options) {\n            if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))\n                continue;\n            return Promise.reject(new Error(`[@octokit/graphql] \"${key}\" cannot be used as variable name`));\n        }\n    }\n    const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n    const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n        if (NON_VARIABLE_OPTIONS.includes(key)) {\n            result[key] = parsedOptions[key];\n            return result;\n        }\n        if (!result.variables) {\n            result.variables = {};\n        }\n        result.variables[key] = parsedOptions[key];\n        return result;\n    }, {});\n    // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n    // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n    const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n    if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n        requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n    }\n    return request(requestOptions).then((response) => {\n        if (response.data.errors) {\n            const headers = {};\n            for (const key of Object.keys(response.headers)) {\n                headers[key] = response.headers[key];\n            }\n            throw new GraphqlResponseError(requestOptions, headers, response.data);\n        }\n        return response.data.data;\n    });\n}\n", "import { graphql } from \"./graphql\";\nexport function withDefaults(request, newDefaults) {\n    const newRequest = request.defaults(newDefaults);\n    const newApi = (query, options) => {\n        return graphql(newRequest, query, options);\n    };\n    return Object.assign(newApi, {\n        defaults: withDefaults.bind(null, newRequest),\n        endpoint: newRequest.endpoint,\n    });\n}\n", "import { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nimport { withDefaults } from \"./with-defaults\";\nexport const graphql = withDefaults(request, {\n    headers: {\n        \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`,\n    },\n    method: \"POST\",\n    url: \"/graphql\",\n});\nexport { GraphqlResponseError } from \"./error\";\nexport function withCustomRequest(customRequest) {\n    return withDefaults(customRequest, {\n        method: \"POST\",\n        url: \"/graphql\",\n    });\n}\n", "const REGEX_IS_INSTALLATION_LEGACY = /^v1\\./;\nconst REGEX_IS_INSTALLATION = /^ghs_/;\nconst REGEX_IS_USER_TO_SERVER = /^ghu_/;\nexport async function auth(token) {\n    const isApp = token.split(/\\./).length === 3;\n    const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) ||\n        REGEX_IS_INSTALLATION.test(token);\n    const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);\n    const tokenType = isApp\n        ? \"app\"\n        : isInstallation\n            ? \"installation\"\n            : isUserToServer\n                ? \"user-to-server\"\n                : \"oauth\";\n    return {\n        type: \"token\",\n        token: token,\n        tokenType,\n    };\n}\n", "/**\n * Prefix token for usage in the Authorization header\n *\n * @param token OAuth token or JSON Web Token\n */\nexport function withAuthorizationPrefix(token) {\n    if (token.split(/\\./).length === 3) {\n        return `bearer ${token}`;\n    }\n    return `token ${token}`;\n}\n", "import { withAuthorizationPrefix } from \"./with-authorization-prefix\";\nexport async function hook(token, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    endpoint.headers.authorization = withAuthorizationPrefix(token);\n    return request(endpoint);\n}\n", "import { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport const createTokenAuth = function createTokenAuth(token) {\n    if (!token) {\n        throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n    }\n    if (typeof token !== \"string\") {\n        throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n    }\n    token = token.replace(/^(token|bearer) +/i, \"\");\n    return Object.assign(auth.bind(null, token), {\n        hook: hook.bind(null, token),\n    });\n};\n", "export const VERSION = \"4.1.0\";\n", "import { getUserAgent } from \"universal-user-agent\";\nimport { Collection } from \"before-after-hook\";\nimport { request } from \"@octokit/request\";\nimport { withCustomRequest } from \"@octokit/graphql\";\nimport { createTokenAuth } from \"@octokit/auth-token\";\nimport { VERSION } from \"./version\";\nexport class Octokit {\n    constructor(options = {}) {\n        const hook = new Collection();\n        const requestDefaults = {\n            baseUrl: request.endpoint.DEFAULTS.baseUrl,\n            headers: {},\n            request: Object.assign({}, options.request, {\n                // @ts-ignore internal usage only, no need to type\n                hook: hook.bind(null, \"request\"),\n            }),\n            mediaType: {\n                previews: [],\n                format: \"\",\n            },\n        };\n        // prepend default user agent with `options.userAgent` if set\n        requestDefaults.headers[\"user-agent\"] = [\n            options.userAgent,\n            `octokit-core.js/${VERSION} ${getUserAgent()}`,\n        ]\n            .filter(Boolean)\n            .join(\" \");\n        if (options.baseUrl) {\n            requestDefaults.baseUrl = options.baseUrl;\n        }\n        if (options.previews) {\n            requestDefaults.mediaType.previews = options.previews;\n        }\n        if (options.timeZone) {\n            requestDefaults.headers[\"time-zone\"] = options.timeZone;\n        }\n        this.request = request.defaults(requestDefaults);\n        this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n        this.log = Object.assign({\n            debug: () => { },\n            info: () => { },\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n        }, options.log);\n        this.hook = hook;\n        // (1) If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance\n        //     is unauthenticated. The `this.auth()` method is a no-op and no request hook is registered.\n        // (2) If only `options.auth` is set, use the default token authentication strategy.\n        // (3) If `options.authStrategy` is set then use it and pass in `options.auth`. Always pass own request as many strategies accept a custom request instance.\n        // TODO: type `options.auth` based on `options.authStrategy`.\n        if (!options.authStrategy) {\n            if (!options.auth) {\n                // (1)\n                this.auth = async () => ({\n                    type: \"unauthenticated\",\n                });\n            }\n            else {\n                // (2)\n                const auth = createTokenAuth(options.auth);\n                // @ts-ignore  \u00AF\\_(\u30C4)_/\u00AF\n                hook.wrap(\"request\", auth.hook);\n                this.auth = auth;\n            }\n        }\n        else {\n            const { authStrategy, ...otherOptions } = options;\n            const auth = authStrategy(Object.assign({\n                request: this.request,\n                log: this.log,\n                // we pass the current octokit instance as well as its constructor options\n                // to allow for authentication strategies that return a new octokit instance\n                // that shares the same internal state as the current one. The original\n                // requirement for this was the \"event-octokit\" authentication strategy\n                // of https://github.com/probot/octokit-auth-probot.\n                octokit: this,\n                octokitOptions: otherOptions,\n            }, options.auth));\n            // @ts-ignore  \u00AF\\_(\u30C4)_/\u00AF\n            hook.wrap(\"request\", auth.hook);\n            this.auth = auth;\n        }\n        // apply plugins\n        // https://stackoverflow.com/a/16345172\n        const classConstructor = this.constructor;\n        classConstructor.plugins.forEach((plugin) => {\n            Object.assign(this, plugin(this, options));\n        });\n    }\n    static defaults(defaults) {\n        const OctokitWithDefaults = class extends this {\n            constructor(...args) {\n                const options = args[0] || {};\n                if (typeof defaults === \"function\") {\n                    super(defaults(options));\n                    return;\n                }\n                super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent\n                    ? {\n                        userAgent: `${options.userAgent} ${defaults.userAgent}`,\n                    }\n                    : null));\n            }\n        };\n        return OctokitWithDefaults;\n    }\n    /**\n     * Attach a plugin (or many) to your Octokit instance.\n     *\n     * @example\n     * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n     */\n    static plugin(...newPlugins) {\n        var _a;\n        const currentPlugins = this.plugins;\n        const NewOctokit = (_a = class extends this {\n            },\n            _a.plugins = currentPlugins.concat(newPlugins.filter((plugin) => !currentPlugins.includes(plugin))),\n            _a);\n        return NewOctokit;\n    }\n}\nOctokit.VERSION = VERSION;\nOctokit.plugins = [];\n", "export const VERSION = \"5.0.1\";\n", "/**\n * Some \u201Clist\u201D response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint.\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not.\n *\n * We check if a \"total_count\" key is present in the response data, but also make sure that\n * a \"url\" property is not, as the \"Get the combined status for a specific ref\" endpoint would\n * otherwise match: https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\n */\nexport function normalizePaginatedListResponse(response) {\n    // endpoints can respond with 204 if repository is empty\n    if (!response.data) {\n        return {\n            ...response,\n            data: [],\n        };\n    }\n    const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n    if (!responseNeedsNormalization)\n        return response;\n    // keep the additional properties intact as there is currently no other way\n    // to retrieve the same information.\n    const incompleteResults = response.data.incomplete_results;\n    const repositorySelection = response.data.repository_selection;\n    const totalCount = response.data.total_count;\n    delete response.data.incomplete_results;\n    delete response.data.repository_selection;\n    delete response.data.total_count;\n    const namespaceKey = Object.keys(response.data)[0];\n    const data = response.data[namespaceKey];\n    response.data = data;\n    if (typeof incompleteResults !== \"undefined\") {\n        response.data.incomplete_results = incompleteResults;\n    }\n    if (typeof repositorySelection !== \"undefined\") {\n        response.data.repository_selection = repositorySelection;\n    }\n    response.data.total_count = totalCount;\n    return response;\n}\n", "import { normalizePaginatedListResponse } from \"./normalize-paginated-list-response\";\nexport function iterator(octokit, route, parameters) {\n    const options = typeof route === \"function\"\n        ? route.endpoint(parameters)\n        : octokit.request.endpoint(route, parameters);\n    const requestMethod = typeof route === \"function\" ? route : octokit.request;\n    const method = options.method;\n    const headers = options.headers;\n    let url = options.url;\n    return {\n        [Symbol.asyncIterator]: () => ({\n            async next() {\n                if (!url)\n                    return { done: true };\n                try {\n                    const response = await requestMethod({ method, url, headers });\n                    const normalizedResponse = normalizePaginatedListResponse(response);\n                    // `response.headers.link` format:\n                    // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n                    // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n                    url = ((normalizedResponse.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n                    return { value: normalizedResponse };\n                }\n                catch (error) {\n                    if (error.status !== 409)\n                        throw error;\n                    url = \"\";\n                    return {\n                        value: {\n                            status: 200,\n                            headers: {},\n                            data: [],\n                        },\n                    };\n                }\n            },\n        }),\n    };\n}\n", "import { iterator } from \"./iterator\";\nexport function paginate(octokit, route, parameters, mapFn) {\n    if (typeof parameters === \"function\") {\n        mapFn = parameters;\n        parameters = undefined;\n    }\n    return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\nfunction gather(octokit, results, iterator, mapFn) {\n    return iterator.next().then((result) => {\n        if (result.done) {\n            return results;\n        }\n        let earlyExit = false;\n        function done() {\n            earlyExit = true;\n        }\n        results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n        if (earlyExit) {\n            return results;\n        }\n        return gather(octokit, results, iterator, mapFn);\n    });\n}\n", "import { paginate } from \"./paginate\";\nimport { iterator } from \"./iterator\";\nexport const composePaginateRest = Object.assign(paginate, {\n    iterator,\n});\n", "export const paginatingEndpoints = [\n    \"GET /app/hook/deliveries\",\n    \"GET /app/installations\",\n    \"GET /enterprises/{enterprise}/actions/permissions/organizations\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners\",\n    \"GET /enterprises/{enterprise}/actions/runners\",\n    \"GET /enterprises/{enterprise}/code-scanning/alerts\",\n    \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n    \"GET /enterprises/{enterprise}/settings/billing/advanced-security\",\n    \"GET /events\",\n    \"GET /gists\",\n    \"GET /gists/public\",\n    \"GET /gists/starred\",\n    \"GET /gists/{gist_id}/comments\",\n    \"GET /gists/{gist_id}/commits\",\n    \"GET /gists/{gist_id}/forks\",\n    \"GET /installation/repositories\",\n    \"GET /issues\",\n    \"GET /licenses\",\n    \"GET /marketplace_listing/plans\",\n    \"GET /marketplace_listing/plans/{plan_id}/accounts\",\n    \"GET /marketplace_listing/stubbed/plans\",\n    \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    \"GET /networks/{owner}/{repo}/events\",\n    \"GET /notifications\",\n    \"GET /organizations\",\n    \"GET /organizations/{org}/codespaces/secrets\",\n    \"GET /organizations/{org}/codespaces/secrets/{secret_name}/repositories\",\n    \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n    \"GET /orgs/{org}/actions/permissions/repositories\",\n    \"GET /orgs/{org}/actions/runner-groups\",\n    \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\",\n    \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\",\n    \"GET /orgs/{org}/actions/runners\",\n    \"GET /orgs/{org}/actions/secrets\",\n    \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n    \"GET /orgs/{org}/blocks\",\n    \"GET /orgs/{org}/code-scanning/alerts\",\n    \"GET /orgs/{org}/codespaces\",\n    \"GET /orgs/{org}/dependabot/secrets\",\n    \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n    \"GET /orgs/{org}/events\",\n    \"GET /orgs/{org}/failed_invitations\",\n    \"GET /orgs/{org}/hooks\",\n    \"GET /orgs/{org}/hooks/{hook_id}/deliveries\",\n    \"GET /orgs/{org}/installations\",\n    \"GET /orgs/{org}/invitations\",\n    \"GET /orgs/{org}/invitations/{invitation_id}/teams\",\n    \"GET /orgs/{org}/issues\",\n    \"GET /orgs/{org}/members\",\n    \"GET /orgs/{org}/migrations\",\n    \"GET /orgs/{org}/migrations/{migration_id}/repositories\",\n    \"GET /orgs/{org}/outside_collaborators\",\n    \"GET /orgs/{org}/packages\",\n    \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n    \"GET /orgs/{org}/projects\",\n    \"GET /orgs/{org}/public_members\",\n    \"GET /orgs/{org}/repos\",\n    \"GET /orgs/{org}/secret-scanning/alerts\",\n    \"GET /orgs/{org}/settings/billing/advanced-security\",\n    \"GET /orgs/{org}/teams\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n    \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n    \"GET /orgs/{org}/teams/{team_slug}/members\",\n    \"GET /orgs/{org}/teams/{team_slug}/projects\",\n    \"GET /orgs/{org}/teams/{team_slug}/repos\",\n    \"GET /orgs/{org}/teams/{team_slug}/teams\",\n    \"GET /projects/columns/{column_id}/cards\",\n    \"GET /projects/{project_id}/collaborators\",\n    \"GET /projects/{project_id}/columns\",\n    \"GET /repos/{owner}/{repo}/actions/artifacts\",\n    \"GET /repos/{owner}/{repo}/actions/caches\",\n    \"GET /repos/{owner}/{repo}/actions/runners\",\n    \"GET /repos/{owner}/{repo}/actions/runs\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n    \"GET /repos/{owner}/{repo}/actions/secrets\",\n    \"GET /repos/{owner}/{repo}/actions/workflows\",\n    \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n    \"GET /repos/{owner}/{repo}/assignees\",\n    \"GET /repos/{owner}/{repo}/branches\",\n    \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n    \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n    \"GET /repos/{owner}/{repo}/code-scanning/alerts\",\n    \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n    \"GET /repos/{owner}/{repo}/code-scanning/analyses\",\n    \"GET /repos/{owner}/{repo}/codespaces\",\n    \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n    \"GET /repos/{owner}/{repo}/codespaces/secrets\",\n    \"GET /repos/{owner}/{repo}/collaborators\",\n    \"GET /repos/{owner}/{repo}/comments\",\n    \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/commits\",\n    \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n    \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/status\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n    \"GET /repos/{owner}/{repo}/contributors\",\n    \"GET /repos/{owner}/{repo}/dependabot/alerts\",\n    \"GET /repos/{owner}/{repo}/dependabot/secrets\",\n    \"GET /repos/{owner}/{repo}/deployments\",\n    \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n    \"GET /repos/{owner}/{repo}/environments\",\n    \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n    \"GET /repos/{owner}/{repo}/events\",\n    \"GET /repos/{owner}/{repo}/forks\",\n    \"GET /repos/{owner}/{repo}/hooks\",\n    \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n    \"GET /repos/{owner}/{repo}/invitations\",\n    \"GET /repos/{owner}/{repo}/issues\",\n    \"GET /repos/{owner}/{repo}/issues/comments\",\n    \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/issues/events\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n    \"GET /repos/{owner}/{repo}/keys\",\n    \"GET /repos/{owner}/{repo}/labels\",\n    \"GET /repos/{owner}/{repo}/milestones\",\n    \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n    \"GET /repos/{owner}/{repo}/notifications\",\n    \"GET /repos/{owner}/{repo}/pages/builds\",\n    \"GET /repos/{owner}/{repo}/projects\",\n    \"GET /repos/{owner}/{repo}/pulls\",\n    \"GET /repos/{owner}/{repo}/pulls/comments\",\n    \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n    \"GET /repos/{owner}/{repo}/releases\",\n    \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n    \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/secret-scanning/alerts\",\n    \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n    \"GET /repos/{owner}/{repo}/stargazers\",\n    \"GET /repos/{owner}/{repo}/subscribers\",\n    \"GET /repos/{owner}/{repo}/tags\",\n    \"GET /repos/{owner}/{repo}/teams\",\n    \"GET /repos/{owner}/{repo}/topics\",\n    \"GET /repositories\",\n    \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n    \"GET /search/code\",\n    \"GET /search/commits\",\n    \"GET /search/issues\",\n    \"GET /search/labels\",\n    \"GET /search/repositories\",\n    \"GET /search/topics\",\n    \"GET /search/users\",\n    \"GET /teams/{team_id}/discussions\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/comments\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\",\n    \"GET /teams/{team_id}/invitations\",\n    \"GET /teams/{team_id}/members\",\n    \"GET /teams/{team_id}/projects\",\n    \"GET /teams/{team_id}/repos\",\n    \"GET /teams/{team_id}/teams\",\n    \"GET /user/blocks\",\n    \"GET /user/codespaces\",\n    \"GET /user/codespaces/secrets\",\n    \"GET /user/emails\",\n    \"GET /user/followers\",\n    \"GET /user/following\",\n    \"GET /user/gpg_keys\",\n    \"GET /user/installations\",\n    \"GET /user/installations/{installation_id}/repositories\",\n    \"GET /user/issues\",\n    \"GET /user/keys\",\n    \"GET /user/marketplace_purchases\",\n    \"GET /user/marketplace_purchases/stubbed\",\n    \"GET /user/memberships/orgs\",\n    \"GET /user/migrations\",\n    \"GET /user/migrations/{migration_id}/repositories\",\n    \"GET /user/orgs\",\n    \"GET /user/packages\",\n    \"GET /user/packages/{package_type}/{package_name}/versions\",\n    \"GET /user/public_emails\",\n    \"GET /user/repos\",\n    \"GET /user/repository_invitations\",\n    \"GET /user/ssh_signing_keys\",\n    \"GET /user/starred\",\n    \"GET /user/subscriptions\",\n    \"GET /user/teams\",\n    \"GET /users\",\n    \"GET /users/{username}/events\",\n    \"GET /users/{username}/events/orgs/{org}\",\n    \"GET /users/{username}/events/public\",\n    \"GET /users/{username}/followers\",\n    \"GET /users/{username}/following\",\n    \"GET /users/{username}/gists\",\n    \"GET /users/{username}/gpg_keys\",\n    \"GET /users/{username}/keys\",\n    \"GET /users/{username}/orgs\",\n    \"GET /users/{username}/packages\",\n    \"GET /users/{username}/projects\",\n    \"GET /users/{username}/received_events\",\n    \"GET /users/{username}/received_events/public\",\n    \"GET /users/{username}/repos\",\n    \"GET /users/{username}/ssh_signing_keys\",\n    \"GET /users/{username}/starred\",\n    \"GET /users/{username}/subscriptions\",\n];\n", "import { paginatingEndpoints, } from \"./generated/paginating-endpoints\";\nexport { paginatingEndpoints } from \"./generated/paginating-endpoints\";\nexport function isPaginatingEndpoint(arg) {\n    if (typeof arg === \"string\") {\n        return paginatingEndpoints.includes(arg);\n    }\n    else {\n        return false;\n    }\n}\n", "import { VERSION } from \"./version\";\nimport { paginate } from \"./paginate\";\nimport { iterator } from \"./iterator\";\nexport { composePaginateRest } from \"./compose-paginate\";\nexport { isPaginatingEndpoint, paginatingEndpoints, } from \"./paginating-endpoints\";\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\nexport function paginateRest(octokit) {\n    return {\n        paginate: Object.assign(paginate.bind(null, octokit), {\n            iterator: iterator.bind(null, octokit),\n        }),\n    };\n}\npaginateRest.VERSION = VERSION;\n", "const Endpoints = {\n    actions: {\n        addCustomLabelsToSelfHostedRunnerForOrg: [\n            \"POST /orgs/{org}/actions/runners/{runner_id}/labels\",\n        ],\n        addCustomLabelsToSelfHostedRunnerForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n        ],\n        addSelectedRepoToOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        approveWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\",\n        ],\n        cancelWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\",\n        ],\n        createOrUpdateEnvironmentSecret: [\n            \"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        createRegistrationTokenForOrg: [\n            \"POST /orgs/{org}/actions/runners/registration-token\",\n        ],\n        createRegistrationTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/registration-token\",\n        ],\n        createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n        createRemoveTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/remove-token\",\n        ],\n        createWorkflowDispatch: [\n            \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\",\n        ],\n        deleteActionsCacheById: [\n            \"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\",\n        ],\n        deleteActionsCacheByKey: [\n            \"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\",\n        ],\n        deleteArtifact: [\n            \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\",\n        ],\n        deleteEnvironmentSecret: [\n            \"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        deleteSelfHostedRunnerFromOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}\",\n        ],\n        deleteSelfHostedRunnerFromRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        deleteWorkflowRunLogs: [\n            \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        disableSelectedRepositoryGithubActionsOrganization: [\n            \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        disableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\",\n        ],\n        downloadArtifact: [\n            \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\",\n        ],\n        downloadJobLogsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\",\n        ],\n        downloadWorkflowRunAttemptLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\",\n        ],\n        downloadWorkflowRunLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        enableSelectedRepositoryGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        enableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\",\n        ],\n        getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\n        getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\n        getActionsCacheUsageByRepoForOrg: [\n            \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n        ],\n        getActionsCacheUsageForEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/cache/usage\",\n        ],\n        getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\n        getAllowedActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        getAllowedActionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n        getEnvironmentPublicKey: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\",\n        ],\n        getEnvironmentSecret: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        getGithubActionsDefaultWorkflowPermissionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/workflow\",\n        ],\n        getGithubActionsDefaultWorkflowPermissionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/workflow\",\n        ],\n        getGithubActionsDefaultWorkflowPermissionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/workflow\",\n        ],\n        getGithubActionsPermissionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions\",\n        ],\n        getGithubActionsPermissionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n        getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n        getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n        getPendingDeploymentsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        getRepoPermissions: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n            {},\n            { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] },\n        ],\n        getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n        getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n        getReviewsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\",\n        ],\n        getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n        getSelfHostedRunnerForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n        getWorkflowAccessToRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/access\",\n        ],\n        getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        getWorkflowRunAttempt: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\",\n        ],\n        getWorkflowRunUsage: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\",\n        ],\n        getWorkflowUsage: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\",\n        ],\n        listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n        listEnvironmentSecrets: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n        ],\n        listJobsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n        ],\n        listJobsForWorkflowRunAttempt: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n        ],\n        listLabelsForSelfHostedRunnerForOrg: [\n            \"GET /orgs/{org}/actions/runners/{runner_id}/labels\",\n        ],\n        listLabelsForSelfHostedRunnerForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n        ],\n        listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n        listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n        listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n        listRunnerApplicationsForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/downloads\",\n        ],\n        listSelectedReposForOrgSecret: [\n            \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        listSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/repositories\",\n        ],\n        listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n        listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n        listWorkflowRunArtifacts: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n        ],\n        listWorkflowRuns: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n        ],\n        listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n        reRunJobForWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\",\n        ],\n        reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n        reRunWorkflowFailedJobs: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\",\n        ],\n        removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\",\n        ],\n        removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n        ],\n        removeCustomLabelFromSelfHostedRunnerForOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\",\n        ],\n        removeCustomLabelFromSelfHostedRunnerForRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\",\n        ],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        reviewPendingDeploymentsForRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        setAllowedActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        setAllowedActionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        setCustomLabelsForSelfHostedRunnerForOrg: [\n            \"PUT /orgs/{org}/actions/runners/{runner_id}/labels\",\n        ],\n        setCustomLabelsForSelfHostedRunnerForRepo: [\n            \"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n        ],\n        setGithubActionsDefaultWorkflowPermissionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/workflow\",\n        ],\n        setGithubActionsDefaultWorkflowPermissionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/workflow\",\n        ],\n        setGithubActionsDefaultWorkflowPermissionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/workflow\",\n        ],\n        setGithubActionsPermissionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions\",\n        ],\n        setGithubActionsPermissionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        setSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories\",\n        ],\n        setWorkflowAccessToRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/access\",\n        ],\n    },\n    activity: {\n        checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n        deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n        deleteThreadSubscription: [\n            \"DELETE /notifications/threads/{thread_id}/subscription\",\n        ],\n        getFeeds: [\"GET /feeds\"],\n        getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n        getThread: [\"GET /notifications/threads/{thread_id}\"],\n        getThreadSubscriptionForAuthenticatedUser: [\n            \"GET /notifications/threads/{thread_id}/subscription\",\n        ],\n        listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n        listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n        listOrgEventsForAuthenticatedUser: [\n            \"GET /users/{username}/events/orgs/{org}\",\n        ],\n        listPublicEvents: [\"GET /events\"],\n        listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n        listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n        listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n        listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n        listReceivedPublicEventsForUser: [\n            \"GET /users/{username}/received_events/public\",\n        ],\n        listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n        listRepoNotificationsForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/notifications\",\n        ],\n        listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n        listReposStarredByUser: [\"GET /users/{username}/starred\"],\n        listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n        listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n        listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n        listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n        markNotificationsAsRead: [\"PUT /notifications\"],\n        markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n        markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n        setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n        setThreadSubscription: [\n            \"PUT /notifications/threads/{thread_id}/subscription\",\n        ],\n        starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n        unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"],\n    },\n    apps: {\n        addRepoToInstallation: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n            {},\n            { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] },\n        ],\n        addRepoToInstallationForAuthenticatedUser: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        checkToken: [\"POST /applications/{client_id}/token\"],\n        createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n        createInstallationAccessToken: [\n            \"POST /app/installations/{installation_id}/access_tokens\",\n        ],\n        deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n        deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n        deleteToken: [\"DELETE /applications/{client_id}/token\"],\n        getAuthenticated: [\"GET /app\"],\n        getBySlug: [\"GET /apps/{app_slug}\"],\n        getInstallation: [\"GET /app/installations/{installation_id}\"],\n        getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n        getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n        getSubscriptionPlanForAccount: [\n            \"GET /marketplace_listing/accounts/{account_id}\",\n        ],\n        getSubscriptionPlanForAccountStubbed: [\n            \"GET /marketplace_listing/stubbed/accounts/{account_id}\",\n        ],\n        getUserInstallation: [\"GET /users/{username}/installation\"],\n        getWebhookConfigForApp: [\"GET /app/hook/config\"],\n        getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n        listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n        listAccountsForPlanStubbed: [\n            \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n        ],\n        listInstallationReposForAuthenticatedUser: [\n            \"GET /user/installations/{installation_id}/repositories\",\n        ],\n        listInstallations: [\"GET /app/installations\"],\n        listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n        listPlans: [\"GET /marketplace_listing/plans\"],\n        listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n        listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n        listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n        listSubscriptionsForAuthenticatedUserStubbed: [\n            \"GET /user/marketplace_purchases/stubbed\",\n        ],\n        listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n        redeliverWebhookDelivery: [\n            \"POST /app/hook/deliveries/{delivery_id}/attempts\",\n        ],\n        removeRepoFromInstallation: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n            {},\n            { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] },\n        ],\n        removeRepoFromInstallationForAuthenticatedUser: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        resetToken: [\"PATCH /applications/{client_id}/token\"],\n        revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n        scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n        suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n        unsuspendInstallation: [\n            \"DELETE /app/installations/{installation_id}/suspended\",\n        ],\n        updateWebhookConfigForApp: [\"PATCH /app/hook/config\"],\n    },\n    billing: {\n        getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n        getGithubActionsBillingUser: [\n            \"GET /users/{username}/settings/billing/actions\",\n        ],\n        getGithubAdvancedSecurityBillingGhe: [\n            \"GET /enterprises/{enterprise}/settings/billing/advanced-security\",\n        ],\n        getGithubAdvancedSecurityBillingOrg: [\n            \"GET /orgs/{org}/settings/billing/advanced-security\",\n        ],\n        getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n        getGithubPackagesBillingUser: [\n            \"GET /users/{username}/settings/billing/packages\",\n        ],\n        getSharedStorageBillingOrg: [\n            \"GET /orgs/{org}/settings/billing/shared-storage\",\n        ],\n        getSharedStorageBillingUser: [\n            \"GET /users/{username}/settings/billing/shared-storage\",\n        ],\n    },\n    checks: {\n        create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n        createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n        get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n        getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n        listAnnotations: [\n            \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n        ],\n        listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n        listForSuite: [\n            \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n        ],\n        listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n        rerequestRun: [\n            \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\",\n        ],\n        rerequestSuite: [\n            \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\",\n        ],\n        setSuitesPreferences: [\n            \"PATCH /repos/{owner}/{repo}/check-suites/preferences\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    },\n    codeScanning: {\n        deleteAnalysis: [\n            \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\",\n        ],\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n            {},\n            { renamedParameters: { alert_id: \"alert_number\" } },\n        ],\n        getAnalysis: [\n            \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\",\n        ],\n        getCodeqlDatabase: [\n            \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\",\n        ],\n        getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n        listAlertInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n        ],\n        listAlertsForEnterprise: [\n            \"GET /enterprises/{enterprise}/code-scanning/alerts\",\n        ],\n        listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n        listAlertsInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n            {},\n            { renamed: [\"codeScanning\", \"listAlertInstances\"] },\n        ],\n        listCodeqlDatabases: [\n            \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases\",\n        ],\n        listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n        ],\n        uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"],\n    },\n    codesOfConduct: {\n        getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n        getConductCode: [\"GET /codes_of_conduct/{key}\"],\n    },\n    codespaces: {\n        addRepositoryForSecretForAuthenticatedUser: [\n            \"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        addSelectedRepoToOrgSecret: [\n            \"PUT /organizations/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        codespaceMachinesForAuthenticatedUser: [\n            \"GET /user/codespaces/{codespace_name}/machines\",\n        ],\n        createForAuthenticatedUser: [\"POST /user/codespaces\"],\n        createOrUpdateOrgSecret: [\n            \"PUT /organizations/{org}/codespaces/secrets/{secret_name}\",\n        ],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n        ],\n        createOrUpdateSecretForAuthenticatedUser: [\n            \"PUT /user/codespaces/secrets/{secret_name}\",\n        ],\n        createWithPrForAuthenticatedUser: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\",\n        ],\n        createWithRepoForAuthenticatedUser: [\n            \"POST /repos/{owner}/{repo}/codespaces\",\n        ],\n        deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\n        deleteFromOrganization: [\n            \"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\",\n        ],\n        deleteOrgSecret: [\n            \"DELETE /organizations/{org}/codespaces/secrets/{secret_name}\",\n        ],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n        ],\n        deleteSecretForAuthenticatedUser: [\n            \"DELETE /user/codespaces/secrets/{secret_name}\",\n        ],\n        exportForAuthenticatedUser: [\n            \"POST /user/codespaces/{codespace_name}/exports\",\n        ],\n        getExportDetailsForAuthenticatedUser: [\n            \"GET /user/codespaces/{codespace_name}/exports/{export_id}\",\n        ],\n        getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\n        getOrgPublicKey: [\"GET /organizations/{org}/codespaces/secrets/public-key\"],\n        getOrgSecret: [\"GET /organizations/{org}/codespaces/secrets/{secret_name}\"],\n        getPublicKeyForAuthenticatedUser: [\n            \"GET /user/codespaces/secrets/public-key\",\n        ],\n        getRepoPublicKey: [\n            \"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\",\n        ],\n        getRepoSecret: [\n            \"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n        ],\n        getSecretForAuthenticatedUser: [\n            \"GET /user/codespaces/secrets/{secret_name}\",\n        ],\n        listDevcontainersInRepositoryForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n        ],\n        listForAuthenticatedUser: [\"GET /user/codespaces\"],\n        listInOrganization: [\n            \"GET /orgs/{org}/codespaces\",\n            {},\n            { renamedParameters: { org_id: \"org\" } },\n        ],\n        listInRepositoryForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/codespaces\",\n        ],\n        listOrgSecrets: [\"GET /organizations/{org}/codespaces/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\n        listRepositoriesForSecretForAuthenticatedUser: [\n            \"GET /user/codespaces/secrets/{secret_name}/repositories\",\n        ],\n        listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\n        listSelectedReposForOrgSecret: [\n            \"GET /organizations/{org}/codespaces/secrets/{secret_name}/repositories\",\n        ],\n        preFlightWithRepoForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/codespaces/new\",\n        ],\n        removeRepositoryForSecretForAuthenticatedUser: [\n            \"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /organizations/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        repoMachinesForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/codespaces/machines\",\n        ],\n        setRepositoriesForSecretForAuthenticatedUser: [\n            \"PUT /user/codespaces/secrets/{secret_name}/repositories\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /organizations/{org}/codespaces/secrets/{secret_name}/repositories\",\n        ],\n        startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\n        stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\n        stopInOrganization: [\n            \"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\",\n        ],\n        updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"],\n    },\n    dependabot: {\n        addSelectedRepoToOrgSecret: [\n            \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        createOrUpdateOrgSecret: [\n            \"PUT /orgs/{org}/dependabot/secrets/{secret_name}\",\n        ],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n        ],\n        deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n        ],\n        getAlert: [\"GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"],\n        getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\n        getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\n        getRepoPublicKey: [\n            \"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\",\n        ],\n        getRepoSecret: [\n            \"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n        ],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/dependabot/alerts\"],\n        listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\n        listSelectedReposForOrgSecret: [\n            \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n        ],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n        ],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\",\n        ],\n    },\n    dependencyGraph: {\n        createRepositorySnapshot: [\n            \"POST /repos/{owner}/{repo}/dependency-graph/snapshots\",\n        ],\n        diffRange: [\n            \"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\",\n        ],\n    },\n    emojis: { get: [\"GET /emojis\"] },\n    enterpriseAdmin: {\n        addCustomLabelsToSelfHostedRunnerForEnterprise: [\n            \"POST /enterprises/{enterprise}/actions/runners/{runner_id}/labels\",\n        ],\n        disableSelectedOrganizationGithubActionsEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        enableSelectedOrganizationGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        getAllowedActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        getGithubActionsPermissionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions\",\n        ],\n        getServerStatistics: [\n            \"GET /enterprise-installation/{enterprise_or_org}/server-statistics\",\n        ],\n        listLabelsForSelfHostedRunnerForEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/runners/{runner_id}/labels\",\n        ],\n        listSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n        removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels\",\n        ],\n        removeCustomLabelFromSelfHostedRunnerForEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}\",\n        ],\n        setAllowedActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        setCustomLabelsForSelfHostedRunnerForEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/runners/{runner_id}/labels\",\n        ],\n        setGithubActionsPermissionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions\",\n        ],\n        setSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n    },\n    gists: {\n        checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n        create: [\"POST /gists\"],\n        createComment: [\"POST /gists/{gist_id}/comments\"],\n        delete: [\"DELETE /gists/{gist_id}\"],\n        deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n        fork: [\"POST /gists/{gist_id}/forks\"],\n        get: [\"GET /gists/{gist_id}\"],\n        getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n        getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n        list: [\"GET /gists\"],\n        listComments: [\"GET /gists/{gist_id}/comments\"],\n        listCommits: [\"GET /gists/{gist_id}/commits\"],\n        listForUser: [\"GET /users/{username}/gists\"],\n        listForks: [\"GET /gists/{gist_id}/forks\"],\n        listPublic: [\"GET /gists/public\"],\n        listStarred: [\"GET /gists/starred\"],\n        star: [\"PUT /gists/{gist_id}/star\"],\n        unstar: [\"DELETE /gists/{gist_id}/star\"],\n        update: [\"PATCH /gists/{gist_id}\"],\n        updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"],\n    },\n    git: {\n        createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n        createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n        createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n        createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n        createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n        deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n        getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n        getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n        getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n        getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n        listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n        updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"],\n    },\n    gitignore: {\n        getAllTemplates: [\"GET /gitignore/templates\"],\n        getTemplate: [\"GET /gitignore/templates/{name}\"],\n    },\n    interactions: {\n        getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n        getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n        getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n        getRestrictionsForYourPublicRepos: [\n            \"GET /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] },\n        ],\n        removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n        removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n        removeRestrictionsForRepo: [\n            \"DELETE /repos/{owner}/{repo}/interaction-limits\",\n        ],\n        removeRestrictionsForYourPublicRepos: [\n            \"DELETE /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] },\n        ],\n        setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n        setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n        setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n        setRestrictionsForYourPublicRepos: [\n            \"PUT /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] },\n        ],\n    },\n    issues: {\n        addAssignees: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n        create: [\"POST /repos/{owner}/{repo}/issues\"],\n        createComment: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n        ],\n        createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n        createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n        deleteComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\",\n        ],\n        deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n        deleteMilestone: [\n            \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n        getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n        getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n        getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n        list: [\"GET /issues\"],\n        listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n        listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n        listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n        listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n        listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n        listEventsForTimeline: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n        ],\n        listForAuthenticatedUser: [\"GET /user/issues\"],\n        listForOrg: [\"GET /orgs/{org}/issues\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n        listLabelsForMilestone: [\n            \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n        ],\n        listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n        listLabelsOnIssue: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n        lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        removeAllLabels: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        removeAssignees: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        removeLabel: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\",\n        ],\n        setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n        updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n        updateMilestone: [\n            \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n    },\n    licenses: {\n        get: [\"GET /licenses/{license}\"],\n        getAllCommonlyUsed: [\"GET /licenses\"],\n        getForRepo: [\"GET /repos/{owner}/{repo}/license\"],\n    },\n    markdown: {\n        render: [\"POST /markdown\"],\n        renderRaw: [\n            \"POST /markdown/raw\",\n            { headers: { \"content-type\": \"text/plain; charset=utf-8\" } },\n        ],\n    },\n    meta: {\n        get: [\"GET /meta\"],\n        getOctocat: [\"GET /octocat\"],\n        getZen: [\"GET /zen\"],\n        root: [\"GET /\"],\n    },\n    migrations: {\n        cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n        deleteArchiveForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/archive\",\n        ],\n        deleteArchiveForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/archive\",\n        ],\n        downloadArchiveForOrg: [\n            \"GET /orgs/{org}/migrations/{migration_id}/archive\",\n        ],\n        getArchiveForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/archive\",\n        ],\n        getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n        getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n        getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n        getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n        getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n        listForAuthenticatedUser: [\"GET /user/migrations\"],\n        listForOrg: [\"GET /orgs/{org}/migrations\"],\n        listReposForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n        ],\n        listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n        listReposForUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n            {},\n            { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] },\n        ],\n        mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n        setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n        startForAuthenticatedUser: [\"POST /user/migrations\"],\n        startForOrg: [\"POST /orgs/{org}/migrations\"],\n        startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n        unlockRepoForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\",\n        ],\n        unlockRepoForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\",\n        ],\n        updateImport: [\"PATCH /repos/{owner}/{repo}/import\"],\n    },\n    orgs: {\n        addSecurityManagerTeam: [\n            \"PUT /orgs/{org}/security-managers/teams/{team_slug}\",\n        ],\n        blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n        cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n        checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n        checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n        checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n        convertMemberToOutsideCollaborator: [\n            \"PUT /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        createCustomRole: [\"POST /orgs/{org}/custom_roles\"],\n        createInvitation: [\"POST /orgs/{org}/invitations\"],\n        createWebhook: [\"POST /orgs/{org}/hooks\"],\n        deleteCustomRole: [\"DELETE /orgs/{org}/custom_roles/{role_id}\"],\n        deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n        enableOrDisableSecurityProductOnAllOrgRepos: [\n            \"POST /orgs/{org}/{security_product}/{enablement}\",\n        ],\n        get: [\"GET /orgs/{org}\"],\n        getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n        getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n        getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n        getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n        getWebhookDelivery: [\n            \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\",\n        ],\n        list: [\"GET /organizations\"],\n        listAppInstallations: [\"GET /orgs/{org}/installations\"],\n        listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n        listCustomRoles: [\"GET /organizations/{organization_id}/custom_roles\"],\n        listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n        listFineGrainedPermissions: [\"GET /orgs/{org}/fine_grained_permissions\"],\n        listForAuthenticatedUser: [\"GET /user/orgs\"],\n        listForUser: [\"GET /users/{username}/orgs\"],\n        listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n        listMembers: [\"GET /orgs/{org}/members\"],\n        listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n        listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n        listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n        listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n        listSecurityManagerTeams: [\"GET /orgs/{org}/security-managers\"],\n        listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n        listWebhooks: [\"GET /orgs/{org}/hooks\"],\n        pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n        redeliverWebhookDelivery: [\n            \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n        ],\n        removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n        removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n        removeOutsideCollaborator: [\n            \"DELETE /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        removePublicMembershipForAuthenticatedUser: [\n            \"DELETE /orgs/{org}/public_members/{username}\",\n        ],\n        removeSecurityManagerTeam: [\n            \"DELETE /orgs/{org}/security-managers/teams/{team_slug}\",\n        ],\n        setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n        setPublicMembershipForAuthenticatedUser: [\n            \"PUT /orgs/{org}/public_members/{username}\",\n        ],\n        unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n        update: [\"PATCH /orgs/{org}\"],\n        updateCustomRole: [\"PATCH /orgs/{org}/custom_roles/{role_id}\"],\n        updateMembershipForAuthenticatedUser: [\n            \"PATCH /user/memberships/orgs/{org}\",\n        ],\n        updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n        updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"],\n    },\n    packages: {\n        deletePackageForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForUser: [\n            \"DELETE /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageVersionForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForUser: [\n            \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getAllPackageVersionsForAPackageOwnedByAnOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n            {},\n            { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] },\n        ],\n        getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n            {},\n            {\n                renamed: [\n                    \"packages\",\n                    \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\",\n                ],\n            },\n        ],\n        getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getPackageForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageVersionForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n        listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n        listPackagesForUser: [\"GET /users/{username}/packages\"],\n        restorePackageForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageForUser: [\n            \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageVersionForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForUser: [\n            \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n    },\n    projects: {\n        addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\n        createCard: [\"POST /projects/columns/{column_id}/cards\"],\n        createColumn: [\"POST /projects/{project_id}/columns\"],\n        createForAuthenticatedUser: [\"POST /user/projects\"],\n        createForOrg: [\"POST /orgs/{org}/projects\"],\n        createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\n        delete: [\"DELETE /projects/{project_id}\"],\n        deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\n        deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\n        get: [\"GET /projects/{project_id}\"],\n        getCard: [\"GET /projects/columns/cards/{card_id}\"],\n        getColumn: [\"GET /projects/columns/{column_id}\"],\n        getPermissionForUser: [\n            \"GET /projects/{project_id}/collaborators/{username}/permission\",\n        ],\n        listCards: [\"GET /projects/columns/{column_id}/cards\"],\n        listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\n        listColumns: [\"GET /projects/{project_id}/columns\"],\n        listForOrg: [\"GET /orgs/{org}/projects\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\n        listForUser: [\"GET /users/{username}/projects\"],\n        moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\n        moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\n        removeCollaborator: [\n            \"DELETE /projects/{project_id}/collaborators/{username}\",\n        ],\n        update: [\"PATCH /projects/{project_id}\"],\n        updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\n        updateColumn: [\"PATCH /projects/columns/{column_id}\"],\n    },\n    pulls: {\n        checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        create: [\"POST /repos/{owner}/{repo}/pulls\"],\n        createReplyForReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\",\n        ],\n        createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        createReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        deletePendingReview: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        deleteReviewComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n        dismissReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        getReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n        list: [\"GET /repos/{owner}/{repo}/pulls\"],\n        listCommentsForReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n        listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n        listRequestedReviewers: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        listReviewComments: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n        listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        removeRequestedReviewers: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        requestReviewers: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        submitReview: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        updateBranch: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\",\n        ],\n        updateReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        updateReviewComment: [\n            \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n    },\n    rateLimit: { get: [\"GET /rate_limit\"] },\n    reactions: {\n        createForCommitComment: [\n            \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n        ],\n        createForIssue: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n        ],\n        createForIssueComment: [\n            \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n        ],\n        createForPullRequestReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n        ],\n        createForRelease: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n        ],\n        createForTeamDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n        ],\n        createForTeamDiscussionInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n        ],\n        deleteForCommitComment: [\n            \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForIssue: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\",\n        ],\n        deleteForIssueComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForPullRequestComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForRelease: [\n            \"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\",\n        ],\n        deleteForTeamDiscussion: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\",\n        ],\n        deleteForTeamDiscussionComment: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\",\n        ],\n        listForCommitComment: [\n            \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n        ],\n        listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n        listForIssueComment: [\n            \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n        ],\n        listForPullRequestReviewComment: [\n            \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n        ],\n        listForRelease: [\n            \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n        ],\n        listForTeamDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n        ],\n        listForTeamDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n        ],\n    },\n    repos: {\n        acceptInvitation: [\n            \"PATCH /user/repository_invitations/{invitation_id}\",\n            {},\n            { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] },\n        ],\n        acceptInvitationForAuthenticatedUser: [\n            \"PATCH /user/repository_invitations/{invitation_id}\",\n        ],\n        addAppAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n        addStatusCheckContexts: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        addTeamAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        addUserAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n        checkVulnerabilityAlerts: [\n            \"GET /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\n        compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n        compareCommitsWithBasehead: [\n            \"GET /repos/{owner}/{repo}/compare/{basehead}\",\n        ],\n        createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n        createCommitComment: [\n            \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        createCommitSignatureProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n        createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n        createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n        createDeploymentBranchPolicy: [\n            \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n        ],\n        createDeploymentStatus: [\n            \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n        createForAuthenticatedUser: [\"POST /user/repos\"],\n        createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n        createInOrg: [\"POST /orgs/{org}/repos\"],\n        createOrUpdateEnvironment: [\n            \"PUT /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n        createPagesDeployment: [\"POST /repos/{owner}/{repo}/pages/deployment\"],\n        createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n        createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n        createTagProtection: [\"POST /repos/{owner}/{repo}/tags/protection\"],\n        createUsingTemplate: [\n            \"POST /repos/{template_owner}/{template_repo}/generate\",\n        ],\n        createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n        declineInvitation: [\n            \"DELETE /user/repository_invitations/{invitation_id}\",\n            {},\n            { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] },\n        ],\n        declineInvitationForAuthenticatedUser: [\n            \"DELETE /user/repository_invitations/{invitation_id}\",\n        ],\n        delete: [\"DELETE /repos/{owner}/{repo}\"],\n        deleteAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        deleteAdminBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        deleteAnEnvironment: [\n            \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n        deleteBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n        deleteCommitSignatureProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n        deleteDeployment: [\n            \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\",\n        ],\n        deleteDeploymentBranchPolicy: [\n            \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n        ],\n        deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n        deleteInvitation: [\n            \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n        deletePullRequestReviewProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n        deleteReleaseAsset: [\n            \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        deleteTagProtection: [\n            \"DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}\",\n        ],\n        deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        disableAutomatedSecurityFixes: [\n            \"DELETE /repos/{owner}/{repo}/automated-security-fixes\",\n        ],\n        disableLfsForRepo: [\"DELETE /repos/{owner}/{repo}/lfs\"],\n        disableVulnerabilityAlerts: [\n            \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        downloadArchive: [\n            \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n            {},\n            { renamed: [\"repos\", \"downloadZipballArchive\"] },\n        ],\n        downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n        downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n        enableAutomatedSecurityFixes: [\n            \"PUT /repos/{owner}/{repo}/automated-security-fixes\",\n        ],\n        enableLfsForRepo: [\"PUT /repos/{owner}/{repo}/lfs\"],\n        enableVulnerabilityAlerts: [\n            \"PUT /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        generateReleaseNotes: [\n            \"POST /repos/{owner}/{repo}/releases/generate-notes\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}\"],\n        getAccessRestrictions: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        getAdminBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n        getAllStatusCheckContexts: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n        ],\n        getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\n        getAppsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n        ],\n        getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n        getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n        getBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n        getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n        getCollaboratorPermissionLevel: [\n            \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\",\n        ],\n        getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n        getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n        getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n        getCommitSignatureProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n        getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n        getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n        getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n        getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n        getDeploymentBranchPolicy: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n        ],\n        getDeploymentStatus: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\",\n        ],\n        getEnvironment: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n        getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n        getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n        getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n        getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n        getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n        getPullRequestReviewProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n        getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n        getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n        getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n        getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n        getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n        getStatusChecksProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        getTeamsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n        ],\n        getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n        getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n        getUsersWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n        ],\n        getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n        getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        getWebhookConfigForRepo: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        getWebhookDelivery: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\",\n        ],\n        listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n        listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n        listBranchesForHeadCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\",\n        ],\n        listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n        listCommentsForCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n        listCommitStatusesForRef: [\n            \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n        listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n        listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n        listDeploymentBranchPolicies: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n        ],\n        listDeploymentStatuses: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n        listForAuthenticatedUser: [\"GET /user/repos\"],\n        listForOrg: [\"GET /orgs/{org}/repos\"],\n        listForUser: [\"GET /users/{username}/repos\"],\n        listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n        listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n        listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n        listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n        listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n        listPublic: [\"GET /repositories\"],\n        listPullRequestsAssociatedWithCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n        ],\n        listReleaseAssets: [\n            \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n        ],\n        listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n        listTagProtection: [\"GET /repos/{owner}/{repo}/tags/protection\"],\n        listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n        listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n        listWebhookDeliveries: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n        ],\n        listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n        merge: [\"POST /repos/{owner}/{repo}/merges\"],\n        mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n        pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n        redeliverWebhookDelivery: [\n            \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n        ],\n        removeAppAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        removeCollaborator: [\n            \"DELETE /repos/{owner}/{repo}/collaborators/{username}\",\n        ],\n        removeStatusCheckContexts: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        removeStatusCheckProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        removeTeamAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        removeUserAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n        replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\n        requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n        setAdminBranchProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        setAppAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        setStatusCheckContexts: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        setTeamAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        setUserAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n        transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n        update: [\"PATCH /repos/{owner}/{repo}\"],\n        updateBranchProtection: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n        updateDeploymentBranchPolicy: [\n            \"PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n        ],\n        updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n        updateInvitation: [\n            \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        updatePullRequestReviewProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n        updateReleaseAsset: [\n            \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        updateStatusCheckPotection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n            {},\n            { renamed: [\"repos\", \"updateStatusCheckProtection\"] },\n        ],\n        updateStatusCheckProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        updateWebhookConfigForRepo: [\n            \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        uploadReleaseAsset: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n            { baseUrl: \"https://uploads.github.com\" },\n        ],\n    },\n    search: {\n        code: [\"GET /search/code\"],\n        commits: [\"GET /search/commits\"],\n        issuesAndPullRequests: [\"GET /search/issues\"],\n        labels: [\"GET /search/labels\"],\n        repos: [\"GET /search/repositories\"],\n        topics: [\"GET /search/topics\"],\n        users: [\"GET /search/users\"],\n    },\n    secretScanning: {\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n        listAlertsForEnterprise: [\n            \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n        ],\n        listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n        listLocationsForAlert: [\n            \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n        ],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n    },\n    teams: {\n        addOrUpdateMembershipForUserInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        addOrUpdateProjectPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        addOrUpdateRepoPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        checkPermissionsForProjectInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        checkPermissionsForRepoInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        create: [\"POST /orgs/{org}/teams\"],\n        createDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n        deleteDiscussionCommentInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        deleteDiscussionInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n        getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n        getDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        getDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        getMembershipForUserInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        list: [\"GET /orgs/{org}/teams\"],\n        listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n        listDiscussionCommentsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n        listForAuthenticatedUser: [\"GET /user/teams\"],\n        listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n        listPendingInvitationsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n        ],\n        listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\n        listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n        removeMembershipForUserInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        removeProjectInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        removeRepoInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        updateDiscussionCommentInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        updateDiscussionInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"],\n    },\n    users: {\n        addEmailForAuthenticated: [\n            \"POST /user/emails\",\n            {},\n            { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] },\n        ],\n        addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n        block: [\"PUT /user/blocks/{username}\"],\n        checkBlocked: [\"GET /user/blocks/{username}\"],\n        checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n        checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n        createGpgKeyForAuthenticated: [\n            \"POST /user/gpg_keys\",\n            {},\n            { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] },\n        ],\n        createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n        createPublicSshKeyForAuthenticated: [\n            \"POST /user/keys\",\n            {},\n            { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] },\n        ],\n        createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n        createSshSigningKeyForAuthenticatedUser: [\"POST /user/ssh_signing_keys\"],\n        deleteEmailForAuthenticated: [\n            \"DELETE /user/emails\",\n            {},\n            { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] },\n        ],\n        deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n        deleteGpgKeyForAuthenticated: [\n            \"DELETE /user/gpg_keys/{gpg_key_id}\",\n            {},\n            { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] },\n        ],\n        deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n        deletePublicSshKeyForAuthenticated: [\n            \"DELETE /user/keys/{key_id}\",\n            {},\n            { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] },\n        ],\n        deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n        deleteSshSigningKeyForAuthenticatedUser: [\n            \"DELETE /user/ssh_signing_keys/{ssh_signing_key_id}\",\n        ],\n        follow: [\"PUT /user/following/{username}\"],\n        getAuthenticated: [\"GET /user\"],\n        getByUsername: [\"GET /users/{username}\"],\n        getContextForUser: [\"GET /users/{username}/hovercard\"],\n        getGpgKeyForAuthenticated: [\n            \"GET /user/gpg_keys/{gpg_key_id}\",\n            {},\n            { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] },\n        ],\n        getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n        getPublicSshKeyForAuthenticated: [\n            \"GET /user/keys/{key_id}\",\n            {},\n            { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] },\n        ],\n        getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n        getSshSigningKeyForAuthenticatedUser: [\n            \"GET /user/ssh_signing_keys/{ssh_signing_key_id}\",\n        ],\n        list: [\"GET /users\"],\n        listBlockedByAuthenticated: [\n            \"GET /user/blocks\",\n            {},\n            { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] },\n        ],\n        listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n        listEmailsForAuthenticated: [\n            \"GET /user/emails\",\n            {},\n            { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] },\n        ],\n        listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n        listFollowedByAuthenticated: [\n            \"GET /user/following\",\n            {},\n            { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] },\n        ],\n        listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n        listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n        listFollowersForUser: [\"GET /users/{username}/followers\"],\n        listFollowingForUser: [\"GET /users/{username}/following\"],\n        listGpgKeysForAuthenticated: [\n            \"GET /user/gpg_keys\",\n            {},\n            { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] },\n        ],\n        listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n        listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n        listPublicEmailsForAuthenticated: [\n            \"GET /user/public_emails\",\n            {},\n            { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] },\n        ],\n        listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n        listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n        listPublicSshKeysForAuthenticated: [\n            \"GET /user/keys\",\n            {},\n            { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] },\n        ],\n        listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n        listSshSigningKeysForAuthenticatedUser: [\"GET /user/ssh_signing_keys\"],\n        listSshSigningKeysForUser: [\"GET /users/{username}/ssh_signing_keys\"],\n        setPrimaryEmailVisibilityForAuthenticated: [\n            \"PATCH /user/email/visibility\",\n            {},\n            { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] },\n        ],\n        setPrimaryEmailVisibilityForAuthenticatedUser: [\n            \"PATCH /user/email/visibility\",\n        ],\n        unblock: [\"DELETE /user/blocks/{username}\"],\n        unfollow: [\"DELETE /user/following/{username}\"],\n        updateAuthenticated: [\"PATCH /user\"],\n    },\n};\nexport default Endpoints;\n", "export const VERSION = \"6.7.0\";\n", "export function endpointsToMethods(octokit, endpointsMap) {\n    const newMethods = {};\n    for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n        for (const [methodName, endpoint] of Object.entries(endpoints)) {\n            const [route, defaults, decorations] = endpoint;\n            const [method, url] = route.split(/ /);\n            const endpointDefaults = Object.assign({ method, url }, defaults);\n            if (!newMethods[scope]) {\n                newMethods[scope] = {};\n            }\n            const scopeMethods = newMethods[scope];\n            if (decorations) {\n                scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n                continue;\n            }\n            scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n        }\n    }\n    return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n    const requestWithDefaults = octokit.request.defaults(defaults);\n    /* istanbul ignore next */\n    function withDecorations(...args) {\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        let options = requestWithDefaults.endpoint.merge(...args);\n        // There are currently no other decorations than `.mapToData`\n        if (decorations.mapToData) {\n            options = Object.assign({}, options, {\n                data: options[decorations.mapToData],\n                [decorations.mapToData]: undefined,\n            });\n            return requestWithDefaults(options);\n        }\n        if (decorations.renamed) {\n            const [newScope, newMethodName] = decorations.renamed;\n            octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n        }\n        if (decorations.deprecated) {\n            octokit.log.warn(decorations.deprecated);\n        }\n        if (decorations.renamedParameters) {\n            // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n            const options = requestWithDefaults.endpoint.merge(...args);\n            for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n                if (name in options) {\n                    octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n                    if (!(alias in options)) {\n                        options[alias] = options[name];\n                    }\n                    delete options[name];\n                }\n            }\n            return requestWithDefaults(options);\n        }\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        return requestWithDefaults(...args);\n    }\n    return Object.assign(withDecorations, requestWithDefaults);\n}\n", "import ENDPOINTS from \"./generated/endpoints\";\nimport { VERSION } from \"./version\";\nimport { endpointsToMethods } from \"./endpoints-to-methods\";\nexport function restEndpointMethods(octokit) {\n    const api = endpointsToMethods(octokit, ENDPOINTS);\n    return {\n        rest: api,\n    };\n}\nrestEndpointMethods.VERSION = VERSION;\nexport function legacyRestEndpointMethods(octokit) {\n    const api = endpointsToMethods(octokit, ENDPOINTS);\n    return {\n        ...api,\n        rest: api,\n    };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\n", "/**\n  * This file contains the Bottleneck library (MIT), compiled to ES2017, and without Clustering support.\n  * https://github.com/SGrondin/bottleneck\n  */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Bottleneck = factory());\n}(this, (function () { 'use strict';\n\n\tvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\tfunction getCjsExportFromNamespace (n) {\n\t\treturn n && n['default'] || n;\n\t}\n\n\tvar load = function(received, defaults, onto = {}) {\n\t  var k, ref, v;\n\t  for (k in defaults) {\n\t    v = defaults[k];\n\t    onto[k] = (ref = received[k]) != null ? ref : v;\n\t  }\n\t  return onto;\n\t};\n\n\tvar overwrite = function(received, defaults, onto = {}) {\n\t  var k, v;\n\t  for (k in received) {\n\t    v = received[k];\n\t    if (defaults[k] !== void 0) {\n\t      onto[k] = v;\n\t    }\n\t  }\n\t  return onto;\n\t};\n\n\tvar parser = {\n\t\tload: load,\n\t\toverwrite: overwrite\n\t};\n\n\tvar DLList;\n\n\tDLList = class DLList {\n\t  constructor(incr, decr) {\n\t    this.incr = incr;\n\t    this.decr = decr;\n\t    this._first = null;\n\t    this._last = null;\n\t    this.length = 0;\n\t  }\n\n\t  push(value) {\n\t    var node;\n\t    this.length++;\n\t    if (typeof this.incr === \"function\") {\n\t      this.incr();\n\t    }\n\t    node = {\n\t      value,\n\t      prev: this._last,\n\t      next: null\n\t    };\n\t    if (this._last != null) {\n\t      this._last.next = node;\n\t      this._last = node;\n\t    } else {\n\t      this._first = this._last = node;\n\t    }\n\t    return void 0;\n\t  }\n\n\t  shift() {\n\t    var value;\n\t    if (this._first == null) {\n\t      return;\n\t    } else {\n\t      this.length--;\n\t      if (typeof this.decr === \"function\") {\n\t        this.decr();\n\t      }\n\t    }\n\t    value = this._first.value;\n\t    if ((this._first = this._first.next) != null) {\n\t      this._first.prev = null;\n\t    } else {\n\t      this._last = null;\n\t    }\n\t    return value;\n\t  }\n\n\t  first() {\n\t    if (this._first != null) {\n\t      return this._first.value;\n\t    }\n\t  }\n\n\t  getArray() {\n\t    var node, ref, results;\n\t    node = this._first;\n\t    results = [];\n\t    while (node != null) {\n\t      results.push((ref = node, node = node.next, ref.value));\n\t    }\n\t    return results;\n\t  }\n\n\t  forEachShift(cb) {\n\t    var node;\n\t    node = this.shift();\n\t    while (node != null) {\n\t      (cb(node), node = this.shift());\n\t    }\n\t    return void 0;\n\t  }\n\n\t  debug() {\n\t    var node, ref, ref1, ref2, results;\n\t    node = this._first;\n\t    results = [];\n\t    while (node != null) {\n\t      results.push((ref = node, node = node.next, {\n\t        value: ref.value,\n\t        prev: (ref1 = ref.prev) != null ? ref1.value : void 0,\n\t        next: (ref2 = ref.next) != null ? ref2.value : void 0\n\t      }));\n\t    }\n\t    return results;\n\t  }\n\n\t};\n\n\tvar DLList_1 = DLList;\n\n\tvar Events;\n\n\tEvents = class Events {\n\t  constructor(instance) {\n\t    this.instance = instance;\n\t    this._events = {};\n\t    if ((this.instance.on != null) || (this.instance.once != null) || (this.instance.removeAllListeners != null)) {\n\t      throw new Error(\"An Emitter already exists for this object\");\n\t    }\n\t    this.instance.on = (name, cb) => {\n\t      return this._addListener(name, \"many\", cb);\n\t    };\n\t    this.instance.once = (name, cb) => {\n\t      return this._addListener(name, \"once\", cb);\n\t    };\n\t    this.instance.removeAllListeners = (name = null) => {\n\t      if (name != null) {\n\t        return delete this._events[name];\n\t      } else {\n\t        return this._events = {};\n\t      }\n\t    };\n\t  }\n\n\t  _addListener(name, status, cb) {\n\t    var base;\n\t    if ((base = this._events)[name] == null) {\n\t      base[name] = [];\n\t    }\n\t    this._events[name].push({cb, status});\n\t    return this.instance;\n\t  }\n\n\t  listenerCount(name) {\n\t    if (this._events[name] != null) {\n\t      return this._events[name].length;\n\t    } else {\n\t      return 0;\n\t    }\n\t  }\n\n\t  async trigger(name, ...args) {\n\t    var e, promises;\n\t    try {\n\t      if (name !== \"debug\") {\n\t        this.trigger(\"debug\", `Event triggered: ${name}`, args);\n\t      }\n\t      if (this._events[name] == null) {\n\t        return;\n\t      }\n\t      this._events[name] = this._events[name].filter(function(listener) {\n\t        return listener.status !== \"none\";\n\t      });\n\t      promises = this._events[name].map(async(listener) => {\n\t        var e, returned;\n\t        if (listener.status === \"none\") {\n\t          return;\n\t        }\n\t        if (listener.status === \"once\") {\n\t          listener.status = \"none\";\n\t        }\n\t        try {\n\t          returned = typeof listener.cb === \"function\" ? listener.cb(...args) : void 0;\n\t          if (typeof (returned != null ? returned.then : void 0) === \"function\") {\n\t            return (await returned);\n\t          } else {\n\t            return returned;\n\t          }\n\t        } catch (error) {\n\t          e = error;\n\t          {\n\t            this.trigger(\"error\", e);\n\t          }\n\t          return null;\n\t        }\n\t      });\n\t      return ((await Promise.all(promises))).find(function(x) {\n\t        return x != null;\n\t      });\n\t    } catch (error) {\n\t      e = error;\n\t      {\n\t        this.trigger(\"error\", e);\n\t      }\n\t      return null;\n\t    }\n\t  }\n\n\t};\n\n\tvar Events_1 = Events;\n\n\tvar DLList$1, Events$1, Queues;\n\n\tDLList$1 = DLList_1;\n\n\tEvents$1 = Events_1;\n\n\tQueues = class Queues {\n\t  constructor(num_priorities) {\n\t    var i;\n\t    this.Events = new Events$1(this);\n\t    this._length = 0;\n\t    this._lists = (function() {\n\t      var j, ref, results;\n\t      results = [];\n\t      for (i = j = 1, ref = num_priorities; (1 <= ref ? j <= ref : j >= ref); i = 1 <= ref ? ++j : --j) {\n\t        results.push(new DLList$1((() => {\n\t          return this.incr();\n\t        }), (() => {\n\t          return this.decr();\n\t        })));\n\t      }\n\t      return results;\n\t    }).call(this);\n\t  }\n\n\t  incr() {\n\t    if (this._length++ === 0) {\n\t      return this.Events.trigger(\"leftzero\");\n\t    }\n\t  }\n\n\t  decr() {\n\t    if (--this._length === 0) {\n\t      return this.Events.trigger(\"zero\");\n\t    }\n\t  }\n\n\t  push(job) {\n\t    return this._lists[job.options.priority].push(job);\n\t  }\n\n\t  queued(priority) {\n\t    if (priority != null) {\n\t      return this._lists[priority].length;\n\t    } else {\n\t      return this._length;\n\t    }\n\t  }\n\n\t  shiftAll(fn) {\n\t    return this._lists.forEach(function(list) {\n\t      return list.forEachShift(fn);\n\t    });\n\t  }\n\n\t  getFirst(arr = this._lists) {\n\t    var j, len, list;\n\t    for (j = 0, len = arr.length; j < len; j++) {\n\t      list = arr[j];\n\t      if (list.length > 0) {\n\t        return list;\n\t      }\n\t    }\n\t    return [];\n\t  }\n\n\t  shiftLastFrom(priority) {\n\t    return this.getFirst(this._lists.slice(priority).reverse()).shift();\n\t  }\n\n\t};\n\n\tvar Queues_1 = Queues;\n\n\tvar BottleneckError;\n\n\tBottleneckError = class BottleneckError extends Error {};\n\n\tvar BottleneckError_1 = BottleneckError;\n\n\tvar BottleneckError$1, DEFAULT_PRIORITY, Job, NUM_PRIORITIES, parser$1;\n\n\tNUM_PRIORITIES = 10;\n\n\tDEFAULT_PRIORITY = 5;\n\n\tparser$1 = parser;\n\n\tBottleneckError$1 = BottleneckError_1;\n\n\tJob = class Job {\n\t  constructor(task, args, options, jobDefaults, rejectOnDrop, Events, _states, Promise) {\n\t    this.task = task;\n\t    this.args = args;\n\t    this.rejectOnDrop = rejectOnDrop;\n\t    this.Events = Events;\n\t    this._states = _states;\n\t    this.Promise = Promise;\n\t    this.options = parser$1.load(options, jobDefaults);\n\t    this.options.priority = this._sanitizePriority(this.options.priority);\n\t    if (this.options.id === jobDefaults.id) {\n\t      this.options.id = `${this.options.id}-${this._randomIndex()}`;\n\t    }\n\t    this.promise = new this.Promise((_resolve, _reject) => {\n\t      this._resolve = _resolve;\n\t      this._reject = _reject;\n\t    });\n\t    this.retryCount = 0;\n\t  }\n\n\t  _sanitizePriority(priority) {\n\t    var sProperty;\n\t    sProperty = ~~priority !== priority ? DEFAULT_PRIORITY : priority;\n\t    if (sProperty < 0) {\n\t      return 0;\n\t    } else if (sProperty > NUM_PRIORITIES - 1) {\n\t      return NUM_PRIORITIES - 1;\n\t    } else {\n\t      return sProperty;\n\t    }\n\t  }\n\n\t  _randomIndex() {\n\t    return Math.random().toString(36).slice(2);\n\t  }\n\n\t  doDrop({error, message = \"This job has been dropped by Bottleneck\"} = {}) {\n\t    if (this._states.remove(this.options.id)) {\n\t      if (this.rejectOnDrop) {\n\t        this._reject(error != null ? error : new BottleneckError$1(message));\n\t      }\n\t      this.Events.trigger(\"dropped\", {args: this.args, options: this.options, task: this.task, promise: this.promise});\n\t      return true;\n\t    } else {\n\t      return false;\n\t    }\n\t  }\n\n\t  _assertStatus(expected) {\n\t    var status;\n\t    status = this._states.jobStatus(this.options.id);\n\t    if (!(status === expected || (expected === \"DONE\" && status === null))) {\n\t      throw new BottleneckError$1(`Invalid job status ${status}, expected ${expected}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`);\n\t    }\n\t  }\n\n\t  doReceive() {\n\t    this._states.start(this.options.id);\n\t    return this.Events.trigger(\"received\", {args: this.args, options: this.options});\n\t  }\n\n\t  doQueue(reachedHWM, blocked) {\n\t    this._assertStatus(\"RECEIVED\");\n\t    this._states.next(this.options.id);\n\t    return this.Events.trigger(\"queued\", {args: this.args, options: this.options, reachedHWM, blocked});\n\t  }\n\n\t  doRun() {\n\t    if (this.retryCount === 0) {\n\t      this._assertStatus(\"QUEUED\");\n\t      this._states.next(this.options.id);\n\t    } else {\n\t      this._assertStatus(\"EXECUTING\");\n\t    }\n\t    return this.Events.trigger(\"scheduled\", {args: this.args, options: this.options});\n\t  }\n\n\t  async doExecute(chained, clearGlobalState, run, free) {\n\t    var error, eventInfo, passed;\n\t    if (this.retryCount === 0) {\n\t      this._assertStatus(\"RUNNING\");\n\t      this._states.next(this.options.id);\n\t    } else {\n\t      this._assertStatus(\"EXECUTING\");\n\t    }\n\t    eventInfo = {args: this.args, options: this.options, retryCount: this.retryCount};\n\t    this.Events.trigger(\"executing\", eventInfo);\n\t    try {\n\t      passed = (await (chained != null ? chained.schedule(this.options, this.task, ...this.args) : this.task(...this.args)));\n\t      if (clearGlobalState()) {\n\t        this.doDone(eventInfo);\n\t        await free(this.options, eventInfo);\n\t        this._assertStatus(\"DONE\");\n\t        return this._resolve(passed);\n\t      }\n\t    } catch (error1) {\n\t      error = error1;\n\t      return this._onFailure(error, eventInfo, clearGlobalState, run, free);\n\t    }\n\t  }\n\n\t  doExpire(clearGlobalState, run, free) {\n\t    var error, eventInfo;\n\t    if (this._states.jobStatus(this.options.id === \"RUNNING\")) {\n\t      this._states.next(this.options.id);\n\t    }\n\t    this._assertStatus(\"EXECUTING\");\n\t    eventInfo = {args: this.args, options: this.options, retryCount: this.retryCount};\n\t    error = new BottleneckError$1(`This job timed out after ${this.options.expiration} ms.`);\n\t    return this._onFailure(error, eventInfo, clearGlobalState, run, free);\n\t  }\n\n\t  async _onFailure(error, eventInfo, clearGlobalState, run, free) {\n\t    var retry, retryAfter;\n\t    if (clearGlobalState()) {\n\t      retry = (await this.Events.trigger(\"failed\", error, eventInfo));\n\t      if (retry != null) {\n\t        retryAfter = ~~retry;\n\t        this.Events.trigger(\"retry\", `Retrying ${this.options.id} after ${retryAfter} ms`, eventInfo);\n\t        this.retryCount++;\n\t        return run(retryAfter);\n\t      } else {\n\t        this.doDone(eventInfo);\n\t        await free(this.options, eventInfo);\n\t        this._assertStatus(\"DONE\");\n\t        return this._reject(error);\n\t      }\n\t    }\n\t  }\n\n\t  doDone(eventInfo) {\n\t    this._assertStatus(\"EXECUTING\");\n\t    this._states.next(this.options.id);\n\t    return this.Events.trigger(\"done\", eventInfo);\n\t  }\n\n\t};\n\n\tvar Job_1 = Job;\n\n\tvar BottleneckError$2, LocalDatastore, parser$2;\n\n\tparser$2 = parser;\n\n\tBottleneckError$2 = BottleneckError_1;\n\n\tLocalDatastore = class LocalDatastore {\n\t  constructor(instance, storeOptions, storeInstanceOptions) {\n\t    this.instance = instance;\n\t    this.storeOptions = storeOptions;\n\t    this.clientId = this.instance._randomIndex();\n\t    parser$2.load(storeInstanceOptions, storeInstanceOptions, this);\n\t    this._nextRequest = this._lastReservoirRefresh = this._lastReservoirIncrease = Date.now();\n\t    this._running = 0;\n\t    this._done = 0;\n\t    this._unblockTime = 0;\n\t    this.ready = this.Promise.resolve();\n\t    this.clients = {};\n\t    this._startHeartbeat();\n\t  }\n\n\t  _startHeartbeat() {\n\t    var base;\n\t    if ((this.heartbeat == null) && (((this.storeOptions.reservoirRefreshInterval != null) && (this.storeOptions.reservoirRefreshAmount != null)) || ((this.storeOptions.reservoirIncreaseInterval != null) && (this.storeOptions.reservoirIncreaseAmount != null)))) {\n\t      return typeof (base = (this.heartbeat = setInterval(() => {\n\t        var amount, incr, maximum, now, reservoir;\n\t        now = Date.now();\n\t        if ((this.storeOptions.reservoirRefreshInterval != null) && now >= this._lastReservoirRefresh + this.storeOptions.reservoirRefreshInterval) {\n\t          this._lastReservoirRefresh = now;\n\t          this.storeOptions.reservoir = this.storeOptions.reservoirRefreshAmount;\n\t          this.instance._drainAll(this.computeCapacity());\n\t        }\n\t        if ((this.storeOptions.reservoirIncreaseInterval != null) && now >= this._lastReservoirIncrease + this.storeOptions.reservoirIncreaseInterval) {\n\t          ({\n\t            reservoirIncreaseAmount: amount,\n\t            reservoirIncreaseMaximum: maximum,\n\t            reservoir\n\t          } = this.storeOptions);\n\t          this._lastReservoirIncrease = now;\n\t          incr = maximum != null ? Math.min(amount, maximum - reservoir) : amount;\n\t          if (incr > 0) {\n\t            this.storeOptions.reservoir += incr;\n\t            return this.instance._drainAll(this.computeCapacity());\n\t          }\n\t        }\n\t      }, this.heartbeatInterval))).unref === \"function\" ? base.unref() : void 0;\n\t    } else {\n\t      return clearInterval(this.heartbeat);\n\t    }\n\t  }\n\n\t  async __publish__(message) {\n\t    await this.yieldLoop();\n\t    return this.instance.Events.trigger(\"message\", message.toString());\n\t  }\n\n\t  async __disconnect__(flush) {\n\t    await this.yieldLoop();\n\t    clearInterval(this.heartbeat);\n\t    return this.Promise.resolve();\n\t  }\n\n\t  yieldLoop(t = 0) {\n\t    return new this.Promise(function(resolve, reject) {\n\t      return setTimeout(resolve, t);\n\t    });\n\t  }\n\n\t  computePenalty() {\n\t    var ref;\n\t    return (ref = this.storeOptions.penalty) != null ? ref : (15 * this.storeOptions.minTime) || 5000;\n\t  }\n\n\t  async __updateSettings__(options) {\n\t    await this.yieldLoop();\n\t    parser$2.overwrite(options, options, this.storeOptions);\n\t    this._startHeartbeat();\n\t    this.instance._drainAll(this.computeCapacity());\n\t    return true;\n\t  }\n\n\t  async __running__() {\n\t    await this.yieldLoop();\n\t    return this._running;\n\t  }\n\n\t  async __queued__() {\n\t    await this.yieldLoop();\n\t    return this.instance.queued();\n\t  }\n\n\t  async __done__() {\n\t    await this.yieldLoop();\n\t    return this._done;\n\t  }\n\n\t  async __groupCheck__(time) {\n\t    await this.yieldLoop();\n\t    return (this._nextRequest + this.timeout) < time;\n\t  }\n\n\t  computeCapacity() {\n\t    var maxConcurrent, reservoir;\n\t    ({maxConcurrent, reservoir} = this.storeOptions);\n\t    if ((maxConcurrent != null) && (reservoir != null)) {\n\t      return Math.min(maxConcurrent - this._running, reservoir);\n\t    } else if (maxConcurrent != null) {\n\t      return maxConcurrent - this._running;\n\t    } else if (reservoir != null) {\n\t      return reservoir;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\n\t  conditionsCheck(weight) {\n\t    var capacity;\n\t    capacity = this.computeCapacity();\n\t    return (capacity == null) || weight <= capacity;\n\t  }\n\n\t  async __incrementReservoir__(incr) {\n\t    var reservoir;\n\t    await this.yieldLoop();\n\t    reservoir = this.storeOptions.reservoir += incr;\n\t    this.instance._drainAll(this.computeCapacity());\n\t    return reservoir;\n\t  }\n\n\t  async __currentReservoir__() {\n\t    await this.yieldLoop();\n\t    return this.storeOptions.reservoir;\n\t  }\n\n\t  isBlocked(now) {\n\t    return this._unblockTime >= now;\n\t  }\n\n\t  check(weight, now) {\n\t    return this.conditionsCheck(weight) && (this._nextRequest - now) <= 0;\n\t  }\n\n\t  async __check__(weight) {\n\t    var now;\n\t    await this.yieldLoop();\n\t    now = Date.now();\n\t    return this.check(weight, now);\n\t  }\n\n\t  async __register__(index, weight, expiration) {\n\t    var now, wait;\n\t    await this.yieldLoop();\n\t    now = Date.now();\n\t    if (this.conditionsCheck(weight)) {\n\t      this._running += weight;\n\t      if (this.storeOptions.reservoir != null) {\n\t        this.storeOptions.reservoir -= weight;\n\t      }\n\t      wait = Math.max(this._nextRequest - now, 0);\n\t      this._nextRequest = now + wait + this.storeOptions.minTime;\n\t      return {\n\t        success: true,\n\t        wait,\n\t        reservoir: this.storeOptions.reservoir\n\t      };\n\t    } else {\n\t      return {\n\t        success: false\n\t      };\n\t    }\n\t  }\n\n\t  strategyIsBlock() {\n\t    return this.storeOptions.strategy === 3;\n\t  }\n\n\t  async __submit__(queueLength, weight) {\n\t    var blocked, now, reachedHWM;\n\t    await this.yieldLoop();\n\t    if ((this.storeOptions.maxConcurrent != null) && weight > this.storeOptions.maxConcurrent) {\n\t      throw new BottleneckError$2(`Impossible to add a job having a weight of ${weight} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);\n\t    }\n\t    now = Date.now();\n\t    reachedHWM = (this.storeOptions.highWater != null) && queueLength === this.storeOptions.highWater && !this.check(weight, now);\n\t    blocked = this.strategyIsBlock() && (reachedHWM || this.isBlocked(now));\n\t    if (blocked) {\n\t      this._unblockTime = now + this.computePenalty();\n\t      this._nextRequest = this._unblockTime + this.storeOptions.minTime;\n\t      this.instance._dropAllQueued();\n\t    }\n\t    return {\n\t      reachedHWM,\n\t      blocked,\n\t      strategy: this.storeOptions.strategy\n\t    };\n\t  }\n\n\t  async __free__(index, weight) {\n\t    await this.yieldLoop();\n\t    this._running -= weight;\n\t    this._done += weight;\n\t    this.instance._drainAll(this.computeCapacity());\n\t    return {\n\t      running: this._running\n\t    };\n\t  }\n\n\t};\n\n\tvar LocalDatastore_1 = LocalDatastore;\n\n\tvar BottleneckError$3, States;\n\n\tBottleneckError$3 = BottleneckError_1;\n\n\tStates = class States {\n\t  constructor(status1) {\n\t    this.status = status1;\n\t    this._jobs = {};\n\t    this.counts = this.status.map(function() {\n\t      return 0;\n\t    });\n\t  }\n\n\t  next(id) {\n\t    var current, next;\n\t    current = this._jobs[id];\n\t    next = current + 1;\n\t    if ((current != null) && next < this.status.length) {\n\t      this.counts[current]--;\n\t      this.counts[next]++;\n\t      return this._jobs[id]++;\n\t    } else if (current != null) {\n\t      this.counts[current]--;\n\t      return delete this._jobs[id];\n\t    }\n\t  }\n\n\t  start(id) {\n\t    var initial;\n\t    initial = 0;\n\t    this._jobs[id] = initial;\n\t    return this.counts[initial]++;\n\t  }\n\n\t  remove(id) {\n\t    var current;\n\t    current = this._jobs[id];\n\t    if (current != null) {\n\t      this.counts[current]--;\n\t      delete this._jobs[id];\n\t    }\n\t    return current != null;\n\t  }\n\n\t  jobStatus(id) {\n\t    var ref;\n\t    return (ref = this.status[this._jobs[id]]) != null ? ref : null;\n\t  }\n\n\t  statusJobs(status) {\n\t    var k, pos, ref, results, v;\n\t    if (status != null) {\n\t      pos = this.status.indexOf(status);\n\t      if (pos < 0) {\n\t        throw new BottleneckError$3(`status must be one of ${this.status.join(', ')}`);\n\t      }\n\t      ref = this._jobs;\n\t      results = [];\n\t      for (k in ref) {\n\t        v = ref[k];\n\t        if (v === pos) {\n\t          results.push(k);\n\t        }\n\t      }\n\t      return results;\n\t    } else {\n\t      return Object.keys(this._jobs);\n\t    }\n\t  }\n\n\t  statusCounts() {\n\t    return this.counts.reduce(((acc, v, i) => {\n\t      acc[this.status[i]] = v;\n\t      return acc;\n\t    }), {});\n\t  }\n\n\t};\n\n\tvar States_1 = States;\n\n\tvar DLList$2, Sync;\n\n\tDLList$2 = DLList_1;\n\n\tSync = class Sync {\n\t  constructor(name, Promise) {\n\t    this.schedule = this.schedule.bind(this);\n\t    this.name = name;\n\t    this.Promise = Promise;\n\t    this._running = 0;\n\t    this._queue = new DLList$2();\n\t  }\n\n\t  isEmpty() {\n\t    return this._queue.length === 0;\n\t  }\n\n\t  async _tryToRun() {\n\t    var args, cb, error, reject, resolve, returned, task;\n\t    if ((this._running < 1) && this._queue.length > 0) {\n\t      this._running++;\n\t      ({task, args, resolve, reject} = this._queue.shift());\n\t      cb = (await (async function() {\n\t        try {\n\t          returned = (await task(...args));\n\t          return function() {\n\t            return resolve(returned);\n\t          };\n\t        } catch (error1) {\n\t          error = error1;\n\t          return function() {\n\t            return reject(error);\n\t          };\n\t        }\n\t      })());\n\t      this._running--;\n\t      this._tryToRun();\n\t      return cb();\n\t    }\n\t  }\n\n\t  schedule(task, ...args) {\n\t    var promise, reject, resolve;\n\t    resolve = reject = null;\n\t    promise = new this.Promise(function(_resolve, _reject) {\n\t      resolve = _resolve;\n\t      return reject = _reject;\n\t    });\n\t    this._queue.push({task, args, resolve, reject});\n\t    this._tryToRun();\n\t    return promise;\n\t  }\n\n\t};\n\n\tvar Sync_1 = Sync;\n\n\tvar version = \"2.19.5\";\n\tvar version$1 = {\n\t\tversion: version\n\t};\n\n\tvar version$2 = /*#__PURE__*/Object.freeze({\n\t\tversion: version,\n\t\tdefault: version$1\n\t});\n\n\tvar require$$2 = () => console.log('You must import the full version of Bottleneck in order to use this feature.');\n\n\tvar require$$3 = () => console.log('You must import the full version of Bottleneck in order to use this feature.');\n\n\tvar require$$4 = () => console.log('You must import the full version of Bottleneck in order to use this feature.');\n\n\tvar Events$2, Group, IORedisConnection$1, RedisConnection$1, Scripts$1, parser$3;\n\n\tparser$3 = parser;\n\n\tEvents$2 = Events_1;\n\n\tRedisConnection$1 = require$$2;\n\n\tIORedisConnection$1 = require$$3;\n\n\tScripts$1 = require$$4;\n\n\tGroup = (function() {\n\t  class Group {\n\t    constructor(limiterOptions = {}) {\n\t      this.deleteKey = this.deleteKey.bind(this);\n\t      this.limiterOptions = limiterOptions;\n\t      parser$3.load(this.limiterOptions, this.defaults, this);\n\t      this.Events = new Events$2(this);\n\t      this.instances = {};\n\t      this.Bottleneck = Bottleneck_1;\n\t      this._startAutoCleanup();\n\t      this.sharedConnection = this.connection != null;\n\t      if (this.connection == null) {\n\t        if (this.limiterOptions.datastore === \"redis\") {\n\t          this.connection = new RedisConnection$1(Object.assign({}, this.limiterOptions, {Events: this.Events}));\n\t        } else if (this.limiterOptions.datastore === \"ioredis\") {\n\t          this.connection = new IORedisConnection$1(Object.assign({}, this.limiterOptions, {Events: this.Events}));\n\t        }\n\t      }\n\t    }\n\n\t    key(key = \"\") {\n\t      var ref;\n\t      return (ref = this.instances[key]) != null ? ref : (() => {\n\t        var limiter;\n\t        limiter = this.instances[key] = new this.Bottleneck(Object.assign(this.limiterOptions, {\n\t          id: `${this.id}-${key}`,\n\t          timeout: this.timeout,\n\t          connection: this.connection\n\t        }));\n\t        this.Events.trigger(\"created\", limiter, key);\n\t        return limiter;\n\t      })();\n\t    }\n\n\t    async deleteKey(key = \"\") {\n\t      var deleted, instance;\n\t      instance = this.instances[key];\n\t      if (this.connection) {\n\t        deleted = (await this.connection.__runCommand__(['del', ...Scripts$1.allKeys(`${this.id}-${key}`)]));\n\t      }\n\t      if (instance != null) {\n\t        delete this.instances[key];\n\t        await instance.disconnect();\n\t      }\n\t      return (instance != null) || deleted > 0;\n\t    }\n\n\t    limiters() {\n\t      var k, ref, results, v;\n\t      ref = this.instances;\n\t      results = [];\n\t      for (k in ref) {\n\t        v = ref[k];\n\t        results.push({\n\t          key: k,\n\t          limiter: v\n\t        });\n\t      }\n\t      return results;\n\t    }\n\n\t    keys() {\n\t      return Object.keys(this.instances);\n\t    }\n\n\t    async clusterKeys() {\n\t      var cursor, end, found, i, k, keys, len, next, start;\n\t      if (this.connection == null) {\n\t        return this.Promise.resolve(this.keys());\n\t      }\n\t      keys = [];\n\t      cursor = null;\n\t      start = `b_${this.id}-`.length;\n\t      end = \"_settings\".length;\n\t      while (cursor !== 0) {\n\t        [next, found] = (await this.connection.__runCommand__([\"scan\", cursor != null ? cursor : 0, \"match\", `b_${this.id}-*_settings`, \"count\", 10000]));\n\t        cursor = ~~next;\n\t        for (i = 0, len = found.length; i < len; i++) {\n\t          k = found[i];\n\t          keys.push(k.slice(start, -end));\n\t        }\n\t      }\n\t      return keys;\n\t    }\n\n\t    _startAutoCleanup() {\n\t      var base;\n\t      clearInterval(this.interval);\n\t      return typeof (base = (this.interval = setInterval(async() => {\n\t        var e, k, ref, results, time, v;\n\t        time = Date.now();\n\t        ref = this.instances;\n\t        results = [];\n\t        for (k in ref) {\n\t          v = ref[k];\n\t          try {\n\t            if ((await v._store.__groupCheck__(time))) {\n\t              results.push(this.deleteKey(k));\n\t            } else {\n\t              results.push(void 0);\n\t            }\n\t          } catch (error) {\n\t            e = error;\n\t            results.push(v.Events.trigger(\"error\", e));\n\t          }\n\t        }\n\t        return results;\n\t      }, this.timeout / 2))).unref === \"function\" ? base.unref() : void 0;\n\t    }\n\n\t    updateSettings(options = {}) {\n\t      parser$3.overwrite(options, this.defaults, this);\n\t      parser$3.overwrite(options, options, this.limiterOptions);\n\t      if (options.timeout != null) {\n\t        return this._startAutoCleanup();\n\t      }\n\t    }\n\n\t    disconnect(flush = true) {\n\t      var ref;\n\t      if (!this.sharedConnection) {\n\t        return (ref = this.connection) != null ? ref.disconnect(flush) : void 0;\n\t      }\n\t    }\n\n\t  }\n\t  Group.prototype.defaults = {\n\t    timeout: 1000 * 60 * 5,\n\t    connection: null,\n\t    Promise: Promise,\n\t    id: \"group-key\"\n\t  };\n\n\t  return Group;\n\n\t}).call(commonjsGlobal);\n\n\tvar Group_1 = Group;\n\n\tvar Batcher, Events$3, parser$4;\n\n\tparser$4 = parser;\n\n\tEvents$3 = Events_1;\n\n\tBatcher = (function() {\n\t  class Batcher {\n\t    constructor(options = {}) {\n\t      this.options = options;\n\t      parser$4.load(this.options, this.defaults, this);\n\t      this.Events = new Events$3(this);\n\t      this._arr = [];\n\t      this._resetPromise();\n\t      this._lastFlush = Date.now();\n\t    }\n\n\t    _resetPromise() {\n\t      return this._promise = new this.Promise((res, rej) => {\n\t        return this._resolve = res;\n\t      });\n\t    }\n\n\t    _flush() {\n\t      clearTimeout(this._timeout);\n\t      this._lastFlush = Date.now();\n\t      this._resolve();\n\t      this.Events.trigger(\"batch\", this._arr);\n\t      this._arr = [];\n\t      return this._resetPromise();\n\t    }\n\n\t    add(data) {\n\t      var ret;\n\t      this._arr.push(data);\n\t      ret = this._promise;\n\t      if (this._arr.length === this.maxSize) {\n\t        this._flush();\n\t      } else if ((this.maxTime != null) && this._arr.length === 1) {\n\t        this._timeout = setTimeout(() => {\n\t          return this._flush();\n\t        }, this.maxTime);\n\t      }\n\t      return ret;\n\t    }\n\n\t  }\n\t  Batcher.prototype.defaults = {\n\t    maxTime: null,\n\t    maxSize: null,\n\t    Promise: Promise\n\t  };\n\n\t  return Batcher;\n\n\t}).call(commonjsGlobal);\n\n\tvar Batcher_1 = Batcher;\n\n\tvar require$$4$1 = () => console.log('You must import the full version of Bottleneck in order to use this feature.');\n\n\tvar require$$8 = getCjsExportFromNamespace(version$2);\n\n\tvar Bottleneck, DEFAULT_PRIORITY$1, Events$4, Job$1, LocalDatastore$1, NUM_PRIORITIES$1, Queues$1, RedisDatastore$1, States$1, Sync$1, parser$5,\n\t  splice = [].splice;\n\n\tNUM_PRIORITIES$1 = 10;\n\n\tDEFAULT_PRIORITY$1 = 5;\n\n\tparser$5 = parser;\n\n\tQueues$1 = Queues_1;\n\n\tJob$1 = Job_1;\n\n\tLocalDatastore$1 = LocalDatastore_1;\n\n\tRedisDatastore$1 = require$$4$1;\n\n\tEvents$4 = Events_1;\n\n\tStates$1 = States_1;\n\n\tSync$1 = Sync_1;\n\n\tBottleneck = (function() {\n\t  class Bottleneck {\n\t    constructor(options = {}, ...invalid) {\n\t      var storeInstanceOptions, storeOptions;\n\t      this._addToQueue = this._addToQueue.bind(this);\n\t      this._validateOptions(options, invalid);\n\t      parser$5.load(options, this.instanceDefaults, this);\n\t      this._queues = new Queues$1(NUM_PRIORITIES$1);\n\t      this._scheduled = {};\n\t      this._states = new States$1([\"RECEIVED\", \"QUEUED\", \"RUNNING\", \"EXECUTING\"].concat(this.trackDoneStatus ? [\"DONE\"] : []));\n\t      this._limiter = null;\n\t      this.Events = new Events$4(this);\n\t      this._submitLock = new Sync$1(\"submit\", this.Promise);\n\t      this._registerLock = new Sync$1(\"register\", this.Promise);\n\t      storeOptions = parser$5.load(options, this.storeDefaults, {});\n\t      this._store = (function() {\n\t        if (this.datastore === \"redis\" || this.datastore === \"ioredis\" || (this.connection != null)) {\n\t          storeInstanceOptions = parser$5.load(options, this.redisStoreDefaults, {});\n\t          return new RedisDatastore$1(this, storeOptions, storeInstanceOptions);\n\t        } else if (this.datastore === \"local\") {\n\t          storeInstanceOptions = parser$5.load(options, this.localStoreDefaults, {});\n\t          return new LocalDatastore$1(this, storeOptions, storeInstanceOptions);\n\t        } else {\n\t          throw new Bottleneck.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`);\n\t        }\n\t      }).call(this);\n\t      this._queues.on(\"leftzero\", () => {\n\t        var ref;\n\t        return (ref = this._store.heartbeat) != null ? typeof ref.ref === \"function\" ? ref.ref() : void 0 : void 0;\n\t      });\n\t      this._queues.on(\"zero\", () => {\n\t        var ref;\n\t        return (ref = this._store.heartbeat) != null ? typeof ref.unref === \"function\" ? ref.unref() : void 0 : void 0;\n\t      });\n\t    }\n\n\t    _validateOptions(options, invalid) {\n\t      if (!((options != null) && typeof options === \"object\" && invalid.length === 0)) {\n\t        throw new Bottleneck.prototype.BottleneckError(\"Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.\");\n\t      }\n\t    }\n\n\t    ready() {\n\t      return this._store.ready;\n\t    }\n\n\t    clients() {\n\t      return this._store.clients;\n\t    }\n\n\t    channel() {\n\t      return `b_${this.id}`;\n\t    }\n\n\t    channel_client() {\n\t      return `b_${this.id}_${this._store.clientId}`;\n\t    }\n\n\t    publish(message) {\n\t      return this._store.__publish__(message);\n\t    }\n\n\t    disconnect(flush = true) {\n\t      return this._store.__disconnect__(flush);\n\t    }\n\n\t    chain(_limiter) {\n\t      this._limiter = _limiter;\n\t      return this;\n\t    }\n\n\t    queued(priority) {\n\t      return this._queues.queued(priority);\n\t    }\n\n\t    clusterQueued() {\n\t      return this._store.__queued__();\n\t    }\n\n\t    empty() {\n\t      return this.queued() === 0 && this._submitLock.isEmpty();\n\t    }\n\n\t    running() {\n\t      return this._store.__running__();\n\t    }\n\n\t    done() {\n\t      return this._store.__done__();\n\t    }\n\n\t    jobStatus(id) {\n\t      return this._states.jobStatus(id);\n\t    }\n\n\t    jobs(status) {\n\t      return this._states.statusJobs(status);\n\t    }\n\n\t    counts() {\n\t      return this._states.statusCounts();\n\t    }\n\n\t    _randomIndex() {\n\t      return Math.random().toString(36).slice(2);\n\t    }\n\n\t    check(weight = 1) {\n\t      return this._store.__check__(weight);\n\t    }\n\n\t    _clearGlobalState(index) {\n\t      if (this._scheduled[index] != null) {\n\t        clearTimeout(this._scheduled[index].expiration);\n\t        delete this._scheduled[index];\n\t        return true;\n\t      } else {\n\t        return false;\n\t      }\n\t    }\n\n\t    async _free(index, job, options, eventInfo) {\n\t      var e, running;\n\t      try {\n\t        ({running} = (await this._store.__free__(index, options.weight)));\n\t        this.Events.trigger(\"debug\", `Freed ${options.id}`, eventInfo);\n\t        if (running === 0 && this.empty()) {\n\t          return this.Events.trigger(\"idle\");\n\t        }\n\t      } catch (error1) {\n\t        e = error1;\n\t        return this.Events.trigger(\"error\", e);\n\t      }\n\t    }\n\n\t    _run(index, job, wait) {\n\t      var clearGlobalState, free, run;\n\t      job.doRun();\n\t      clearGlobalState = this._clearGlobalState.bind(this, index);\n\t      run = this._run.bind(this, index, job);\n\t      free = this._free.bind(this, index, job);\n\t      return this._scheduled[index] = {\n\t        timeout: setTimeout(() => {\n\t          return job.doExecute(this._limiter, clearGlobalState, run, free);\n\t        }, wait),\n\t        expiration: job.options.expiration != null ? setTimeout(function() {\n\t          return job.doExpire(clearGlobalState, run, free);\n\t        }, wait + job.options.expiration) : void 0,\n\t        job: job\n\t      };\n\t    }\n\n\t    _drainOne(capacity) {\n\t      return this._registerLock.schedule(() => {\n\t        var args, index, next, options, queue;\n\t        if (this.queued() === 0) {\n\t          return this.Promise.resolve(null);\n\t        }\n\t        queue = this._queues.getFirst();\n\t        ({options, args} = next = queue.first());\n\t        if ((capacity != null) && options.weight > capacity) {\n\t          return this.Promise.resolve(null);\n\t        }\n\t        this.Events.trigger(\"debug\", `Draining ${options.id}`, {args, options});\n\t        index = this._randomIndex();\n\t        return this._store.__register__(index, options.weight, options.expiration).then(({success, wait, reservoir}) => {\n\t          var empty;\n\t          this.Events.trigger(\"debug\", `Drained ${options.id}`, {success, args, options});\n\t          if (success) {\n\t            queue.shift();\n\t            empty = this.empty();\n\t            if (empty) {\n\t              this.Events.trigger(\"empty\");\n\t            }\n\t            if (reservoir === 0) {\n\t              this.Events.trigger(\"depleted\", empty);\n\t            }\n\t            this._run(index, next, wait);\n\t            return this.Promise.resolve(options.weight);\n\t          } else {\n\t            return this.Promise.resolve(null);\n\t          }\n\t        });\n\t      });\n\t    }\n\n\t    _drainAll(capacity, total = 0) {\n\t      return this._drainOne(capacity).then((drained) => {\n\t        var newCapacity;\n\t        if (drained != null) {\n\t          newCapacity = capacity != null ? capacity - drained : capacity;\n\t          return this._drainAll(newCapacity, total + drained);\n\t        } else {\n\t          return this.Promise.resolve(total);\n\t        }\n\t      }).catch((e) => {\n\t        return this.Events.trigger(\"error\", e);\n\t      });\n\t    }\n\n\t    _dropAllQueued(message) {\n\t      return this._queues.shiftAll(function(job) {\n\t        return job.doDrop({message});\n\t      });\n\t    }\n\n\t    stop(options = {}) {\n\t      var done, waitForExecuting;\n\t      options = parser$5.load(options, this.stopDefaults);\n\t      waitForExecuting = (at) => {\n\t        var finished;\n\t        finished = () => {\n\t          var counts;\n\t          counts = this._states.counts;\n\t          return (counts[0] + counts[1] + counts[2] + counts[3]) === at;\n\t        };\n\t        return new this.Promise((resolve, reject) => {\n\t          if (finished()) {\n\t            return resolve();\n\t          } else {\n\t            return this.on(\"done\", () => {\n\t              if (finished()) {\n\t                this.removeAllListeners(\"done\");\n\t                return resolve();\n\t              }\n\t            });\n\t          }\n\t        });\n\t      };\n\t      done = options.dropWaitingJobs ? (this._run = function(index, next) {\n\t        return next.doDrop({\n\t          message: options.dropErrorMessage\n\t        });\n\t      }, this._drainOne = () => {\n\t        return this.Promise.resolve(null);\n\t      }, this._registerLock.schedule(() => {\n\t        return this._submitLock.schedule(() => {\n\t          var k, ref, v;\n\t          ref = this._scheduled;\n\t          for (k in ref) {\n\t            v = ref[k];\n\t            if (this.jobStatus(v.job.options.id) === \"RUNNING\") {\n\t              clearTimeout(v.timeout);\n\t              clearTimeout(v.expiration);\n\t              v.job.doDrop({\n\t                message: options.dropErrorMessage\n\t              });\n\t            }\n\t          }\n\t          this._dropAllQueued(options.dropErrorMessage);\n\t          return waitForExecuting(0);\n\t        });\n\t      })) : this.schedule({\n\t        priority: NUM_PRIORITIES$1 - 1,\n\t        weight: 0\n\t      }, () => {\n\t        return waitForExecuting(1);\n\t      });\n\t      this._receive = function(job) {\n\t        return job._reject(new Bottleneck.prototype.BottleneckError(options.enqueueErrorMessage));\n\t      };\n\t      this.stop = () => {\n\t        return this.Promise.reject(new Bottleneck.prototype.BottleneckError(\"stop() has already been called\"));\n\t      };\n\t      return done;\n\t    }\n\n\t    async _addToQueue(job) {\n\t      var args, blocked, error, options, reachedHWM, shifted, strategy;\n\t      ({args, options} = job);\n\t      try {\n\t        ({reachedHWM, blocked, strategy} = (await this._store.__submit__(this.queued(), options.weight)));\n\t      } catch (error1) {\n\t        error = error1;\n\t        this.Events.trigger(\"debug\", `Could not queue ${options.id}`, {args, options, error});\n\t        job.doDrop({error});\n\t        return false;\n\t      }\n\t      if (blocked) {\n\t        job.doDrop();\n\t        return true;\n\t      } else if (reachedHWM) {\n\t        shifted = strategy === Bottleneck.prototype.strategy.LEAK ? this._queues.shiftLastFrom(options.priority) : strategy === Bottleneck.prototype.strategy.OVERFLOW_PRIORITY ? this._queues.shiftLastFrom(options.priority + 1) : strategy === Bottleneck.prototype.strategy.OVERFLOW ? job : void 0;\n\t        if (shifted != null) {\n\t          shifted.doDrop();\n\t        }\n\t        if ((shifted == null) || strategy === Bottleneck.prototype.strategy.OVERFLOW) {\n\t          if (shifted == null) {\n\t            job.doDrop();\n\t          }\n\t          return reachedHWM;\n\t        }\n\t      }\n\t      job.doQueue(reachedHWM, blocked);\n\t      this._queues.push(job);\n\t      await this._drainAll();\n\t      return reachedHWM;\n\t    }\n\n\t    _receive(job) {\n\t      if (this._states.jobStatus(job.options.id) != null) {\n\t        job._reject(new Bottleneck.prototype.BottleneckError(`A job with the same id already exists (id=${job.options.id})`));\n\t        return false;\n\t      } else {\n\t        job.doReceive();\n\t        return this._submitLock.schedule(this._addToQueue, job);\n\t      }\n\t    }\n\n\t    submit(...args) {\n\t      var cb, fn, job, options, ref, ref1, task;\n\t      if (typeof args[0] === \"function\") {\n\t        ref = args, [fn, ...args] = ref, [cb] = splice.call(args, -1);\n\t        options = parser$5.load({}, this.jobDefaults);\n\t      } else {\n\t        ref1 = args, [options, fn, ...args] = ref1, [cb] = splice.call(args, -1);\n\t        options = parser$5.load(options, this.jobDefaults);\n\t      }\n\t      task = (...args) => {\n\t        return new this.Promise(function(resolve, reject) {\n\t          return fn(...args, function(...args) {\n\t            return (args[0] != null ? reject : resolve)(args);\n\t          });\n\t        });\n\t      };\n\t      job = new Job$1(task, args, options, this.jobDefaults, this.rejectOnDrop, this.Events, this._states, this.Promise);\n\t      job.promise.then(function(args) {\n\t        return typeof cb === \"function\" ? cb(...args) : void 0;\n\t      }).catch(function(args) {\n\t        if (Array.isArray(args)) {\n\t          return typeof cb === \"function\" ? cb(...args) : void 0;\n\t        } else {\n\t          return typeof cb === \"function\" ? cb(args) : void 0;\n\t        }\n\t      });\n\t      return this._receive(job);\n\t    }\n\n\t    schedule(...args) {\n\t      var job, options, task;\n\t      if (typeof args[0] === \"function\") {\n\t        [task, ...args] = args;\n\t        options = {};\n\t      } else {\n\t        [options, task, ...args] = args;\n\t      }\n\t      job = new Job$1(task, args, options, this.jobDefaults, this.rejectOnDrop, this.Events, this._states, this.Promise);\n\t      this._receive(job);\n\t      return job.promise;\n\t    }\n\n\t    wrap(fn) {\n\t      var schedule, wrapped;\n\t      schedule = this.schedule.bind(this);\n\t      wrapped = function(...args) {\n\t        return schedule(fn.bind(this), ...args);\n\t      };\n\t      wrapped.withOptions = function(options, ...args) {\n\t        return schedule(options, fn, ...args);\n\t      };\n\t      return wrapped;\n\t    }\n\n\t    async updateSettings(options = {}) {\n\t      await this._store.__updateSettings__(parser$5.overwrite(options, this.storeDefaults));\n\t      parser$5.overwrite(options, this.instanceDefaults, this);\n\t      return this;\n\t    }\n\n\t    currentReservoir() {\n\t      return this._store.__currentReservoir__();\n\t    }\n\n\t    incrementReservoir(incr = 0) {\n\t      return this._store.__incrementReservoir__(incr);\n\t    }\n\n\t  }\n\t  Bottleneck.default = Bottleneck;\n\n\t  Bottleneck.Events = Events$4;\n\n\t  Bottleneck.version = Bottleneck.prototype.version = require$$8.version;\n\n\t  Bottleneck.strategy = Bottleneck.prototype.strategy = {\n\t    LEAK: 1,\n\t    OVERFLOW: 2,\n\t    OVERFLOW_PRIORITY: 4,\n\t    BLOCK: 3\n\t  };\n\n\t  Bottleneck.BottleneckError = Bottleneck.prototype.BottleneckError = BottleneckError_1;\n\n\t  Bottleneck.Group = Bottleneck.prototype.Group = Group_1;\n\n\t  Bottleneck.RedisConnection = Bottleneck.prototype.RedisConnection = require$$2;\n\n\t  Bottleneck.IORedisConnection = Bottleneck.prototype.IORedisConnection = require$$3;\n\n\t  Bottleneck.Batcher = Bottleneck.prototype.Batcher = Batcher_1;\n\n\t  Bottleneck.prototype.jobDefaults = {\n\t    priority: DEFAULT_PRIORITY$1,\n\t    weight: 1,\n\t    expiration: null,\n\t    id: \"<no-id>\"\n\t  };\n\n\t  Bottleneck.prototype.storeDefaults = {\n\t    maxConcurrent: null,\n\t    minTime: 0,\n\t    highWater: null,\n\t    strategy: Bottleneck.prototype.strategy.LEAK,\n\t    penalty: null,\n\t    reservoir: null,\n\t    reservoirRefreshInterval: null,\n\t    reservoirRefreshAmount: null,\n\t    reservoirIncreaseInterval: null,\n\t    reservoirIncreaseAmount: null,\n\t    reservoirIncreaseMaximum: null\n\t  };\n\n\t  Bottleneck.prototype.localStoreDefaults = {\n\t    Promise: Promise,\n\t    timeout: null,\n\t    heartbeatInterval: 250\n\t  };\n\n\t  Bottleneck.prototype.redisStoreDefaults = {\n\t    Promise: Promise,\n\t    timeout: null,\n\t    heartbeatInterval: 5000,\n\t    clientTimeout: 10000,\n\t    Redis: null,\n\t    clientOptions: {},\n\t    clusterNodes: null,\n\t    clearDatastore: false,\n\t    connection: null\n\t  };\n\n\t  Bottleneck.prototype.instanceDefaults = {\n\t    datastore: \"local\",\n\t    connection: null,\n\t    id: \"<no-id>\",\n\t    rejectOnDrop: true,\n\t    trackDoneStatus: false,\n\t    Promise: Promise\n\t  };\n\n\t  Bottleneck.prototype.stopDefaults = {\n\t    enqueueErrorMessage: \"This limiter has been stopped and cannot accept new jobs.\",\n\t    dropWaitingJobs: true,\n\t    dropErrorMessage: \"This limiter has been stopped.\"\n\t  };\n\n\t  return Bottleneck;\n\n\t}).call(commonjsGlobal);\n\n\tvar Bottleneck_1 = Bottleneck;\n\n\tvar lib = Bottleneck_1;\n\n\treturn lib;\n\n})));\n", "// @ts-ignore\nexport async function errorRequest(octokit, state, error, options) {\n    if (!error.request || !error.request.request) {\n        // address https://github.com/octokit/plugin-retry.js/issues/8\n        throw error;\n    }\n    // retry all >= 400 && not doNotRetry\n    if (error.status >= 400 && !state.doNotRetry.includes(error.status)) {\n        const retries = options.request.retries != null ? options.request.retries : state.retries;\n        const retryAfter = Math.pow((options.request.retryCount || 0) + 1, 2);\n        throw octokit.retry.retryRequest(error, retries, retryAfter);\n    }\n    // Maybe eventually there will be more cases here\n    throw error;\n}\n", "// @ts-ignore\nimport Bottleneck from \"bottleneck/light\";\n// @ts-ignore\nexport async function wrapRequest(state, request, options) {\n    const limiter = new Bottleneck();\n    // @ts-ignore\n    limiter.on(\"failed\", function (error, info) {\n        const maxRetries = ~~error.request.request.retries;\n        const after = ~~error.request.request.retryAfter;\n        options.request.retryCount = info.retryCount + 1;\n        if (maxRetries > info.retryCount) {\n            // Returning a number instructs the limiter to retry\n            // the request after that number of milliseconds have passed\n            return after * state.retryAfterBaseValue;\n        }\n    });\n    return limiter.schedule(request, options);\n}\n", "import { errorRequest } from \"./error-request\";\nimport { wrapRequest } from \"./wrap-request\";\nexport const VERSION = \"4.0.3\";\nexport function retry(octokit, octokitOptions) {\n    const state = Object.assign({\n        enabled: true,\n        retryAfterBaseValue: 1000,\n        doNotRetry: [400, 401, 403, 404, 422],\n        retries: 3,\n    }, octokitOptions.retry);\n    if (state.enabled) {\n        octokit.hook.error(\"request\", errorRequest.bind(null, octokit, state));\n        octokit.hook.wrap(\"request\", wrapRequest.bind(null, state));\n    }\n    return {\n        retry: {\n            retryRequest: (error, retries, retryAfter) => {\n                error.request.request = Object.assign({}, error.request.request, {\n                    retries: retries,\n                    retryAfter: retryAfter,\n                });\n                return error;\n            },\n        },\n    };\n}\nretry.VERSION = VERSION;\n", "export const VERSION = \"4.3.1\";\n", "const noop = () => Promise.resolve();\n// @ts-expect-error\nexport function wrapRequest(state, request, options) {\n    return state.retryLimiter.schedule(doRequest, state, request, options);\n}\n// @ts-expect-error\nasync function doRequest(state, request, options) {\n    const isWrite = options.method !== \"GET\" && options.method !== \"HEAD\";\n    const { pathname } = new URL(options.url, \"http://github.test\");\n    const isSearch = options.method === \"GET\" && pathname.startsWith(\"/search/\");\n    const isGraphQL = pathname.startsWith(\"/graphql\");\n    const retryCount = ~~options.request.retryCount;\n    const jobOptions = retryCount > 0 ? { priority: 0, weight: 0 } : {};\n    if (state.clustering) {\n        // Remove a job from Redis if it has not completed or failed within 60s\n        // Examples: Node process terminated, client disconnected, etc.\n        // @ts-expect-error\n        jobOptions.expiration = 1000 * 60;\n    }\n    // Guarantee at least 1000ms between writes\n    // GraphQL can also trigger writes\n    if (isWrite || isGraphQL) {\n        await state.write.key(state.id).schedule(jobOptions, noop);\n    }\n    // Guarantee at least 3000ms between requests that trigger notifications\n    if (isWrite && state.triggersNotification(pathname)) {\n        await state.notifications.key(state.id).schedule(jobOptions, noop);\n    }\n    // Guarantee at least 2000ms between search requests\n    if (isSearch) {\n        await state.search.key(state.id).schedule(jobOptions, noop);\n    }\n    const req = state.global.key(state.id).schedule(jobOptions, request, options);\n    if (isGraphQL) {\n        const res = await req;\n        if (res.data.errors != null &&\n            // @ts-expect-error\n            res.data.errors.some((error) => error.type === \"RATE_LIMITED\")) {\n            const error = Object.assign(new Error(\"GraphQL Rate Limit Exceeded\"), {\n                response: res,\n                data: res.data,\n            });\n            throw error;\n        }\n    }\n    return req;\n}\n", "export default [\n    \"/orgs/{org}/invitations\",\n    \"/orgs/{org}/invitations/{invitation_id}\",\n    \"/orgs/{org}/teams/{team_slug}/discussions\",\n    \"/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n    \"/repos/{owner}/{repo}/collaborators/{username}\",\n    \"/repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n    \"/repos/{owner}/{repo}/issues\",\n    \"/repos/{owner}/{repo}/issues/{issue_number}/comments\",\n    \"/repos/{owner}/{repo}/pulls\",\n    \"/repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n    \"/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\",\n    \"/repos/{owner}/{repo}/pulls/{pull_number}/merge\",\n    \"/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n    \"/repos/{owner}/{repo}/pulls/{pull_number}/reviews\",\n    \"/repos/{owner}/{repo}/releases\",\n    \"/teams/{team_id}/discussions\",\n    \"/teams/{team_id}/discussions/{discussion_number}/comments\",\n];\n", "export function routeMatcher(paths) {\n    // EXAMPLE. For the following paths:\n    /* [\n        \"/orgs/{org}/invitations\",\n        \"/repos/{owner}/{repo}/collaborators/{username}\"\n    ] */\n    const regexes = paths.map((path) => path\n        .split(\"/\")\n        .map((c) => (c.startsWith(\"{\") ? \"(?:.+?)\" : c))\n        .join(\"/\"));\n    // 'regexes' would contain:\n    /* [\n        '/orgs/(?:.+?)/invitations',\n        '/repos/(?:.+?)/(?:.+?)/collaborators/(?:.+?)'\n    ] */\n    const regex = `^(?:${regexes.map((r) => `(?:${r})`).join(\"|\")})[^/]*$`;\n    // 'regex' would contain:\n    /*\n      ^(?:(?:\\/orgs\\/(?:.+?)\\/invitations)|(?:\\/repos\\/(?:.+?)\\/(?:.+?)\\/collaborators\\/(?:.+?)))[^\\/]*$\n  \n      It may look scary, but paste it into https://www.debuggex.com/\n      and it will make a lot more sense!\n    */\n    return new RegExp(regex, \"i\");\n}\n", "// @ts-expect-error\nimport BottleneckLight from \"bottleneck/light\";\nimport { VERSION } from \"./version\";\nimport { wrapRequest } from \"./wrap-request\";\nimport triggersNotificationPaths from \"./generated/triggers-notification-paths\";\nimport { routeMatcher } from \"./route-matcher\";\n// Workaround to allow tests to directly access the triggersNotification function.\nconst regex = routeMatcher(triggersNotificationPaths);\nconst triggersNotification = regex.test.bind(regex);\nconst groups = {};\n// @ts-expect-error\nconst createGroups = function (Bottleneck, common) {\n    groups.global = new Bottleneck.Group({\n        id: \"octokit-global\",\n        maxConcurrent: 10,\n        ...common,\n    });\n    groups.search = new Bottleneck.Group({\n        id: \"octokit-search\",\n        maxConcurrent: 1,\n        minTime: 2000,\n        ...common,\n    });\n    groups.write = new Bottleneck.Group({\n        id: \"octokit-write\",\n        maxConcurrent: 1,\n        minTime: 1000,\n        ...common,\n    });\n    groups.notifications = new Bottleneck.Group({\n        id: \"octokit-notifications\",\n        maxConcurrent: 1,\n        minTime: 3000,\n        ...common,\n    });\n};\nexport function throttling(octokit, octokitOptions) {\n    const { enabled = true, Bottleneck = BottleneckLight, id = \"no-id\", timeout = 1000 * 60 * 2, // Redis TTL: 2 minutes\n    connection, } = octokitOptions.throttle || {};\n    if (!enabled) {\n        return {};\n    }\n    const common = { connection, timeout };\n    if (groups.global == null) {\n        createGroups(Bottleneck, common);\n    }\n    const state = Object.assign({\n        clustering: connection != null,\n        triggersNotification,\n        minimumSecondaryRateRetryAfter: 5,\n        retryAfterBaseValue: 1000,\n        retryLimiter: new Bottleneck(),\n        id,\n        ...groups,\n    }, octokitOptions.throttle);\n    const isUsingDeprecatedOnAbuseLimitHandler = typeof state.onAbuseLimit === \"function\" && state.onAbuseLimit;\n    if (typeof (isUsingDeprecatedOnAbuseLimitHandler\n        ? state.onAbuseLimit\n        : state.onSecondaryRateLimit) !== \"function\" ||\n        typeof state.onRateLimit !== \"function\") {\n        throw new Error(`octokit/plugin-throttling error:\n        You must pass the onSecondaryRateLimit and onRateLimit error handlers.\n        See https://github.com/octokit/rest.js#throttling\n\n        const octokit = new Octokit({\n          throttle: {\n            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},\n            onRateLimit: (retryAfter, options) => {/* ... */}\n          }\n        })\n    `);\n    }\n    const events = {};\n    const emitter = new Bottleneck.Events(events);\n    // @ts-expect-error\n    events.on(\"secondary-limit\", isUsingDeprecatedOnAbuseLimitHandler\n        ? function (...args) {\n            octokit.log.warn(\"[@octokit/plugin-throttling] `onAbuseLimit()` is deprecated and will be removed in a future release of `@octokit/plugin-throttling`, please use the `onSecondaryRateLimit` handler instead\");\n            return state.onAbuseLimit(...args);\n        }\n        : state.onSecondaryRateLimit);\n    // @ts-expect-error\n    events.on(\"rate-limit\", state.onRateLimit);\n    // @ts-expect-error\n    events.on(\"error\", (e) => octokit.log.warn(\"Error in throttling-plugin limit handler\", e));\n    // @ts-expect-error\n    state.retryLimiter.on(\"failed\", async function (error, info) {\n        const options = info.args[info.args.length - 1];\n        const { pathname } = new URL(options.url, \"http://github.test\");\n        const shouldRetryGraphQL = pathname.startsWith(\"/graphql\") && error.status !== 401;\n        if (!(shouldRetryGraphQL || error.status === 403)) {\n            return;\n        }\n        const retryCount = ~~options.request.retryCount;\n        options.request.retryCount = retryCount;\n        const { wantRetry, retryAfter = 0 } = await (async function () {\n            if (/\\bsecondary rate\\b/i.test(error.message)) {\n                // The user has hit the secondary rate limit. (REST and GraphQL)\n                // https://docs.github.com/en/rest/overview/resources-in-the-rest-api#secondary-rate-limits\n                // The Retry-After header can sometimes be blank when hitting a secondary rate limit,\n                // but is always present after 2-3s, so make sure to set `retryAfter` to at least 5s by default.\n                const retryAfter = Math.max(~~error.response.headers[\"retry-after\"], state.minimumSecondaryRateRetryAfter);\n                const wantRetry = await emitter.trigger(\"secondary-limit\", retryAfter, options, octokit);\n                return { wantRetry, retryAfter };\n            }\n            if (error.response.headers != null &&\n                error.response.headers[\"x-ratelimit-remaining\"] === \"0\") {\n                // The user has used all their allowed calls for the current time period (REST and GraphQL)\n                // https://docs.github.com/en/rest/reference/rate-limit (REST)\n                // https://docs.github.com/en/graphql/overview/resource-limitations#rate-limit (GraphQL)\n                const rateLimitReset = new Date(~~error.response.headers[\"x-ratelimit-reset\"] * 1000).getTime();\n                const retryAfter = Math.max(Math.ceil((rateLimitReset - Date.now()) / 1000), 0);\n                const wantRetry = await emitter.trigger(\"rate-limit\", retryAfter, options, octokit);\n                return { wantRetry, retryAfter };\n            }\n            return {};\n        })();\n        if (wantRetry) {\n            options.request.retryCount++;\n            return retryAfter * state.retryAfterBaseValue;\n        }\n    });\n    octokit.hook.wrap(\"request\", wrapRequest.bind(null, state));\n    return {};\n}\nthrottling.VERSION = VERSION;\nthrottling.triggersNotification = triggersNotification;\n", "module.exports = function btoa(str) {\n  return new Buffer(str).toString('base64')\n}\n", "export function oauthAuthorizationUrl(options) {\n    const clientType = options.clientType || \"oauth-app\";\n    const baseUrl = options.baseUrl || \"https://github.com\";\n    const result = {\n        clientType,\n        allowSignup: options.allowSignup === false ? false : true,\n        clientId: options.clientId,\n        login: options.login || null,\n        redirectUrl: options.redirectUrl || null,\n        state: options.state || Math.random().toString(36).substr(2),\n        url: \"\",\n    };\n    if (clientType === \"oauth-app\") {\n        const scopes = \"scopes\" in options ? options.scopes : [];\n        result.scopes =\n            typeof scopes === \"string\"\n                ? scopes.split(/[,\\s]+/).filter(Boolean)\n                : scopes;\n    }\n    result.url = urlBuilderAuthorize(`${baseUrl}/login/oauth/authorize`, result);\n    return result;\n}\nfunction urlBuilderAuthorize(base, options) {\n    const map = {\n        allowSignup: \"allow_signup\",\n        clientId: \"client_id\",\n        login: \"login\",\n        redirectUrl: \"redirect_uri\",\n        scopes: \"scope\",\n        state: \"state\",\n    };\n    let url = base;\n    Object.keys(map)\n        // Filter out keys that are null and remove the url key\n        .filter((k) => options[k] !== null)\n        // Filter out empty scopes array\n        .filter((k) => {\n        if (k !== \"scopes\")\n            return true;\n        if (options.clientType === \"github-app\")\n            return false;\n        return !Array.isArray(options[k]) || options[k].length > 0;\n    })\n        // Map Array with the proper URL parameter names and change the value to a string using template strings\n        // @ts-ignore\n        .map((key) => [map[key], `${options[key]}`])\n        // Finally, build the URL\n        .forEach(([key, value], index) => {\n        url += index === 0 ? `?` : \"&\";\n        url += `${key}=${encodeURIComponent(value)}`;\n    });\n    return url;\n}\n", "export const VERSION = \"2.0.4\";\n", "import { RequestError } from \"@octokit/request-error\";\nexport function requestToOAuthBaseUrl(request) {\n    const endpointDefaults = request.endpoint.DEFAULTS;\n    return /^https:\\/\\/(api\\.)?github\\.com$/.test(endpointDefaults.baseUrl)\n        ? \"https://github.com\"\n        : endpointDefaults.baseUrl.replace(\"/api/v3\", \"\");\n}\nexport async function oauthRequest(request, route, parameters) {\n    const withOAuthParameters = {\n        baseUrl: requestToOAuthBaseUrl(request),\n        headers: {\n            accept: \"application/json\",\n        },\n        ...parameters,\n    };\n    const response = await request(route, withOAuthParameters);\n    if (\"error\" in response.data) {\n        const error = new RequestError(`${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`, 400, {\n            request: request.endpoint.merge(route, withOAuthParameters),\n            headers: response.headers,\n        });\n        // @ts-ignore add custom response property until https://github.com/octokit/request-error.js/issues/169 is resolved\n        error.response = response;\n        throw error;\n    }\n    return response;\n}\n", "import { oauthAuthorizationUrl, } from \"@octokit/oauth-authorization-url\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { requestToOAuthBaseUrl } from \"./utils\";\nexport function getWebFlowAuthorizationUrl({ request = defaultRequest, ...options }) {\n    const baseUrl = requestToOAuthBaseUrl(request);\n    // @ts-expect-error TypeScript wants `clientType` to be set explicitly \u00AF\\_(\u30C4)_/\u00AF\n    return oauthAuthorizationUrl({\n        ...options,\n        baseUrl,\n    });\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeWebFlowCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        code: options.code,\n        redirect_uri: options.redirectUrl,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function createDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const parameters = {\n        client_id: options.clientId,\n    };\n    if (\"scopes\" in options && Array.isArray(options.scopes)) {\n        parameters.scope = options.scopes.join(\" \");\n    }\n    return oauthRequest(request, \"POST /login/device/code\", parameters);\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        device_code: options.code,\n        grant_type: \"urn:ietf:params:oauth:grant-type:device_code\",\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (\"clientSecret\" in options) {\n        authentication.clientSecret = options.clientSecret;\n    }\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function checkToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await request(\"POST /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${btoa(`${options.clientId}:${options.clientSecret}`)}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: options.token,\n        scopes: response.data.scopes,\n    };\n    if (response.data.expires_at)\n        authentication.expiresAt = response.data.expires_at;\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function refreshToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        grant_type: \"refresh_token\",\n        refresh_token: options.refreshToken,\n    });\n    const apiTimeInMs = new Date(response.headers.date).getTime();\n    const authentication = {\n        clientType: \"github-app\",\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        refreshToken: response.data.refresh_token,\n        expiresAt: toTimestamp(apiTimeInMs, response.data.expires_in),\n        refreshTokenExpiresAt: toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in),\n    };\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function scopeToken(options) {\n    const { request: optionsRequest, clientType, clientId, clientSecret, token, ...requestOptions } = options;\n    const request = optionsRequest ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await request(\"POST /applications/{client_id}/token/scoped\", {\n        headers: {\n            authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`,\n        },\n        client_id: clientId,\n        access_token: token,\n        ...requestOptions,\n    });\n    const authentication = Object.assign({\n        clientType,\n        clientId,\n        clientSecret,\n        token: response.data.token,\n    }, response.data.expires_at ? { expiresAt: response.data.expires_at } : {});\n    return { ...response, authentication };\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function resetToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    const response = await request(\"PATCH /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.token,\n        scopes: response.data.scopes,\n    };\n    if (response.data.expires_at)\n        authentication.expiresAt = response.data.expires_at;\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteAuthorization(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/grant\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n", "import { createDeviceCode, exchangeDeviceCode } from \"@octokit/oauth-methods\";\nexport async function getOAuthAccessToken(state, options) {\n    const cachedAuthentication = getCachedAuthentication(state, options.auth);\n    if (cachedAuthentication)\n        return cachedAuthentication;\n    // Step 1: Request device and user codes\n    // https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-1-app-requests-the-device-and-user-verification-codes-from-github\n    const { data: verification } = await createDeviceCode({\n        clientType: state.clientType,\n        clientId: state.clientId,\n        request: options.request || state.request,\n        // @ts-expect-error the extra code to make TS happy is not worth it\n        scopes: options.auth.scopes || state.scopes,\n    });\n    // Step 2: User must enter the user code on https://github.com/login/device\n    // See https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-2-prompt-the-user-to-enter-the-user-code-in-a-browser\n    await state.onVerification(verification);\n    // Step 3: Exchange device code for access token\n    // See https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-3-app-polls-github-to-check-if-the-user-authorized-the-device\n    const authentication = await waitForAccessToken(options.request || state.request, state.clientId, state.clientType, verification);\n    state.authentication = authentication;\n    return authentication;\n}\nfunction getCachedAuthentication(state, auth) {\n    if (auth.refresh === true)\n        return false;\n    if (!state.authentication)\n        return false;\n    if (state.clientType === \"github-app\") {\n        return state.authentication;\n    }\n    const authentication = state.authentication;\n    const newScope = ((\"scopes\" in auth && auth.scopes) || state.scopes).join(\" \");\n    const currentScope = authentication.scopes.join(\" \");\n    return newScope === currentScope ? authentication : false;\n}\nasync function wait(seconds) {\n    await new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n}\nasync function waitForAccessToken(request, clientId, clientType, verification) {\n    try {\n        const options = {\n            clientId,\n            request,\n            code: verification.device_code,\n        };\n        // WHY TYPESCRIPT WHY ARE YOU DOING THIS TO ME\n        const { authentication } = clientType === \"oauth-app\"\n            ? await exchangeDeviceCode({\n                ...options,\n                clientType: \"oauth-app\",\n            })\n            : await exchangeDeviceCode({\n                ...options,\n                clientType: \"github-app\",\n            });\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            ...authentication,\n        };\n    }\n    catch (error) {\n        // istanbul ignore if\n        // @ts-ignore\n        if (!error.response)\n            throw error;\n        // @ts-ignore\n        const errorType = error.response.data.error;\n        if (errorType === \"authorization_pending\") {\n            await wait(verification.interval);\n            return waitForAccessToken(request, clientId, clientType, verification);\n        }\n        if (errorType === \"slow_down\") {\n            await wait(verification.interval + 5);\n            return waitForAccessToken(request, clientId, clientType, verification);\n        }\n        throw error;\n    }\n}\n", "import { getOAuthAccessToken } from \"./get-oauth-access-token\";\nexport async function auth(state, authOptions) {\n    return getOAuthAccessToken(state, {\n        auth: authOptions,\n    });\n}\n", "import { getOAuthAccessToken } from \"./get-oauth-access-token\";\nexport async function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept request to retrieve codes or token\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    const { token } = await getOAuthAccessToken(state, {\n        request,\n        auth: { type: \"oauth\" },\n    });\n    endpoint.headers.authorization = `token ${token}`;\n    return request(endpoint);\n}\n", "export const VERSION = \"4.0.3\";\n", "import { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { VERSION } from \"./version\";\nexport function createOAuthDeviceAuth(options) {\n    const requestWithDefaults = options.request ||\n        octokitRequest.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-device.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const { request = requestWithDefaults, ...otherOptions } = options;\n    const state = options.clientType === \"github-app\"\n        ? {\n            ...otherOptions,\n            clientType: \"github-app\",\n            request,\n        }\n        : {\n            ...otherOptions,\n            clientType: \"oauth-app\",\n            request,\n            scopes: options.scopes || [],\n        };\n    if (!options.clientId) {\n        throw new Error('[@octokit/auth-oauth-device] \"clientId\" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');\n    }\n    if (!options.onVerification) {\n        throw new Error('[@octokit/auth-oauth-device] \"onVerification\" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');\n    }\n    // @ts-ignore too much for tsc / ts-jest \u00AF\\_(\u30C4)_/\u00AF\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n", "export const VERSION = \"2.0.4\";\n", "// @ts-nocheck there is only place for one of us in this file. And it's not you, TS\nimport { createOAuthDeviceAuth } from \"@octokit/auth-oauth-device\";\nimport { exchangeWebFlowCode } from \"@octokit/oauth-methods\";\nexport async function getAuthentication(state) {\n    // handle code exchange form OAuth Web Flow\n    if (\"code\" in state.strategyOptions) {\n        const { authentication } = await exchangeWebFlowCode({\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            ...state.strategyOptions,\n            request: state.request,\n        });\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            ...authentication,\n        };\n    }\n    // handle OAuth device flow\n    if (\"onVerification\" in state.strategyOptions) {\n        const deviceAuth = createOAuthDeviceAuth({\n            clientType: state.clientType,\n            clientId: state.clientId,\n            ...state.strategyOptions,\n            request: state.request,\n        });\n        const authentication = await deviceAuth({\n            type: \"oauth\",\n        });\n        return {\n            clientSecret: state.clientSecret,\n            ...authentication,\n        };\n    }\n    // use existing authentication\n    if (\"token\" in state.strategyOptions) {\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            ...state.strategyOptions,\n        };\n    }\n    throw new Error(\"[@octokit/auth-oauth-user] Invalid strategy options\");\n}\n", "import { getAuthentication } from \"./get-authentication\";\nimport { checkToken, deleteAuthorization, deleteToken, refreshToken, resetToken, } from \"@octokit/oauth-methods\";\nexport async function auth(state, options = {}) {\n    if (!state.authentication) {\n        // This is what TS makes us do \u00AF\\_(\u30C4)_/\u00AF\n        state.authentication =\n            state.clientType === \"oauth-app\"\n                ? await getAuthentication(state)\n                : await getAuthentication(state);\n    }\n    if (state.authentication.invalid) {\n        throw new Error(\"[@octokit/auth-oauth-user] Token is invalid\");\n    }\n    const currentAuthentication = state.authentication;\n    // (auto) refresh for user-to-server tokens\n    if (\"expiresAt\" in currentAuthentication) {\n        if (options.type === \"refresh\" ||\n            new Date(currentAuthentication.expiresAt) < new Date()) {\n            const { authentication } = await refreshToken({\n                clientType: \"github-app\",\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                refreshToken: currentAuthentication.refreshToken,\n                request: state.request,\n            });\n            state.authentication = {\n                tokenType: \"oauth\",\n                type: \"token\",\n                ...authentication,\n            };\n        }\n    }\n    // throw error for invalid refresh call\n    if (options.type === \"refresh\") {\n        if (state.clientType === \"oauth-app\") {\n            throw new Error(\"[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens\");\n        }\n        if (!currentAuthentication.hasOwnProperty(\"expiresAt\")) {\n            throw new Error(\"[@octokit/auth-oauth-user] Refresh token missing\");\n        }\n    }\n    // check or reset token\n    if (options.type === \"check\" || options.type === \"reset\") {\n        const method = options.type === \"check\" ? checkToken : resetToken;\n        try {\n            const { authentication } = await method({\n                // @ts-expect-error making TS happy would require unnecessary code so no\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: state.authentication.token,\n                request: state.request,\n            });\n            state.authentication = {\n                tokenType: \"oauth\",\n                type: \"token\",\n                // @ts-expect-error TBD\n                ...authentication,\n            };\n            return state.authentication;\n        }\n        catch (error) {\n            // istanbul ignore else\n            if (error.status === 404) {\n                error.message = \"[@octokit/auth-oauth-user] Token is invalid\";\n                // @ts-expect-error TBD\n                state.authentication.invalid = true;\n            }\n            throw error;\n        }\n    }\n    // invalidate\n    if (options.type === \"delete\" || options.type === \"deleteAuthorization\") {\n        const method = options.type === \"delete\" ? deleteToken : deleteAuthorization;\n        try {\n            await method({\n                // @ts-expect-error making TS happy would require unnecessary code so no\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: state.authentication.token,\n                request: state.request,\n            });\n        }\n        catch (error) {\n            // istanbul ignore if\n            if (error.status !== 404)\n                throw error;\n        }\n        state.authentication.invalid = true;\n        return state.authentication;\n    }\n    return state.authentication;\n}\n", "/**\n * The following endpoints require an OAuth App to authenticate using its client_id and client_secret.\n *\n * - [`POST /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#check-a-token) - Check a token\n * - [`PATCH /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#reset-a-token) - Reset a token\n * - [`POST /applications/{client_id}/token/scoped`](https://docs.github.com/en/rest/reference/apps#create-a-scoped-access-token) - Create a scoped access token\n * - [`DELETE /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#delete-an-app-token) - Delete an app token\n * - [`DELETE /applications/{client_id}/grant`](https://docs.github.com/en/rest/reference/apps#delete-an-app-authorization) - Delete an app authorization\n *\n * deprecated:\n *\n * - [`GET /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#check-an-authorization) - Check an authorization\n * - [`POST /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#reset-an-authorization) - Reset an authorization\n * - [`DELETE /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#revoke-an-authorization-for-an-application) - Revoke an authorization for an application\n * - [`DELETE /applications/{client_id}/grants/{access_token}`](https://docs.github.com/en/rest/reference/apps#revoke-a-grant-for-an-application) - Revoke a grant for an application\n */\nconst ROUTES_REQUIRING_BASIC_AUTH = /\\/applications\\/[^/]+\\/(token|grant)s?/;\nexport function requiresBasicAuth(url) {\n    return url && ROUTES_REQUIRING_BASIC_AUTH.test(url);\n}\n", "import btoa from \"btoa-lite\";\nimport { auth } from \"./auth\";\nimport { requiresBasicAuth } from \"./requires-basic-auth\";\nexport async function hook(state, request, route, parameters = {}) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept OAuth Web/Device flow request\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    if (requiresBasicAuth(endpoint.url)) {\n        const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n        endpoint.headers.authorization = `basic ${credentials}`;\n        return request(endpoint);\n    }\n    // TS makes us do this \u00AF\\_(\u30C4)_/\u00AF\n    const { token } = state.clientType === \"oauth-app\"\n        ? await auth({ ...state, request })\n        : await auth({ ...state, request });\n    endpoint.headers.authorization = \"token \" + token;\n    return request(endpoint);\n}\n", "import { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\nimport { VERSION } from \"./version\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport { requiresBasicAuth } from \"./requires-basic-auth\";\nexport function createOAuthUserAuth({ clientId, clientSecret, clientType = \"oauth-app\", request = octokitRequest.defaults({\n    headers: {\n        \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`,\n    },\n}), ...strategyOptions }) {\n    const state = Object.assign({\n        clientType,\n        clientId,\n        clientSecret,\n        strategyOptions,\n        request,\n    });\n    // @ts-expect-error not worth the extra code needed to appease TS\n    return Object.assign(auth.bind(null, state), {\n        // @ts-expect-error not worth the extra code needed to appease TS\n        hook: hook.bind(null, state),\n    });\n}\ncreateOAuthUserAuth.VERSION = VERSION;\n", "import btoa from \"btoa-lite\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function auth(state, authOptions) {\n    if (authOptions.type === \"oauth-app\") {\n        return {\n            type: \"oauth-app\",\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            headers: {\n                authorization: `basic ${btoa(`${state.clientId}:${state.clientSecret}`)}`,\n            },\n        };\n    }\n    if (\"factory\" in authOptions) {\n        const { type, ...options } = {\n            ...authOptions,\n            ...state,\n        };\n        // @ts-expect-error TODO: `option` cannot be never, is this a bug?\n        return authOptions.factory(options);\n    }\n    const common = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.request,\n        ...authOptions,\n    };\n    // TS: Look what you made me do\n    const userAuth = state.clientType === \"oauth-app\"\n        ? await createOAuthUserAuth({\n            ...common,\n            clientType: state.clientType,\n        })\n        : await createOAuthUserAuth({\n            ...common,\n            clientType: state.clientType,\n        });\n    return userAuth();\n}\n", "import btoa from \"btoa-lite\";\nimport { requiresBasicAuth } from \"@octokit/auth-oauth-user\";\nexport async function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept OAuth Web/Device flow request\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    if (state.clientType === \"github-app\" && !requiresBasicAuth(endpoint.url)) {\n        throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than \"/applications/{client_id}/**\". \"${endpoint.method} ${endpoint.url}\" is not supported.`);\n    }\n    const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n    endpoint.headers.authorization = `basic ${credentials}`;\n    try {\n        return await request(endpoint);\n    }\n    catch (error) {\n        /* istanbul ignore if */\n        if (error.status !== 401)\n            throw error;\n        error.message = `[@octokit/auth-oauth-app] \"${endpoint.method} ${endpoint.url}\" does not support clientId/clientSecret basic authentication.`;\n        throw error;\n    }\n}\n", "export const VERSION = \"5.0.4\";\n", "import { getUserAgent } from \"universal-user-agent\";\nimport { request } from \"@octokit/request\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { VERSION } from \"./version\";\nexport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport function createOAuthAppAuth(options) {\n    const state = Object.assign({\n        request: request.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        }),\n        clientType: \"oauth-app\",\n    }, options);\n    // @ts-expect-error not worth the extra code to appease TS\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "/*global module, process*/\nvar Buffer = require('safe-buffer').Buffer;\nvar Stream = require('stream');\nvar util = require('util');\n\nfunction DataStream(data) {\n  this.buffer = null;\n  this.writable = true;\n  this.readable = true;\n\n  // No input\n  if (!data) {\n    this.buffer = Buffer.alloc(0);\n    return this;\n  }\n\n  // Stream\n  if (typeof data.pipe === 'function') {\n    this.buffer = Buffer.alloc(0);\n    data.pipe(this);\n    return this;\n  }\n\n  // Buffer or String\n  // or Object (assumedly a passworded key)\n  if (data.length || typeof data === 'object') {\n    this.buffer = data;\n    this.writable = false;\n    process.nextTick(function () {\n      this.emit('end', data);\n      this.readable = false;\n      this.emit('close');\n    }.bind(this));\n    return this;\n  }\n\n  throw new TypeError('Unexpected data type ('+ typeof data + ')');\n}\nutil.inherits(DataStream, Stream);\n\nDataStream.prototype.write = function write(data) {\n  this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);\n  this.emit('data', data);\n};\n\nDataStream.prototype.end = function end(data) {\n  if (data)\n    this.write(data);\n  this.emit('end', data);\n  this.emit('close');\n  this.writable = false;\n  this.readable = false;\n};\n\nmodule.exports = DataStream;\n", "/*jshint node:true */\n'use strict';\nvar Buffer = require('buffer').Buffer; // browserify\nvar SlowBuffer = require('buffer').SlowBuffer;\n\nmodule.exports = bufferEq;\n\nfunction bufferEq(a, b) {\n\n  // shortcutting on type is necessary for correctness\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  // buffer sizes should be well-known information, so despite this\n  // shortcutting, it doesn't leak any information about the *contents* of the\n  // buffers.\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var c = 0;\n  for (var i = 0; i < a.length; i++) {\n    /*jshint bitwise:false */\n    c |= a[i] ^ b[i]; // XOR\n  }\n  return c === 0;\n}\n\nbufferEq.install = function() {\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\n    return bufferEq(this, that);\n  };\n};\n\nvar origBufEqual = Buffer.prototype.equal;\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\nbufferEq.restore = function() {\n  Buffer.prototype.equal = origBufEqual;\n  SlowBuffer.prototype.equal = origSlowBufEqual;\n};\n", "'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n", "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n", "var bufferEqual = require('buffer-equal-constant-time');\nvar Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n", "/*global module*/\nvar Buffer = require('buffer').Buffer;\n\nmodule.exports = function toString(obj) {\n  if (typeof obj === 'string')\n    return obj;\n  if (typeof obj === 'number' || Buffer.isBuffer(obj))\n    return obj.toString();\n  return JSON.stringify(obj);\n};\n", "/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\n\nfunction base64url(string, encoding) {\n  return Buffer\n    .from(string, encoding)\n    .toString('base64')\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction jwsSecuredInput(header, payload, encoding) {\n  encoding = encoding || 'utf8';\n  var encodedHeader = base64url(toString(header), 'binary');\n  var encodedPayload = base64url(toString(payload), encoding);\n  return util.format('%s.%s', encodedHeader, encodedPayload);\n}\n\nfunction jwsSign(opts) {\n  var header = opts.header;\n  var payload = opts.payload;\n  var secretOrKey = opts.secret || opts.privateKey;\n  var encoding = opts.encoding;\n  var algo = jwa(header.alg);\n  var securedInput = jwsSecuredInput(header, payload, encoding);\n  var signature = algo.sign(securedInput, secretOrKey);\n  return util.format('%s.%s', securedInput, signature);\n}\n\nfunction SignStream(opts) {\n  var secret = opts.secret||opts.privateKey||opts.key;\n  var secretStream = new DataStream(secret);\n  this.readable = true;\n  this.header = opts.header;\n  this.encoding = opts.encoding;\n  this.secret = this.privateKey = this.key = secretStream;\n  this.payload = new DataStream(opts.payload);\n  this.secret.once('close', function () {\n    if (!this.payload.writable && this.readable)\n      this.sign();\n  }.bind(this));\n\n  this.payload.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.sign();\n  }.bind(this));\n}\nutil.inherits(SignStream, Stream);\n\nSignStream.prototype.sign = function sign() {\n  try {\n    var signature = jwsSign({\n      header: this.header,\n      payload: this.payload.buffer,\n      secret: this.secret.buffer,\n      encoding: this.encoding\n    });\n    this.emit('done', signature);\n    this.emit('data', signature);\n    this.emit('end');\n    this.readable = false;\n    return signature;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nSignStream.sign = jwsSign;\n\nmodule.exports = SignStream;\n", "/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing))\n    return thing;\n  try { return JSON.parse(thing); }\n  catch (e) { return undefined; }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n\n  if (!isValidJws(jwsSig))\n    return null;\n\n  var header = headerFromJWS(jwsSig);\n\n  if (!header)\n    return null;\n\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json)\n    payload = JSON.parse(payload, opts.encoding);\n\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret||opts.publicKey||opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable)\n      this.verify();\n  }.bind(this));\n\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.verify();\n  }.bind(this));\n}\nutil.inherits(VerifyStream, Stream);\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\n\nmodule.exports = VerifyStream;\n", "/*global exports*/\nvar SignStream = require('./lib/sign-stream');\nvar VerifyStream = require('./lib/verify-stream');\n\nvar ALGORITHMS = [\n  'HS256', 'HS384', 'HS512',\n  'RS256', 'RS384', 'RS512',\n  'PS256', 'PS384', 'PS512',\n  'ES256', 'ES384', 'ES512'\n];\n\nexports.ALGORITHMS = ALGORITHMS;\nexports.sign = SignStream.sign;\nexports.verify = VerifyStream.verify;\nexports.decode = VerifyStream.decode;\nexports.isValid = VerifyStream.isValid;\nexports.createSign = function createSign(opts) {\n  return new SignStream(opts);\n};\nexports.createVerify = function createVerify(opts) {\n  return new VerifyStream(opts);\n};\n", "var jws = require('jws');\n\nmodule.exports = function (jwt, options) {\n  options = options || {};\n  var decoded = jws.decode(jwt, options);\n  if (!decoded) { return null; }\n  var payload = decoded.payload;\n\n  //try parse the payload\n  if(typeof payload === 'string') {\n    try {\n      var obj = JSON.parse(payload);\n      if(obj !== null && typeof obj === 'object') {\n        payload = obj;\n      }\n    } catch (e) { }\n  }\n\n  //return header if `complete` option is enabled.  header includes claims\n  //such as `kid` and `alg` used to select the key within a JWKS needed to\n  //verify the signature\n  if (options.complete === true) {\n    return {\n      header: decoded.header,\n      payload: payload,\n      signature: decoded.signature\n    };\n  }\n  return payload;\n};\n", "var JsonWebTokenError = function (message, error) {\n  Error.call(this, message);\n  if(Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  }\n  this.name = 'JsonWebTokenError';\n  this.message = message;\n  if (error) this.inner = error;\n};\n\nJsonWebTokenError.prototype = Object.create(Error.prototype);\nJsonWebTokenError.prototype.constructor = JsonWebTokenError;\n\nmodule.exports = JsonWebTokenError;\n", "var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar NotBeforeError = function (message, date) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'NotBeforeError';\n  this.date = date;\n};\n\nNotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);\n\nNotBeforeError.prototype.constructor = NotBeforeError;\n\nmodule.exports = NotBeforeError;", "var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar TokenExpiredError = function (message, expiredAt) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'TokenExpiredError';\n  this.expiredAt = expiredAt;\n};\n\nTokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);\n\nTokenExpiredError.prototype.constructor = TokenExpiredError;\n\nmodule.exports = TokenExpiredError;", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "var ms = require('ms');\n\nmodule.exports = function (time, iat) {\n  var timestamp = iat || Math.floor(Date.now() / 1000);\n\n  if (typeof time === 'string') {\n    var milliseconds = ms(time);\n    if (typeof milliseconds === 'undefined') {\n      return;\n    }\n    return Math.floor(timestamp + milliseconds / 1000);\n  } else if (typeof time === 'number') {\n    return timestamp + time;\n  } else {\n    return;\n  }\n\n};", "exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar R = 0\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\nvar NUMERICIDENTIFIERLOOSE = R++\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')'\n\nvar MAINVERSIONLOOSE = R++\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\n\nvar PRERELEASEIDENTIFIERLOOSE = R++\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\n\nvar PRERELEASELOOSE = R++\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?'\n\nsrc[FULL] = '^' + FULLPLAIN + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?'\n\nvar LOOSE = R++\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\n\nvar GTLT = R++\nsrc[GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\nvar XRANGEIDENTIFIER = R++\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\nvar XRANGEPLAIN = R++\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?'\n\nvar XRANGEPLAINLOOSE = R++\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?'\n\nvar XRANGE = R++\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\nvar XRANGELOOSE = R++\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++\nsrc[LONETILDE] = '(?:~>?)'\n\nvar TILDETRIM = R++\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\nvar TILDE = R++\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\nvar TILDELOOSE = R++\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++\nsrc[LONECARET] = '(?:\\\\^)'\n\nvar CARETTRIM = R++\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\nvar CARET = R++\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\nvar CARETLOOSE = R++\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\nvar COMPARATOR = R++\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\nvar HYPHENRANGELOOSE = R++\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[LOOSE] : re[FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1]\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options)\n        })\n      })\n    })\n  })\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[CARETLOOSE] : re[CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '')\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  var match = version.match(re[COERCE])\n\n  if (match == null) {\n    return null\n  }\n\n  return parse(match[1] +\n    '.' + (match[2] || '0') +\n    '.' + (match[3] || '0'))\n}\n", "var semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');\n", "var JsonWebTokenError = require('./lib/JsonWebTokenError');\nvar NotBeforeError    = require('./lib/NotBeforeError');\nvar TokenExpiredError = require('./lib/TokenExpiredError');\nvar decode            = require('./decode');\nvar timespan          = require('./lib/timespan');\nvar PS_SUPPORTED      = require('./lib/psSupported');\nvar jws               = require('jws');\n\nvar PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512'];\nvar RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nvar HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  var done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  var clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  var parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  var decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  var header = decodedToken.header;\n  var getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    var hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      options.algorithms = ['none'];\n    }\n\n    if (!options.algorithms) {\n      options.algorithms = ~secretOrPublicKey.toString().indexOf('BEGIN CERTIFICATE') ||\n        ~secretOrPublicKey.toString().indexOf('BEGIN PUBLIC KEY') ? PUB_KEY_ALGS :\n        ~secretOrPublicKey.toString().indexOf('BEGIN RSA PUBLIC KEY') ? RSA_KEY_ALGS : HS_ALGS;\n\n    }\n\n    if (!~options.algorithms.indexOf(decodedToken.header.alg)) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    var valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    var payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      var audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      var target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      var match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      var invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      var maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      var signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = includes;\n", "/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isBoolean;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = isInteger;\n", "/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n", "/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n", "var timespan = require('./lib/timespan');\nvar PS_SUPPORTED = require('./lib/psSupported');\nvar jws = require('jws');\nvar includes = require('lodash.includes');\nvar isBoolean = require('lodash.isboolean');\nvar isInteger = require('lodash.isinteger');\nvar isNumber = require('lodash.isnumber');\nvar isPlainObject = require('lodash.isplainobject');\nvar isString = require('lodash.isstring');\nvar once = require('lodash.once');\n\nvar SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none']\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nvar sign_options_schema = {\n  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"expiresIn\" should be a number of seconds or string representing a timespan' },\n  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"notBefore\" should be a number of seconds or string representing a timespan' },\n  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '\"audience\" must be a string or array' },\n  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '\"algorithm\" must be a valid string enum value' },\n  header: { isValid: isPlainObject, message: '\"header\" must be an object' },\n  encoding: { isValid: isString, message: '\"encoding\" must be a string' },\n  issuer: { isValid: isString, message: '\"issuer\" must be a string' },\n  subject: { isValid: isString, message: '\"subject\" must be a string' },\n  jwtid: { isValid: isString, message: '\"jwtid\" must be a string' },\n  noTimestamp: { isValid: isBoolean, message: '\"noTimestamp\" must be a boolean' },\n  keyid: { isValid: isString, message: '\"keyid\" must be a string' },\n  mutatePayload: { isValid: isBoolean, message: '\"mutatePayload\" must be a boolean' }\n};\n\nvar registered_claims_schema = {\n  iat: { isValid: isNumber, message: '\"iat\" should be a number of seconds' },\n  exp: { isValid: isNumber, message: '\"exp\" should be a number of seconds' },\n  nbf: { isValid: isNumber, message: '\"nbf\" should be a number of seconds' }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n  Object.keys(object)\n    .forEach(function(key) {\n      var validator = schema[key];\n      if (!validator) {\n        if (!allowUnknown) {\n          throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n        }\n        return;\n      }\n      if (!validator.isValid(object[key])) {\n        throw new Error(validator.message);\n      }\n    });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nvar options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\n\nvar options_for_objects = [\n  'expiresIn',\n  'notBefore',\n  'noTimestamp',\n  'audience',\n  'issuer',\n  'subject',\n  'jwtid',\n];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  var isObjectPayload = typeof payload === 'object' &&\n                        !Buffer.isBuffer(payload);\n\n  var header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    }\n    catch (error) {\n      return failure(error);\n    }\n    if (!options.mutatePayload) {\n      payload = Object.assign({},payload);\n    }\n  } else {\n    var invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  }\n  catch (error) {\n    return failure(error);\n  }\n\n  var timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    var claim = options_to_payload[key];\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n      payload[claim] = options[key];\n    }\n  });\n\n  var encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback)\n      .once('done', function (signature) {\n        callback(null, signature);\n      });\n  } else {\n    return jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});\n  }\n};\n", "module.exports = {\n  decode: require('./decode'),\n  verify: require('./verify'),\n  sign: require('./sign'),\n  JsonWebTokenError: require('./lib/JsonWebTokenError'),\n  NotBeforeError: require('./lib/NotBeforeError'),\n  TokenExpiredError: require('./lib/TokenExpiredError'),\n};\n", "import jsonwebtoken from \"jsonwebtoken\";\nexport async function getToken({ privateKey, payload }) {\n    return jsonwebtoken.sign(payload, privateKey, {\n        algorithm: \"RS256\"\n    });\n}\n", "import { getToken } from \"./get-token\";\nexport async function githubAppJwt({ id, privateKey, now = Math.floor(Date.now() / 1000), }) {\n    // When creating a JSON Web Token, it sets the \"issued at time\" (iat) to 30s\n    // in the past as we have seen people running situations where the GitHub API\n    // claimed the iat would be in future. It turned out the clocks on the\n    // different machine were not in sync.\n    const nowWithSafetyMargin = now - 30;\n    const expiration = nowWithSafetyMargin + 60 * 10; // JWT expiration time (10 minute maximum)\n    const payload = {\n        iat: nowWithSafetyMargin,\n        exp: expiration,\n        iss: id\n    };\n    const token = await getToken({\n        privateKey,\n        payload\n    });\n    return {\n        appId: id,\n        expiration,\n        token\n    };\n}\n", "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", "import { githubAppJwt } from \"universal-github-app-jwt\";\nexport async function getAppAuthentication({ appId, privateKey, timeDifference, }) {\n    try {\n        const appAuthentication = await githubAppJwt({\n            id: +appId,\n            privateKey,\n            now: timeDifference && Math.floor(Date.now() / 1000) + timeDifference,\n        });\n        return {\n            type: \"app\",\n            token: appAuthentication.token,\n            appId: appAuthentication.appId,\n            expiresAt: new Date(appAuthentication.expiration * 1000).toISOString(),\n        };\n    }\n    catch (error) {\n        if (privateKey === \"-----BEGIN RSA PRIVATE KEY-----\") {\n            throw new Error(\"The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\\n'\");\n        }\n        else {\n            throw error;\n        }\n    }\n}\n", "// https://github.com/isaacs/node-lru-cache#readme\nimport LRU from \"lru-cache\";\nexport function getCache() {\n    return new LRU({\n        // cache max. 15000 tokens, that will use less than 10mb memory\n        max: 15000,\n        // Cache for 1 minute less than GitHub expiry\n        maxAge: 1000 * 60 * 59,\n    });\n}\nexport async function get(cache, options) {\n    const cacheKey = optionsToCacheKey(options);\n    const result = await cache.get(cacheKey);\n    if (!result) {\n        return;\n    }\n    const [token, createdAt, expiresAt, repositorySelection, permissionsString, singleFileName,] = result.split(\"|\");\n    const permissions = options.permissions ||\n        permissionsString.split(/,/).reduce((permissions, string) => {\n            if (/!$/.test(string)) {\n                permissions[string.slice(0, -1)] = \"write\";\n            }\n            else {\n                permissions[string] = \"read\";\n            }\n            return permissions;\n        }, {});\n    return {\n        token,\n        createdAt,\n        expiresAt,\n        permissions,\n        repositoryIds: options.repositoryIds,\n        repositoryNames: options.repositoryNames,\n        singleFileName,\n        repositorySelection: repositorySelection,\n    };\n}\nexport async function set(cache, options, data) {\n    const key = optionsToCacheKey(options);\n    const permissionsString = options.permissions\n        ? \"\"\n        : Object.keys(data.permissions)\n            .map((name) => `${name}${data.permissions[name] === \"write\" ? \"!\" : \"\"}`)\n            .join(\",\");\n    const value = [\n        data.token,\n        data.createdAt,\n        data.expiresAt,\n        data.repositorySelection,\n        permissionsString,\n        data.singleFileName,\n    ].join(\"|\");\n    await cache.set(key, value);\n}\nfunction optionsToCacheKey({ installationId, permissions = {}, repositoryIds = [], repositoryNames = [], }) {\n    const permissionsString = Object.keys(permissions)\n        .sort()\n        .map((name) => (permissions[name] === \"read\" ? name : `${name}!`))\n        .join(\",\");\n    const repositoryIdsString = repositoryIds.sort().join(\",\");\n    const repositoryNamesString = repositoryNames.join(\",\");\n    return [\n        installationId,\n        repositoryIdsString,\n        repositoryNamesString,\n        permissionsString,\n    ]\n        .filter(Boolean)\n        .join(\"|\");\n}\n", "export function toTokenAuthentication({ installationId, token, createdAt, expiresAt, repositorySelection, permissions, repositoryIds, repositoryNames, singleFileName, }) {\n    return Object.assign({\n        type: \"token\",\n        tokenType: \"installation\",\n        token,\n        installationId,\n        permissions,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n    }, repositoryIds ? { repositoryIds } : null, repositoryNames ? { repositoryNames } : null, singleFileName ? { singleFileName } : null);\n}\n", "import { get, set } from \"./cache\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { toTokenAuthentication } from \"./to-token-authentication\";\nexport async function getInstallationAuthentication(state, options, customRequest) {\n    const installationId = Number(options.installationId || state.installationId);\n    if (!installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId option is required for installation authentication.\");\n    }\n    if (options.factory) {\n        const { type, factory, oauthApp, ...factoryAuthOptions } = {\n            ...state,\n            ...options,\n        };\n        // @ts-expect-error if `options.factory` is set, the return type for `auth()` should be `Promise<ReturnType<options.factory>>`\n        return factory(factoryAuthOptions);\n    }\n    const optionsWithInstallationTokenFromState = Object.assign({ installationId }, options);\n    if (!options.refresh) {\n        const result = await get(state.cache, optionsWithInstallationTokenFromState);\n        if (result) {\n            const { token, createdAt, expiresAt, permissions, repositoryIds, repositoryNames, singleFileName, repositorySelection, } = result;\n            return toTokenAuthentication({\n                installationId,\n                token,\n                createdAt,\n                expiresAt,\n                permissions,\n                repositorySelection,\n                repositoryIds,\n                repositoryNames,\n                singleFileName,\n            });\n        }\n    }\n    const appAuthentication = await getAppAuthentication(state);\n    const request = customRequest || state.request;\n    const { data: { token, expires_at: expiresAt, repositories, permissions: permissionsOptional, repository_selection: repositorySelectionOptional, single_file: singleFileName, }, } = await request(\"POST /app/installations/{installation_id}/access_tokens\", {\n        installation_id: installationId,\n        repository_ids: options.repositoryIds,\n        repositories: options.repositoryNames,\n        permissions: options.permissions,\n        mediaType: {\n            previews: [\"machine-man\"],\n        },\n        headers: {\n            authorization: `bearer ${appAuthentication.token}`,\n        },\n    });\n    /* istanbul ignore next - permissions are optional per OpenAPI spec, but we think that is incorrect */\n    const permissions = permissionsOptional || {};\n    /* istanbul ignore next - repositorySelection are optional per OpenAPI spec, but we think that is incorrect */\n    const repositorySelection = repositorySelectionOptional || \"all\";\n    const repositoryIds = repositories\n        ? repositories.map((r) => r.id)\n        : void 0;\n    const repositoryNames = repositories\n        ? repositories.map((repo) => repo.name)\n        : void 0;\n    const createdAt = new Date().toISOString();\n    await set(state.cache, optionsWithInstallationTokenFromState, {\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        repositoryNames,\n        singleFileName,\n    });\n    return toTokenAuthentication({\n        installationId,\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        repositoryNames,\n        singleFileName,\n    });\n}\n", "import { Deprecation } from \"deprecation\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { getInstallationAuthentication } from \"./get-installation-authentication\";\nexport async function auth(state, authOptions) {\n    switch (authOptions.type) {\n        case \"app\":\n            return getAppAuthentication(state);\n        // @ts-expect-error \"oauth\" is not supperted in types\n        case \"oauth\":\n            state.log.warn(\n            // @ts-expect-error `log.warn()` expects string\n            new Deprecation(`[@octokit/auth-app] {type: \"oauth\"} is deprecated. Use {type: \"oauth-app\"} instead`));\n        case \"oauth-app\":\n            return state.oauthApp({ type: \"oauth-app\" });\n        case \"installation\":\n            authOptions;\n            return getInstallationAuthentication(state, {\n                ...authOptions,\n                type: \"installation\",\n            });\n        case \"oauth-user\":\n            // @ts-expect-error TODO: infer correct auth options type based on type. authOptions should be typed as \"WebFlowAuthOptions | OAuthAppDeviceFlowAuthOptions | GitHubAppDeviceFlowAuthOptions\"\n            return state.oauthApp(authOptions);\n        default:\n            // @ts-expect-error type is \"never\" at this point\n            throw new Error(`Invalid auth type: ${authOptions.type}`);\n    }\n}\n", "const PATHS = [\n    \"/app\",\n    \"/app/hook/config\",\n    \"/app/hook/deliveries\",\n    \"/app/hook/deliveries/{delivery_id}\",\n    \"/app/hook/deliveries/{delivery_id}/attempts\",\n    \"/app/installations\",\n    \"/app/installations/{installation_id}\",\n    \"/app/installations/{installation_id}/access_tokens\",\n    \"/app/installations/{installation_id}/suspended\",\n    \"/marketplace_listing/accounts/{account_id}\",\n    \"/marketplace_listing/plan\",\n    \"/marketplace_listing/plans\",\n    \"/marketplace_listing/plans/{plan_id}/accounts\",\n    \"/marketplace_listing/stubbed/accounts/{account_id}\",\n    \"/marketplace_listing/stubbed/plan\",\n    \"/marketplace_listing/stubbed/plans\",\n    \"/marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    \"/orgs/{org}/installation\",\n    \"/repos/{owner}/{repo}/installation\",\n    \"/users/{username}/installation\",\n];\n// CREDIT: Simon Grondin (https://github.com/SGrondin)\n// https://github.com/octokit/plugin-throttling.js/blob/45c5d7f13b8af448a9dbca468d9c9150a73b3948/lib/route-matcher.js\nfunction routeMatcher(paths) {\n    // EXAMPLE. For the following paths:\n    /* [\n        \"/orgs/{org}/invitations\",\n        \"/repos/{owner}/{repo}/collaborators/{username}\"\n    ] */\n    const regexes = paths.map((p) => p\n        .split(\"/\")\n        .map((c) => (c.startsWith(\"{\") ? \"(?:.+?)\" : c))\n        .join(\"/\"));\n    // 'regexes' would contain:\n    /* [\n        '/orgs/(?:.+?)/invitations',\n        '/repos/(?:.+?)/(?:.+?)/collaborators/(?:.+?)'\n    ] */\n    const regex = `^(?:${regexes.map((r) => `(?:${r})`).join(\"|\")})[^/]*$`;\n    // 'regex' would contain:\n    /*\n      ^(?:(?:\\/orgs\\/(?:.+?)\\/invitations)|(?:\\/repos\\/(?:.+?)\\/(?:.+?)\\/collaborators\\/(?:.+?)))[^\\/]*$\n  \n      It may look scary, but paste it into https://www.debuggex.com/\n      and it will make a lot more sense!\n    */\n    return new RegExp(regex, \"i\");\n}\nconst REGEX = routeMatcher(PATHS);\nexport function requiresAppAuth(url) {\n    return !!url && REGEX.test(url);\n}\n", "import { requiresBasicAuth } from \"@octokit/auth-oauth-user\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { getInstallationAuthentication } from \"./get-installation-authentication\";\nimport { requiresAppAuth } from \"./requires-app-auth\";\nconst FIVE_SECONDS_IN_MS = 5 * 1000;\nfunction isNotTimeSkewError(error) {\n    return !(error.message.match(/'Expiration time' claim \\('exp'\\) must be a numeric value representing the future time at which the assertion expires/) ||\n        error.message.match(/'Issued at' claim \\('iat'\\) must be an Integer representing the time that the assertion was issued/));\n}\nexport async function hook(state, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    const url = endpoint.url;\n    // Do not intercept request to retrieve a new token\n    if (/\\/login\\/oauth\\/access_token$/.test(url)) {\n        return request(endpoint);\n    }\n    if (requiresAppAuth(url.replace(request.endpoint.DEFAULTS.baseUrl, \"\"))) {\n        const { token } = await getAppAuthentication(state);\n        endpoint.headers.authorization = `bearer ${token}`;\n        let response;\n        try {\n            response = await request(endpoint);\n        }\n        catch (error) {\n            // If there's an issue with the expiration, regenerate the token and try again.\n            // Otherwise rethrow the error for upstream handling.\n            if (isNotTimeSkewError(error)) {\n                throw error;\n            }\n            // If the date header is missing, we can't correct the system time skew.\n            // Throw the error to be handled upstream.\n            if (typeof error.response.headers.date === \"undefined\") {\n                throw error;\n            }\n            const diff = Math.floor((Date.parse(error.response.headers.date) -\n                Date.parse(new Date().toString())) /\n                1000);\n            state.log.warn(error.message);\n            state.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${diff} seconds. Retrying request with the difference accounted for.`);\n            const { token } = await getAppAuthentication({\n                ...state,\n                timeDifference: diff,\n            });\n            endpoint.headers.authorization = `bearer ${token}`;\n            return request(endpoint);\n        }\n        return response;\n    }\n    if (requiresBasicAuth(url)) {\n        const authentication = await state.oauthApp({ type: \"oauth-app\" });\n        endpoint.headers.authorization = authentication.headers.authorization;\n        return request(endpoint);\n    }\n    const { token, createdAt } = await getInstallationAuthentication(state, \n    // @ts-expect-error TBD\n    {}, request);\n    endpoint.headers.authorization = `token ${token}`;\n    return sendRequestWithRetries(state, request, endpoint, createdAt);\n}\n/**\n * Newly created tokens might not be accessible immediately after creation.\n * In case of a 401 response, we retry with an exponential delay until more\n * than five seconds pass since the creation of the token.\n *\n * @see https://github.com/octokit/auth-app.js/issues/65\n */\nasync function sendRequestWithRetries(state, request, options, createdAt, retries = 0) {\n    const timeSinceTokenCreationInMs = +new Date() - +new Date(createdAt);\n    try {\n        return await request(options);\n    }\n    catch (error) {\n        if (error.status !== 401) {\n            throw error;\n        }\n        if (timeSinceTokenCreationInMs >= FIVE_SECONDS_IN_MS) {\n            if (retries > 0) {\n                error.message = `After ${retries} retries within ${timeSinceTokenCreationInMs / 1000}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`;\n            }\n            throw error;\n        }\n        ++retries;\n        const awaitTime = retries * 1000;\n        state.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${retries}, wait: ${awaitTime / 1000}s)`);\n        await new Promise((resolve) => setTimeout(resolve, awaitTime));\n        return sendRequestWithRetries(state, request, options, createdAt, retries);\n    }\n}\n", "export const VERSION = \"4.0.7\";\n", "import { getUserAgent } from \"universal-user-agent\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { createOAuthAppAuth } from \"@octokit/auth-oauth-app\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { getCache } from \"./cache\";\nimport { VERSION } from \"./version\";\nexport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport function createAppAuth(options) {\n    if (!options.appId) {\n        throw new Error(\"[@octokit/auth-app] appId option is required\");\n    }\n    if (!Number.isFinite(+options.appId)) {\n        throw new Error(\"[@octokit/auth-app] appId option must be a number or numeric string\");\n    }\n    if (!options.privateKey) {\n        throw new Error(\"[@octokit/auth-app] privateKey option is required\");\n    }\n    if (\"installationId\" in options && !options.installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId is set to a falsy value\");\n    }\n    const log = Object.assign({\n        warn: console.warn.bind(console),\n    }, options.log);\n    const request = options.request ||\n        defaultRequest.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const state = Object.assign({\n        request,\n        cache: getCache(),\n    }, options, options.installationId\n        ? { installationId: Number(options.installationId) }\n        : {}, {\n        log,\n        oauthApp: createOAuthAppAuth({\n            clientType: \"github-app\",\n            clientId: options.clientId || \"\",\n            clientSecret: options.clientSecret || \"\",\n            request,\n        }),\n    });\n    // @ts-expect-error not worth the extra code to appease TS\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n", "export async function auth(reason) {\n    return {\n        type: \"unauthenticated\",\n        reason,\n    };\n}\n", "export function isRateLimitError(error) {\n    if (error.status !== 403) {\n        return false;\n    }\n    /* istanbul ignore if */\n    if (!error.response) {\n        return false;\n    }\n    return error.response.headers[\"x-ratelimit-remaining\"] === \"0\";\n}\n", "const REGEX_ABUSE_LIMIT_MESSAGE = /\\babuse\\b/i;\nexport function isAbuseLimitError(error) {\n    if (error.status !== 403) {\n        return false;\n    }\n    return REGEX_ABUSE_LIMIT_MESSAGE.test(error.message);\n}\n", "import { isRateLimitError } from \"./is-rate-limit-error\";\nimport { isAbuseLimitError } from \"./is-abuse-limit-error\";\nexport async function hook(reason, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    return request(endpoint).catch((error) => {\n        if (error.status === 404) {\n            error.message = `Not found. May be due to lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (isRateLimitError(error)) {\n            error.message = `API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (isAbuseLimitError(error)) {\n            error.message = `You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (error.status === 401) {\n            error.message = `Unauthorized. \"${endpoint.method} ${endpoint.url}\" failed most likely due to lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (error.status >= 400 && error.status < 500) {\n            error.message = error.message.replace(/\\.?$/, `. May be caused by lack of authentication (${reason}).`);\n        }\n        throw error;\n    });\n}\n", "import { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport const createUnauthenticatedAuth = function createUnauthenticatedAuth(options) {\n    if (!options || !options.reason) {\n        throw new Error(\"[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth\");\n    }\n    return Object.assign(auth.bind(null, options.reason), {\n        hook: hook.bind(null, options.reason),\n    });\n};\n", "/*! fromentries. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function fromEntries (iterable) {\n  return [...iterable].reduce((obj, [key, val]) => {\n    obj[key] = val\n    return obj\n  }, {})\n}\n", "export const VERSION = \"4.1.0\";\n", "export function addEventHandler(state, eventName, eventHandler) {\n    if (Array.isArray(eventName)) {\n        for (const singleEventName of eventName) {\n            addEventHandler(state, singleEventName, eventHandler);\n        }\n        return;\n    }\n    if (!state.eventHandlers[eventName]) {\n        state.eventHandlers[eventName] = [];\n    }\n    state.eventHandlers[eventName].push(eventHandler);\n}\n", "import { Octokit } from \"@octokit/core\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nexport const OAuthAppOctokit = Octokit.defaults({\n    userAgent: `octokit-oauth-app.js/${VERSION} ${getUserAgent()}`,\n});\n", "export async function emitEvent(state, context) {\n    const { name, action } = context;\n    if (state.eventHandlers[`${name}.${action}`]) {\n        for (const eventHandler of state.eventHandlers[`${name}.${action}`]) {\n            await eventHandler(context);\n        }\n    }\n    if (state.eventHandlers[name]) {\n        for (const eventHandler of state.eventHandlers[name]) {\n            await eventHandler(context);\n        }\n    }\n}\n", "import { createOAuthUserAuth, } from \"@octokit/auth-oauth-user\";\nimport { emitEvent } from \"../emit-event\";\nexport async function getUserOctokitWithState(state, options) {\n    return state.octokit.auth({\n        type: \"oauth-user\",\n        ...options,\n        async factory(options) {\n            const octokit = new state.Octokit({\n                authStrategy: createOAuthUserAuth,\n                auth: options,\n            });\n            const authentication = (await octokit.auth({\n                type: \"get\",\n            }));\n            await emitEvent(state, {\n                name: \"token\",\n                action: \"created\",\n                token: authentication.token,\n                scopes: authentication.scopes,\n                authentication,\n                octokit,\n            });\n            return octokit;\n        },\n    });\n}\n", "import * as OAuthMethods from \"@octokit/oauth-methods\";\nexport function getWebFlowAuthorizationUrlWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        request: state.octokit.request,\n        ...options,\n        allowSignup: options.allowSignup || state.allowSignup,\n        scopes: options.scopes || state.defaultScopes,\n    };\n    return OAuthMethods.getWebFlowAuthorizationUrl({\n        clientType: state.clientType,\n        ...optionsWithDefaults,\n    });\n}\n", "import * as OAuthAppAuth from \"@octokit/auth-oauth-app\";\nimport { emitEvent } from \"../emit-event\";\nexport async function createTokenWithState(state, options) {\n    const authentication = await state.octokit.auth({\n        type: \"oauth-user\",\n        ...options,\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"created\",\n        token: authentication.token,\n        scopes: authentication.scopes,\n        authentication,\n        octokit: new state.Octokit({\n            authStrategy: OAuthAppAuth.createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: authentication.token,\n                scopes: authentication.scopes,\n                refreshToken: authentication.refreshToken,\n                expiresAt: authentication.expiresAt,\n                refreshTokenExpiresAt: authentication.refreshTokenExpiresAt,\n            },\n        }),\n    });\n    return { authentication };\n}\n", "import * as OAuthMethods from \"@octokit/oauth-methods\";\nexport async function checkTokenWithState(state, options) {\n    const result = await OAuthMethods.checkToken({\n        // @ts-expect-error not worth the extra code to appease TS\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    });\n    Object.assign(result.authentication, { type: \"token\", tokenType: \"oauth\" });\n    return result;\n}\n", "import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { emitEvent } from \"../emit-event\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function resetTokenWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    if (state.clientType === \"oauth-app\") {\n        const response = await OAuthMethods.resetToken({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        });\n        const authentication = Object.assign(response.authentication, {\n            type: \"token\",\n            tokenType: \"oauth\",\n        });\n        await emitEvent(state, {\n            name: \"token\",\n            action: \"reset\",\n            token: response.authentication.token,\n            scopes: response.authentication.scopes || undefined,\n            authentication: authentication,\n            octokit: new state.Octokit({\n                authStrategy: createOAuthUserAuth,\n                auth: {\n                    clientType: state.clientType,\n                    clientId: state.clientId,\n                    clientSecret: state.clientSecret,\n                    token: response.authentication.token,\n                    scopes: response.authentication.scopes,\n                },\n            }),\n        });\n        return { ...response, authentication };\n    }\n    const response = await OAuthMethods.resetToken({\n        clientType: \"github-app\",\n        ...optionsWithDefaults,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"reset\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n", "import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { emitEvent } from \"../emit-event\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function refreshTokenWithState(state, options) {\n    if (state.clientType === \"oauth-app\") {\n        throw new Error(\"[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps\");\n    }\n    const response = await OAuthMethods.refreshToken({\n        clientType: \"github-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        refreshToken: options.refreshToken,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"refreshed\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n", "import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nimport { emitEvent } from \"../emit-event\";\nexport async function scopeTokenWithState(state, options) {\n    if (state.clientType === \"oauth-app\") {\n        throw new Error(\"[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps\");\n    }\n    const response = await OAuthMethods.scopeToken({\n        clientType: \"github-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"scoped\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n", "import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createUnauthenticatedAuth } from \"@octokit/auth-unauthenticated\";\nimport { emitEvent } from \"../emit-event\";\nexport async function deleteTokenWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    const response = state.clientType === \"oauth-app\"\n        ? await OAuthMethods.deleteToken({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        })\n        : // istanbul ignore next\n            await OAuthMethods.deleteToken({\n                clientType: \"github-app\",\n                ...optionsWithDefaults,\n            });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`,\n            },\n        }),\n    });\n    return response;\n}\n", "import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createUnauthenticatedAuth } from \"@octokit/auth-unauthenticated\";\nimport { emitEvent } from \"../emit-event\";\nexport async function deleteAuthorizationWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    const response = state.clientType === \"oauth-app\"\n        ? await OAuthMethods.deleteAuthorization({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        })\n        : // istanbul ignore next\n            await OAuthMethods.deleteAuthorization({\n                clientType: \"github-app\",\n                ...optionsWithDefaults,\n            });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`,\n            },\n        }),\n    });\n    await emitEvent(state, {\n        name: \"authorization\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"authorization.deleted\" event. The access for the app has been revoked.`,\n            },\n        }),\n    });\n    return response;\n}\n", "// @ts-ignore - requires esModuleInterop flag\nimport fromEntries from \"fromentries\";\nexport async function handleRequest(app, { pathPrefix = \"/api/github/oauth\" }, request) {\n    if (request.method === \"OPTIONS\") {\n        return {\n            status: 200,\n            headers: {\n                \"access-control-allow-origin\": \"*\",\n                \"access-control-allow-methods\": \"*\",\n                \"access-control-allow-headers\": \"Content-Type, User-Agent, Authorization\",\n            },\n        };\n    }\n    // request.url may include ?query parameters which we don't want for `route`\n    // hence the workaround using new URL()\n    const { pathname } = new URL(request.url, \"http://localhost\");\n    const route = [request.method, pathname].join(\" \");\n    const routes = {\n        getLogin: `GET ${pathPrefix}/login`,\n        getCallback: `GET ${pathPrefix}/callback`,\n        createToken: `POST ${pathPrefix}/token`,\n        getToken: `GET ${pathPrefix}/token`,\n        patchToken: `PATCH ${pathPrefix}/token`,\n        patchRefreshToken: `PATCH ${pathPrefix}/refresh-token`,\n        scopeToken: `POST ${pathPrefix}/token/scoped`,\n        deleteToken: `DELETE ${pathPrefix}/token`,\n        deleteGrant: `DELETE ${pathPrefix}/grant`,\n    };\n    // handle unknown routes\n    if (!Object.values(routes).includes(route)) {\n        return null;\n    }\n    let json;\n    try {\n        const text = await request.text();\n        json = text ? JSON.parse(text) : {};\n    }\n    catch (error) {\n        return {\n            status: 400,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"access-control-allow-origin\": \"*\",\n            },\n            text: JSON.stringify({\n                error: \"[@octokit/oauth-app] request error\",\n            }),\n        };\n    }\n    const { searchParams } = new URL(request.url, \"http://localhost\");\n    const query = fromEntries(searchParams);\n    const headers = request.headers;\n    try {\n        if (route === routes.getLogin) {\n            const { url } = app.getWebFlowAuthorizationUrl({\n                state: query.state,\n                scopes: query.scopes ? query.scopes.split(\",\") : undefined,\n                allowSignup: query.allowSignup !== \"false\",\n                redirectUrl: query.redirectUrl,\n            });\n            return { status: 302, headers: { location: url } };\n        }\n        if (route === routes.getCallback) {\n            if (query.error) {\n                throw new Error(`[@octokit/oauth-app] ${query.error} ${query.error_description}`);\n            }\n            if (!query.code) {\n                throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n            }\n            const { authentication: { token }, } = await app.createToken({\n                code: query.code,\n            });\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"text/html\",\n                },\n                text: `<h1>Token created successfully</h1>\n    \n<p>Your token is: <strong>${token}</strong>. Copy it now as it cannot be shown again.</p>`,\n            };\n        }\n        if (route === routes.createToken) {\n            const { code, redirectUrl } = json;\n            if (!code) {\n                throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n            }\n            const result = await app.createToken({\n                code,\n                redirectUrl,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 201,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.getToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.checkToken({\n                token,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.patchToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.resetToken({ token });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.patchRefreshToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const { refreshToken } = json;\n            if (!refreshToken) {\n                throw new Error(\"[@octokit/oauth-app] refreshToken must be sent in request body\");\n            }\n            const result = await app.refreshToken({ refreshToken });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.scopeToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.scopeToken({\n                token,\n                ...json,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.deleteToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            await app.deleteToken({\n                token,\n            });\n            return {\n                status: 204,\n                headers: { \"access-control-allow-origin\": \"*\" },\n            };\n        }\n        // route === routes.deleteGrant\n        const token = headers.authorization?.substr(\"token \".length);\n        if (!token) {\n            throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n        }\n        await app.deleteAuthorization({\n            token,\n        });\n        return {\n            status: 204,\n            headers: { \"access-control-allow-origin\": \"*\" },\n        };\n    }\n    catch (error) {\n        return {\n            status: 400,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"access-control-allow-origin\": \"*\",\n            },\n            text: JSON.stringify({ error: error.message }),\n        };\n    }\n}\n", "export function parseRequest(request) {\n    const { method, url, headers } = request;\n    async function text() {\n        const text = await new Promise((resolve, reject) => {\n            let bodyChunks = [];\n            request\n                .on(\"error\", reject)\n                .on(\"data\", (chunk) => bodyChunks.push(chunk))\n                .on(\"end\", () => resolve(Buffer.concat(bodyChunks).toString()));\n        });\n        return text;\n    }\n    return { method, url, headers, text };\n}\n", "export function sendResponse(octokitResponse, response) {\n    response.writeHead(octokitResponse.status, octokitResponse.headers);\n    response.end(octokitResponse.text);\n}\n", "export function onUnhandledRequestDefault(request) {\n    return {\n        status: 404,\n        headers: { \"content-type\": \"application/json\" },\n        text: JSON.stringify({\n            error: `Unknown route: ${request.method} ${request.url}`,\n        }),\n    };\n}\n", "import { parseRequest } from \"./parse-request\";\nimport { sendResponse } from \"./send-response\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nimport { handleRequest } from \"../handle-request\";\nfunction onUnhandledRequestDefaultNode(request, response) {\n    const octokitRequest = parseRequest(request);\n    const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n    sendResponse(octokitResponse, response);\n}\nexport function createNodeMiddleware(app, { pathPrefix, onUnhandledRequest, } = {}) {\n    if (onUnhandledRequest) {\n        app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n    }\n    onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultNode);\n    return async function (request, response, next) {\n        const octokitRequest = parseRequest(request);\n        const octokitResponse = await handleRequest(app, { pathPrefix }, octokitRequest);\n        if (octokitResponse) {\n            sendResponse(octokitResponse, response);\n        }\n        else if (typeof next === \"function\") {\n            next();\n        }\n        else {\n            onUnhandledRequest(request, response);\n        }\n    };\n}\n", "export function parseRequest(request) {\n    // @ts-ignore Worker environment supports fromEntries/entries.\n    const headers = Object.fromEntries(request.headers.entries());\n    return {\n        method: request.method,\n        url: request.url,\n        headers,\n        text: () => request.text(),\n    };\n}\n", "export function sendResponse(octokitResponse) {\n    return new Response(octokitResponse.text, {\n        status: octokitResponse.status,\n        headers: octokitResponse.headers,\n    });\n}\n", "import { parseRequest } from \"./parse-request\";\nimport { sendResponse } from \"./send-response\";\nimport { handleRequest } from \"../handle-request\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nasync function onUnhandledRequestDefaultWebWorker(request) {\n    const octokitRequest = parseRequest(request);\n    const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n    return sendResponse(octokitResponse);\n}\nexport function createWebWorkerHandler(app, { pathPrefix, onUnhandledRequest, } = {}) {\n    if (onUnhandledRequest) {\n        app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n    }\n    onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultWebWorker);\n    return async function (request) {\n        const octokitRequest = parseRequest(request);\n        const octokitResponse = await handleRequest(app, { pathPrefix }, octokitRequest);\n        return octokitResponse\n            ? sendResponse(octokitResponse)\n            : await onUnhandledRequest(request);\n    };\n}\n/** @deprecated */\nexport function createCloudflareHandler(...args) {\n    args[0].octokit.log.warn(\"[@octokit/oauth-app] `createCloudflareHandler` is deprecated, use `createWebWorkerHandler` instead\");\n    return createWebWorkerHandler(...args);\n}\n", "export function parseRequest(request) {\n    const { method } = request.requestContext.http;\n    let url = request.rawPath;\n    const { stage } = request.requestContext;\n    if (url.startsWith(\"/\" + stage))\n        url = url.substring(stage.length + 1);\n    if (request.rawQueryString)\n        url += \"?\" + request.rawQueryString;\n    const headers = request.headers;\n    const text = async () => request.body || \"\";\n    return { method, url, headers, text };\n}\n", "export function sendResponse(octokitResponse) {\n    return {\n        statusCode: octokitResponse.status,\n        headers: octokitResponse.headers,\n        body: octokitResponse.text,\n    };\n}\n", "import { parseRequest } from \"./api-gateway-v2-parse-request\";\nimport { sendResponse } from \"./api-gateway-v2-send-response\";\nimport { handleRequest } from \"../handle-request\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nasync function onUnhandledRequestDefaultAWSAPIGatewayV2(event) {\n    const request = parseRequest(event);\n    const response = onUnhandledRequestDefault(request);\n    return sendResponse(response);\n}\nexport function createAWSLambdaAPIGatewayV2Handler(app, { pathPrefix, onUnhandledRequest, } = {}) {\n    if (onUnhandledRequest) {\n        app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n    }\n    onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultAWSAPIGatewayV2);\n    return async function (event) {\n        const request = parseRequest(event);\n        const response = await handleRequest(app, { pathPrefix }, request);\n        return response ? sendResponse(response) : onUnhandledRequest(event);\n    };\n}\n", "import { createOAuthAppAuth } from \"@octokit/auth-oauth-app\";\nimport { VERSION } from \"./version\";\nimport { addEventHandler } from \"./add-event-handler\";\nimport { OAuthAppOctokit } from \"./oauth-app-octokit\";\nimport { getUserOctokitWithState, } from \"./methods/get-user-octokit\";\nimport { getWebFlowAuthorizationUrlWithState, } from \"./methods/get-web-flow-authorization-url\";\nimport { createTokenWithState, } from \"./methods/create-token\";\nimport { checkTokenWithState, } from \"./methods/check-token\";\nimport { resetTokenWithState, } from \"./methods/reset-token\";\nimport { refreshTokenWithState, } from \"./methods/refresh-token\";\nimport { scopeTokenWithState, } from \"./methods/scope-token\";\nimport { deleteTokenWithState, } from \"./methods/delete-token\";\nimport { deleteAuthorizationWithState, } from \"./methods/delete-authorization\";\n// generic handlers\nexport { handleRequest } from \"./middleware/handle-request\";\nexport { createNodeMiddleware } from \"./middleware/node/index\";\nexport { createCloudflareHandler, createWebWorkerHandler, } from \"./middleware/web-worker/index\";\nexport { createAWSLambdaAPIGatewayV2Handler } from \"./middleware/aws-lambda/api-gateway-v2\";\nexport class OAuthApp {\n    constructor(options) {\n        const Octokit = options.Octokit || OAuthAppOctokit;\n        this.type = (options.clientType ||\n            \"oauth-app\");\n        const octokit = new Octokit({\n            authStrategy: createOAuthAppAuth,\n            auth: {\n                clientType: this.type,\n                clientId: options.clientId,\n                clientSecret: options.clientSecret,\n            },\n        });\n        const state = {\n            clientType: this.type,\n            clientId: options.clientId,\n            clientSecret: options.clientSecret,\n            // @ts-expect-error defaultScopes not permitted for GitHub Apps\n            defaultScopes: options.defaultScopes || [],\n            allowSignup: options.allowSignup,\n            baseUrl: options.baseUrl,\n            log: options.log,\n            Octokit,\n            octokit,\n            eventHandlers: {},\n        };\n        this.on = addEventHandler.bind(null, state);\n        // @ts-expect-error TODO: figure this out\n        this.octokit = octokit;\n        this.getUserOctokit = getUserOctokitWithState.bind(null, state);\n        this.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrlWithState.bind(null, state);\n        this.createToken = createTokenWithState.bind(null, state);\n        this.checkToken = checkTokenWithState.bind(null, state);\n        this.resetToken = resetTokenWithState.bind(null, state);\n        this.refreshToken = refreshTokenWithState.bind(null, state);\n        this.scopeToken = scopeTokenWithState.bind(null, state);\n        this.deleteToken = deleteTokenWithState.bind(null, state);\n        this.deleteAuthorization = deleteAuthorizationWithState.bind(null, state);\n    }\n    static defaults(defaults) {\n        const OAuthAppWithDefaults = class extends this {\n            constructor(...args) {\n                super({\n                    ...defaults,\n                    ...args[0],\n                });\n            }\n        };\n        return OAuthAppWithDefaults;\n    }\n}\nOAuthApp.VERSION = VERSION;\n", "'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n", "'use strict';\nconst os = require('os');\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir();\n\nmodule.exports = (stack, options) => {\n\toptions = Object.assign({pretty: false}, options);\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (options.pretty) {\n\t\t\t\treturn line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n};\n", "'use strict';\nconst indentString = require('indent-string');\nconst cleanStack = require('clean-stack');\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nclass AggregateError extends Error {\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = [...errors].map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.name = 'AggregateError';\n\n\t\tObject.defineProperty(this, '_errors', {value: errors});\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const error of this._errors) {\n\t\t\tyield error;\n\t\t}\n\t}\n}\n\nmodule.exports = AggregateError;\n", "export var Algorithm;\n(function (Algorithm) {\n    Algorithm[\"SHA1\"] = \"sha1\";\n    Algorithm[\"SHA256\"] = \"sha256\";\n})(Algorithm || (Algorithm = {}));\n", "export const VERSION = \"3.0.1\";\n", "import { createHmac } from \"crypto\";\nimport { Algorithm } from \"../types\";\nimport { VERSION } from \"../version\";\nexport async function sign(options, payload) {\n    const { secret, algorithm } = typeof options === \"object\"\n        ? {\n            secret: options.secret,\n            algorithm: options.algorithm || Algorithm.SHA256,\n        }\n        : { secret: options, algorithm: Algorithm.SHA256 };\n    if (!secret || !payload) {\n        throw new TypeError(\"[@octokit/webhooks-methods] secret & payload required for sign()\");\n    }\n    if (!Object.values(Algorithm).includes(algorithm)) {\n        throw new TypeError(`[@octokit/webhooks] Algorithm ${algorithm} is not supported. Must be  'sha1' or 'sha256'`);\n    }\n    return `${algorithm}=${createHmac(algorithm, secret)\n        .update(payload)\n        .digest(\"hex\")}`;\n}\nsign.VERSION = VERSION;\n", "export const getAlgorithm = (signature) => {\n    return signature.startsWith(\"sha256=\") ? \"sha256\" : \"sha1\";\n};\n", "import { timingSafeEqual } from \"crypto\";\nimport { Buffer } from \"buffer\";\nimport { sign } from \"./sign\";\nimport { VERSION } from \"../version\";\nimport { getAlgorithm } from \"../utils\";\nexport async function verify(secret, eventPayload, signature) {\n    if (!secret || !eventPayload || !signature) {\n        throw new TypeError(\"[@octokit/webhooks-methods] secret, eventPayload & signature required\");\n    }\n    const signatureBuffer = Buffer.from(signature);\n    const algorithm = getAlgorithm(signature);\n    const verificationBuffer = Buffer.from(await sign({ secret, algorithm }, eventPayload));\n    if (signatureBuffer.length !== verificationBuffer.length) {\n        return false;\n    }\n    // constant time comparison to prevent timing attachs\n    // https://stackoverflow.com/a/31096242/206879\n    // https://en.wikipedia.org/wiki/Timing_attack\n    return timingSafeEqual(signatureBuffer, verificationBuffer);\n}\nverify.VERSION = VERSION;\n", "export const createLogger = (logger) => ({\n    debug: () => { },\n    info: () => { },\n    warn: console.warn.bind(console),\n    error: console.error.bind(console),\n    ...logger,\n});\n", "// THIS FILE IS GENERATED - DO NOT EDIT DIRECTLY\n// make edits in scripts/generate-types.ts\nexport const emitterEventNames = [\n    \"branch_protection_rule\",\n    \"branch_protection_rule.created\",\n    \"branch_protection_rule.deleted\",\n    \"branch_protection_rule.edited\",\n    \"check_run\",\n    \"check_run.completed\",\n    \"check_run.created\",\n    \"check_run.requested_action\",\n    \"check_run.rerequested\",\n    \"check_suite\",\n    \"check_suite.completed\",\n    \"check_suite.requested\",\n    \"check_suite.rerequested\",\n    \"code_scanning_alert\",\n    \"code_scanning_alert.appeared_in_branch\",\n    \"code_scanning_alert.closed_by_user\",\n    \"code_scanning_alert.created\",\n    \"code_scanning_alert.fixed\",\n    \"code_scanning_alert.reopened\",\n    \"code_scanning_alert.reopened_by_user\",\n    \"commit_comment\",\n    \"commit_comment.created\",\n    \"create\",\n    \"delete\",\n    \"dependabot_alert\",\n    \"dependabot_alert.created\",\n    \"dependabot_alert.dismissed\",\n    \"dependabot_alert.fixed\",\n    \"dependabot_alert.reintroduced\",\n    \"dependabot_alert.reopened\",\n    \"deploy_key\",\n    \"deploy_key.created\",\n    \"deploy_key.deleted\",\n    \"deployment\",\n    \"deployment.created\",\n    \"deployment_status\",\n    \"deployment_status.created\",\n    \"discussion\",\n    \"discussion.answered\",\n    \"discussion.category_changed\",\n    \"discussion.created\",\n    \"discussion.deleted\",\n    \"discussion.edited\",\n    \"discussion.labeled\",\n    \"discussion.locked\",\n    \"discussion.pinned\",\n    \"discussion.transferred\",\n    \"discussion.unanswered\",\n    \"discussion.unlabeled\",\n    \"discussion.unlocked\",\n    \"discussion.unpinned\",\n    \"discussion_comment\",\n    \"discussion_comment.created\",\n    \"discussion_comment.deleted\",\n    \"discussion_comment.edited\",\n    \"fork\",\n    \"github_app_authorization\",\n    \"github_app_authorization.revoked\",\n    \"gollum\",\n    \"installation\",\n    \"installation.created\",\n    \"installation.deleted\",\n    \"installation.new_permissions_accepted\",\n    \"installation.suspend\",\n    \"installation.unsuspend\",\n    \"installation_repositories\",\n    \"installation_repositories.added\",\n    \"installation_repositories.removed\",\n    \"issue_comment\",\n    \"issue_comment.created\",\n    \"issue_comment.deleted\",\n    \"issue_comment.edited\",\n    \"issues\",\n    \"issues.assigned\",\n    \"issues.closed\",\n    \"issues.deleted\",\n    \"issues.demilestoned\",\n    \"issues.edited\",\n    \"issues.labeled\",\n    \"issues.locked\",\n    \"issues.milestoned\",\n    \"issues.opened\",\n    \"issues.pinned\",\n    \"issues.reopened\",\n    \"issues.transferred\",\n    \"issues.unassigned\",\n    \"issues.unlabeled\",\n    \"issues.unlocked\",\n    \"issues.unpinned\",\n    \"label\",\n    \"label.created\",\n    \"label.deleted\",\n    \"label.edited\",\n    \"marketplace_purchase\",\n    \"marketplace_purchase.cancelled\",\n    \"marketplace_purchase.changed\",\n    \"marketplace_purchase.pending_change\",\n    \"marketplace_purchase.pending_change_cancelled\",\n    \"marketplace_purchase.purchased\",\n    \"member\",\n    \"member.added\",\n    \"member.edited\",\n    \"member.removed\",\n    \"membership\",\n    \"membership.added\",\n    \"membership.removed\",\n    \"merge_group\",\n    \"merge_group.checks_requested\",\n    \"meta\",\n    \"meta.deleted\",\n    \"milestone\",\n    \"milestone.closed\",\n    \"milestone.created\",\n    \"milestone.deleted\",\n    \"milestone.edited\",\n    \"milestone.opened\",\n    \"org_block\",\n    \"org_block.blocked\",\n    \"org_block.unblocked\",\n    \"organization\",\n    \"organization.deleted\",\n    \"organization.member_added\",\n    \"organization.member_invited\",\n    \"organization.member_removed\",\n    \"organization.renamed\",\n    \"package\",\n    \"package.published\",\n    \"package.updated\",\n    \"page_build\",\n    \"ping\",\n    \"project\",\n    \"project.closed\",\n    \"project.created\",\n    \"project.deleted\",\n    \"project.edited\",\n    \"project.reopened\",\n    \"project_card\",\n    \"project_card.converted\",\n    \"project_card.created\",\n    \"project_card.deleted\",\n    \"project_card.edited\",\n    \"project_card.moved\",\n    \"project_column\",\n    \"project_column.created\",\n    \"project_column.deleted\",\n    \"project_column.edited\",\n    \"project_column.moved\",\n    \"projects_v2_item\",\n    \"projects_v2_item.archived\",\n    \"projects_v2_item.converted\",\n    \"projects_v2_item.created\",\n    \"projects_v2_item.deleted\",\n    \"projects_v2_item.edited\",\n    \"projects_v2_item.reordered\",\n    \"projects_v2_item.restored\",\n    \"public\",\n    \"pull_request\",\n    \"pull_request.assigned\",\n    \"pull_request.auto_merge_disabled\",\n    \"pull_request.auto_merge_enabled\",\n    \"pull_request.closed\",\n    \"pull_request.converted_to_draft\",\n    \"pull_request.dequeued\",\n    \"pull_request.edited\",\n    \"pull_request.labeled\",\n    \"pull_request.locked\",\n    \"pull_request.opened\",\n    \"pull_request.queued\",\n    \"pull_request.ready_for_review\",\n    \"pull_request.reopened\",\n    \"pull_request.review_request_removed\",\n    \"pull_request.review_requested\",\n    \"pull_request.synchronize\",\n    \"pull_request.unassigned\",\n    \"pull_request.unlabeled\",\n    \"pull_request.unlocked\",\n    \"pull_request_review\",\n    \"pull_request_review.dismissed\",\n    \"pull_request_review.edited\",\n    \"pull_request_review.submitted\",\n    \"pull_request_review_comment\",\n    \"pull_request_review_comment.created\",\n    \"pull_request_review_comment.deleted\",\n    \"pull_request_review_comment.edited\",\n    \"pull_request_review_thread\",\n    \"pull_request_review_thread.resolved\",\n    \"pull_request_review_thread.unresolved\",\n    \"push\",\n    \"release\",\n    \"release.created\",\n    \"release.deleted\",\n    \"release.edited\",\n    \"release.prereleased\",\n    \"release.published\",\n    \"release.released\",\n    \"release.unpublished\",\n    \"repository\",\n    \"repository.archived\",\n    \"repository.created\",\n    \"repository.deleted\",\n    \"repository.edited\",\n    \"repository.privatized\",\n    \"repository.publicized\",\n    \"repository.renamed\",\n    \"repository.transferred\",\n    \"repository.unarchived\",\n    \"repository_dispatch\",\n    \"repository_import\",\n    \"repository_vulnerability_alert\",\n    \"repository_vulnerability_alert.create\",\n    \"repository_vulnerability_alert.dismiss\",\n    \"repository_vulnerability_alert.reopen\",\n    \"repository_vulnerability_alert.resolve\",\n    \"secret_scanning_alert\",\n    \"secret_scanning_alert.created\",\n    \"secret_scanning_alert.reopened\",\n    \"secret_scanning_alert.resolved\",\n    \"security_advisory\",\n    \"security_advisory.performed\",\n    \"security_advisory.published\",\n    \"security_advisory.updated\",\n    \"security_advisory.withdrawn\",\n    \"sponsorship\",\n    \"sponsorship.cancelled\",\n    \"sponsorship.created\",\n    \"sponsorship.edited\",\n    \"sponsorship.pending_cancellation\",\n    \"sponsorship.pending_tier_change\",\n    \"sponsorship.tier_changed\",\n    \"star\",\n    \"star.created\",\n    \"star.deleted\",\n    \"status\",\n    \"team\",\n    \"team.added_to_repository\",\n    \"team.created\",\n    \"team.deleted\",\n    \"team.edited\",\n    \"team.removed_from_repository\",\n    \"team_add\",\n    \"watch\",\n    \"watch.started\",\n    \"workflow_dispatch\",\n    \"workflow_job\",\n    \"workflow_job.completed\",\n    \"workflow_job.in_progress\",\n    \"workflow_job.queued\",\n    \"workflow_run\",\n    \"workflow_run.completed\",\n    \"workflow_run.in_progress\",\n    \"workflow_run.requested\",\n];\n", "import { emitterEventNames } from \"../generated/webhook-names\";\nfunction handleEventHandlers(state, webhookName, handler) {\n    if (!state.hooks[webhookName]) {\n        state.hooks[webhookName] = [];\n    }\n    state.hooks[webhookName].push(handler);\n}\nexport function receiverOn(state, webhookNameOrNames, handler) {\n    if (Array.isArray(webhookNameOrNames)) {\n        webhookNameOrNames.forEach((webhookName) => receiverOn(state, webhookName, handler));\n        return;\n    }\n    if ([\"*\", \"error\"].includes(webhookNameOrNames)) {\n        const webhookName = webhookNameOrNames === \"*\" ? \"any\" : webhookNameOrNames;\n        const message = `Using the \"${webhookNameOrNames}\" event with the regular Webhooks.on() function is not supported. Please use the Webhooks.on${webhookName.charAt(0).toUpperCase() + webhookName.slice(1)}() method instead`;\n        throw new Error(message);\n    }\n    if (!emitterEventNames.includes(webhookNameOrNames)) {\n        state.log.warn(`\"${webhookNameOrNames}\" is not a known webhook name (https://developer.github.com/v3/activity/events/types/)`);\n    }\n    handleEventHandlers(state, webhookNameOrNames, handler);\n}\nexport function receiverOnAny(state, handler) {\n    handleEventHandlers(state, \"*\", handler);\n}\nexport function receiverOnError(state, handler) {\n    handleEventHandlers(state, \"error\", handler);\n}\n", "// Errors thrown or rejected Promises in \"error\" event handlers are not handled\n// as they are in the webhook event handlers. If errors occur, we log a\n// \"Fatal: Error occurred\" message to stdout\nexport function wrapErrorHandler(handler, error) {\n    let returnValue;\n    try {\n        returnValue = handler(error);\n    }\n    catch (error) {\n        console.log('FATAL: Error occurred in \"error\" event handler');\n        console.log(error);\n    }\n    if (returnValue && returnValue.catch) {\n        returnValue.catch((error) => {\n            console.log('FATAL: Error occurred in \"error\" event handler');\n            console.log(error);\n        });\n    }\n}\n", "// @ts-ignore to address #245\nimport AggregateError from \"aggregate-error\";\nimport { wrapErrorHandler } from \"./wrap-error-handler\";\nfunction getHooks(state, eventPayloadAction, eventName) {\n    const hooks = [state.hooks[eventName], state.hooks[\"*\"]];\n    if (eventPayloadAction) {\n        hooks.unshift(state.hooks[`${eventName}.${eventPayloadAction}`]);\n    }\n    return [].concat(...hooks.filter(Boolean));\n}\n// main handler function\nexport function receiverHandle(state, event) {\n    const errorHandlers = state.hooks.error || [];\n    if (event instanceof Error) {\n        const error = Object.assign(new AggregateError([event]), {\n            event,\n            errors: [event],\n        });\n        errorHandlers.forEach((handler) => wrapErrorHandler(handler, error));\n        return Promise.reject(error);\n    }\n    if (!event || !event.name) {\n        throw new AggregateError([\"Event name not passed\"]);\n    }\n    if (!event.payload) {\n        throw new AggregateError([\"Event payload not passed\"]);\n    }\n    // flatten arrays of event listeners and remove undefined values\n    const hooks = getHooks(state, \"action\" in event.payload ? event.payload.action : null, event.name);\n    if (hooks.length === 0) {\n        return Promise.resolve();\n    }\n    const errors = [];\n    const promises = hooks.map((handler) => {\n        let promise = Promise.resolve(event);\n        if (state.transform) {\n            promise = promise.then(state.transform);\n        }\n        return promise\n            .then((event) => {\n            return handler(event);\n        })\n            .catch((error) => errors.push(Object.assign(error, { event })));\n    });\n    return Promise.all(promises).then(() => {\n        if (errors.length === 0) {\n            return;\n        }\n        const error = new AggregateError(errors);\n        Object.assign(error, {\n            event,\n            errors,\n        });\n        errorHandlers.forEach((handler) => wrapErrorHandler(handler, error));\n        throw error;\n    });\n}\n", "export function removeListener(state, webhookNameOrNames, handler) {\n    if (Array.isArray(webhookNameOrNames)) {\n        webhookNameOrNames.forEach((webhookName) => removeListener(state, webhookName, handler));\n        return;\n    }\n    if (!state.hooks[webhookNameOrNames]) {\n        return;\n    }\n    // remove last hook that has been added, that way\n    // it behaves the same as removeListener\n    for (let i = state.hooks[webhookNameOrNames].length - 1; i >= 0; i--) {\n        if (state.hooks[webhookNameOrNames][i] === handler) {\n            state.hooks[webhookNameOrNames].splice(i, 1);\n            return;\n        }\n    }\n}\n", "import { createLogger } from \"../createLogger\";\nimport { receiverOn as on, receiverOnAny as onAny, receiverOnError as onError, } from \"./on\";\nimport { receiverHandle as receive } from \"./receive\";\nimport { removeListener } from \"./remove-listener\";\nexport function createEventHandler(options) {\n    const state = {\n        hooks: {},\n        log: createLogger(options && options.log),\n    };\n    if (options && options.transform) {\n        state.transform = options.transform;\n    }\n    return {\n        on: on.bind(null, state),\n        onAny: onAny.bind(null, state),\n        onError: onError.bind(null, state),\n        removeListener: removeListener.bind(null, state),\n        receive: receive.bind(null, state),\n    };\n}\n", "/**\n * GitHub sends its JSON with an indentation of 2 spaces and a line break at the end\n */\nexport function toNormalizedJsonString(payload) {\n    const payloadString = JSON.stringify(payload);\n    return payloadString.replace(/[^\\\\]\\\\u[\\da-f]{4}/g, (s) => {\n        return s.substr(0, 3) + s.substr(3).toUpperCase();\n    });\n}\n", "import { sign as signMethod } from \"@octokit/webhooks-methods\";\nimport { toNormalizedJsonString } from \"./to-normalized-json-string\";\nexport async function sign(secret, payload) {\n    return signMethod(secret, typeof payload === \"string\" ? payload : toNormalizedJsonString(payload));\n}\n", "import { verify as verifyMethod } from \"@octokit/webhooks-methods\";\nimport { toNormalizedJsonString } from \"./to-normalized-json-string\";\nexport async function verify(secret, payload, signature) {\n    return verifyMethod(secret, typeof payload === \"string\" ? payload : toNormalizedJsonString(payload), signature);\n}\n", "import { verify } from \"@octokit/webhooks-methods\";\nimport { toNormalizedJsonString } from \"./to-normalized-json-string\";\nexport async function verifyAndReceive(state, event) {\n    // verify will validate that the secret is not undefined\n    const matchesSignature = await verify(state.secret, typeof event.payload === \"object\"\n        ? toNormalizedJsonString(event.payload)\n        : event.payload, event.signature);\n    if (!matchesSignature) {\n        const error = new Error(\"[@octokit/webhooks] signature does not match event payload and secret\");\n        return state.eventHandler.receive(Object.assign(error, { event, status: 400 }));\n    }\n    return state.eventHandler.receive({\n        id: event.id,\n        name: event.name,\n        payload: typeof event.payload === \"string\"\n            ? JSON.parse(event.payload)\n            : event.payload,\n    });\n}\n", "const WEBHOOK_HEADERS = [\n    \"x-github-event\",\n    \"x-hub-signature-256\",\n    \"x-github-delivery\",\n];\n// https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#delivery-headers\nexport function getMissingHeaders(request) {\n    return WEBHOOK_HEADERS.filter((header) => !(header in request.headers));\n}\n", "// @ts-ignore to address #245\nimport AggregateError from \"aggregate-error\";\nexport function getPayload(request) {\n    // If request.body already exists we can stop here\n    // See https://github.com/octokit/webhooks.js/pull/23\n    if (request.body)\n        return Promise.resolve(request.body);\n    return new Promise((resolve, reject) => {\n        let data = \"\";\n        request.setEncoding(\"utf8\");\n        // istanbul ignore next\n        request.on(\"error\", (error) => reject(new AggregateError([error])));\n        request.on(\"data\", (chunk) => (data += chunk));\n        request.on(\"end\", () => {\n            try {\n                resolve(JSON.parse(data));\n            }\n            catch (error) {\n                error.message = \"Invalid JSON\";\n                error.status = 400;\n                reject(new AggregateError([error]));\n            }\n        });\n    });\n}\n", "import { getMissingHeaders } from \"./get-missing-headers\";\nimport { getPayload } from \"./get-payload\";\nexport async function middleware(webhooks, options, request, response, next) {\n    let pathname;\n    try {\n        pathname = new URL(request.url, \"http://localhost\").pathname;\n    }\n    catch (error) {\n        response.writeHead(422, {\n            \"content-type\": \"application/json\",\n        });\n        response.end(JSON.stringify({\n            error: `Request URL could not be parsed: ${request.url}`,\n        }));\n        return;\n    }\n    const isUnknownRoute = request.method !== \"POST\" || pathname !== options.path;\n    const isExpressMiddleware = typeof next === \"function\";\n    if (isUnknownRoute) {\n        if (isExpressMiddleware) {\n            return next();\n        }\n        else {\n            return options.onUnhandledRequest(request, response);\n        }\n    }\n    const missingHeaders = getMissingHeaders(request).join(\", \");\n    if (missingHeaders) {\n        response.writeHead(400, {\n            \"content-type\": \"application/json\",\n        });\n        response.end(JSON.stringify({\n            error: `Required headers missing: ${missingHeaders}`,\n        }));\n        return;\n    }\n    const eventName = request.headers[\"x-github-event\"];\n    const signatureSHA256 = request.headers[\"x-hub-signature-256\"];\n    const id = request.headers[\"x-github-delivery\"];\n    options.log.debug(`${eventName} event received (id: ${id})`);\n    // GitHub will abort the request if it does not receive a response within 10s\n    // See https://github.com/octokit/webhooks.js/issues/185\n    let didTimeout = false;\n    const timeout = setTimeout(() => {\n        didTimeout = true;\n        response.statusCode = 202;\n        response.end(\"still processing\\n\");\n    }, 9000).unref();\n    try {\n        const payload = await getPayload(request);\n        await webhooks.verifyAndReceive({\n            id: id,\n            name: eventName,\n            payload: payload,\n            signature: signatureSHA256,\n        });\n        clearTimeout(timeout);\n        if (didTimeout)\n            return;\n        response.end(\"ok\\n\");\n    }\n    catch (error) {\n        clearTimeout(timeout);\n        if (didTimeout)\n            return;\n        const err = Array.from(error)[0];\n        const errorMessage = err.message\n            ? `${err.name}: ${err.message}`\n            : \"Error: An Unspecified error occurred\";\n        response.statusCode = typeof err.status !== \"undefined\" ? err.status : 500;\n        options.log.error(error);\n        response.end(JSON.stringify({\n            error: errorMessage,\n        }));\n    }\n}\n", "export function onUnhandledRequestDefault(request, response) {\n    response.writeHead(404, {\n        \"content-type\": \"application/json\",\n    });\n    response.end(JSON.stringify({\n        error: `Unknown route: ${request.method} ${request.url}`,\n    }));\n}\n", "import { createLogger } from \"../../createLogger\";\nimport { middleware } from \"./middleware\";\nimport { onUnhandledRequestDefault } from \"./on-unhandled-request-default\";\nexport function createNodeMiddleware(webhooks, { path = \"/api/github/webhooks\", onUnhandledRequest = onUnhandledRequestDefault, log = createLogger(), } = {}) {\n    return middleware.bind(null, webhooks, {\n        path,\n        onUnhandledRequest,\n        log,\n    });\n}\n", "import { createLogger } from \"./createLogger\";\nimport { createEventHandler } from \"./event-handler/index\";\nimport { sign } from \"./sign\";\nimport { verify } from \"./verify\";\nimport { verifyAndReceive } from \"./verify-and-receive\";\nexport { createNodeMiddleware } from \"./middleware/node/index\";\nexport { emitterEventNames } from \"./generated/webhook-names\";\n// U holds the return value of `transform` function in Options\nclass Webhooks {\n    constructor(options) {\n        if (!options || !options.secret) {\n            throw new Error(\"[@octokit/webhooks] options.secret required\");\n        }\n        const state = {\n            eventHandler: createEventHandler(options),\n            secret: options.secret,\n            hooks: {},\n            log: createLogger(options.log),\n        };\n        this.sign = sign.bind(null, options.secret);\n        this.verify = verify.bind(null, options.secret);\n        this.on = state.eventHandler.on;\n        this.onAny = state.eventHandler.onAny;\n        this.onError = state.eventHandler.onError;\n        this.removeListener = state.eventHandler.removeListener;\n        this.receive = state.eventHandler.receive;\n        this.verifyAndReceive = verifyAndReceive.bind(null, state);\n    }\n}\nexport { createEventHandler, Webhooks, };\n", "export const VERSION = \"13.0.11\";\n", "import { createAppAuth } from \"@octokit/auth-app\";\nimport { createUnauthenticatedAuth } from \"@octokit/auth-unauthenticated\";\nimport { Webhooks } from \"@octokit/webhooks\";\nexport function webhooks(appOctokit, options\n// Explict return type for better debugability and performance,\n// see https://github.com/octokit/app.js/pull/201\n) {\n    return new Webhooks({\n        secret: options.secret,\n        transform: async (event) => {\n            if (!(\"installation\" in event.payload) ||\n                typeof event.payload.installation !== \"object\") {\n                const octokit = new appOctokit.constructor({\n                    authStrategy: createUnauthenticatedAuth,\n                    auth: {\n                        reason: `\"installation\" key missing in webhook event payload`,\n                    },\n                });\n                return {\n                    ...event,\n                    octokit: octokit,\n                };\n            }\n            const installationId = event.payload.installation.id;\n            const octokit = (await appOctokit.auth({\n                type: \"installation\",\n                installationId,\n                factory(auth) {\n                    return new auth.octokit.constructor({\n                        ...auth.octokitOptions,\n                        authStrategy: createAppAuth,\n                        ...{\n                            auth: {\n                                ...auth,\n                                installationId,\n                            },\n                        },\n                    });\n                },\n            }));\n            return {\n                ...event,\n                octokit: octokit,\n            };\n        },\n    });\n}\n", "import { createAppAuth } from \"@octokit/auth-app\";\nexport async function getInstallationOctokit(app, installationId) {\n    return app.octokit.auth({\n        type: \"installation\",\n        installationId: installationId,\n        factory(auth) {\n            const options = {\n                ...auth.octokitOptions,\n                authStrategy: createAppAuth,\n                ...{ auth: { ...auth, installationId: installationId } },\n            };\n            return new auth.octokit.constructor(options);\n        },\n    });\n}\n", "import { composePaginateRest } from \"@octokit/plugin-paginate-rest\";\nimport { getInstallationOctokit } from \"./get-installation-octokit\";\nexport function eachInstallationFactory(app) {\n    return Object.assign(eachInstallation.bind(null, app), {\n        iterator: eachInstallationIterator.bind(null, app),\n    });\n}\nexport async function eachInstallation(app, callback) {\n    const i = eachInstallationIterator(app)[Symbol.asyncIterator]();\n    let result = await i.next();\n    while (!result.done) {\n        await callback(result.value);\n        result = await i.next();\n    }\n}\nexport function eachInstallationIterator(app) {\n    return {\n        async *[Symbol.asyncIterator]() {\n            const iterator = composePaginateRest.iterator(app.octokit, \"GET /app/installations\");\n            for await (const { data: installations } of iterator) {\n                for (const installation of installations) {\n                    const installationOctokit = await getInstallationOctokit(app, installation.id);\n                    yield { octokit: installationOctokit, installation };\n                }\n            }\n        },\n    };\n}\n", "import { composePaginateRest } from \"@octokit/plugin-paginate-rest\";\nexport function eachRepositoryFactory(app) {\n    return Object.assign(eachRepository.bind(null, app), {\n        iterator: eachRepositoryIterator.bind(null, app),\n    });\n}\nexport async function eachRepository(app, queryOrCallback, callback) {\n    const i = eachRepositoryIterator(app, callback ? queryOrCallback : undefined)[Symbol.asyncIterator]();\n    let result = await i.next();\n    while (!result.done) {\n        if (callback) {\n            await callback(result.value);\n        }\n        else {\n            await queryOrCallback(result.value);\n        }\n        result = await i.next();\n    }\n}\nfunction singleInstallationIterator(app, installationId) {\n    return {\n        async *[Symbol.asyncIterator]() {\n            yield {\n                octokit: await app.getInstallationOctokit(installationId),\n            };\n        },\n    };\n}\nexport function eachRepositoryIterator(app, query) {\n    return {\n        async *[Symbol.asyncIterator]() {\n            const iterator = query\n                ? singleInstallationIterator(app, query.installationId)\n                : app.eachInstallation.iterator();\n            for await (const { octokit } of iterator) {\n                const repositoriesIterator = composePaginateRest.iterator(octokit, \"GET /installation/repositories\");\n                for await (const { data: repositories } of repositoriesIterator) {\n                    for (const repository of repositories) {\n                        yield { octokit: octokit, repository };\n                    }\n                }\n            }\n        },\n    };\n}\n", "export function onUnhandledRequestDefault(request, response) {\n    response.writeHead(404, {\n        \"content-type\": \"application/json\",\n    });\n    response.end(JSON.stringify({\n        error: `Unknown route: ${request.method} ${request.url}`,\n    }));\n}\n", "import { createNodeMiddleware as oauthNodeMiddleware } from \"@octokit/oauth-app\";\nimport { createNodeMiddleware as webhooksNodeMiddleware } from \"@octokit/webhooks\";\nimport { onUnhandledRequestDefault } from \"./on-unhandled-request-default\";\nfunction noop() { }\nexport function createNodeMiddleware(app, options = {}) {\n    const log = Object.assign({\n        debug: noop,\n        info: noop,\n        warn: console.warn.bind(console),\n        error: console.error.bind(console),\n    }, options.log);\n    const optionsWithDefaults = {\n        onUnhandledRequest: onUnhandledRequestDefault,\n        pathPrefix: \"/api/github\",\n        ...options,\n        log,\n    };\n    const webhooksMiddleware = webhooksNodeMiddleware(app.webhooks, {\n        path: optionsWithDefaults.pathPrefix + \"/webhooks\",\n        log,\n        onUnhandledRequest: optionsWithDefaults.onUnhandledRequest,\n    });\n    const oauthMiddleware = oauthNodeMiddleware(app.oauth, {\n        pathPrefix: optionsWithDefaults.pathPrefix + \"/oauth\",\n        onUnhandledRequest: optionsWithDefaults.onUnhandledRequest,\n    });\n    return middleware.bind(null, optionsWithDefaults, {\n        webhooksMiddleware,\n        oauthMiddleware,\n    });\n}\nexport async function middleware(options, { webhooksMiddleware, oauthMiddleware }, request, response, next) {\n    const { pathname } = new URL(request.url, \"http://localhost\");\n    if (pathname === `${options.pathPrefix}/webhooks`) {\n        return webhooksMiddleware(request, response, next);\n    }\n    if (pathname.startsWith(`${options.pathPrefix}/oauth/`)) {\n        return oauthMiddleware(request, response, next);\n    }\n    const isExpressMiddleware = typeof next === \"function\";\n    if (isExpressMiddleware) {\n        // @ts-ignore `next` must be a function as we check two lines above\n        return next();\n    }\n    return options.onUnhandledRequest(request, response);\n}\n", "import { Octokit as OctokitCore } from \"@octokit/core\";\nimport { createAppAuth } from \"@octokit/auth-app\";\nimport { OAuthApp } from \"@octokit/oauth-app\";\nimport { VERSION } from \"./version\";\nimport { webhooks } from \"./webhooks\";\nimport { eachInstallationFactory } from \"./each-installation\";\nimport { eachRepositoryFactory } from \"./each-repository\";\nimport { getInstallationOctokit } from \"./get-installation-octokit\";\nexport class App {\n    constructor(options) {\n        const Octokit = (options.Octokit ||\n            OctokitCore);\n        const authOptions = Object.assign({\n            appId: options.appId,\n            privateKey: options.privateKey,\n        }, options.oauth\n            ? {\n                clientId: options.oauth.clientId,\n                clientSecret: options.oauth.clientSecret,\n            }\n            : {});\n        this.octokit = new Octokit({\n            authStrategy: createAppAuth,\n            auth: authOptions,\n            log: options.log,\n        });\n        this.log = Object.assign({\n            debug: () => { },\n            info: () => { },\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n        }, options.log);\n        // set app.webhooks depending on whether \"webhooks\" option has been passed\n        if (options.webhooks) {\n            // @ts-expect-error TODO: figure this out\n            this.webhooks = webhooks(this.octokit, options.webhooks);\n        }\n        else {\n            Object.defineProperty(this, \"webhooks\", {\n                get() {\n                    throw new Error(\"[@octokit/app] webhooks option not set\");\n                },\n            });\n        }\n        // set app.oauth depending on whether \"oauth\" option has been passed\n        if (options.oauth) {\n            this.oauth = new OAuthApp({\n                ...options.oauth,\n                clientType: \"github-app\",\n                Octokit,\n            });\n        }\n        else {\n            Object.defineProperty(this, \"oauth\", {\n                get() {\n                    throw new Error(\"[@octokit/app] oauth.clientId / oauth.clientSecret options are not set\");\n                },\n            });\n        }\n        this.getInstallationOctokit = getInstallationOctokit.bind(null, this);\n        this.eachInstallation = eachInstallationFactory(this);\n        this.eachRepository = eachRepositoryFactory(this);\n    }\n    static defaults(defaults) {\n        const AppWithDefaults = class extends this {\n            constructor(...args) {\n                super({\n                    ...defaults,\n                    ...args[0],\n                });\n            }\n        };\n        return AppWithDefaults;\n    }\n}\nApp.VERSION = VERSION;\nexport { createNodeMiddleware } from \"./middleware/node/index\";\n", "export const VERSION = \"2.0.10\";\n", "import { Octokit as OctokitCore } from \"@octokit/core\";\nimport { paginateRest } from \"@octokit/plugin-paginate-rest\";\nimport { restEndpointMethods } from \"@octokit/plugin-rest-endpoint-methods\";\nimport { retry } from \"@octokit/plugin-retry\";\nimport { throttling } from \"@octokit/plugin-throttling\";\nimport { VERSION } from \"./version\";\nexport const Octokit = OctokitCore.plugin(restEndpointMethods, paginateRest, retry, throttling).defaults({\n    userAgent: `octokit.js/${VERSION}`,\n    throttle: {\n        onRateLimit,\n        onSecondaryRateLimit,\n    },\n});\n// istanbul ignore next no need to test internals of the throttle plugin\nfunction onRateLimit(retryAfter, options, octokit) {\n    octokit.log.warn(`Request quota exhausted for request ${options.method} ${options.url}`);\n    if (options.request.retryCount === 0) {\n        // only retries once\n        octokit.log.info(`Retrying after ${retryAfter} seconds!`);\n        return true;\n    }\n}\n// istanbul ignore next no need to test internals of the throttle plugin\nfunction onSecondaryRateLimit(retryAfter, options, octokit) {\n    octokit.log.warn(`SecondaryRateLimit detected for request ${options.method} ${options.url}`);\n    if (options.request.retryCount === 0) {\n        // only retries once\n        octokit.log.info(`Retrying after ${retryAfter} seconds!`);\n        return true;\n    }\n}\n", "import { App as DefaultApp } from \"@octokit/app\";\nimport { OAuthApp as DefaultOAuthApp } from \"@octokit/oauth-app\";\nimport { Octokit } from \"./octokit\";\nexport const App = DefaultApp.defaults({ Octokit });\nexport const OAuthApp = DefaultOAuthApp.defaults({ Octokit });\nexport { createNodeMiddleware } from \"@octokit/app\";\n", "/// <reference lib=\"es2015.symbol\" />\n\nconst SymbolPolyfill: (description?: string) => symbol =\n  typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n    Symbol :\n    description => `Symbol(${description})` as any as symbol;\n\nexport default SymbolPolyfill;\n", "/// <reference lib=\"dom\" />\n\nexport function noop(): undefined {\n  return undefined;\n}\n\nfunction getGlobals() {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n", "import { noop } from '../../utils';\nimport { AssertionError } from '../../stub/assert';\n\nexport function typeIsObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport const rethrowAssertionErrorRejection: (e: any) => void =\n  DEBUG ? e => {\n    // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n    // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n    // expect any errors, but assertion errors are always problematic.\n    if (e && e instanceof AssertionError) {\n      setTimeout(() => {\n        throw e;\n      }, 0);\n    }\n  } : noop;\n", "import { globals } from '../../utils';\nimport { rethrowAssertionErrorRejection } from './miscellaneous';\nimport assert from '../../stub/assert';\n\nconst originalPromise = Promise;\nconst originalPromiseThen = Promise.prototype.then;\nconst originalPromiseResolve = Promise.resolve.bind(originalPromise);\nconst originalPromiseReject = Promise.reject.bind(originalPromise);\n\nexport function newPromise<T>(executor: (\n  resolve: (value: T | PromiseLike<T>) => void,\n  reject: (reason?: any) => void\n) => void): Promise<T> {\n  return new originalPromise(executor);\n}\n\nexport function promiseResolvedWith<T>(value: T | PromiseLike<T>): Promise<T> {\n  return originalPromiseResolve(value);\n}\n\nexport function promiseRejectedWith<T = never>(reason: any): Promise<T> {\n  return originalPromiseReject(reason);\n}\n\nexport function PerformPromiseThen<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  onRejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n  // approximation.\n  return originalPromiseThen.call(promise, onFulfilled, onRejected) as Promise<TResult1 | TResult2>;\n}\n\nexport function uponPromise<T>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => void | PromiseLike<void>,\n  onRejected?: (reason: any) => void | PromiseLike<void>): void {\n  PerformPromiseThen(\n    PerformPromiseThen(promise, onFulfilled, onRejected),\n    undefined,\n    rethrowAssertionErrorRejection\n  );\n}\n\nexport function uponFulfillment<T>(promise: Promise<T>, onFulfilled: (value: T) => void | PromiseLike<void>): void {\n  uponPromise(promise, onFulfilled);\n}\n\nexport function uponRejection(promise: Promise<unknown>, onRejected: (reason: any) => void | PromiseLike<void>): void {\n  uponPromise(promise, undefined, onRejected);\n}\n\nexport function transformPromiseWith<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  fulfillmentHandler?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  rejectionHandler?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n}\n\nexport function setPromiseIsHandledToTrue(promise: Promise<unknown>): void {\n  PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n}\n\nexport const queueMicrotask: (fn: () => void) => void = (() => {\n  const globalQueueMicrotask = globals && globals.queueMicrotask;\n  if (typeof globalQueueMicrotask === 'function') {\n    return globalQueueMicrotask;\n  }\n\n  const resolvedPromise = promiseResolvedWith(undefined);\n  return (fn: () => void) => PerformPromiseThen(resolvedPromise, fn);\n})();\n\nexport function reflectCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R, V: T, args: A): R {\n  if (typeof F !== 'function') {\n    throw new TypeError('Argument is not a function');\n  }\n  return Function.prototype.apply.call(F, V, args);\n}\n\nexport function promiseCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R | PromiseLike<R>,\n                                                   V: T,\n                                                   args: A): Promise<R> {\n  assert(typeof F === 'function');\n  assert(V !== undefined);\n  assert(Array.isArray(args));\n  try {\n    return promiseResolvedWith(reflectCall(F, V, args));\n  } catch (value) {\n    return promiseRejectedWith(value);\n  }\n}\n", "import assert from '../stub/assert';\n\n// Original from Chromium\n// https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n\nconst QUEUE_MAX_ARRAY_SIZE = 16384;\n\ninterface Node<T> {\n  _elements: T[];\n  _next: Node<T> | undefined;\n}\n\n/**\n * Simple queue structure.\n *\n * Avoids scalability issues with using a packed array directly by using\n * multiple arrays in a linked list and keeping the array size bounded.\n */\nexport class SimpleQueue<T> {\n  private _front: Node<T>;\n  private _back: Node<T>;\n  private _cursor = 0;\n  private _size = 0;\n\n  constructor() {\n    // _front and _back are always defined.\n    this._front = {\n      _elements: [],\n      _next: undefined\n    };\n    this._back = this._front;\n    // The cursor is used to avoid calling Array.shift().\n    // It contains the index of the front element of the array inside the\n    // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n    this._cursor = 0;\n    // When there is only one node, size === elements.length - cursor.\n    this._size = 0;\n  }\n\n  get length(): number {\n    return this._size;\n  }\n\n  // For exception safety, this method is structured in order:\n  // 1. Read state\n  // 2. Calculate required state mutations\n  // 3. Perform state mutations\n  push(element: T): void {\n    const oldBack = this._back;\n    let newBack = oldBack;\n    assert(oldBack._next === undefined);\n    if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n      newBack = {\n        _elements: [],\n        _next: undefined\n      };\n    }\n\n    // push() is the mutation most likely to throw an exception, so it\n    // goes first.\n    oldBack._elements.push(element);\n    if (newBack !== oldBack) {\n      this._back = newBack;\n      oldBack._next = newBack;\n    }\n    ++this._size;\n  }\n\n  // Like push(), shift() follows the read -> calculate -> mutate pattern for\n  // exception safety.\n  shift(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const oldFront = this._front;\n    let newFront = oldFront;\n    const oldCursor = this._cursor;\n    let newCursor = oldCursor + 1;\n\n    const elements = oldFront._elements;\n    const element = elements[oldCursor];\n\n    if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n      assert(elements.length === QUEUE_MAX_ARRAY_SIZE);\n      assert(oldFront._next !== undefined);\n      newFront = oldFront._next!;\n      newCursor = 0;\n    }\n\n    // No mutations before this point.\n    --this._size;\n    this._cursor = newCursor;\n    if (oldFront !== newFront) {\n      this._front = newFront;\n    }\n\n    // Permit shifted element to be garbage collected.\n    elements[oldCursor] = undefined!;\n\n    return element;\n  }\n\n  // The tricky thing about forEach() is that it can be called\n  // re-entrantly. The queue may be mutated inside the callback. It is easy to\n  // see that push() within the callback has no negative effects since the end\n  // of the queue is checked for on every iteration. If shift() is called\n  // repeatedly within the callback then the next iteration may return an\n  // element that has been removed. In this case the callback will be called\n  // with undefined values until we either \"catch up\" with elements that still\n  // exist or reach the back of the queue.\n  forEach(callback: (element: T) => void): void {\n    let i = this._cursor;\n    let node = this._front;\n    let elements = node._elements;\n    while (i !== elements.length || node._next !== undefined) {\n      if (i === elements.length) {\n        assert(node._next !== undefined);\n        assert(i === QUEUE_MAX_ARRAY_SIZE);\n        node = node._next!;\n        elements = node._elements;\n        i = 0;\n        if (elements.length === 0) {\n          break;\n        }\n      }\n      callback(elements[i]);\n      ++i;\n    }\n  }\n\n  // Return the element that would be returned if shift() was called now,\n  // without modifying the queue.\n  peek(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const front = this._front;\n    const cursor = this._cursor;\n    return front._elements[cursor];\n  }\n}\n", "import assert from '../../stub/assert';\nimport { ReadableStream, ReadableStreamCancel, ReadableStreamReader } from '../readable-stream';\nimport { newPromise, setPromiseIsHandledToTrue } from '../helpers/webidl';\n\nexport function ReadableStreamReaderGenericInitialize<R>(reader: ReadableStreamReader<R>, stream: ReadableStream<R>) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nexport function ReadableStreamReaderGenericCancel(reader: ReadableStreamReader<any>, reason: any): Promise<undefined> {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nexport function ReadableStreamReaderGenericRelease(reader: ReadableStreamReader<any>) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  }\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined!;\n}\n\n// Helper functions for the readers.\n\nexport function readerLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nexport function defaultReaderClosedPromiseInitialize(reader: ReadableStreamReader<any>) {\n  reader._closedPromise = newPromise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nexport function defaultReaderClosedPromiseInitializeAsRejected(reader: ReadableStreamReader<any>, reason: any) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseReject(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseInitializeAsResolved(reader: ReadableStreamReader<any>) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseResolve(reader);\n}\n\nexport function defaultReaderClosedPromiseReject(reader: ReadableStreamReader<any>, reason: any) {\n  if (reader._closedPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(reader._closedPromise);\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nexport function defaultReaderClosedPromiseResetToRejected(reader: ReadableStreamReader<any>, reason: any) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseResolve(reader: ReadableStreamReader<any>) {\n  if (reader._closedPromise_resolve === undefined) {\n    return;\n  }\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n", "export const AbortSteps = Symbol('[[AbortSteps]]');\nexport const ErrorSteps = Symbol('[[ErrorSteps]]');\nexport const CancelSteps = Symbol('[[CancelSteps]]');\nexport const PullSteps = Symbol('[[PullSteps]]');\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nconst NumberIsFinite: typeof Number.isFinite = Number.isFinite || function (x) {\n  return typeof x === 'number' && isFinite(x);\n};\n\nexport default NumberIsFinite;\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\nconst MathTrunc: typeof Math.trunc = Math.trunc || function (v) {\n  return v < 0 ? Math.ceil(v) : Math.floor(v);\n};\n\nexport default MathTrunc;\n", "import NumberIsFinite from '../../stub/number-isfinite';\nimport MathTrunc from '../../stub/math-trunc';\n\n// https://heycam.github.io/webidl/#idl-dictionaries\nexport function isDictionary(x: any): x is object | null {\n  return typeof x === 'object' || typeof x === 'function';\n}\n\nexport function assertDictionary(obj: unknown,\n                                 context: string): asserts obj is object | null | undefined {\n  if (obj !== undefined && !isDictionary(obj)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport type AnyFunction = (...args: any[]) => any;\n\n// https://heycam.github.io/webidl/#idl-callback-functions\nexport function assertFunction(x: unknown, context: string): asserts x is AnyFunction {\n  if (typeof x !== 'function') {\n    throw new TypeError(`${context} is not a function.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-object\nexport function isObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport function assertObject(x: unknown,\n                             context: string): asserts x is object {\n  if (!isObject(x)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport function assertRequiredArgument<T extends any>(x: T | undefined,\n                                                      position: number,\n                                                      context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n  }\n}\n\nexport function assertRequiredField<T extends any>(x: T | undefined,\n                                                   field: string,\n                                                   context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`${field} is required in '${context}'.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-unrestricted-double\nexport function convertUnrestrictedDouble(value: unknown): number {\n  return Number(value);\n}\n\nfunction censorNegativeZero(x: number): number {\n  return x === 0 ? 0 : x;\n}\n\nfunction integerPart(x: number): number {\n  return censorNegativeZero(MathTrunc(x));\n}\n\n// https://heycam.github.io/webidl/#idl-unsigned-long-long\nexport function convertUnsignedLongLongWithEnforceRange(value: unknown, context: string): number {\n  const lowerBound = 0;\n  const upperBound = Number.MAX_SAFE_INTEGER;\n\n  let x = Number(value);\n  x = censorNegativeZero(x);\n\n  if (!NumberIsFinite(x)) {\n    throw new TypeError(`${context} is not a finite number`);\n  }\n\n  x = integerPart(x);\n\n  if (x < lowerBound || x > upperBound) {\n    throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n  }\n\n  if (!NumberIsFinite(x) || x === 0) {\n    return 0;\n  }\n\n  // TODO Use BigInt if supported?\n  // let xBigInt = BigInt(integerPart(x));\n  // xBigInt = BigInt.asUintN(64, xBigInt);\n  // return Number(xBigInt);\n\n  return x;\n}\n", "import { IsReadableStream, ReadableStream } from '../readable-stream';\n\nexport function assertReadableStream(x: unknown, context: string): asserts x is ReadableStream {\n  if (!IsReadableStream(x)) {\n    throw new TypeError(`${context} is not a ReadableStream.`);\n  }\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableStream } from '../readable-stream';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { PullSteps } from '../abstract-ops/internal-methods';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\n\n/**\n * A result returned by {@link ReadableStreamDefaultReader.read}.\n *\n * @public\n */\nexport type ReadableStreamDefaultReadResult<T> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value?: undefined;\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamDefaultReader<R>(stream: ReadableStream): ReadableStreamDefaultReader<R> {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadRequest<R>(stream: ReadableStream<R>,\n                                                readRequest: ReadRequest<R>): void {\n  assert(IsReadableStreamDefaultReader(stream._reader));\n  assert(stream._state === 'readable');\n\n  (stream._reader! as ReadableStreamDefaultReader<R>)._readRequests.push(readRequest);\n}\n\nexport function ReadableStreamFulfillReadRequest<R>(stream: ReadableStream<R>, chunk: R | undefined, done: boolean) {\n  const reader = stream._reader as ReadableStreamDefaultReader<R>;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift()!;\n  if (done) {\n    readRequest._closeSteps();\n  } else {\n    readRequest._chunkSteps(chunk!);\n  }\n}\n\nexport function ReadableStreamGetNumReadRequests<R>(stream: ReadableStream<R>): number {\n  return (stream._reader as ReadableStreamDefaultReader<R>)._readRequests.length;\n}\n\nexport function ReadableStreamHasDefaultReader(stream: ReadableStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamDefaultReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadRequest<R> {\n  _chunkSteps(chunk: R): void;\n\n  _closeSteps(): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A default reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamDefaultReader<R = any> {\n  /** @internal */\n  _ownerReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readRequests: SimpleQueue<ReadRequest<R>>;\n\n  constructor(stream: ReadableStream<R>) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed,\n   * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamDefaultReaderRead(this, readRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamDefaultReader(this)) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamDefaultReader<R = any>(x: any): x is ReadableStreamDefaultReader<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultReader;\n}\n\nexport function ReadableStreamDefaultReaderRead<R>(reader: ReadableStreamDefaultReader<R>,\n                                                   readRequest: ReadRequest<R>): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    readRequest._closeSteps();\n  } else if (stream._state === 'errored') {\n    readRequest._errorSteps(stream._storedError);\n  } else {\n    assert(stream._state === 'readable');\n    stream._readableStreamController[PullSteps](readRequest as ReadRequest<any>);\n  }\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n", "/// <reference lib=\"es2018.asynciterable\" />\n\n/* eslint-disable @typescript-eslint/no-empty-function */\nexport const AsyncIteratorPrototype: AsyncIterable<any> | undefined =\n  Object.getPrototypeOf(Object.getPrototypeOf(async function* (): AsyncIterableIterator<any> {}).prototype);\n", "/// <reference lib=\"es2018.asynciterable\" />\n\nimport { ReadableStream } from '../readable-stream';\nimport {\n  AcquireReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadableStreamDefaultReadResult,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport assert from '../../stub/assert';\nimport { AsyncIteratorPrototype } from '@@target/stub/async-iterator-prototype';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  queueMicrotask,\n  transformPromiseWith\n} from '../helpers/webidl';\n\n/**\n * An async iterator returned by {@link ReadableStream.values}.\n *\n * @public\n */\nexport interface ReadableStreamAsyncIterator<R> extends AsyncIterator<R> {\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nexport class ReadableStreamAsyncIteratorImpl<R> {\n  private readonly _reader: ReadableStreamDefaultReader<R>;\n  private readonly _preventCancel: boolean;\n  private _ongoingPromise: Promise<ReadableStreamDefaultReadResult<R>> | undefined = undefined;\n  private _isFinished = false;\n\n  constructor(reader: ReadableStreamDefaultReader<R>, preventCancel: boolean) {\n    this._reader = reader;\n    this._preventCancel = preventCancel;\n  }\n\n  next(): Promise<ReadableStreamDefaultReadResult<R>> {\n    const nextSteps = () => this._nextSteps();\n    this._ongoingPromise = this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n      nextSteps();\n    return this._ongoingPromise;\n  }\n\n  return(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    const returnSteps = () => this._returnSteps(value);\n    return this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n      returnSteps();\n  }\n\n  private _nextSteps(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value: undefined, done: true });\n    }\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('iterate'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        this._ongoingPromise = undefined;\n        // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n        // FIXME Is this a bug in the specification, or in the test?\n        queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n      },\n      _closeSteps: () => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        resolvePromise({ value: undefined, done: true });\n      },\n      _errorSteps: reason => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        rejectPromise(reason);\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n    return promise;\n  }\n\n  private _returnSteps(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value, done: true });\n    }\n    this._isFinished = true;\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('finish iterating'));\n    }\n\n    assert(reader._readRequests.length === 0);\n\n    if (!this._preventCancel) {\n      const result = ReadableStreamReaderGenericCancel(reader, value);\n      ReadableStreamReaderGenericRelease(reader);\n      return transformPromiseWith(result, () => ({ value, done: true }));\n    }\n\n    ReadableStreamReaderGenericRelease(reader);\n    return promiseResolvedWith({ value, done: true });\n  }\n}\n\ndeclare class ReadableStreamAsyncIteratorInstance<R> implements ReadableStreamAsyncIterator<R> {\n  /** @interal */\n  _asyncIteratorImpl: ReadableStreamAsyncIteratorImpl<R>;\n\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nconst ReadableStreamAsyncIteratorPrototype: ReadableStreamAsyncIteratorInstance<any> = {\n  next(this: ReadableStreamAsyncIteratorInstance<any>): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n    }\n    return this._asyncIteratorImpl.next();\n  },\n\n  return(this: ReadableStreamAsyncIteratorInstance<any>, value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n    }\n    return this._asyncIteratorImpl.return(value);\n  }\n} as any;\nif (AsyncIteratorPrototype !== undefined) {\n  Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamAsyncIterator<R>(stream: ReadableStream<R>,\n                                                      preventCancel: boolean): ReadableStreamAsyncIterator<R> {\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n  const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n  const iterator: ReadableStreamAsyncIteratorInstance<R> = Object.create(ReadableStreamAsyncIteratorPrototype);\n  iterator._asyncIteratorImpl = impl;\n  return iterator;\n}\n\nfunction IsReadableStreamAsyncIterator<R = any>(x: any): x is ReadableStreamAsyncIterator<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n    return false;\n  }\n\n  try {\n    // noinspection SuspiciousTypeOfGuard\n    return (x as ReadableStreamAsyncIteratorInstance<any>)._asyncIteratorImpl instanceof\n      ReadableStreamAsyncIteratorImpl;\n  } catch {\n    return false;\n  }\n}\n\n// Helper functions for the ReadableStream.\n\nfunction streamAsyncIteratorBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n}\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN: typeof Number.isNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n", "export function CreateArrayFromList<T extends any[]>(elements: T): T {\n  // We use arrays to represent lists, so this is basically a no-op.\n  // Do a slice though just in case we happen to depend on the unique-ness.\n  return elements.slice() as T;\n}\n\nexport function CopyDataBlockBytes(dest: ArrayBuffer,\n                                   destOffset: number,\n                                   src: ArrayBuffer,\n                                   srcOffset: number,\n                                   n: number) {\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n}\n\n// Not implemented correctly\nexport function TransferArrayBuffer<T extends ArrayBufferLike>(O: T): T {\n  return O;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function CanTransferArrayBuffer(O: ArrayBufferLike): boolean {\n  return true;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function IsDetachedBuffer(O: ArrayBufferLike): boolean {\n  return false;\n}\n\nexport function ArrayBufferSlice(buffer: ArrayBufferLike, begin: number, end: number): ArrayBufferLike {\n  // ArrayBuffer.prototype.slice is not available on IE10\n  // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n  if (buffer.slice) {\n    return buffer.slice(begin, end);\n  }\n  const length = end - begin;\n  const slice = new ArrayBuffer(length);\n  CopyDataBlockBytes(slice, 0, buffer, begin, length);\n  return slice;\n}\n", "import NumberIsNaN from '../../stub/number-isnan';\nimport { ArrayBufferSlice } from './ecmascript';\n\nexport function IsNonNegativeNumber(v: number): boolean {\n  if (typeof v !== 'number') {\n    return false;\n  }\n\n  if (NumberIsNaN(v)) {\n    return false;\n  }\n\n  if (v < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function CloneAsUint8Array(O: ArrayBufferView): Uint8Array {\n  const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n  return new Uint8Array(buffer);\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsNonNegativeNumber } from './miscellaneous';\n\nexport interface QueueContainer<T> {\n  _queue: SimpleQueue<T>;\n  _queueTotalSize: number;\n}\n\nexport interface QueuePair<T> {\n  value: T;\n  size: number;\n}\n\nexport function DequeueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift()!;\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n}\n\nexport function EnqueueValueWithSize<T>(container: QueueContainer<QueuePair<T>>, value: T, size: number) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  if (!IsNonNegativeNumber(size) || size === Infinity) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n}\n\nexport function PeekQueueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.peek();\n  return pair.value;\n}\n\nexport function ResetQueue<T>(container: QueueContainer<T>) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = new SimpleQueue<T>();\n  container._queueTotalSize = 0;\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadableStreamHasDefaultReader,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamAddReadIntoRequest,\n  ReadableStreamFulfillReadIntoRequest,\n  ReadableStreamGetNumReadIntoRequests,\n  ReadableStreamHasBYOBReader,\n  ReadIntoRequest\n} from './byob-reader';\nimport NumberIsInteger from '../../stub/number-isinteger';\nimport {\n  IsReadableStreamLocked,\n  ReadableByteStream,\n  ReadableStreamClose,\n  ReadableStreamError\n} from '../readable-stream';\nimport { ValidatedUnderlyingByteSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  ArrayBufferSlice,\n  CanTransferArrayBuffer,\n  CopyDataBlockBytes,\n  IsDetachedBuffer,\n  TransferArrayBuffer\n} from '../abstract-ops/ecmascript';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\nimport { assertRequiredArgument, convertUnsignedLongLongWithEnforceRange } from '../validators/basic';\n\n/**\n * A pull-into request in a {@link ReadableByteStreamController}.\n *\n * @public\n */\nexport class ReadableStreamBYOBRequest {\n  /** @internal */\n  _associatedReadableByteStreamController!: ReadableByteStreamController;\n  /** @internal */\n  _view!: ArrayBufferView | null;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n   */\n  get view(): ArrayBufferView | null {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that `bytesWritten` bytes were written into\n   * {@link ReadableStreamBYOBRequest.view | view}, causing the result be surfaced to the consumer.\n   *\n   * After this method is called, {@link ReadableStreamBYOBRequest.view | view} will be transferred and no longer\n   * modifiable.\n   */\n  respond(bytesWritten: number): void;\n  respond(bytesWritten: number | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respond');\n    }\n    assertRequiredArgument(bytesWritten, 1, 'respond');\n    bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view!.buffer)) {\n      throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n    }\n\n    assert(this._view!.byteLength > 0);\n    assert(this._view!.buffer.byteLength > 0);\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that instead of writing into\n   * {@link ReadableStreamBYOBRequest.view | view}, the underlying byte source is providing a new `ArrayBufferView`,\n   * which will be given to the consumer of the readable byte stream.\n   *\n   * After this method is called, `view` will be transferred and no longer modifiable.\n   */\n  respondWithNewView(view: ArrayBufferView): void;\n  respondWithNewView(view: ArrayBufferView | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respondWithNewView');\n    }\n    assertRequiredArgument(view, 1, 'respondWithNewView');\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(view.buffer)) {\n      throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, {\n  respond: { enumerable: true },\n  respondWithNewView: { enumerable: true },\n  view: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBRequest',\n    configurable: true\n  });\n}\n\ninterface ArrayBufferViewConstructor<T extends ArrayBufferView = ArrayBufferView> {\n  new(buffer: ArrayBufferLike, byteOffset: number, length?: number): T;\n\n  readonly prototype: T;\n  readonly BYTES_PER_ELEMENT: number;\n}\n\ninterface ByteQueueElement {\n  buffer: ArrayBufferLike;\n  byteOffset: number;\n  byteLength: number;\n}\n\ntype PullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> =\n  DefaultPullIntoDescriptor\n  | BYOBPullIntoDescriptor<T>;\n\ninterface DefaultPullIntoDescriptor {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<Uint8Array>;\n  readerType: 'default';\n}\n\ninterface BYOBPullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<T>;\n  readerType: 'byob';\n}\n\n/**\n * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableByteStreamController {\n  /** @internal */\n  _controlledReadableByteStream!: ReadableByteStream;\n  /** @internal */\n  _queue!: SimpleQueue<ByteQueueElement>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n  /** @internal */\n  _autoAllocateChunkSize: number | undefined;\n  /** @internal */\n  _byobRequest: ReadableStreamBYOBRequest | null;\n  /** @internal */\n  _pendingPullIntos!: SimpleQueue<PullIntoDescriptor>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the current BYOB pull request, or `null` if there isn't one.\n   */\n  get byobRequest(): ReadableStreamBYOBRequest | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    return ReadableByteStreamControllerGetBYOBRequest(this);\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk chunk in the controlled readable stream.\n   * The chunk has to be an `ArrayBufferView` instance, or else a `TypeError` will be thrown.\n   */\n  enqueue(chunk: ArrayBufferView): void;\n  enqueue(chunk: ArrayBufferView | undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    assertRequiredArgument(chunk, 1, 'enqueue');\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('chunk must be an array buffer view');\n    }\n    if (chunk.byteLength === 0) {\n      throw new TypeError('chunk must have non-zero byteLength');\n    }\n    if (chunk.buffer.byteLength === 0) {\n      throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ReadableByteStreamControllerClearPendingPullIntos(this);\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<Uint8Array>): void {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream));\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      const entry = this._queue.shift()!;\n      this._queueTotalSize -= entry.byteLength;\n\n      ReadableByteStreamControllerHandleQueueDrain(this);\n\n      const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\n      readRequest._chunkSteps(view);\n      return;\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer: ArrayBuffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        readRequest._errorSteps(bufferE);\n        return;\n      }\n\n      const pullIntoDescriptor: DefaultPullIntoDescriptor = {\n        buffer,\n        bufferByteLength: autoAllocateChunkSize,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        elementSize: 1,\n        viewConstructor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    ReadableStreamAddReadRequest(stream, readRequest);\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n  }\n}\n\nObject.defineProperties(ReadableByteStreamController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  byobRequest: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n    value: 'ReadableByteStreamController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nexport function IsReadableByteStreamController(x: any): x is ReadableByteStreamController {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableByteStreamController;\n}\n\nfunction IsReadableStreamBYOBRequest(x: any): x is ReadableStreamBYOBRequest {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBRequest;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller: ReadableByteStreamController): void {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller: ReadableByteStreamController) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = new SimpleQueue();\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor<T extends ArrayBufferView>(\n  stream: ReadableByteStream,\n  pullIntoDescriptor: PullIntoDescriptor<T>\n) {\n  assert(stream._state !== 'errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView as unknown as Uint8Array, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor<T extends ArrayBufferView>(\n  pullIntoDescriptor: PullIntoDescriptor<T>\n): T {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.viewConstructor(\n    pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize) as T;\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller: ReadableByteStreamController,\n                                                         buffer: ArrayBufferLike,\n                                                         byteOffset: number,\n                                                         byteLength: number) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller: ReadableByteStreamController,\n                                                                     pullIntoDescriptor: PullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue.peek();\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (!ready) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller: ReadableByteStreamController,\n                                                                size: number,\n                                                                pullIntoDescriptor: PullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos.peek() === pullIntoDescriptor);\n  assert(controller._byobRequest === null);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller: ReadableByteStreamController) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller: ReadableByteStreamController) {\n  if (controller._byobRequest === null) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined!;\n  controller._byobRequest._view = null!;\n  controller._byobRequest = null;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller: ReadableByteStreamController) {\n  assert(!controller._closeRequested);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos.peek();\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nexport function ReadableByteStreamControllerPullInto<T extends ArrayBufferView>(\n  controller: ReadableByteStreamController,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = controller._controlledReadableByteStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = (view.constructor as ArrayBufferViewConstructor<T>).BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor as ArrayBufferViewConstructor<T>;\n\n  // try {\n  const buffer = TransferArrayBuffer(view.buffer);\n  // } catch (e) {\n  //   readIntoRequest._errorSteps(e);\n  //   return;\n  // }\n\n  const pullIntoDescriptor: BYOBPullIntoDescriptor<T> = {\n    buffer,\n    bufferByteLength: buffer.byteLength,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    viewConstructor: ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n    return;\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    readIntoRequest._closeSteps(emptyView);\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      readIntoRequest._chunkSteps(filledView);\n      return;\n    }\n\n    if (controller._closeRequested) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      readIntoRequest._errorSteps(e);\n      return;\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  ReadableStreamAddReadIntoRequest<T>(stream, readIntoRequest);\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller: ReadableByteStreamController,\n                                                          firstDescriptor: PullIntoDescriptor) {\n  assert(firstDescriptor.bytesFilled === 0);\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream)) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller: ReadableByteStreamController,\n                                                            bytesWritten: number,\n                                                            pullIntoDescriptor: PullIntoDescriptor) {\n  assert(pullIntoDescriptor.bytesFilled + bytesWritten <= pullIntoDescriptor.byteLength);\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller: ReadableByteStreamController, bytesWritten: number) {\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  assert(CanTransferArrayBuffer(firstDescriptor.buffer));\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  const state = controller._controlledReadableByteStream._state;\n  if (state === 'closed') {\n    assert(bytesWritten === 0);\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(state === 'readable');\n    assert(bytesWritten > 0);\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(\n  controller: ReadableByteStreamController\n): PullIntoDescriptor {\n  assert(controller._byobRequest === null);\n  const descriptor = controller._pendingPullIntos.shift()!;\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller: ReadableByteStreamController): boolean {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller: ReadableByteStreamController) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nexport function ReadableByteStreamControllerClose(controller: ReadableByteStreamController) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nexport function ReadableByteStreamControllerEnqueue(controller: ReadableByteStreamController, chunk: ArrayBufferView) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  if (IsDetachedBuffer(buffer)) {\n    throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n  }\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n      throw new TypeError(\n        'The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk'\n      );\n    }\n    firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n  }\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  if (ReadableStreamHasDefaultReader(stream)) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      assert(controller._pendingPullIntos.length === 0);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n      if (controller._pendingPullIntos.length > 0) {\n        assert(controller._pendingPullIntos.peek().readerType === 'default');\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n      }\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream)) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(!IsReadableStreamLocked(stream));\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableByteStreamControllerError(controller: ReadableByteStreamController, e: any) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableByteStreamControllerGetBYOBRequest(\n  controller: ReadableByteStreamController\n): ReadableStreamBYOBRequest | null {\n  if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n    const firstDescriptor = controller._pendingPullIntos.peek();\n    const view = new Uint8Array(firstDescriptor.buffer,\n                                firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n    const byobRequest: ReadableStreamBYOBRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n    SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n    controller._byobRequest = byobRequest;\n  }\n  return controller._byobRequest;\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller: ReadableByteStreamController): number | null {\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nexport function ReadableByteStreamControllerRespond(controller: ReadableByteStreamController, bytesWritten: number) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (bytesWritten === 0) {\n      throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n    }\n    if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n  }\n\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nexport function ReadableByteStreamControllerRespondWithNewView(controller: ReadableByteStreamController,\n                                                               view: ArrayBufferView) {\n  assert(controller._pendingPullIntos.length > 0);\n  assert(!IsDetachedBuffer(view.buffer));\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (view.byteLength !== 0) {\n      throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (view.byteLength === 0) {\n      throw new TypeError(\n        'The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream'\n      );\n    }\n  }\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n  if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n    throw new RangeError('The region specified by view is larger than byobRequest');\n  }\n\n  const viewByteLength = view.byteLength;\n  firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n  ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n}\n\nexport function SetUpReadableByteStreamController(stream: ReadableByteStream,\n                                                  controller: ReadableByteStreamController,\n                                                  startAlgorithm: () => void | PromiseLike<void>,\n                                                  pullAlgorithm: () => Promise<void>,\n                                                  cancelAlgorithm: (reason: any) => Promise<void>,\n                                                  highWaterMark: number,\n                                                  autoAllocateChunkSize: number | undefined) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(NumberIsInteger(autoAllocateChunkSize));\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._byobRequest = null;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = new SimpleQueue();\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableByteStreamControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableByteStreamControllerFromUnderlyingSource(\n  stream: ReadableByteStream,\n  underlyingByteSource: ValidatedUnderlyingByteSource,\n  highWaterMark: number\n) {\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingByteSource.start !== undefined) {\n    startAlgorithm = () => underlyingByteSource.start!(controller);\n  }\n  if (underlyingByteSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingByteSource.pull!(controller);\n  }\n  if (underlyingByteSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingByteSource.cancel!(reason);\n  }\n\n  const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize === 0) {\n    throw new TypeError('autoAllocateChunkSize must be greater than 0');\n  }\n\n  SetUpReadableByteStreamController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize\n  );\n}\n\nfunction SetUpReadableStreamBYOBRequest(request: ReadableStreamBYOBRequest,\n                                        controller: ReadableByteStreamController,\n                                        view: ArrayBufferView) {\n  assert(IsReadableByteStreamController(controller));\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view));\n  assert(!IsDetachedBuffer(view.buffer));\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableByteStream, ReadableStream } from '../readable-stream';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamController,\n  ReadableByteStreamControllerPullInto\n} from './byte-stream-controller';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\nimport { IsDetachedBuffer } from '../abstract-ops/ecmascript';\n\n/**\n * A result returned by {@link ReadableStreamBYOBReader.read}.\n *\n * @public\n */\nexport type ReadableStreamBYOBReadResult<T extends ArrayBufferView> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value: T | undefined;\n};\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamBYOBReader(stream: ReadableByteStream): ReadableStreamBYOBReader {\n  return new ReadableStreamBYOBReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadIntoRequest<T extends ArrayBufferView>(stream: ReadableByteStream,\n                                                                            readIntoRequest: ReadIntoRequest<T>): void {\n  assert(IsReadableStreamBYOBReader(stream._reader));\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  (stream._reader! as ReadableStreamBYOBReader)._readIntoRequests.push(readIntoRequest);\n}\n\nexport function ReadableStreamFulfillReadIntoRequest(stream: ReadableByteStream,\n                                                     chunk: ArrayBufferView,\n                                                     done: boolean) {\n  const reader = stream._reader as ReadableStreamBYOBReader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift()!;\n  if (done) {\n    readIntoRequest._closeSteps(chunk);\n  } else {\n    readIntoRequest._chunkSteps(chunk);\n  }\n}\n\nexport function ReadableStreamGetNumReadIntoRequests(stream: ReadableByteStream): number {\n  return (stream._reader as ReadableStreamBYOBReader)._readIntoRequests.length;\n}\n\nexport function ReadableStreamHasBYOBReader(stream: ReadableByteStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamBYOBReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadIntoRequest<T extends ArrayBufferView> {\n  _chunkSteps(chunk: T): void;\n\n  _closeSteps(chunk: T | undefined): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A BYOB reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamBYOBReader {\n  /** @internal */\n  _ownerReadableStream!: ReadableByteStream;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readIntoRequests: SimpleQueue<ReadIntoRequest<any>>;\n\n  constructor(stream: ReadableByteStream) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    if (!IsReadableByteStreamController(stream._readableStreamController)) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n        'source');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Attempts to reads bytes into view, and returns a promise resolved with the result.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamBYOBReadResult<T>> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('read'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n    }\n    if (view.byteLength === 0) {\n      return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n    }\n    if (view.buffer.byteLength === 0) {\n      return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n    }\n    if (IsDetachedBuffer(view.buffer)) {\n      return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamBYOBReadResult<T>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamBYOBReadResult<T>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readIntoRequest: ReadIntoRequest<T> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamBYOBReader(x: any): x is ReadableStreamBYOBReader {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBReader;\n}\n\nexport function ReadableStreamBYOBReaderRead<T extends ArrayBufferView>(\n  reader: ReadableStreamBYOBReader,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    readIntoRequest._errorSteps(stream._storedError);\n  } else {\n    ReadableByteStreamControllerPullInto(\n      stream._readableStreamController as ReadableByteStreamController,\n      view,\n      readIntoRequest\n    );\n  }\n}\n\n// Helper functions for the ReadableStreamBYOBReader.\n\nfunction byobReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n", "import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport NumberIsNaN from '../../stub/number-isnan';\n\nexport function ExtractHighWaterMark(strategy: QueuingStrategy, defaultHWM: number): number {\n  const { highWaterMark } = strategy;\n\n  if (highWaterMark === undefined) {\n    return defaultHWM;\n  }\n\n  if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n    throw new RangeError('Invalid highWaterMark');\n  }\n\n  return highWaterMark;\n}\n\nexport function ExtractSizeAlgorithm<T>(strategy: QueuingStrategy<T>): QueuingStrategySizeCallback<T> {\n  const { size } = strategy;\n\n  if (!size) {\n    return () => 1;\n  }\n\n  return size;\n}\n", "import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport { assertDictionary, assertFunction, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategy<T>(init: QueuingStrategy<T> | null | undefined,\n                                          context: string): QueuingStrategy<T> {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  const size = init?.size;\n  return {\n    highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n    size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n  };\n}\n\nfunction convertQueuingStrategySize<T>(fn: QueuingStrategySizeCallback<T>,\n                                       context: string): QueuingStrategySizeCallback<T> {\n  assertFunction(fn, context);\n  return chunk => convertUnrestrictedDouble(fn(chunk));\n}\n", "import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from '../writable-stream/underlying-sink';\nimport { WritableStreamDefaultController } from '../writable-stream';\n\nexport function convertUnderlyingSink<W>(original: UnderlyingSink<W> | null,\n                                         context: string): ValidatedUnderlyingSink<W> {\n  assertDictionary(original, context);\n  const abort = original?.abort;\n  const close = original?.close;\n  const start = original?.start;\n  const type = original?.type;\n  const write = original?.write;\n  return {\n    abort: abort === undefined ?\n      undefined :\n      convertUnderlyingSinkAbortCallback(abort, original!, `${context} has member 'abort' that`),\n    close: close === undefined ?\n      undefined :\n      convertUnderlyingSinkCloseCallback(close, original!, `${context} has member 'close' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSinkStartCallback(start, original!, `${context} has member 'start' that`),\n    write: write === undefined ?\n      undefined :\n      convertUnderlyingSinkWriteCallback(write, original!, `${context} has member 'write' that`),\n    type\n  };\n}\n\nfunction convertUnderlyingSinkAbortCallback(\n  fn: UnderlyingSinkAbortCallback,\n  original: UnderlyingSink,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSinkCloseCallback(\n  fn: UnderlyingSinkCloseCallback,\n  original: UnderlyingSink,\n  context: string\n): () => Promise<void> {\n  assertFunction(fn, context);\n  return () => promiseCall(fn, original, []);\n}\n\nfunction convertUnderlyingSinkStartCallback(\n  fn: UnderlyingSinkStartCallback,\n  original: UnderlyingSink,\n  context: string\n): UnderlyingSinkStartCallback {\n  assertFunction(fn, context);\n  return (controller: WritableStreamDefaultController) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSinkWriteCallback<W>(\n  fn: UnderlyingSinkWriteCallback<W>,\n  original: UnderlyingSink<W>,\n  context: string\n): (chunk: W, controller: WritableStreamDefaultController) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: W, controller: WritableStreamDefaultController) => promiseCall(fn, original, [chunk, controller]);\n}\n", "import { IsWritableStream, WritableStream } from '../writable-stream';\n\nexport function assertWritableStream(x: unknown, context: string): asserts x is WritableStream {\n  if (!IsWritableStream(x)) {\n    throw new TypeError(`${context} is not a WritableStream.`);\n  }\n}\n", "/**\n * A signal object that allows you to communicate with a request and abort it if required\n * via its associated `AbortController` object.\n *\n * @remarks\n *   This interface is compatible with the `AbortSignal` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @public\n */\nexport interface AbortSignal {\n  /**\n   * Whether the request is aborted.\n   */\n  readonly aborted: boolean;\n\n  /**\n   * Add an event listener to be triggered when this signal becomes aborted.\n   */\n  addEventListener(type: 'abort', listener: () => void): void;\n\n  /**\n   * Remove an event listener that was previously added with {@link AbortSignal.addEventListener}.\n   */\n  removeEventListener(type: 'abort', listener: () => void): void;\n}\n\nexport function isAbortSignal(value: unknown): value is AbortSignal {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  try {\n    return typeof (value as AbortSignal).aborted === 'boolean';\n  } catch {\n    // AbortSignal.prototype.aborted throws if its brand check fails\n    return false;\n  }\n}\n\n/**\n * A controller object that allows you to abort an `AbortSignal` when desired.\n *\n * @remarks\n *   This interface is compatible with the `AbortController` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @internal\n */\nexport interface AbortController {\n  readonly signal: AbortSignal;\n\n  abort(): void;\n}\n\ninterface AbortControllerConstructor {\n  new(): AbortController;\n}\n\nconst supportsAbortController = typeof (AbortController as any) === 'function';\n\n/**\n * Construct a new AbortController, if supported by the platform.\n *\n * @internal\n */\nexport function createAbortController(): AbortController | undefined {\n  if (supportsAbortController) {\n    return new (AbortController as AbortControllerConstructor)();\n  }\n  return undefined;\n}\n", "import assert from '../stub/assert';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponPromise\n} from './helpers/webidl';\nimport {\n  DequeueValue,\n  EnqueueValueWithSize,\n  PeekQueueValue,\n  QueuePair,\n  ResetQueue\n} from './abstract-ops/queue-with-sizes';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { SimpleQueue } from './simple-queue';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { AbortSteps, ErrorSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from './writable-stream/underlying-sink';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertUnderlyingSink } from './validators/underlying-sink';\nimport { assertWritableStream } from './validators/writable-stream';\nimport { AbortController, AbortSignal, createAbortController } from './abort-signal';\n\ntype WritableStreamState = 'writable' | 'closed' | 'erroring' | 'errored';\n\ninterface WriteOrCloseRequest {\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n}\n\ntype WriteRequest = WriteOrCloseRequest;\ntype CloseRequest = WriteOrCloseRequest;\n\ninterface PendingAbortRequest {\n  _promise: Promise<undefined>;\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n  _reason: any;\n  _wasAlreadyErroring: boolean;\n}\n\n/**\n * A writable stream represents a destination for data, into which you can write.\n *\n * @public\n */\nclass WritableStream<W = any> {\n  /** @internal */\n  _state!: WritableStreamState;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _writer: WritableStreamDefaultWriter<W> | undefined;\n  /** @internal */\n  _writableStreamController!: WritableStreamDefaultController<W>;\n  /** @internal */\n  _writeRequests!: SimpleQueue<WriteRequest>;\n  /** @internal */\n  _inFlightWriteRequest: WriteRequest | undefined;\n  /** @internal */\n  _closeRequest: CloseRequest | undefined;\n  /** @internal */\n  _inFlightCloseRequest: CloseRequest | undefined;\n  /** @internal */\n  _pendingAbortRequest: PendingAbortRequest | undefined;\n  /** @internal */\n  _backpressure!: boolean;\n\n  constructor(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>);\n  constructor(rawUnderlyingSink: UnderlyingSink<W> | null | undefined = {},\n              rawStrategy: QueuingStrategy<W> | null | undefined = {}) {\n    if (rawUnderlyingSink === undefined) {\n      rawUnderlyingSink = null;\n    } else {\n      assertObject(rawUnderlyingSink, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n\n    InitializeWritableStream(this);\n\n    const type = underlyingSink.type;\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n    const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  /**\n   * Returns whether or not the writable stream is locked to a writer.\n   */\n  get locked(): boolean {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  /**\n   * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n   * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n   * mechanism of the underlying sink.\n   *\n   * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n   * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n   * the stream) if the stream is currently locked.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  /**\n   * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n   * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n   *\n   * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n   * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n   * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n   */\n  close() {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('close'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamClose(this);\n  }\n\n  /**\n   * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n   * is locked, no other writer can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n   * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n   * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n   */\n  getWriter(): WritableStreamDefaultWriter<W> {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nObject.defineProperties(WritableStream.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  getWriter: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n    value: 'WritableStream',\n    configurable: true\n  });\n}\n\nexport {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight,\n  UnderlyingSink,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkAbortCallback\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter<W>(stream: WritableStream<W>): WritableStreamDefaultWriter<W> {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream<W>(startAlgorithm: () => void | PromiseLike<void>,\n                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                 closeAlgorithm: () => Promise<void>,\n                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                 highWaterMark = 1,\n                                 sizeAlgorithm: QueuingStrategySizeCallback<W> = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: WritableStream<W> = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller: WritableStreamDefaultController<W> = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream<W>(stream: WritableStream<W>) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined!;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = new SimpleQueue();\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x: unknown): x is WritableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return x instanceof WritableStream;\n}\n\nfunction IsWritableStreamLocked(stream: WritableStream): boolean {\n  assert(IsWritableStream(stream));\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream: WritableStream, reason: any): Promise<undefined> {\n  if (stream._state === 'closed' || stream._state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  stream._writableStreamController._abortReason = reason;\n  stream._writableStreamController._abortController?.abort();\n\n  // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n  // but it doesn't know that signaling abort runs author code that might have changed the state.\n  // Widen the type again by casting to WritableStreamState.\n  const state = stream._state as WritableStreamState;\n\n  if (state === 'closed' || state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _promise: undefined!,\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest!._promise = promise;\n\n  if (!wasAlreadyErroring) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\nfunction WritableStreamClose(stream: WritableStream<any>): Promise<undefined> {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return promiseRejectedWith(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const closeRequest: CloseRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  const writer = stream._writer;\n  if (writer !== undefined && stream._backpressure && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream: WritableStream): Promise<undefined> {\n  assert(IsWritableStreamLocked(stream));\n  assert(stream._state === 'writable');\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const writeRequest: WriteRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream: WritableStream, error: any) {\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream: WritableStream, reason: any) {\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream: WritableStream) {\n  assert(stream._state === 'erroring');\n  assert(!WritableStreamHasOperationMarkedInFlight(stream));\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  stream._writeRequests.forEach(writeRequest => {\n    writeRequest._reject(storedError);\n  });\n  stream._writeRequests = new SimpleQueue();\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  uponPromise(\n    promise,\n    () => {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    },\n    (reason: any) => {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream: WritableStream): boolean {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream: WritableStream): boolean {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream: WritableStream) {\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream: WritableStream, backpressure: boolean) {\n  assert(stream._state === 'writable');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(!backpressure);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\n/**\n * A default writer vended by a {@link WritableStream}.\n *\n * @public\n */\nexport class WritableStreamDefaultWriter<W = any> {\n  /** @internal */\n  _ownerWritableStream: WritableStream<W>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _closedPromiseState!: 'pending' | 'resolved' | 'rejected';\n  /** @internal */\n  _readyPromise!: Promise<undefined>;\n  /** @internal */\n  _readyPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _readyPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readyPromiseState!: 'pending' | 'fulfilled' | 'rejected';\n\n  constructor(stream: WritableStream<W>) {\n    assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n    assertWritableStream(stream, 'First parameter');\n\n    if (IsWritableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n    }\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the writer\u2019s lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * Returns the desired size to fill the stream\u2019s internal queue. It can be negative, if the queue is over-full.\n   * A producer can use this information to determine the right amount of data to write.\n   *\n   * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n   * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n   * the writer\u2019s lock is released.\n   */\n  get desiredSize(): number | null {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the desired size to fill the stream\u2019s internal queue transitions\n   * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n   * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n   *\n   * If the stream becomes errored or aborted, or the writer\u2019s lock is released, the returned promise will become\n   * rejected.\n   */\n  get ready(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n   */\n  close(): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  /**\n   * Releases the writer\u2019s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n   * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n   * now on; otherwise, the writer will appear closed.\n   *\n   * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n   * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n   * It\u2019s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n   * other producers from writing in an interleaved manner.\n   */\n  releaseLock(): void {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  /**\n   * Writes the given chunk to the writable stream, by waiting until any previous writes have finished successfully,\n   * and then sending the chunk to the underlying sink's {@link UnderlyingSink.write | write()} method. It will return\n   * a promise that fulfills with undefined upon a successful write, or rejects if the write fails or stream becomes\n   * errored before the writing process is initiated.\n   *\n   * Note that what \"success\" means is up to the underlying sink; it might indicate simply that the chunk has been\n   * accepted, and not necessarily that it is safely saved to its ultimate destination.\n   */\n  write(chunk: W): Promise<void>;\n  write(chunk: W = undefined!): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultWriter.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  releaseLock: { enumerable: true },\n  write: { enumerable: true },\n  closed: { enumerable: true },\n  desiredSize: { enumerable: true },\n  ready: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultWriter',\n    configurable: true\n  });\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter<W = any>(x: any): x is WritableStreamDefaultWriter<W> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultWriter;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer: WritableStreamDefaultWriter, reason: any) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamClose(stream);\n}\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer: WritableStreamDefaultWriter): number | null {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer: WritableStreamDefaultWriter) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    `Writer was released and can no longer be used to monitor the stream's closedness`);\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined!;\n}\n\nfunction WritableStreamDefaultWriterWrite<W>(writer: WritableStreamDefaultWriter<W>, chunk: W): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return promiseRejectedWith(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nconst closeSentinel: unique symbol = {} as any;\n\ntype QueueRecord<W> = W | typeof closeSentinel;\n\n/**\n * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n *\n * @public\n */\nexport class WritableStreamDefaultController<W = any> {\n  /** @internal */\n  _controlledWritableStream!: WritableStream<W>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<QueueRecord<W>>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _abortReason: any;\n  /** @internal */\n  _abortController: AbortController | undefined;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<W>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _writeAlgorithm!: (chunk: W) => Promise<void>;\n  /** @internal */\n  _closeAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _abortAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n   *\n   * @deprecated\n   *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n   *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n   */\n  get abortReason(): any {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('abortReason');\n    }\n    return this._abortReason;\n  }\n\n  /**\n   * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n   */\n  get signal(): AbortSignal {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('signal');\n    }\n    if (this._abortController === undefined) {\n      // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n      // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n      // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n      throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n    }\n    return this._abortController.signal;\n  }\n\n  /**\n   * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n   *\n   * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n   * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n   * normal lifecycle of interactions with the underlying sink.\n   */\n  error(e: any = undefined): void {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [AbortSteps](reason: any): Promise<void> {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultController.prototype, {\n  abortReason: { enumerable: true },\n  signal: { enumerable: true },\n  error: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x: any): x is WritableStreamDefaultController<any> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultController;\n}\n\nfunction SetUpWritableStreamDefaultController<W>(stream: WritableStream<W>,\n                                                 controller: WritableStreamDefaultController<W>,\n                                                 startAlgorithm: () => void | PromiseLike<void>,\n                                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                                 closeAlgorithm: () => Promise<void>,\n                                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                                 highWaterMark: number,\n                                                 sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  assert(IsWritableStream(stream));\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._abortReason = undefined;\n  controller._abortController = createAbortController();\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = promiseResolvedWith(startResult);\n  uponPromise(\n    startPromise,\n    () => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    r => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDealWithRejection(stream, r);\n    }\n  );\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink<W>(stream: WritableStream<W>,\n                                                                   underlyingSink: ValidatedUnderlyingSink<W>,\n                                                                   highWaterMark: number,\n                                                                   sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let writeAlgorithm: (chunk: W) => Promise<void> = () => promiseResolvedWith(undefined);\n  let closeAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let abortAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSink.start !== undefined) {\n    startAlgorithm = () => underlyingSink.start!(controller);\n  }\n  if (underlyingSink.write !== undefined) {\n    writeAlgorithm = chunk => underlyingSink.write!(chunk, controller);\n  }\n  if (underlyingSink.close !== undefined) {\n    closeAlgorithm = () => underlyingSink.close!();\n  }\n  if (underlyingSink.abort !== undefined) {\n    abortAlgorithm = reason => underlyingSink.abort!(reason);\n  }\n\n  SetUpWritableStreamDefaultController(\n    stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller: WritableStreamDefaultController<any>) {\n  controller._writeAlgorithm = undefined!;\n  controller._closeAlgorithm = undefined!;\n  controller._abortAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\nfunction WritableStreamDefaultControllerClose<W>(controller: WritableStreamDefaultController<W>) {\n  EnqueueValueWithSize(controller, closeSentinel, 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize<W>(controller: WritableStreamDefaultController<W>,\n                                                        chunk: W): number {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller: WritableStreamDefaultController<any>): number {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite<W>(controller: WritableStreamDefaultController<W>,\n                                                 chunk: W,\n                                                 chunkSize: number) {\n  try {\n    EnqueueValueWithSize(controller, chunk, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded<W>(controller: WritableStreamDefaultController<W>) {\n  const stream = controller._controlledWritableStream;\n\n  if (!controller._started) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  assert(state !== 'closed' && state !== 'errored');\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const value = PeekQueueValue(controller);\n  if (value === closeSentinel) {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, value);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller: WritableStreamDefaultController<any>, error: any) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller: WritableStreamDefaultController<any>) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  uponPromise(\n    sinkClosePromise,\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerProcessWrite<W>(controller: WritableStreamDefaultController<W>, chunk: W) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  uponPromise(\n    sinkWritePromise,\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller: WritableStreamDefaultController<any>): boolean {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller: WritableStreamDefaultController<any>, error: any) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n}\n\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._closedPromise = newPromise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseReject(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseResolve(writer);\n}\n\nfunction defaultWriterClosedPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._closedPromise_reject === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  setPromiseIsHandledToTrue(writer._closedPromise);\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._closedPromise_resolve === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._readyPromise = newPromise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseReject(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseResolve(writer);\n}\n\nfunction defaultWriterReadyPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._readyPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(writer._readyPromise);\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer: WritableStreamDefaultWriter) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitialize(writer);\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._readyPromise_resolve === undefined) {\n    return;\n  }\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n", "/// <reference lib=\"dom\" />\nexport const NativeDOMException: typeof DOMException | undefined =\n  typeof DOMException !== 'undefined' ? DOMException : undefined;\n", "/// <reference types=\"node\" />\nimport { NativeDOMException } from './native';\n\ndeclare class DOMExceptionClass extends Error {\n  constructor(message?: string, name?: string);\n\n  name: string;\n  message: string;\n}\n\ntype DOMException = DOMExceptionClass;\ntype DOMExceptionConstructor = typeof DOMExceptionClass;\n\nfunction isDOMExceptionConstructor(ctor: unknown): ctor is DOMExceptionConstructor {\n  if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n    return false;\n  }\n  try {\n    new (ctor as DOMExceptionConstructor)();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction createDOMExceptionPolyfill(): DOMExceptionConstructor {\n  // eslint-disable-next-line no-shadow\n  const ctor = function DOMException(this: DOMException, message?: string, name?: string) {\n    this.message = message || '';\n    this.name = name || 'Error';\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  } as any;\n  ctor.prototype = Object.create(Error.prototype);\n  Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n  return ctor;\n}\n\n// eslint-disable-next-line no-redeclare\nconst DOMException: DOMExceptionConstructor =\n  isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\nexport { DOMException };\n", "import { IsReadableStream, IsReadableStreamLocked, ReadableStream, ReadableStreamCancel } from '../readable-stream';\nimport { AcquireReadableStreamDefaultReader, ReadableStreamDefaultReaderRead } from './default-reader';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireWritableStreamDefaultWriter,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamCloseQueuedOrInFlight,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite\n} from '../writable-stream';\nimport assert from '../../stub/assert';\nimport {\n  newPromise,\n  PerformPromiseThen,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponFulfillment,\n  uponPromise,\n  uponRejection\n} from '../helpers/webidl';\nimport { noop } from '../../utils';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\nimport { DOMException } from '../../stub/dom-exception';\n\nexport function ReadableStreamPipeTo<T>(source: ReadableStream<T>,\n                                        dest: WritableStream<T>,\n                                        preventClose: boolean,\n                                        preventAbort: boolean,\n                                        preventCancel: boolean,\n                                        signal: AbortSignal | undefined): Promise<undefined> {\n  assert(IsReadableStream(source));\n  assert(IsWritableStream(dest));\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(!IsReadableStreamLocked(source));\n  assert(!IsWritableStreamLocked(dest));\n\n  const reader = AcquireReadableStreamDefaultReader<T>(source);\n  const writer = AcquireWritableStreamDefaultWriter<T>(dest);\n\n  source._disturbed = true;\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = promiseResolvedWith<void>(undefined);\n\n  return newPromise((resolve, reject) => {\n    let abortAlgorithm: () => void;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = new DOMException('Aborted', 'AbortError');\n        const actions: Array<() => Promise<void>> = [];\n        if (!preventAbort) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        if (!preventCancel) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n      };\n\n      if (signal.aborted) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return newPromise<void>((resolveLoop, rejectLoop) => {\n        function next(done: boolean) {\n          if (done) {\n            resolveLoop();\n          } else {\n            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n            PerformPromiseThen(pipeStep(), next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep(): Promise<boolean> {\n      if (shuttingDown) {\n        return promiseResolvedWith(true);\n      }\n\n      return PerformPromiseThen(writer._readyPromise, () => {\n        return newPromise<boolean>((resolveRead, rejectRead) => {\n          ReadableStreamDefaultReaderRead(\n            reader,\n            {\n              _chunkSteps: chunk => {\n                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                resolveRead(false);\n              },\n              _closeSteps: () => resolveRead(true),\n              _errorSteps: rejectRead\n            }\n          );\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (!preventAbort) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (!preventClose) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    setPromiseIsHandledToTrue(pipeLoop());\n\n    function waitForWritesToFinish(): Promise<void> {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return PerformPromiseThen(\n        currentWrite,\n        () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined\n      );\n    }\n\n    function isOrBecomesErrored(stream: ReadableStream | WritableStream,\n                                promise: Promise<void>,\n                                action: (reason: any) => void) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        uponRejection(promise, action);\n      }\n    }\n\n    function isOrBecomesClosed(stream: ReadableStream | WritableStream, promise: Promise<void>, action: () => void) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        uponFulfillment(promise, action);\n      }\n    }\n\n    function shutdownWithAction(action: () => Promise<unknown>, originalIsError?: boolean, originalError?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest() {\n        uponPromise(\n          action(),\n          () => finalize(originalIsError, originalError),\n          newError => finalize(true, newError)\n        );\n      }\n    }\n\n    function shutdown(isError?: boolean, error?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError?: boolean, error?: any) {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n    }\n  });\n}\n", "import { QueuingStrategySizeCallback } from '../queuing-strategy';\nimport assert from '../../stub/assert';\nimport { DequeueValue, EnqueueValueWithSize, QueuePair, ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadRequest\n} from './default-reader';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsReadableStreamLocked, ReadableStream, ReadableStreamClose, ReadableStreamError } from '../readable-stream';\nimport { ValidatedUnderlyingSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\n\n/**\n * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableStreamDefaultController<R> {\n  /** @internal */\n  _controlledReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<R>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<R>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the controlled readable stream.\n   */\n  enqueue(chunk: R): void;\n  enqueue(chunk: R = undefined!): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<R>): void {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      readRequest._chunkSteps(chunk);\n    } else {\n      ReadableStreamAddReadRequest(stream, readRequest);\n      ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    }\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController<R = any>(x: any): x is ReadableStreamDefaultController<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultController;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller: ReadableStreamDefaultController<any>): void {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller: ReadableStreamDefaultController<any>): boolean {\n  const stream = controller._controlledReadableStream;\n\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller: ReadableStreamDefaultController<any>) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nexport function ReadableStreamDefaultControllerClose(controller: ReadableStreamDefaultController<any>) {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nexport function ReadableStreamDefaultControllerEnqueue<R>(\n  controller: ReadableStreamDefaultController<R>,\n  chunk: R\n): void {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableStreamDefaultControllerError(controller: ReadableStreamDefaultController<any>, e: any) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableStreamDefaultControllerGetDesiredSize(\n  controller: ReadableStreamDefaultController<any>\n): number | null {\n  const state = controller._controlledReadableStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nexport function ReadableStreamDefaultControllerHasBackpressure(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function ReadableStreamDefaultControllerCanCloseOrEnqueue(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  const state = controller._controlledReadableStream._state;\n\n  if (!controller._closeRequested && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function SetUpReadableStreamDefaultController<R>(stream: ReadableStream<R>,\n                                                        controller: ReadableStreamDefaultController<R>,\n                                                        startAlgorithm: () => void | PromiseLike<void>,\n                                                        pullAlgorithm: () => Promise<void>,\n                                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                                        highWaterMark: number,\n                                                        sizeAlgorithm: QueuingStrategySizeCallback<R>) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableStreamDefaultControllerFromUnderlyingSource<R>(\n  stream: ReadableStream<R>,\n  underlyingSource: ValidatedUnderlyingSource<R>,\n  highWaterMark: number,\n  sizeAlgorithm: QueuingStrategySizeCallback<R>\n) {\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSource.start !== undefined) {\n    startAlgorithm = () => underlyingSource.start!(controller);\n  }\n  if (underlyingSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingSource.pull!(controller);\n  }\n  if (underlyingSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingSource.cancel!(reason);\n  }\n\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n", "import {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  IsReadableStream,\n  ReadableByteStream,\n  ReadableStream,\n  ReadableStreamCancel,\n  ReadableStreamReader\n} from '../readable-stream';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadRequest\n} from './default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReaderRead,\n  ReadIntoRequest\n} from './byob-reader';\nimport assert from '../../stub/assert';\nimport { newPromise, promiseResolvedWith, queueMicrotask, uponRejection } from '../helpers/webidl';\nimport {\n  ReadableStreamDefaultController,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError\n} from './default-controller';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamControllerClose,\n  ReadableByteStreamControllerEnqueue,\n  ReadableByteStreamControllerError,\n  ReadableByteStreamControllerGetBYOBRequest,\n  ReadableByteStreamControllerRespond,\n  ReadableByteStreamControllerRespondWithNewView\n} from './byte-stream-controller';\nimport { CreateArrayFromList } from '../abstract-ops/ecmascript';\nimport { CloneAsUint8Array } from '../abstract-ops/miscellaneous';\n\nexport function ReadableStreamTee<R>(stream: ReadableStream<R>,\n                                     cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n  if (IsReadableByteStreamController(stream._readableStreamController)) {\n    return ReadableByteStreamTee(stream as unknown as ReadableByteStream) as\n      unknown as [ReadableStream<R>, ReadableStream<R>];\n  }\n  return ReadableStreamDefaultTee(stream, cloneForBranch2);\n}\n\nexport function ReadableStreamDefaultTee<R>(stream: ReadableStream<R>,\n                                            cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n\n  let reading = false;\n  let readAgain = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableStream<R>;\n  let branch2: ReadableStream<R>;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<undefined>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm(): Promise<void> {\n    if (reading) {\n      readAgain = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgain = false;\n          const chunk1 = chunk;\n          const chunk2 = chunk;\n\n          // There is no way to access the cloning code right now in the reference implementation.\n          // If we add one then we'll need an implementation for serializable objects.\n          // if (!canceled2 && cloneForBranch2) {\n          //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n          // }\n\n          if (!canceled1) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch1._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk1\n            );\n          }\n          if (!canceled2) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch2._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk2\n            );\n          }\n\n          reading = false;\n          if (readAgain) {\n            pullAlgorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n        if (!canceled2) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {\n    // do nothing\n  }\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  uponRejection(reader._closedPromise, (r: any) => {\n    ReadableStreamDefaultControllerError(branch1._readableStreamController as ReadableStreamDefaultController<R>, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController as ReadableStreamDefaultController<R>, r);\n    if (!canceled1 || !canceled2) {\n      resolveCancelPromise(undefined);\n    }\n  });\n\n  return [branch1, branch2];\n}\n\nexport function ReadableByteStreamTee(stream: ReadableByteStream): [ReadableByteStream, ReadableByteStream] {\n  assert(IsReadableStream(stream));\n  assert(IsReadableByteStreamController(stream._readableStreamController));\n\n  let reader: ReadableStreamReader<Uint8Array> = AcquireReadableStreamDefaultReader(stream);\n  let reading = false;\n  let readAgainForBranch1 = false;\n  let readAgainForBranch2 = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableByteStream;\n  let branch2: ReadableByteStream;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<void>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function forwardReaderError(thisReader: ReadableStreamReader<Uint8Array>) {\n    uponRejection(thisReader._closedPromise, r => {\n      if (thisReader !== reader) {\n        return;\n      }\n      ReadableByteStreamControllerError(branch1._readableStreamController, r);\n      ReadableByteStreamControllerError(branch2._readableStreamController, r);\n      if (!canceled1 || !canceled2) {\n        resolveCancelPromise(undefined);\n      }\n    });\n  }\n\n  function pullWithDefaultReader() {\n    if (IsReadableStreamBYOBReader(reader)) {\n      assert(reader._readIntoRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamDefaultReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const readRequest: ReadRequest<Uint8Array> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const chunk1 = chunk;\n          let chunk2 = chunk;\n          if (!canceled1 && !canceled2) {\n            try {\n              chunk2 = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n          }\n\n          if (!canceled1) {\n            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n          }\n          if (!canceled2) {\n            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableByteStreamControllerClose(branch1._readableStreamController);\n        }\n        if (!canceled2) {\n          ReadableByteStreamControllerClose(branch2._readableStreamController);\n        }\n        if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n        }\n        if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n        }\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n  }\n\n  function pullWithBYOBReader(view: ArrayBufferView, forBranch2: boolean) {\n    if (IsReadableStreamDefaultReader<Uint8Array>(reader)) {\n      assert(reader._readRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamBYOBReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const byobBranch = forBranch2 ? branch2 : branch1;\n    const otherBranch = forBranch2 ? branch1 : branch2;\n\n    const readIntoRequest: ReadIntoRequest<ArrayBufferView> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const byobCanceled = forBranch2 ? canceled2 : canceled1;\n          const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n          if (!otherCanceled) {\n            let clonedChunk;\n            try {\n              clonedChunk = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n            if (!byobCanceled) {\n              ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n            }\n            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n          } else if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: chunk => {\n        reading = false;\n\n        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n        if (!byobCanceled) {\n          ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n        }\n        if (!otherCanceled) {\n          ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n        }\n\n        if (chunk !== undefined) {\n          assert(chunk.byteLength === 0);\n\n          if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n          if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n          }\n        }\n\n        if (!byobCanceled || !otherCanceled) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n  }\n\n  function pull1Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch1 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, false);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function pull2Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch2 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, true);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm(): void {\n    return;\n  }\n\n  branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n  branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n\n  forwardReaderError(reader);\n\n  return [branch1, branch2];\n}\n", "import { assertDictionary, assertFunction, convertUnsignedLongLongWithEnforceRange } from './basic';\nimport {\n  ReadableStreamController,\n  UnderlyingByteSource,\n  UnderlyingDefaultOrByteSource,\n  UnderlyingDefaultOrByteSourcePullCallback,\n  UnderlyingDefaultOrByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  ValidatedUnderlyingDefaultOrByteSource\n} from '../readable-stream/underlying-source';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\n\nexport function convertUnderlyingDefaultOrByteSource<R>(\n  source: UnderlyingSource<R> | UnderlyingByteSource | null,\n  context: string\n): ValidatedUnderlyingDefaultOrByteSource<R> {\n  assertDictionary(source, context);\n  const original = source as (UnderlyingDefaultOrByteSource<R> | null);\n  const autoAllocateChunkSize = original?.autoAllocateChunkSize;\n  const cancel = original?.cancel;\n  const pull = original?.pull;\n  const start = original?.start;\n  const type = original?.type;\n  return {\n    autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n      undefined :\n      convertUnsignedLongLongWithEnforceRange(\n        autoAllocateChunkSize,\n        `${context} has member 'autoAllocateChunkSize' that`\n      ),\n    cancel: cancel === undefined ?\n      undefined :\n      convertUnderlyingSourceCancelCallback(cancel, original!, `${context} has member 'cancel' that`),\n    pull: pull === undefined ?\n      undefined :\n      convertUnderlyingSourcePullCallback(pull, original!, `${context} has member 'pull' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSourceStartCallback(start, original!, `${context} has member 'start' that`),\n    type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n  };\n}\n\nfunction convertUnderlyingSourceCancelCallback(\n  fn: UnderlyingSourceCancelCallback,\n  original: UnderlyingDefaultOrByteSource,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSourcePullCallback<R>(\n  fn: UnderlyingDefaultOrByteSourcePullCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): (controller: ReadableStreamController<R>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSourceStartCallback<R>(\n  fn: UnderlyingDefaultOrByteSourceStartCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): UnderlyingDefaultOrByteSourceStartCallback<R> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertReadableStreamType(type: string, context: string): 'bytes' {\n  type = `${type}`;\n  if (type !== 'bytes') {\n    throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n  }\n  return type;\n}\n", "import { assertDictionary } from './basic';\nimport { ReadableStreamGetReaderOptions } from '../readable-stream/reader-options';\n\nexport function convertReaderOptions(options: ReadableStreamGetReaderOptions | null | undefined,\n                                     context: string): ReadableStreamGetReaderOptions {\n  assertDictionary(options, context);\n  const mode = options?.mode;\n  return {\n    mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n  };\n}\n\nfunction convertReadableStreamReaderMode(mode: string, context: string): 'byob' {\n  mode = `${mode}`;\n  if (mode !== 'byob') {\n    throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n  }\n  return mode;\n}\n", "import { assertDictionary } from './basic';\nimport {\n  ReadableStreamIteratorOptions,\n  ValidatedReadableStreamIteratorOptions\n} from '../readable-stream/iterator-options';\n\nexport function convertIteratorOptions(options: ReadableStreamIteratorOptions | null | undefined,\n                                       context: string): ValidatedReadableStreamIteratorOptions {\n  assertDictionary(options, context);\n  const preventCancel = options?.preventCancel;\n  return { preventCancel: Boolean(preventCancel) };\n}\n", "import { assertDictionary } from './basic';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from '../readable-stream/pipe-options';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\n\nexport function convertPipeOptions(options: StreamPipeOptions | null | undefined,\n                                   context: string): ValidatedStreamPipeOptions {\n  assertDictionary(options, context);\n  const preventAbort = options?.preventAbort;\n  const preventCancel = options?.preventCancel;\n  const preventClose = options?.preventClose;\n  const signal = options?.signal;\n  if (signal !== undefined) {\n    assertAbortSignal(signal, `${context} has member 'signal' that`);\n  }\n  return {\n    preventAbort: Boolean(preventAbort),\n    preventCancel: Boolean(preventCancel),\n    preventClose: Boolean(preventClose),\n    signal\n  };\n}\n\nfunction assertAbortSignal(signal: unknown, context: string): asserts signal is AbortSignal {\n  if (!isAbortSignal(signal)) {\n    throw new TypeError(`${context} is not an AbortSignal.`);\n  }\n}\n", "import { assertDictionary, assertRequiredField } from './basic';\nimport { ReadableStream } from '../readable-stream';\nimport { WritableStream } from '../writable-stream';\nimport { assertReadableStream } from './readable-stream';\nimport { assertWritableStream } from './writable-stream';\n\nexport function convertReadableWritablePair<RS extends ReadableStream, WS extends WritableStream>(\n  pair: { readable: RS; writable: WS } | null | undefined,\n  context: string\n): { readable: RS; writable: WS } {\n  assertDictionary(pair, context);\n\n  const readable = pair?.readable;\n  assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n  assertReadableStream(readable, `${context} has member 'readable' that`);\n\n  const writable = pair?.writable;\n  assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n  assertWritableStream(writable, `${context} has member 'writable' that`);\n\n  return { readable, writable };\n}\n", "import assert from '../stub/assert';\nimport {\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  transformPromiseWith\n} from './helpers/webidl';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { AcquireReadableStreamAsyncIterator, ReadableStreamAsyncIterator } from './readable-stream/async-iterator';\nimport { defaultReaderClosedPromiseReject, defaultReaderClosedPromiseResolve } from './readable-stream/generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReadResult\n} from './readable-stream/default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBReadResult\n} from './readable-stream/byob-reader';\nimport { ReadableStreamPipeTo } from './readable-stream/pipe';\nimport { ReadableStreamTee } from './readable-stream/tee';\nimport { IsWritableStream, IsWritableStreamLocked, WritableStream } from './writable-stream';\nimport { SimpleQueue } from './simple-queue';\nimport {\n  ReadableByteStreamController,\n  ReadableStreamBYOBRequest,\n  SetUpReadableByteStreamController,\n  SetUpReadableByteStreamControllerFromUnderlyingSource\n} from './readable-stream/byte-stream-controller';\nimport {\n  ReadableStreamDefaultController,\n  SetUpReadableStreamDefaultController,\n  SetUpReadableStreamDefaultControllerFromUnderlyingSource\n} from './readable-stream/default-controller';\nimport {\n  UnderlyingByteSource,\n  UnderlyingByteSourcePullCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceStartCallback\n} from './readable-stream/underlying-source';\nimport { noop } from '../utils';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { CreateArrayFromList } from './abstract-ops/ecmascript';\nimport { CancelSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertUnderlyingDefaultOrByteSource } from './validators/underlying-source';\nimport { ReadableStreamGetReaderOptions } from './readable-stream/reader-options';\nimport { convertReaderOptions } from './validators/reader-options';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from './readable-stream/pipe-options';\nimport { ReadableStreamIteratorOptions } from './readable-stream/iterator-options';\nimport { convertIteratorOptions } from './validators/iterator-options';\nimport { convertPipeOptions } from './validators/pipe-options';\nimport { ReadableWritablePair } from './readable-stream/readable-writable-pair';\nimport { convertReadableWritablePair } from './validators/readable-writable-pair';\n\nexport type ReadableByteStream = ReadableStream<Uint8Array> & {\n  _readableStreamController: ReadableByteStreamController\n};\n\ntype ReadableStreamState = 'readable' | 'closed' | 'errored';\n\n/**\n * A readable stream represents a source of data, from which you can read.\n *\n * @public\n */\nexport class ReadableStream<R = any> {\n  /** @internal */\n  _state!: ReadableStreamState;\n  /** @internal */\n  _reader: ReadableStreamReader<R> | undefined;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _disturbed!: boolean;\n  /** @internal */\n  _readableStreamController!: ReadableStreamDefaultController<R> | ReadableByteStreamController;\n\n  constructor(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number; size?: undefined });\n  constructor(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>);\n  constructor(rawUnderlyingSource: UnderlyingSource<R> | UnderlyingByteSource | null | undefined = {},\n              rawStrategy: QueuingStrategy<R> | null | undefined = {}) {\n    if (rawUnderlyingSource === undefined) {\n      rawUnderlyingSource = null;\n    } else {\n      assertObject(rawUnderlyingSource, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n\n    InitializeReadableStream(this);\n\n    if (underlyingSource.type === 'bytes') {\n      if (strategy.size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n      const highWaterMark = ExtractHighWaterMark(strategy, 0);\n      SetUpReadableByteStreamControllerFromUnderlyingSource(\n        this as unknown as ReadableByteStream,\n        underlyingSource,\n        highWaterMark\n      );\n    } else {\n      assert(underlyingSource.type === undefined);\n      const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n      const highWaterMark = ExtractHighWaterMark(strategy, 1);\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(\n        this,\n        underlyingSource,\n        highWaterMark,\n        sizeAlgorithm\n      );\n    }\n  }\n\n  /**\n   * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n   */\n  get locked(): boolean {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  /**\n   * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n   *\n   * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n   * method, which might or might not use it.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  /**\n   * Creates a {@link ReadableStreamBYOBReader} and locks the stream to the new reader.\n   *\n   * This call behaves the same way as the no-argument variant, except that it only works on readable byte streams,\n   * i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading.\n   * The returned BYOB reader provides the ability to directly read individual chunks from the stream via its\n   * {@link ReadableStreamBYOBReader.read | read()} method, into developer-supplied buffers, allowing more precise\n   * control over allocation.\n   */\n  getReader({ mode }: { mode: 'byob' }): ReadableStreamBYOBReader;\n  /**\n   * Creates a {@link ReadableStreamDefaultReader} and locks the stream to the new reader.\n   * While the stream is locked, no other reader can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to consume a stream\n   * in its entirety. By getting a reader for the stream, you can ensure nobody else can interleave reads with yours\n   * or cancel the stream, which would interfere with your abstraction.\n   */\n  getReader(): ReadableStreamDefaultReader<R>;\n  getReader(\n    rawOptions: ReadableStreamGetReaderOptions | null | undefined = undefined\n  ): ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    const options = convertReaderOptions(rawOptions, 'First parameter');\n\n    if (options.mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    assert(options.mode === 'byob');\n    return AcquireReadableStreamBYOBReader(this as unknown as ReadableByteStream);\n  }\n\n  /**\n   * Provides a convenient, chainable way of piping this readable stream through a transform stream\n   * (or any other `{ writable, readable }` pair). It simply {@link ReadableStream.pipeTo | pipes} the stream\n   * into the writable side of the supplied pair, and returns the readable side for further use.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeThrough<RS extends ReadableStream>(\n    transform: { readable: RS; writable: WritableStream<R> },\n    options?: StreamPipeOptions\n  ): RS;\n  pipeThrough<RS extends ReadableStream>(\n    rawTransform: { readable: RS; writable: WritableStream<R> } | null | undefined,\n    rawOptions: StreamPipeOptions | null | undefined = {}\n  ): RS {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n    assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n\n    const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n    const options = convertPipeOptions(rawOptions, 'Second parameter');\n\n    if (IsReadableStreamLocked(this)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(transform.writable)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(\n      this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n\n    setPromiseIsHandledToTrue(promise);\n\n    return transform.readable;\n  }\n\n  /**\n   * Pipes this readable stream to a given writable stream. The way in which the piping process behaves under\n   * various error conditions can be customized with a number of passed options. It returns a promise that fulfills\n   * when the piping process completes successfully, or rejects if any errors were encountered.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n  pipeTo(destination: WritableStream<R> | null | undefined,\n         rawOptions: StreamPipeOptions | null | undefined = {}): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('pipeTo'));\n    }\n\n    if (destination === undefined) {\n      return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n    }\n    if (!IsWritableStream(destination)) {\n      return promiseRejectedWith(\n        new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`)\n      );\n    }\n\n    let options: ValidatedStreamPipeOptions;\n    try {\n      options = convertPipeOptions(rawOptions, 'Second parameter');\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream')\n      );\n    }\n    if (IsWritableStreamLocked(destination)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream')\n      );\n    }\n\n    return ReadableStreamPipeTo<R>(\n      this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n  }\n\n  /**\n   * Tees this readable stream, returning a two-element array containing the two resulting branches as\n   * new {@link ReadableStream} instances.\n   *\n   * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n   * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n   * propagated to the stream's underlying source.\n   *\n   * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n   * this could allow interference between the two branches.\n   */\n  tee(): [ReadableStream<R>, ReadableStream<R>] {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return CreateArrayFromList(branches);\n  }\n\n  /**\n   * Asynchronously iterates over the chunks in the stream's internal queue.\n   *\n   * Asynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader.\n   * The lock will be released if the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method\n   * is called, e.g. by breaking out of the loop.\n   *\n   * By default, calling the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method will also\n   * cancel the stream. To prevent this, use the stream's {@link ReadableStream.values | values()} method, passing\n   * `true` for the `preventCancel` option.\n   */\n  values(options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n  values(rawOptions: ReadableStreamIteratorOptions | null | undefined = undefined): ReadableStreamAsyncIterator<R> {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('values');\n    }\n\n    const options = convertIteratorOptions(rawOptions, 'First parameter');\n    return AcquireReadableStreamAsyncIterator<R>(this, options.preventCancel);\n  }\n\n  /**\n   * {@inheritDoc ReadableStream.values}\n   */\n  [Symbol.asyncIterator]: (options?: ReadableStreamIteratorOptions) => ReadableStreamAsyncIterator<R>;\n}\n\nObject.defineProperties(ReadableStream.prototype, {\n  cancel: { enumerable: true },\n  getReader: { enumerable: true },\n  pipeThrough: { enumerable: true },\n  pipeTo: { enumerable: true },\n  tee: { enumerable: true },\n  values: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n    value: 'ReadableStream',\n    configurable: true\n  });\n}\nif (typeof Symbol.asyncIterator === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.asyncIterator, {\n    value: ReadableStream.prototype.values,\n    writable: true,\n    configurable: true\n  });\n}\n\nexport {\n  ReadableStreamAsyncIterator,\n  ReadableStreamDefaultReadResult,\n  ReadableStreamBYOBReadResult,\n  UnderlyingByteSource,\n  UnderlyingSource,\n  UnderlyingSourceStartCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceCancelCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingByteSourcePullCallback,\n  StreamPipeOptions,\n  ReadableWritablePair,\n  ReadableStreamIteratorOptions\n};\n\n// Abstract operations for the ReadableStream.\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableStream<R>(startAlgorithm: () => void | PromiseLike<void>,\n                                        pullAlgorithm: () => Promise<void>,\n                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                        highWaterMark = 1,\n                                        sizeAlgorithm: QueuingStrategySizeCallback<R> = () => 1): ReadableStream<R> {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: ReadableStream<R> = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableByteStream(\n  startAlgorithm: () => void | PromiseLike<void>,\n  pullAlgorithm: () => Promise<void>,\n  cancelAlgorithm: (reason: any) => Promise<void>\n): ReadableByteStream {\n  const stream: ReadableByteStream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream: ReadableStream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nexport function IsReadableStream(x: unknown): x is ReadableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStream;\n}\n\nexport function IsReadableStreamDisturbed(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  return stream._disturbed;\n}\n\nexport function IsReadableStreamLocked(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamCancel<R>(stream: ReadableStream<R>, reason: any): Promise<undefined> {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const reader = stream._reader;\n  if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._closeSteps(undefined);\n    });\n    reader._readIntoRequests = new SimpleQueue();\n  }\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return transformPromiseWith(sourceCancelPromise, noop);\n}\n\nexport function ReadableStreamClose<R>(stream: ReadableStream<R>): void {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._closeSteps();\n    });\n    reader._readRequests = new SimpleQueue();\n  }\n}\n\nexport function ReadableStreamError<R>(stream: ReadableStream<R>, e: any): void {\n  assert(IsReadableStream(stream));\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._errorSteps(e);\n    });\n\n    reader._readRequests = new SimpleQueue();\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._errorSteps(e);\n    });\n\n    reader._readIntoRequests = new SimpleQueue();\n  }\n}\n\n// Readers\n\nexport type ReadableStreamReader<R> = ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader;\n\nexport {\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader\n};\n\n// Controllers\n\nexport {\n  ReadableStreamDefaultController,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController\n};\n\n// Helper functions for the ReadableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n", "import { QueuingStrategyInit } from '../queuing-strategy';\nimport { assertDictionary, assertRequiredField, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategyInit(init: QueuingStrategyInit | null | undefined,\n                                           context: string): QueuingStrategyInit {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n  return {\n    highWaterMark: convertUnrestrictedDouble(highWaterMark)\n  };\n}\n", "import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst byteLengthSizeFunction = (chunk: ArrayBufferView): number => {\n  return chunk.byteLength;\n};\ntry {\n  Object.defineProperty(byteLengthSizeFunction, 'name', {\n    value: 'size',\n    configurable: true\n  });\n} catch {\n  // This property is non-configurable in older browsers, so ignore if this throws.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n}\n\n/**\n * A queuing strategy that counts the number of bytes in each chunk.\n *\n * @public\n */\nexport default class ByteLengthQueuingStrategy implements QueuingStrategy<ArrayBufferView> {\n  /** @internal */\n  readonly _byteLengthQueuingStrategyHighWaterMark: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('highWaterMark');\n    }\n    return this._byteLengthQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by returning the value of its `byteLength` property.\n   */\n  get size(): (chunk: ArrayBufferView) => number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('size');\n    }\n    return byteLengthSizeFunction;\n  }\n}\n\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'ByteLengthQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the ByteLengthQueuingStrategy.\n\nfunction byteLengthBrandCheckException(name: string): TypeError {\n  return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n}\n\nexport function IsByteLengthQueuingStrategy(x: any): x is ByteLengthQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof ByteLengthQueuingStrategy;\n}\n", "import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst countSizeFunction = (): 1 => {\n  return 1;\n};\ntry {\n  Object.defineProperty(countSizeFunction, 'name', {\n    value: 'size',\n    configurable: true\n  });\n} catch {\n  // This property is non-configurable in older browsers, so ignore if this throws.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n}\n\n/**\n * A queuing strategy that counts the number of chunks.\n *\n * @public\n */\nexport default class CountQueuingStrategy implements QueuingStrategy<any> {\n  /** @internal */\n  readonly _countQueuingStrategyHighWaterMark!: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('highWaterMark');\n    }\n    return this._countQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by always returning 1.\n   * This ensures that the total queue size is a count of the number of chunks in the queue.\n   */\n  get size(): (chunk: any) => 1 {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('size');\n    }\n    return countSizeFunction;\n  }\n}\n\nObject.defineProperties(CountQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'CountQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the CountQueuingStrategy.\n\nfunction countBrandCheckException(name: string): TypeError {\n  return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n}\n\nexport function IsCountQueuingStrategy(x: any): x is CountQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof CountQueuingStrategy;\n}\n", "import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from '../transform-stream/transformer';\nimport { TransformStreamDefaultController } from '../transform-stream';\n\nexport function convertTransformer<I, O>(original: Transformer<I, O> | null,\n                                         context: string): ValidatedTransformer<I, O> {\n  assertDictionary(original, context);\n  const flush = original?.flush;\n  const readableType = original?.readableType;\n  const start = original?.start;\n  const transform = original?.transform;\n  const writableType = original?.writableType;\n  return {\n    flush: flush === undefined ?\n      undefined :\n      convertTransformerFlushCallback(flush, original!, `${context} has member 'flush' that`),\n    readableType,\n    start: start === undefined ?\n      undefined :\n      convertTransformerStartCallback(start, original!, `${context} has member 'start' that`),\n    transform: transform === undefined ?\n      undefined :\n      convertTransformerTransformCallback(transform, original!, `${context} has member 'transform' that`),\n    writableType\n  };\n}\n\nfunction convertTransformerFlushCallback<I, O>(\n  fn: TransformerFlushCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): (controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertTransformerStartCallback<I, O>(\n  fn: TransformerStartCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): TransformerStartCallback<O> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertTransformerTransformCallback<I, O>(\n  fn: TransformerTransformCallback<I, O>,\n  original: Transformer<I, O>,\n  context: string\n): (chunk: I, controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: I, controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [chunk, controller]);\n}\n", "import assert from '../stub/assert';\nimport { newPromise, promiseRejectedWith, promiseResolvedWith, transformPromiseWith } from './helpers/webidl';\nimport { CreateReadableStream, ReadableStream, ReadableStreamDefaultController } from './readable-stream';\nimport {\n  ReadableStreamDefaultControllerCanCloseOrEnqueue,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure\n} from './readable-stream/default-controller';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { CreateWritableStream, WritableStream, WritableStreamDefaultControllerErrorIfNeeded } from './writable-stream';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from './transform-stream/transformer';\nimport { convertTransformer } from './validators/transformer';\n\n// Class TransformStream\n\n/**\n * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n * made available for reading from the readable side.\n *\n * @public\n */\nexport class TransformStream<I = any, O = any> {\n  /** @internal */\n  _writable!: WritableStream<I>;\n  /** @internal */\n  _readable!: ReadableStream<O>;\n  /** @internal */\n  _backpressure!: boolean;\n  /** @internal */\n  _backpressureChangePromise!: Promise<void>;\n  /** @internal */\n  _backpressureChangePromise_resolve!: () => void;\n  /** @internal */\n  _transformStreamController!: TransformStreamDefaultController<O>;\n\n  constructor(\n    transformer?: Transformer<I, O>,\n    writableStrategy?: QueuingStrategy<I>,\n    readableStrategy?: QueuingStrategy<O>\n  );\n  constructor(rawTransformer: Transformer<I, O> | null | undefined = {},\n              rawWritableStrategy: QueuingStrategy<I> | null | undefined = {},\n              rawReadableStrategy: QueuingStrategy<O> | null | undefined = {}) {\n    if (rawTransformer === undefined) {\n      rawTransformer = null;\n    }\n\n    const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n    const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n\n    const transformer = convertTransformer(rawTransformer, 'First parameter');\n    if (transformer.readableType !== undefined) {\n      throw new RangeError('Invalid readableType specified');\n    }\n    if (transformer.writableType !== undefined) {\n      throw new RangeError('Invalid writableType specified');\n    }\n\n    const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n    const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n    const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n    const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n\n    let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n    const startPromise = newPromise<void>(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(\n      this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm\n    );\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    if (transformer.start !== undefined) {\n      startPromise_resolve(transformer.start(this._transformStreamController));\n    } else {\n      startPromise_resolve(undefined);\n    }\n  }\n\n  /**\n   * The readable side of the transform stream.\n   */\n  get readable(): ReadableStream<O> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  /**\n   * The writable side of the transform stream.\n   */\n  get writable(): WritableStream<I> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\nObject.defineProperties(TransformStream.prototype, {\n  readable: { enumerable: true },\n  writable: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n    value: 'TransformStream',\n    configurable: true\n  });\n}\n\nexport {\n  Transformer,\n  TransformerStartCallback,\n  TransformerFlushCallback,\n  TransformerTransformCallback\n};\n\n// Transform Stream Abstract Operations\n\nexport function CreateTransformStream<I, O>(startAlgorithm: () => void | PromiseLike<void>,\n                                            transformAlgorithm: (chunk: I) => Promise<void>,\n                                            flushAlgorithm: () => Promise<void>,\n                                            writableHighWaterMark = 1,\n                                            writableSizeAlgorithm: QueuingStrategySizeCallback<I> = () => 1,\n                                            readableHighWaterMark = 0,\n                                            readableSizeAlgorithm: QueuingStrategySizeCallback<O> = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream: TransformStream<I, O> = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n  const startPromise = newPromise<void>(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream<I, O>(stream: TransformStream<I, O>,\n                                         startPromise: Promise<void>,\n                                         writableHighWaterMark: number,\n                                         writableSizeAlgorithm: QueuingStrategySizeCallback<I>,\n                                         readableHighWaterMark: number,\n                                         readableSizeAlgorithm: QueuingStrategySizeCallback<O>) {\n  function startAlgorithm(): Promise<void> {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk: I): Promise<void> {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason: any): Promise<void> {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason: any): Promise<void> {\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n    return promiseResolvedWith(undefined);\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined!;\n  stream._backpressureChangePromise = undefined!;\n  stream._backpressureChangePromise_resolve = undefined!;\n  TransformStreamSetBackpressure(stream, true);\n\n  stream._transformStreamController = undefined!;\n}\n\nfunction IsTransformStream(x: unknown): x is TransformStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return x instanceof TransformStream;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream: TransformStream, e: any) {\n  ReadableStreamDefaultControllerError(\n    stream._readable._readableStreamController as ReadableStreamDefaultController<any>,\n    e\n  );\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream: TransformStream, e: any) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  if (stream._backpressure) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream: TransformStream, backpressure: boolean) {\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = newPromise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\n/**\n * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n *\n * @public\n */\nexport class TransformStreamDefaultController<O> {\n  /** @internal */\n  _controlledTransformStream: TransformStream<any, O>;\n  /** @internal */\n  _transformAlgorithm: (chunk: any) => Promise<void>;\n  /** @internal */\n  _flushAlgorithm: () => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the readable side\u2019s internal queue. It can be negative, if the queue is over-full.\n   */\n  get desiredSize(): number | null {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController as ReadableStreamDefaultController<O>);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the readable side of the controlled transform stream.\n   */\n  enqueue(chunk: O): void;\n  enqueue(chunk: O = undefined!): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors both the readable side and the writable side of the controlled transform stream, making all future\n   * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n   */\n  error(reason: any = undefined): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  /**\n   * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n   * transformer only needs to consume a portion of the chunks written to the writable side.\n   */\n  terminate(): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\nObject.defineProperties(TransformStreamDefaultController.prototype, {\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  terminate: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'TransformStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController<O = any>(x: any): x is TransformStreamDefaultController<O> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return x instanceof TransformStreamDefaultController;\n}\n\nfunction SetUpTransformStreamDefaultController<I, O>(stream: TransformStream<I, O>,\n                                                     controller: TransformStreamDefaultController<O>,\n                                                     transformAlgorithm: (chunk: I) => Promise<void>,\n                                                     flushAlgorithm: () => Promise<void>) {\n  assert(IsTransformStream(stream));\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer<I, O>(stream: TransformStream<I, O>,\n                                                                    transformer: ValidatedTransformer<I, O>) {\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm = (chunk: I): Promise<void> => {\n    try {\n      TransformStreamDefaultControllerEnqueue(controller, chunk as unknown as O);\n      return promiseResolvedWith(undefined);\n    } catch (transformResultE) {\n      return promiseRejectedWith(transformResultE);\n    }\n  };\n\n  let flushAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (transformer.transform !== undefined) {\n    transformAlgorithm = chunk => transformer.transform!(chunk, controller);\n  }\n  if (transformer.flush !== undefined) {\n    flushAlgorithm = () => transformer.flush!(controller);\n  }\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller: TransformStreamDefaultController<any>) {\n  controller._transformAlgorithm = undefined!;\n  controller._flushAlgorithm = undefined!;\n}\n\nfunction TransformStreamDefaultControllerEnqueue<O>(controller: TransformStreamDefaultController<O>, chunk: O) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller: TransformStreamDefaultController<any>, e: any) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform<I, O>(controller: TransformStreamDefaultController<O>,\n                                                                chunk: I) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromiseWith(transformPromise, undefined, r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate<O>(controller: TransformStreamDefaultController<O>) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n\n  ReadableStreamDefaultControllerClose(readableController);\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm<I, O>(stream: TransformStream<I, O>, chunk: I): Promise<void> {\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return transformPromiseWith(backpressureChangePromise, () => {\n      const writable = stream._writable;\n      const state = writable._state;\n      if (state === 'erroring') {\n        throw writable._storedError;\n      }\n      assert(state === 'writable');\n      return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n    });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream: TransformStream, reason: any): Promise<void> {\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n  // errored.\n  TransformStreamError(stream, reason);\n  return promiseResolvedWith(undefined);\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm<I, O>(stream: TransformStream<I, O>): Promise<void> {\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  const controller = stream._transformStreamController;\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  // Return a promise that is fulfilled with undefined on success.\n  return transformPromiseWith(flushPromise, () => {\n    if (readable._state === 'errored') {\n      throw readable._storedError;\n    }\n    ReadableStreamDefaultControllerClose(readable._readableStreamController as ReadableStreamDefaultController<O>);\n  }, r => {\n    TransformStreamError(stream, r);\n    throw readable._storedError;\n  });\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream: TransformStream): Promise<void> {\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n", "/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n", "/*! fetch-blob. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n", "import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n", "/*! formdata-polyfill. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n", "/*! node-domexception. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n", "import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n", "import {File} from 'fetch-blob/from.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nexport async function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __classPrivateFieldIn;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        var desc = Object.getOwnPropertyDescriptor(m, k);\r\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n            desc = { enumerable: true, get: function() { return m[k]; } };\r\n        }\r\n        Object.defineProperty(o, k2, desc);\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    __classPrivateFieldIn = function (state, receiver) {\r\n        if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n        return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n    exporter(\"__classPrivateFieldIn\", __classPrivateFieldIn);\r\n});\r\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.versionInfo = exports.version = void 0;\n// Note: This file is autogenerated using \"resources/gen-version.js\" script and\n// automatically updated by \"npm version\" command.\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nconst version = '16.6.0';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nexports.version = version;\nconst versionInfo = Object.freeze({\n  major: 16,\n  minor: 6,\n  patch: 0,\n  preReleaseTag: null,\n});\nexports.versionInfo = versionInfo;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isPromise = isPromise;\n\n/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\nfunction isPromise(value) {\n  return (\n    typeof (value === null || value === void 0 ? void 0 : value.then) ===\n    'function'\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.didYouMean = didYouMean;\nconst MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nfunction didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.identityFunc = identityFunc;\n\n/**\n * Returns the first argument it receives.\n */\nfunction identityFunc(x) {\n  return x;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.keyMap = keyMap;\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nfunction keyMap(list, keyFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.keyValMap = keyValMap;\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nfunction keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.mapValue = mapValue;\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nfunction mapValue(map, fn) {\n  const result = Object.create(null);\n\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.naturalCompare = naturalCompare;\n\n/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nfunction naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\n\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.suggestionList = suggestionList;\n\nvar _naturalCompare = require('./naturalCompare.js');\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nfunction suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0\n      ? distanceDiff\n      : (0, _naturalCompare.naturalCompare)(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n    ];\n  }\n\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    const aLength = a.length;\n    const bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    const rows = this._rows;\n\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = (currentRow[0] = i);\n\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1, // delete\n          currentRow[j - 1] + 1, // insert\n          upRow[j - 1] + cost, // substitute\n        );\n\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\n\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.toObjMap = toObjMap;\n\nfunction toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  const map = Object.create(null);\n\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n\n  return map;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.valueFromASTUntyped = valueFromASTUntyped;\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.NULL:\n      return null;\n\n    case _kinds.Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case _kinds.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.BOOLEAN:\n      return valueNode.value;\n\n    case _kinds.Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case _kinds.Kind.OBJECT:\n      return (0, _keyValMap.keyValMap)(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case _kinds.Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertEnumValueName = assertEnumValueName;\nexports.assertName = assertName;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _characterClasses = require('../language/characterClasses.js');\n\n/**\n * Upholds the spec rules about naming.\n */\nfunction assertName(name) {\n  name != null || (0, _devAssert.devAssert)(false, 'Must provide name.');\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new _GraphQLError.GraphQLError(\n      'Expected name to be a non-empty string.',\n    );\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!(0, _characterClasses.isNameContinue)(name.charCodeAt(i))) {\n      throw new _GraphQLError.GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!(0, _characterClasses.isNameStart)(name.charCodeAt(0))) {\n    throw new _GraphQLError.GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nfunction assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new _GraphQLError.GraphQLError(\n      `Enum values cannot be named: ${name}`,\n    );\n  }\n\n  return assertName(name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLUnionType =\n  exports.GraphQLScalarType =\n  exports.GraphQLObjectType =\n  exports.GraphQLNonNull =\n  exports.GraphQLList =\n  exports.GraphQLInterfaceType =\n  exports.GraphQLInputObjectType =\n  exports.GraphQLEnumType =\n    void 0;\nexports.argsToArgsConfig = argsToArgsConfig;\nexports.assertAbstractType = assertAbstractType;\nexports.assertCompositeType = assertCompositeType;\nexports.assertEnumType = assertEnumType;\nexports.assertInputObjectType = assertInputObjectType;\nexports.assertInputType = assertInputType;\nexports.assertInterfaceType = assertInterfaceType;\nexports.assertLeafType = assertLeafType;\nexports.assertListType = assertListType;\nexports.assertNamedType = assertNamedType;\nexports.assertNonNullType = assertNonNullType;\nexports.assertNullableType = assertNullableType;\nexports.assertObjectType = assertObjectType;\nexports.assertOutputType = assertOutputType;\nexports.assertScalarType = assertScalarType;\nexports.assertType = assertType;\nexports.assertUnionType = assertUnionType;\nexports.assertWrappingType = assertWrappingType;\nexports.defineArguments = defineArguments;\nexports.getNamedType = getNamedType;\nexports.getNullableType = getNullableType;\nexports.isAbstractType = isAbstractType;\nexports.isCompositeType = isCompositeType;\nexports.isEnumType = isEnumType;\nexports.isInputObjectType = isInputObjectType;\nexports.isInputType = isInputType;\nexports.isInterfaceType = isInterfaceType;\nexports.isLeafType = isLeafType;\nexports.isListType = isListType;\nexports.isNamedType = isNamedType;\nexports.isNonNullType = isNonNullType;\nexports.isNullableType = isNullableType;\nexports.isObjectType = isObjectType;\nexports.isOutputType = isOutputType;\nexports.isRequiredArgument = isRequiredArgument;\nexports.isRequiredInputField = isRequiredInputField;\nexports.isScalarType = isScalarType;\nexports.isType = isType;\nexports.isUnionType = isUnionType;\nexports.isWrappingType = isWrappingType;\nexports.resolveObjMapThunk = resolveObjMapThunk;\nexports.resolveReadonlyArrayThunk = resolveReadonlyArrayThunk;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _didYouMean = require('../jsutils/didYouMean.js');\n\nvar _identityFunc = require('../jsutils/identityFunc.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _mapValue = require('../jsutils/mapValue.js');\n\nvar _suggestionList = require('../jsutils/suggestionList.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _valueFromASTUntyped = require('../utilities/valueFromASTUntyped.js');\n\nvar _assertName = require('./assertName.js');\n\nfunction isType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    isListType(type) ||\n    isNonNullType(type)\n  );\n}\n\nfunction assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nfunction isScalarType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLScalarType);\n}\n\nfunction assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Scalar type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isObjectType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLObjectType);\n}\n\nfunction assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Object type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isInterfaceType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLInterfaceType);\n}\n\nfunction assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Interface type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isUnionType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLUnionType);\n}\n\nfunction assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Union type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isEnumType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLEnumType);\n}\n\nfunction assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Enum type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isInputObjectType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLInputObjectType);\n}\n\nfunction assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(\n        type,\n      )} to be a GraphQL Input Object type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isListType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLList);\n}\n\nfunction assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL List type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isNonNullType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLNonNull);\n}\n\nfunction assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Non-Null type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nfunction isInputType(type) {\n  return (\n    isScalarType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    (isWrappingType(type) && isInputType(type.ofType))\n  );\n}\n\nfunction assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL input type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nfunction isOutputType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    (isWrappingType(type) && isOutputType(type.ofType))\n  );\n}\n\nfunction assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL output type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nfunction isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\n\nfunction assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL leaf type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nfunction isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL composite type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nfunction isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL abstract type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nclass GraphQLList {\n  constructor(ofType) {\n    isType(ofType) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Expected ${(0, _inspect.inspect)(ofType)} to be a GraphQL type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nexports.GraphQLList = GraphQLList;\n\nclass GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Expected ${(0, _inspect.inspect)(\n          ofType,\n        )} to be a GraphQL nullable type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n\n  toString() {\n    return String(this.ofType) + '!';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nexports.GraphQLNonNull = GraphQLNonNull;\n\nfunction isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\n\nfunction assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL wrapping type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nfunction isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\n\nfunction assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL nullable type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nfunction isNamedType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type)\n  );\n}\n\nfunction assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL named type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function returns `null` or does not return a value\n * (i.e. it returns `undefined`) then an error will be raised and a `null`\n * value will be returned in the response. It is always better to validate\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (!Number.isFinite(value)) {\n *       throw new Error(\n *         `Scalar \"Odd\" cannot represent \"${value}\" since it is not a finite number.`,\n *       );\n *     }\n *\n *     if (value % 2 === 0) {\n *       throw new Error(`Scalar \"Odd\" cannot represent \"${value}\" since it is even.`);\n *     }\n *     return value;\n *   }\n * });\n * ```\n */\nclass GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue,\n      _config$serialize,\n      _config$parseLiteral,\n      _config$extensionASTN;\n\n    const parseValue =\n      (_config$parseValue = config.parseValue) !== null &&\n      _config$parseValue !== void 0\n        ? _config$parseValue\n        : _identityFunc.identityFunc;\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize =\n      (_config$serialize = config.serialize) !== null &&\n      _config$serialize !== void 0\n        ? _config$serialize\n        : _identityFunc.identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral =\n      (_config$parseLiteral = config.parseLiteral) !== null &&\n      _config$parseLiteral !== void 0\n        ? _config$parseLiteral\n        : (node, variables) =>\n            parseValue(\n              (0, _valueFromASTUntyped.valueFromASTUntyped)(node, variables),\n            );\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    config.specifiedByURL == null ||\n      typeof config.specifiedByURL === 'string' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"specifiedByURL\" as a string, ` +\n          `but got: ${(0, _inspect.inspect)(config.specifiedByURL)}.`,\n      );\n    config.serialize == null ||\n      typeof config.serialize === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`,\n      );\n\n    if (config.parseLiteral) {\n      (typeof config.parseValue === 'function' &&\n        typeof config.parseLiteral === 'function') ||\n        (0, _devAssert.devAssert)(\n          false,\n          `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`,\n        );\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLScalarType = GraphQLScalarType;\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nclass GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN2 !== void 0\n        ? _config$extensionASTN2\n        : [];\n\n    this._fields = () => defineFieldMap(config);\n\n    this._interfaces = () => defineInterfaces(config);\n\n    config.isTypeOf == null ||\n      typeof config.isTypeOf === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"isTypeOf\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.isTypeOf)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLObjectType = GraphQLObjectType;\n\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null &&\n      _config$interfaces !== void 0\n      ? _config$interfaces\n      : [],\n  );\n  Array.isArray(interfaces) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} interfaces must be an Array or a function which returns an Array.`,\n    );\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return (0, _mapValue.mapValue)(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field config must be an object.`,\n      );\n    fieldConfig.resolve == null ||\n      typeof fieldConfig.resolve === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field resolver must be a function if ` +\n          `provided, but got: ${(0, _inspect.inspect)(fieldConfig.resolve)}.`,\n      );\n    const argsConfig =\n      (_fieldConfig$args = fieldConfig.args) !== null &&\n      _fieldConfig$args !== void 0\n        ? _fieldConfig$args\n        : {};\n    isPlainObj(argsConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} args must be an object with argument names as keys.`,\n      );\n    return {\n      name: (0, _assertName.assertName)(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nfunction defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: (0, _assertName.assertName)(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: (0, _toObjMap.toObjMap)(argConfig.extensions),\n    astNode: argConfig.astNode,\n  }));\n}\n\nfunction isPlainObj(obj) {\n  return (0, _isObjectLike.isObjectLike)(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return (0, _mapValue.mapValue)(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  }));\n}\n/**\n * @internal\n */\n\nfunction argsToArgsConfig(args) {\n  return (0, _keyValMap.keyValMap)(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode,\n    }),\n  );\n}\n\nfunction isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nclass GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN3 !== void 0\n        ? _config$extensionASTN3\n        : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLInterfaceType = GraphQLInterfaceType;\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nclass GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN4 !== void 0\n        ? _config$extensionASTN4\n        : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLUnionType = GraphQLUnionType;\n\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,\n    );\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nclass GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN5 !== void 0\n        ? _config$extensionASTN5\n        : [];\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(\n      this._values.map((enumValue) => [enumValue.value, enumValue]),\n    );\n    this._nameLookup = (0, _keyMap.keyMap)(this._values, (value) => value.name);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n\n  getValues() {\n    return this._values;\n  }\n\n  getValue(name) {\n    return this._nameLookup[name];\n  }\n\n  serialize(outputValue) {\n    const enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${(0, _inspect.inspect)(\n          outputValue,\n        )}`,\n      );\n    }\n\n    return enumValue.name;\n  }\n\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = (0, _inspect.inspect)(inputValue);\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n      );\n    }\n\n    const enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new _GraphQLError.GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, inputValue),\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== _kinds.Kind.ENUM) {\n      const valueStr = (0, _printer.print)(valueNode);\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      const valueStr = (0, _printer.print)(valueNode);\n      throw new _GraphQLError.GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  toConfig() {\n    const values = (0, _keyValMap.keyValMap)(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode,\n      }),\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLEnumType = GraphQLEnumType;\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = (0, _suggestionList.suggestionList)(\n    unknownValueStr,\n    allNames,\n  );\n  return (0, _didYouMean.didYouMean)('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${typeName} values must be an object with value names as keys.`,\n    );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${typeName}.${valueName} must refer to an object with a \"value\" key ` +\n          `representing an internal value but got: ${(0, _inspect.inspect)(\n            valueConfig,\n          )}.`,\n      );\n    return {\n      name: (0, _assertName.assertEnumValueName)(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(valueConfig.extensions),\n      astNode: valueConfig.astNode,\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nclass GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN6 !== void 0\n        ? _config$extensionASTN6\n        : [];\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  toConfig() {\n    const fields = (0, _mapValue.mapValue)(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode,\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLInputObjectType = GraphQLInputObjectType;\n\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return (0, _mapValue.mapValue)(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,\n      );\n    return {\n      name: (0, _assertName.assertName)(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nfunction isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.doTypesOverlap = doTypesOverlap;\nexports.isEqualType = isEqualType;\nexports.isTypeSubTypeOf = isTypeSubTypeOf;\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nfunction isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if (\n    (0, _definition.isNonNullType)(typeA) &&\n    (0, _definition.isNonNullType)(typeB)\n  ) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if (\n    (0, _definition.isListType)(typeA) &&\n    (0, _definition.isListType)(typeB)\n  ) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nfunction isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if ((0, _definition.isNonNullType)(superType)) {\n    if ((0, _definition.isNonNullType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if ((0, _definition.isNonNullType)(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if ((0, _definition.isListType)(superType)) {\n    if ((0, _definition.isListType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if ((0, _definition.isListType)(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (\n    (0, _definition.isAbstractType)(superType) &&\n    ((0, _definition.isInterfaceType)(maybeSubType) ||\n      (0, _definition.isObjectType)(maybeSubType)) &&\n    schema.isSubType(superType, maybeSubType)\n  );\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nfunction doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(typeA)) {\n    if ((0, _definition.isAbstractType)(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema\n        .getPossibleTypes(typeA)\n        .some((type) => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if ((0, _definition.isAbstractType)(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLString =\n  exports.GraphQLInt =\n  exports.GraphQLID =\n  exports.GraphQLFloat =\n  exports.GraphQLBoolean =\n  exports.GRAPHQL_MIN_INT =\n  exports.GRAPHQL_MAX_INT =\n    void 0;\nexports.isSpecifiedScalarType = isSpecifiedScalarType;\nexports.specifiedScalarTypes = void 0;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('./definition.js');\n\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\nconst GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nexports.GRAPHQL_MAX_INT = GRAPHQL_MAX_INT;\nconst GRAPHQL_MIN_INT = -2147483648;\nexports.GRAPHQL_MIN_INT = GRAPHQL_MIN_INT;\nconst GraphQLInt = new _definition.GraphQLScalarType({\n  name: 'Int',\n  description:\n    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _inspect.inspect)(\n          coercedValue,\n        )}`,\n      );\n    }\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        'Int cannot represent non 32-bit signed integer value: ' +\n          (0, _inspect.inspect)(coercedValue),\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const num = parseInt(valueNode.value, 10);\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return num;\n  },\n});\nexports.GraphQLInt = GraphQLInt;\nconst GraphQLFloat = new _definition.GraphQLScalarType({\n  name: 'Float',\n  description:\n    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _inspect.inspect)(\n          coercedValue,\n        )}`,\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (\n      valueNode.kind !== _kinds.Kind.FLOAT &&\n      valueNode.kind !== _kinds.Kind.INT\n    ) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        valueNode,\n      );\n    }\n\n    return parseFloat(valueNode.value);\n  },\n});\nexports.GraphQLFloat = GraphQLFloat;\nconst GraphQLString = new _definition.GraphQLScalarType({\n  name: 'String',\n  description:\n    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `String cannot represent value: ${(0, _inspect.inspect)(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new _GraphQLError.GraphQLError(\n        `String cannot represent a non string value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.STRING) {\n      throw new _GraphQLError.GraphQLError(\n        `String cannot represent a non string value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLString = GraphQLString;\nconst GraphQLBoolean = new _definition.GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `Boolean cannot represent a non boolean value: ${(0, _inspect.inspect)(\n        coercedValue,\n      )}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new _GraphQLError.GraphQLError(\n        `Boolean cannot represent a non boolean value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.BOOLEAN) {\n      throw new _GraphQLError.GraphQLError(\n        `Boolean cannot represent a non boolean value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLBoolean = GraphQLBoolean;\nconst GraphQLID = new _definition.GraphQLScalarType({\n  name: 'ID',\n  description:\n    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `ID cannot represent value: ${(0, _inspect.inspect)(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `ID cannot represent value: ${(0, _inspect.inspect)(inputValue)}`,\n    );\n  },\n\n  parseLiteral(valueNode) {\n    if (\n      valueNode.kind !== _kinds.Kind.STRING &&\n      valueNode.kind !== _kinds.Kind.INT\n    ) {\n      throw new _GraphQLError.GraphQLError(\n        'ID cannot represent a non-string and non-integer value: ' +\n          (0, _printer.print)(valueNode),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLID = GraphQLID;\nconst specifiedScalarTypes = Object.freeze([\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n]);\nexports.specifiedScalarTypes = specifiedScalarTypes;\n\nfunction isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({ name }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if ((0, _isObjectLike.isObjectLike)(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n\n      if (!(0, _isObjectLike.isObjectLike)(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLSpecifiedByDirective =\n  exports.GraphQLSkipDirective =\n  exports.GraphQLIncludeDirective =\n  exports.GraphQLDirective =\n  exports.GraphQLDeprecatedDirective =\n  exports.DEFAULT_DEPRECATION_REASON =\n    void 0;\nexports.assertDirective = assertDirective;\nexports.isDirective = isDirective;\nexports.isSpecifiedDirective = isSpecifiedDirective;\nexports.specifiedDirectives = void 0;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _assertName = require('./assertName.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n\n/**\n * Test if the given value is a GraphQL directive.\n */\nfunction isDirective(directive) {\n  return (0, _instanceOf.instanceOf)(directive, GraphQLDirective);\n}\n\nfunction assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} locations must be an Array.`,\n      );\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    ((0, _isObjectLike.isObjectLike)(args) && !Array.isArray(args)) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = (0, _definition.defineArguments)(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: (0, _definition.argsToArgsConfig)(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLDirective = GraphQLDirective;\n\n/**\n * Used to conditionally include fields or fragments.\n */\nconst GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexports.GraphQLIncludeDirective = GraphQLIncludeDirective;\nconst GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexports.GraphQLSkipDirective = GraphQLSkipDirective;\nconst DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexports.DEFAULT_DEPRECATION_REASON = DEFAULT_DEPRECATION_REASON;\nconst GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n    _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexports.GraphQLDeprecatedDirective = GraphQLDeprecatedDirective;\nconst GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [_directiveLocation.DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexports.GraphQLSpecifiedByDirective = GraphQLSpecifiedByDirective;\nconst specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexports.specifiedDirectives = specifiedDirectives;\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isIterableObject = isIterableObject;\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nfunction isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.astFromValue = astFromValue;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _scalars = require('../type/scalars.js');\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n  if ((0, _definition.isNonNullType)(type)) {\n    const astValue = astFromValue(value, type.ofType);\n\n    if (\n      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===\n      _kinds.Kind.NULL\n    ) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: _kinds.Kind.NULL,\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if ((0, _isIterableObject.isIterableObject)(value)) {\n      const valuesNodes = [];\n\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: _kinds.Kind.LIST,\n        values: valuesNodes,\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (!(0, _isObjectLike.isObjectLike)(value)) {\n      return null;\n    }\n\n    const fieldNodes = [];\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: _kinds.Kind.OBJECT_FIELD,\n          name: {\n            kind: _kinds.Kind.NAME,\n            value: field.name,\n          },\n          value: fieldValue,\n        });\n      }\n    }\n\n    return {\n      kind: _kinds.Kind.OBJECT,\n      fields: fieldNodes,\n    };\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: _kinds.Kind.BOOLEAN,\n        value: serialized,\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum)\n        ? {\n            kind: _kinds.Kind.INT,\n            value: stringNum,\n          }\n        : {\n            kind: _kinds.Kind.FLOAT,\n            value: stringNum,\n          };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if ((0, _definition.isEnumType)(type)) {\n        return {\n          kind: _kinds.Kind.ENUM,\n          value: serialized,\n        };\n      } // ID types can use Int literals.\n\n      if (type === _scalars.GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: _kinds.Kind.INT,\n          value: serialized,\n        };\n      }\n\n      return {\n        kind: _kinds.Kind.STRING,\n        value: serialized,\n      };\n    }\n\n    throw new TypeError(\n      `Cannot convert value to AST: ${(0, _inspect.inspect)(serialized)}.`,\n    );\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.introspectionTypes =\n  exports.__TypeKind =\n  exports.__Type =\n  exports.__Schema =\n  exports.__InputValue =\n  exports.__Field =\n  exports.__EnumValue =\n  exports.__DirectiveLocation =\n  exports.__Directive =\n  exports.TypeNameMetaFieldDef =\n  exports.TypeMetaFieldDef =\n  exports.TypeKind =\n  exports.SchemaMetaFieldDef =\n    void 0;\nexports.isIntrospectionType = isIntrospectionType;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _astFromValue = require('../utilities/astFromValue.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n\nconst __Schema = new _definition.GraphQLObjectType({\n  name: '__Schema',\n  description:\n    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (schema) => schema.description,\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n      ),\n\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      },\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (schema) => schema.getQueryType(),\n    },\n    mutationType: {\n      description:\n        'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getMutationType(),\n    },\n    subscriptionType: {\n      description:\n        'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getSubscriptionType(),\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__Directive),\n        ),\n      ),\n      resolve: (schema) => schema.getDirectives(),\n    },\n  }),\n});\n\nexports.__Schema = __Schema;\n\nconst __Directive = new _definition.GraphQLObjectType({\n  name: '__Directive',\n  description:\n    \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (directive) => directive.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (directive) => directive.description,\n    },\n    isRepeatable: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (directive) => directive.isRepeatable,\n    },\n    locations: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__DirectiveLocation),\n        ),\n      ),\n      resolve: (directive) => directive.locations,\n    },\n    args: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__InputValue),\n        ),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n  }),\n});\n\nexports.__Directive = __Directive;\n\nconst __DirectiveLocation = new _definition.GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description:\n    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: _directiveLocation.DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.',\n    },\n    MUTATION: {\n      value: _directiveLocation.DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.',\n    },\n    SUBSCRIPTION: {\n      value: _directiveLocation.DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.',\n    },\n    FIELD: {\n      value: _directiveLocation.DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.',\n    },\n    FRAGMENT_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.',\n    },\n    FRAGMENT_SPREAD: {\n      value: _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.',\n    },\n    INLINE_FRAGMENT: {\n      value: _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.',\n    },\n    VARIABLE_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.',\n    },\n    SCHEMA: {\n      value: _directiveLocation.DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.',\n    },\n    SCALAR: {\n      value: _directiveLocation.DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.',\n    },\n    OBJECT: {\n      value: _directiveLocation.DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.',\n    },\n    FIELD_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.',\n    },\n    ARGUMENT_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.',\n    },\n    INTERFACE: {\n      value: _directiveLocation.DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.',\n    },\n    UNION: {\n      value: _directiveLocation.DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.',\n    },\n    ENUM: {\n      value: _directiveLocation.DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.',\n    },\n    ENUM_VALUE: {\n      value: _directiveLocation.DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.',\n    },\n    INPUT_OBJECT: {\n      value: _directiveLocation.DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.',\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.',\n    },\n  },\n});\n\nexports.__DirectiveLocation = __DirectiveLocation;\n\nconst __Type = new _definition.GraphQLObjectType({\n  name: '__Type',\n  description:\n    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new _definition.GraphQLNonNull(__TypeKind),\n\n      resolve(type) {\n        if ((0, _definition.isScalarType)(type)) {\n          return TypeKind.SCALAR;\n        }\n\n        if ((0, _definition.isObjectType)(type)) {\n          return TypeKind.OBJECT;\n        }\n\n        if ((0, _definition.isInterfaceType)(type)) {\n          return TypeKind.INTERFACE;\n        }\n\n        if ((0, _definition.isUnionType)(type)) {\n          return TypeKind.UNION;\n        }\n\n        if ((0, _definition.isEnumType)(type)) {\n          return TypeKind.ENUM;\n        }\n\n        if ((0, _definition.isInputObjectType)(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n\n        if ((0, _definition.isListType)(type)) {\n          return TypeKind.LIST;\n        }\n\n        if ((0, _definition.isNonNullType)(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n        false ||\n          (0, _invariant.invariant)(\n            false,\n            `Unexpected type: \"${(0, _inspect.inspect)(type)}\".`,\n          );\n      },\n    },\n    name: {\n      type: _scalars.GraphQLString,\n      resolve: (type) => ('name' in type ? type.name : undefined),\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (\n        type, // FIXME: add test case\n      ) =>\n        /* c8 ignore next */\n        'description' in type ? type.description : undefined,\n    },\n    specifiedByURL: {\n      type: _scalars.GraphQLString,\n      resolve: (obj) =>\n        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,\n    },\n    fields: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__Field),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (\n          (0, _definition.isObjectType)(type) ||\n          (0, _definition.isInterfaceType)(type)\n        ) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated\n            ? fields\n            : fields.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    interfaces: {\n      type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n\n      resolve(type) {\n        if (\n          (0, _definition.isObjectType)(type) ||\n          (0, _definition.isInterfaceType)(type)\n        ) {\n          return type.getInterfaces();\n        }\n      },\n    },\n    possibleTypes: {\n      type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n\n      resolve(type, _args, _context, { schema }) {\n        if ((0, _definition.isAbstractType)(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      },\n    },\n    enumValues: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__EnumValue),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if ((0, _definition.isEnumType)(type)) {\n          const values = type.getValues();\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    inputFields: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__InputValue),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if ((0, _definition.isInputObjectType)(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    ofType: {\n      type: __Type,\n      resolve: (type) => ('ofType' in type ? type.ofType : undefined),\n    },\n  }),\n});\n\nexports.__Type = __Type;\n\nconst __Field = new _definition.GraphQLObjectType({\n  name: '__Field',\n  description:\n    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (field) => field.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (field) => field.description,\n    },\n    args: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__InputValue),\n        ),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n    type: {\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (field) => field.type,\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (field) => field.deprecationReason,\n    },\n  }),\n});\n\nexports.__Field = __Field;\n\nconst __InputValue = new _definition.GraphQLObjectType({\n  name: '__InputValue',\n  description:\n    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (inputValue) => inputValue.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (inputValue) => inputValue.description,\n    },\n    type: {\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (inputValue) => inputValue.type,\n    },\n    defaultValue: {\n      type: _scalars.GraphQLString,\n      description:\n        'A GraphQL-formatted string representing the default value for this input value.',\n\n      resolve(inputValue) {\n        const { type, defaultValue } = inputValue;\n        const valueAST = (0, _astFromValue.astFromValue)(defaultValue, type);\n        return valueAST ? (0, _printer.print)(valueAST) : null;\n      },\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (obj) => obj.deprecationReason,\n    },\n  }),\n});\n\nexports.__InputValue = __InputValue;\n\nconst __EnumValue = new _definition.GraphQLObjectType({\n  name: '__EnumValue',\n  description:\n    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (enumValue) => enumValue.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (enumValue) => enumValue.description,\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (enumValue) => enumValue.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (enumValue) => enumValue.deprecationReason,\n    },\n  }),\n});\n\nexports.__EnumValue = __EnumValue;\nvar TypeKind;\nexports.TypeKind = TypeKind;\n\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (exports.TypeKind = TypeKind = {}));\n\nconst __TypeKind = new _definition.GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.',\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description:\n        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description:\n        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description:\n        'Indicates this type is a union. `possibleTypes` is a valid field.',\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description:\n        'Indicates this type is an enum. `enumValues` is a valid field.',\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description:\n        'Indicates this type is an input object. `inputFields` is a valid field.',\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.',\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description:\n        'Indicates this type is a non-null. `ofType` is a valid field.',\n    },\n  },\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexports.__TypeKind = __TypeKind;\nconst SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new _definition.GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, { schema }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.SchemaMetaFieldDef = SchemaMetaFieldDef;\nconst TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [\n    {\n      name: 'name',\n      description: undefined,\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      defaultValue: undefined,\n      deprecationReason: undefined,\n      extensions: Object.create(null),\n      astNode: undefined,\n    },\n  ],\n  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.TypeMetaFieldDef = TypeMetaFieldDef;\nconst TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, { parentType }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.TypeNameMetaFieldDef = TypeNameMetaFieldDef;\nconst introspectionTypes = Object.freeze([\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n]);\nexports.introspectionTypes = introspectionTypes;\n\nfunction isIntrospectionType(type) {\n  return introspectionTypes.some(({ name }) => type.name === name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLSchema = void 0;\nexports.assertSchema = assertSchema;\nexports.isSchema = isSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _definition = require('./definition.js');\n\nvar _directives = require('./directives.js');\n\nvar _introspection = require('./introspection.js');\n\n/**\n * Test if the given value is a GraphQL schema.\n */\nfunction isSchema(schema) {\n  return (0, _instanceOf.instanceOf)(schema, GraphQLSchema);\n}\n\nfunction assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(schema)} to be a GraphQL schema.`,\n    );\n  }\n\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nclass GraphQLSchema {\n  // Used as a cache for validateSchema().\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    (0, _isObjectLike.isObjectLike)(config) ||\n      (0, _devAssert.devAssert)(false, 'Must provide configuration object.');\n    !config.types ||\n      Array.isArray(config.types) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `\"types\" must be Array if provided but got: ${(0, _inspect.inspect)(\n          config.types,\n        )}.`,\n      );\n    !config.directives ||\n      Array.isArray(config.directives) ||\n      (0, _devAssert.devAssert)(\n        false,\n        '\"directives\" must be Array if provided but got: ' +\n          `${(0, _inspect.inspect)(config.directives)}.`,\n      );\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives =\n      (_config$directives = config.directives) !== null &&\n      _config$directives !== void 0\n        ? _config$directives\n        : _directives.specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if ((0, _directives.isDirective)(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(_introspection.__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n\n      const typeName = namedType.name;\n      typeName ||\n        (0, _devAssert.devAssert)(\n          false,\n          'One of the provided types for building the Schema is missing a name.',\n        );\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\n          `Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`,\n        );\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if ((0, _definition.isInterfaceType)(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if ((0, _definition.isInterfaceType)(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if ((0, _definition.isObjectType)(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if ((0, _definition.isInterfaceType)(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n\n  getQueryType() {\n    return this._queryType;\n  }\n\n  getMutationType() {\n    return this._mutationType;\n  }\n\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n\n  getRootType(operation) {\n    switch (operation) {\n      case _ast.OperationTypeNode.QUERY:\n        return this.getQueryType();\n\n      case _ast.OperationTypeNode.MUTATION:\n        return this.getMutationType();\n\n      case _ast.OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n\n  getTypeMap() {\n    return this._typeMap;\n  }\n\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n\n  getPossibleTypes(abstractType) {\n    return (0, _definition.isUnionType)(abstractType)\n      ? abstractType.getTypes()\n      : this.getImplementations(abstractType).objects;\n  }\n\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0\n      ? implementations\n      : {\n          objects: [],\n          interfaces: [],\n        };\n  }\n\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if ((0, _definition.isUnionType)(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  }\n\n  getDirectives() {\n    return this._directives;\n  }\n\n  getDirective(name) {\n    return this.getDirectives().find((directive) => directive.name === name);\n  }\n\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined,\n    };\n  }\n}\n\nexports.GraphQLSchema = GraphQLSchema;\n\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = (0, _definition.getNamedType)(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if ((0, _definition.isUnionType)(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (\n      (0, _definition.isObjectType)(namedType) ||\n      (0, _definition.isInterfaceType)(namedType)\n    ) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if ((0, _definition.isInputObjectType)(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidSchema = assertValidSchema;\nexports.validateSchema = validateSchema;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _typeComparators = require('../utilities/typeComparators.js');\n\nvar _definition = require('./definition.js');\n\nvar _directives = require('./directives.js');\n\nvar _introspection = require('./introspection.js');\n\nvar _schema = require('./schema.js');\n\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\nfunction validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  (0, _schema.assertSchema)(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nfunction assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this._errors.push(\n      new _GraphQLError.GraphQLError(message, {\n        nodes: _nodes,\n      }),\n    );\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n}\n\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!(0, _definition.isObjectType)(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\n      `Query root type must be Object type, it cannot be ${(0,\n      _inspect.inspect)(queryType)}.`,\n      (_getOperationTypeNode = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.QUERY,\n      )) !== null && _getOperationTypeNode !== void 0\n        ? _getOperationTypeNode\n        : queryType.astNode,\n    );\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && !(0, _definition.isObjectType)(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError(\n      'Mutation root type must be Object type if provided, it cannot be ' +\n        `${(0, _inspect.inspect)(mutationType)}.`,\n      (_getOperationTypeNode2 = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.MUTATION,\n      )) !== null && _getOperationTypeNode2 !== void 0\n        ? _getOperationTypeNode2\n        : mutationType.astNode,\n    );\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !(0, _definition.isObjectType)(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError(\n      'Subscription root type must be Object type if provided, it cannot be ' +\n        `${(0, _inspect.inspect)(subscriptionType)}.`,\n      (_getOperationTypeNode3 = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.SUBSCRIPTION,\n      )) !== null && _getOperationTypeNode3 !== void 0\n        ? _getOperationTypeNode3\n        : subscriptionType.astNode,\n    );\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]\n    .flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (schemaNode) => {\n        var _schemaNode$operation;\n\n        return (\n          /* c8 ignore next */\n          (_schemaNode$operation =\n            schemaNode === null || schemaNode === void 0\n              ? void 0\n              : schemaNode.operationTypes) !== null &&\n            _schemaNode$operation !== void 0\n            ? _schemaNode$operation\n            : []\n        );\n      },\n    )\n    .find((operationNode) => operationNode.operation === operation)) === null ||\n    _flatMap$find === void 0\n    ? void 0\n    : _flatMap$find.type;\n}\n\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!(0, _directives.isDirective)(directive)) {\n      context.reportError(\n        `Expected directive but got: ${(0, _inspect.inspect)(directive)}.`,\n        directive === null || directive === void 0 ? void 0 : directive.astNode,\n      );\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!(0, _definition.isInputType)(arg.type)) {\n        context.reportError(\n          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +\n            `but got: ${(0, _inspect.inspect)(arg.type)}.`,\n          arg.astNode,\n        );\n      }\n\n      if (\n        (0, _definition.isRequiredArgument)(arg) &&\n        arg.deprecationReason != null\n      ) {\n        var _arg$astNode;\n\n        context.reportError(\n          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0\n              ? void 0\n              : _arg$astNode.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(\n      `Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n      node.astNode,\n    );\n  }\n}\n\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs =\n    createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!(0, _definition.isNamedType)(type)) {\n      context.reportError(\n        `Expected GraphQL named type but got: ${(0, _inspect.inspect)(type)}.`,\n        type.astNode,\n      );\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!(0, _introspection.isIntrospectionType)(type)) {\n      validateName(context, type);\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0, _definition.isInterfaceType)(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0, _definition.isUnionType)(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if ((0, _definition.isEnumType)(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if ((0, _definition.isInputObjectType)(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [\n      type.astNode,\n      ...type.extensionASTNodes,\n    ]);\n  }\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!(0, _definition.isOutputType)(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\n        `The type of ${type.name}.${field.name} must be Output Type ` +\n          `but got: ${(0, _inspect.inspect)(field.type)}.`,\n        (_field$astNode = field.astNode) === null || _field$astNode === void 0\n          ? void 0\n          : _field$astNode.type,\n      );\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!(0, _definition.isInputType)(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\n          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +\n            `Type but got: ${(0, _inspect.inspect)(arg.type)}.`,\n          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0\n            ? void 0\n            : _arg$astNode2.type,\n        );\n      }\n\n      if (\n        (0, _definition.isRequiredArgument)(arg) &&\n        arg.deprecationReason != null\n      ) {\n        var _arg$astNode3;\n\n        context.reportError(\n          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0\n              ? void 0\n              : _arg$astNode3.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n\n  for (const iface of type.getInterfaces()) {\n    if (!(0, _definition.isInterfaceType)(iface)) {\n      context.reportError(\n        `Type ${(0, _inspect.inspect)(\n          type,\n        )} must only implement Interface types, ` +\n          `it cannot implement ${(0, _inspect.inspect)(iface)}.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\n        `Type ${type.name} cannot implement itself because it would create a circular reference.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\n        `Type ${type.name} can only implement ${iface.name} once.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,\n        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],\n      );\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (\n      !(0, _typeComparators.isTypeSubTypeOf)(\n        context.schema,\n        typeField.type,\n        ifaceField.type,\n      )\n    ) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expects type ` +\n          `${(0, _inspect.inspect)(ifaceField.type)} but ${\n            type.name\n          }.${fieldName} ` +\n          `is type ${(0, _inspect.inspect)(typeField.type)}.`,\n        [\n          (_ifaceField$astNode = ifaceField.astNode) === null ||\n          _ifaceField$astNode === void 0\n            ? void 0\n            : _ifaceField$astNode.type,\n          (_typeField$astNode = typeField.astNode) === null ||\n          _typeField$astNode === void 0\n            ? void 0\n            : _typeField$astNode.type,\n        ],\n      );\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,\n          [ifaceArg.astNode, typeField.astNode],\n        );\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!(0, _typeComparators.isEqualType)(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +\n            `expects type ${(0, _inspect.inspect)(ifaceArg.type)} but ` +\n            `${type.name}.${fieldName}(${argName}:) is type ` +\n            `${(0, _inspect.inspect)(typeArg.type)}.`,\n          [\n            (_ifaceArg$astNode = ifaceArg.astNode) === null ||\n            _ifaceArg$astNode === void 0\n              ? void 0\n              : _ifaceArg$astNode.type,\n            (_typeArg$astNode = typeArg.astNode) === null ||\n            _typeArg$astNode === void 0\n              ? void 0\n              : _typeArg$astNode.type,\n          ],\n        );\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);\n\n      if (!ifaceArg && (0, _definition.isRequiredArgument)(typeArg)) {\n        context.reportError(\n          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,\n          [typeArg.astNode, ifaceField.astNode],\n        );\n      }\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(\n        transitive === type\n          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`\n          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,\n        [\n          ...getAllImplementsInterfaceNodes(iface, transitive),\n          ...getAllImplementsInterfaceNodes(type, iface),\n        ],\n      );\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\n      `Union type ${union.name} must define one or more member types.`,\n      [union.astNode, ...union.extensionASTNodes],\n    );\n  }\n\n  const includedTypeNames = Object.create(null);\n\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\n        `Union type ${union.name} can only include type ${memberType.name} once.`,\n        getUnionMemberTypeNodes(union, memberType.name),\n      );\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!(0, _definition.isObjectType)(memberType)) {\n      context.reportError(\n        `Union type ${union.name} can only include Object types, ` +\n          `it cannot include ${(0, _inspect.inspect)(memberType)}.`,\n        getUnionMemberTypeNodes(union, String(memberType)),\n      );\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\n      `Enum type ${enumType.name} must define one or more values.`,\n      [enumType.astNode, ...enumType.extensionASTNodes],\n    );\n  }\n\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\n      `Input Object type ${inputObj.name} must define one or more fields.`,\n      [inputObj.astNode, ...inputObj.extensionASTNodes],\n    );\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!(0, _definition.isInputType)(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\n        `The type of ${inputObj.name}.${field.name} must be Input Type ` +\n          `but got: ${(0, _inspect.inspect)(field.type)}.`,\n        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0\n          ? void 0\n          : _field$astNode2.type,\n      );\n    }\n\n    if (\n      (0, _definition.isRequiredInputField)(field) &&\n      field.deprecationReason != null\n    ) {\n      var _field$astNode3;\n\n      context.reportError(\n        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,\n        [\n          getDeprecatedDirectiveNode(field.astNode),\n          (_field$astNode3 = field.astNode) === null ||\n          _field$astNode3 === void 0\n            ? void 0\n            : _field$astNode3.type,\n        ],\n      );\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n\n    for (const field of fields) {\n      if (\n        (0, _definition.isNonNullType)(field.type) &&\n        (0, _definition.isInputObjectType)(field.type.ofType)\n      ) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');\n          context.reportError(\n            `Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`,\n            cyclePath.map((fieldObj) => fieldObj.astNode),\n          );\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const { astNode, extensionASTNodes } = type;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((typeNode) => {\n      var _typeNode$interfaces;\n\n      return (\n        /* c8 ignore next */\n        (_typeNode$interfaces = typeNode.interfaces) !== null &&\n          _typeNode$interfaces !== void 0\n          ? _typeNode$interfaces\n          : []\n      );\n    })\n    .filter((ifaceNode) => ifaceNode.name.value === iface.name);\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const { astNode, extensionASTNodes } = union;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((unionNode) => {\n      var _unionNode$types;\n\n      return (\n        /* c8 ignore next */\n        (_unionNode$types = unionNode.types) !== null &&\n          _unionNode$types !== void 0\n          ? _unionNode$types\n          : []\n      );\n    })\n    .filter((typeNode) => typeNode.name.value === typeName);\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  return definitionNode === null || definitionNode === void 0\n    ? void 0\n    : (_definitionNode$direc = definitionNode.directives) === null ||\n      _definitionNode$direc === void 0\n    ? void 0\n    : _definitionNode$direc.find(\n        (node) =>\n          node.name.value === _directives.GraphQLDeprecatedDirective.name,\n      );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.typeFromAST = typeFromAST;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nfunction typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case _kinds.Kind.LIST_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new _definition.GraphQLList(innerType);\n    }\n\n    case _kinds.Kind.NON_NULL_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new _definition.GraphQLNonNull(innerType);\n    }\n\n    case _kinds.Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.TypeInfo = void 0;\nexports.visitWithTypeInfo = visitWithTypeInfo;\n\nvar _ast = require('../language/ast.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _typeFromAST = require('./typeFromAST.js');\n\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\nclass TypeInfo {\n  constructor(\n    schema,\n    /**\n     * Initial type may be provided in rare cases to facilitate traversals\n     *  beginning somewhere other than documents.\n     */\n    initialType,\n    /** @deprecated will be removed in 17.0.0 */\n    getFieldDefFn,\n  ) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef =\n      getFieldDefFn !== null && getFieldDefFn !== void 0\n        ? getFieldDefFn\n        : getFieldDef;\n\n    if (initialType) {\n      if ((0, _definition.isInputType)(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if ((0, _definition.isCompositeType)(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if ((0, _definition.isOutputType)(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n\n  getDirective() {\n    return this._directive;\n  }\n\n  getArgument() {\n    return this._argument;\n  }\n\n  getEnumValue() {\n    return this._enumValue;\n  }\n\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case _kinds.Kind.SELECTION_SET: {\n        const namedType = (0, _definition.getNamedType)(this.getType());\n\n        this._parentTypeStack.push(\n          (0, _definition.isCompositeType)(namedType) ? namedType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.FIELD: {\n        const parentType = this.getParentType();\n        let fieldDef;\n        let fieldType;\n\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n\n        this._fieldDefStack.push(fieldDef);\n\n        this._typeStack.push(\n          (0, _definition.isOutputType)(fieldType) ? fieldType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case _kinds.Kind.OPERATION_DEFINITION: {\n        const rootType = schema.getRootType(node.operation);\n\n        this._typeStack.push(\n          (0, _definition.isObjectType)(rootType) ? rootType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.INLINE_FRAGMENT:\n      case _kinds.Kind.FRAGMENT_DEFINITION: {\n        const typeConditionAST = node.typeCondition;\n        const outputType = typeConditionAST\n          ? (0, _typeFromAST.typeFromAST)(schema, typeConditionAST)\n          : (0, _definition.getNamedType)(this.getType());\n\n        this._typeStack.push(\n          (0, _definition.isOutputType)(outputType) ? outputType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.VARIABLE_DEFINITION: {\n        const inputType = (0, _typeFromAST.typeFromAST)(schema, node.type);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(inputType) ? inputType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.ARGUMENT: {\n        var _this$getDirective;\n\n        let argDef;\n        let argType;\n        const fieldOrDirective =\n          (_this$getDirective = this.getDirective()) !== null &&\n          _this$getDirective !== void 0\n            ? _this$getDirective\n            : this.getFieldDef();\n\n        if (fieldOrDirective) {\n          argDef = fieldOrDirective.args.find(\n            (arg) => arg.name === node.name.value,\n          );\n\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n\n        this._argument = argDef;\n\n        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(argType) ? argType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.LIST: {\n        const listType = (0, _definition.getNullableType)(this.getInputType());\n        const itemType = (0, _definition.isListType)(listType)\n          ? listType.ofType\n          : listType; // List positions never have a default value.\n\n        this._defaultValueStack.push(undefined);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(itemType) ? itemType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.OBJECT_FIELD: {\n        const objectType = (0, _definition.getNamedType)(this.getInputType());\n        let inputFieldType;\n        let inputField;\n\n        if ((0, _definition.isInputObjectType)(objectType)) {\n          inputField = objectType.getFields()[node.name.value];\n\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n\n        this._defaultValueStack.push(\n          inputField ? inputField.defaultValue : undefined,\n        );\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(inputFieldType)\n            ? inputFieldType\n            : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.ENUM: {\n        const enumType = (0, _definition.getNamedType)(this.getInputType());\n        let enumValue;\n\n        if ((0, _definition.isEnumType)(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n\n        this._enumValue = enumValue;\n        break;\n      }\n\n      default: // Ignore other nodes\n    }\n  }\n\n  leave(node) {\n    switch (node.kind) {\n      case _kinds.Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case _kinds.Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case _kinds.Kind.OPERATION_DEFINITION:\n      case _kinds.Kind.INLINE_FRAGMENT:\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case _kinds.Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.LIST:\n      case _kinds.Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.ENUM:\n        this._enumValue = null;\n        break;\n\n      default: // Ignore other nodes\n    }\n  }\n}\n\nexports.TypeInfo = TypeInfo;\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n\n  if (\n    name === _introspection.SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.SchemaMetaFieldDef;\n  }\n\n  if (\n    name === _introspection.TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.TypeMetaFieldDef;\n  }\n\n  if (\n    name === _introspection.TypeNameMetaFieldDef.name &&\n    (0, _definition.isCompositeType)(parentType)\n  ) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  if (\n    (0, _definition.isObjectType)(parentType) ||\n    (0, _definition.isInterfaceType)(parentType)\n  ) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = (0, _visitor.getEnterLeaveForKind)(visitor, node.kind).enter;\n\n      if (fn) {\n        const result = fn.apply(visitor, args);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if ((0, _ast.isNode)(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n\n    leave(...args) {\n      const node = args[0];\n      const fn = (0, _visitor.getEnterLeaveForKind)(visitor, node.kind).leave;\n      let result;\n\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isConstValueNode = isConstValueNode;\nexports.isDefinitionNode = isDefinitionNode;\nexports.isExecutableDefinitionNode = isExecutableDefinitionNode;\nexports.isSelectionNode = isSelectionNode;\nexports.isTypeDefinitionNode = isTypeDefinitionNode;\nexports.isTypeExtensionNode = isTypeExtensionNode;\nexports.isTypeNode = isTypeNode;\nexports.isTypeSystemDefinitionNode = isTypeSystemDefinitionNode;\nexports.isTypeSystemExtensionNode = isTypeSystemExtensionNode;\nexports.isValueNode = isValueNode;\n\nvar _kinds = require('./kinds.js');\n\nfunction isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\n\nfunction isExecutableDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.OPERATION_DEFINITION ||\n    node.kind === _kinds.Kind.FRAGMENT_DEFINITION\n  );\n}\n\nfunction isSelectionNode(node) {\n  return (\n    node.kind === _kinds.Kind.FIELD ||\n    node.kind === _kinds.Kind.FRAGMENT_SPREAD ||\n    node.kind === _kinds.Kind.INLINE_FRAGMENT\n  );\n}\n\nfunction isValueNode(node) {\n  return (\n    node.kind === _kinds.Kind.VARIABLE ||\n    node.kind === _kinds.Kind.INT ||\n    node.kind === _kinds.Kind.FLOAT ||\n    node.kind === _kinds.Kind.STRING ||\n    node.kind === _kinds.Kind.BOOLEAN ||\n    node.kind === _kinds.Kind.NULL ||\n    node.kind === _kinds.Kind.ENUM ||\n    node.kind === _kinds.Kind.LIST ||\n    node.kind === _kinds.Kind.OBJECT\n  );\n}\n\nfunction isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === _kinds.Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === _kinds.Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== _kinds.Kind.VARIABLE)\n  );\n}\n\nfunction isTypeNode(node) {\n  return (\n    node.kind === _kinds.Kind.NAMED_TYPE ||\n    node.kind === _kinds.Kind.LIST_TYPE ||\n    node.kind === _kinds.Kind.NON_NULL_TYPE\n  );\n}\n\nfunction isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === _kinds.Kind.DIRECTIVE_DEFINITION\n  );\n}\n\nfunction isTypeDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.UNION_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\n\nfunction isTypeSystemExtensionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node)\n  );\n}\n\nfunction isTypeExtensionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.UNION_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nfunction ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!(0, _predicates.isExecutableDefinitionNode)(definition)) {\n          const defName =\n            definition.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n            definition.kind === _kinds.Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `The ${defName} definition is not executable.`,\n              {\n                nodes: definition,\n              },\n            ),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.FieldsOnCorrectTypeRule = FieldsOnCorrectTypeRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _naturalCompare = require('../../jsutils/naturalCompare.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nfunction FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n\n      if (type) {\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = (0, _didYouMean.didYouMean)(\n            'to use an inline fragment on',\n            getSuggestedTypeNames(schema, type, fieldName),\n          ); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = (0, _didYouMean.didYouMean)(\n              getSuggestedFieldNames(type, fieldName),\n            );\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Cannot query field \"${fieldName}\" on type \"${type.name}\".` +\n                suggestion,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!(0, _definition.isAbstractType)(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] =\n        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==\n          null && _usageCount$possibleI !== void 0\n          ? _usageCount$possibleI\n          : 0) + 1;\n    }\n  }\n\n  return [...suggestedTypes]\n    .sort((typeA, typeB) => {\n      // Suggest both interface and object types based on how common they are.\n      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n      if (usageCountDiff !== 0) {\n        return usageCountDiff;\n      } // Suggest super types first followed by subtypes\n\n      if (\n        (0, _definition.isInterfaceType)(typeA) &&\n        schema.isSubType(typeA, typeB)\n      ) {\n        return -1;\n      }\n\n      if (\n        (0, _definition.isInterfaceType)(typeB) &&\n        schema.isSubType(typeB, typeA)\n      ) {\n        return 1;\n      }\n\n      return (0, _naturalCompare.naturalCompare)(typeA.name, typeB.name);\n    })\n    .map((x) => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (\n    (0, _definition.isObjectType)(type) ||\n    (0, _definition.isInterfaceType)(type)\n  ) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return (0, _suggestionList.suggestionList)(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.FragmentsOnCompositeTypesRule = FragmentsOnCompositeTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nfunction FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = (0, _typeFromAST.typeFromAST)(\n          context.getSchema(),\n          typeCondition,\n        );\n\n        if (type && !(0, _definition.isCompositeType)(type)) {\n          const typeStr = (0, _printer.print)(typeCondition);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              {\n                nodes: typeCondition,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = (0, _typeFromAST.typeFromAST)(\n        context.getSchema(),\n        node.typeCondition,\n      );\n\n      if (type && !(0, _definition.isCompositeType)(type)) {\n        const typeStr = (0, _printer.print)(node.typeCondition);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            {\n              nodes: node.typeCondition,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownArgumentNamesOnDirectivesRule = KnownArgumentNamesOnDirectivesRule;\nexports.KnownArgumentNamesRule = KnownArgumentNamesRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nfunction KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = (0, _suggestionList.suggestionList)(\n          argName,\n          knownArgsNames,\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n            {\n              nodes: argNode,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nfunction KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = (0, _suggestionList.suggestionList)(\n              argName,\n              knownArgs,\n            );\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  (0, _didYouMean.didYouMean)(suggestions),\n                {\n                  nodes: argNode,\n                },\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownDirectivesRule = KnownDirectivesRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _ast = require('../../language/ast.js');\n\nvar _directiveLocation = require('../../language/directiveLocation.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nfunction KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(`Unknown directive \"@${name}\".`, {\n            nodes: node,\n          }),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || (0, _invariant.invariant)(false);\n\n  switch (appliedTo.kind) {\n    case _kinds.Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case _kinds.Kind.FIELD:\n      return _directiveLocation.DirectiveLocation.FIELD;\n\n    case _kinds.Kind.FRAGMENT_SPREAD:\n      return _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD;\n\n    case _kinds.Kind.INLINE_FRAGMENT:\n      return _directiveLocation.DirectiveLocation.INLINE_FRAGMENT;\n\n    case _kinds.Kind.FRAGMENT_DEFINITION:\n      return _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case _kinds.Kind.VARIABLE_DEFINITION:\n      return _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION;\n\n    case _kinds.Kind.SCHEMA_DEFINITION:\n    case _kinds.Kind.SCHEMA_EXTENSION:\n      return _directiveLocation.DirectiveLocation.SCHEMA;\n\n    case _kinds.Kind.SCALAR_TYPE_DEFINITION:\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.SCALAR;\n\n    case _kinds.Kind.OBJECT_TYPE_DEFINITION:\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.OBJECT;\n\n    case _kinds.Kind.FIELD_DEFINITION:\n      return _directiveLocation.DirectiveLocation.FIELD_DEFINITION;\n\n    case _kinds.Kind.INTERFACE_TYPE_DEFINITION:\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.INTERFACE;\n\n    case _kinds.Kind.UNION_TYPE_DEFINITION:\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.UNION;\n\n    case _kinds.Kind.ENUM_TYPE_DEFINITION:\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.ENUM;\n\n    case _kinds.Kind.ENUM_VALUE_DEFINITION:\n      return _directiveLocation.DirectiveLocation.ENUM_VALUE;\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.INPUT_OBJECT;\n\n    case _kinds.Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || (0, _invariant.invariant)(false);\n      return parentNode.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION\n        : _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false ||\n        (0, _invariant.invariant)(\n          false,\n          'Unexpected kind: ' + (0, _inspect.inspect)(appliedTo.kind),\n        );\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case _ast.OperationTypeNode.QUERY:\n      return _directiveLocation.DirectiveLocation.QUERY;\n\n    case _ast.OperationTypeNode.MUTATION:\n      return _directiveLocation.DirectiveLocation.MUTATION;\n\n    case _ast.OperationTypeNode.SUBSCRIPTION:\n      return _directiveLocation.DirectiveLocation.SUBSCRIPTION;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownFragmentNamesRule = KnownFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nfunction KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown fragment \"${fragmentName}\".`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownTypeNamesRule = KnownTypeNamesRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _introspection = require('../../type/introspection.js');\n\nvar _scalars = require('../../type/scalars.js');\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nfunction KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = (0, _suggestionList.suggestionList)(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown type \"${typeName}\".` +\n              (0, _didYouMean.didYouMean)(suggestedTypes),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nconst standardTypeNames = [\n  ..._scalars.specifiedScalarTypes,\n  ..._introspection.introspectionTypes,\n].map((type) => type.name);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    ((0, _predicates.isTypeSystemDefinitionNode)(value) ||\n      (0, _predicates.isTypeSystemExtensionNode)(value))\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.LoneAnonymousOperationRule = LoneAnonymousOperationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nfunction LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === _kinds.Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.LoneSchemaDefinitionRule = LoneSchemaDefinitionRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nfunction LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  const oldSchema = context.getSchema();\n  const alreadyDefined =\n    (_ref =\n      (_ref2 =\n        (_oldSchema$astNode =\n          oldSchema === null || oldSchema === void 0\n            ? void 0\n            : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0\n          ? _oldSchema$astNode\n          : oldSchema === null || oldSchema === void 0\n          ? void 0\n          : oldSchema.getQueryType()) !== null && _ref2 !== void 0\n        ? _ref2\n        : oldSchema === null || oldSchema === void 0\n        ? void 0\n        : oldSchema.getMutationType()) !== null && _ref !== void 0\n      ? _ref\n      : oldSchema === null || oldSchema === void 0\n      ? void 0\n      : oldSchema.getSubscriptionType();\n  let schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'Cannot define a new schema within a schema extension.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'Must provide only one schema definition.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n\n      ++schemaDefinitionsCount;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoFragmentCyclesRule = NoFragmentCyclesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nfunction NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            {\n              nodes: cyclePath,\n            },\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUndefinedVariablesRule = NoUndefinedVariablesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nfunction NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          const varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operation.name\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\n                  : `Variable \"$${varName}\" is not defined.`,\n                {\n                  nodes: [node, operation],\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUnusedFragmentsRule = NoUnusedFragmentsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nfunction NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Fragment \"${fragName}\" is never used.`,\n                {\n                  nodes: fragmentDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUnusedVariablesRule = NoUnusedVariablesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nfunction NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operation.name\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\n                  : `Variable \"$${variableName}\" is never used.`,\n                {\n                  nodes: variableDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.sortValueNode = sortValueNode;\n\nvar _naturalCompare = require('../jsutils/naturalCompare.js');\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\nfunction sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.OBJECT:\n      return { ...valueNode, fields: sortFields(valueNode.fields) };\n\n    case _kinds.Kind.LIST:\n      return { ...valueNode, values: valueNode.values.map(sortValueNode) };\n\n    case _kinds.Kind.INT:\n    case _kinds.Kind.FLOAT:\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.BOOLEAN:\n    case _kinds.Kind.NULL:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.VARIABLE:\n      return valueNode;\n  }\n}\n\nfunction sortFields(fields) {\n  return fields\n    .map((fieldNode) => ({\n      ...fieldNode,\n      value: sortValueNode(fieldNode.value),\n    }))\n    .sort((fieldA, fieldB) =>\n      (0, _naturalCompare.naturalCompare)(fieldA.name.value, fieldB.name.value),\n    );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.OverlappingFieldsCanBeMergedRule = OverlappingFieldsCanBeMergedRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _sortValueNode = require('../../utilities/sortValueNode.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason\n      .map(\n        ([responseName, subReason]) =>\n          `subfields \"${responseName}\" conflict because ` +\n          reasonMessage(subReason),\n      )\n      .join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nfunction OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(\n        context,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        context.getParentType(),\n        selectionSet,\n      );\n\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,\n            {\n              nodes: fields1.concat(fields2),\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentType,\n  selectionSet,\n) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType,\n    selectionSet,\n  ); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    fieldMap,\n  );\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        false,\n        fieldMap,\n        fragmentNames[i],\n      ); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(\n          context,\n          conflicts,\n          cachedFieldsAndFragmentNames,\n          comparedFragmentPairs,\n          false,\n          fragmentNames[i],\n          fragmentNames[j],\n        );\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fieldMap,\n  fragmentName,\n) {\n  const fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  const [fieldMap2, referencedFragmentNames] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment,\n    ); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap,\n    fieldMap2,\n  ); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    // Memoize so two fragments are not compared for conflicts more than once.\n    if (\n      comparedFragmentPairs.has(\n        referencedFragmentName,\n        fragmentName,\n        areMutuallyExclusive,\n      )\n    ) {\n      continue;\n    }\n\n    comparedFragmentPairs.add(\n      referencedFragmentName,\n      fragmentName,\n      areMutuallyExclusive,\n    );\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap,\n      referencedFragmentName,\n    );\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fragmentName1,\n  fragmentName2,\n) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (\n    comparedFragmentPairs.has(\n      fragmentName1,\n      fragmentName2,\n      areMutuallyExclusive,\n    )\n  ) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  const [fieldMap1, referencedFragmentNames1] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment1,\n    );\n  const [fieldMap2, referencedFragmentNames2] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment2,\n    ); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fragmentName1,\n      referencedFragmentName2,\n    );\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      referencedFragmentName1,\n      fragmentName2,\n    );\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  parentType1,\n  selectionSet1,\n  parentType2,\n  selectionSet2,\n) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType1,\n    selectionSet1,\n  );\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType2,\n    selectionSet2,\n  ); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap1,\n      fragmentName2,\n    );\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap2,\n      fragmentName1,\n    );\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        areMutuallyExclusive,\n        fragmentName1,\n        fragmentName2,\n      );\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  fieldMap,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            false, // within one collection is never mutually exclusive\n            responseName,\n            fields[i],\n            fields[j],\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  fieldMap1,\n  fieldMap2,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            parentFieldsAreMutuallyExclusive,\n            responseName,\n            field1,\n            field2,\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  responseName,\n  field1,\n  field2,\n) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive =\n    parentFieldsAreMutuallyExclusive ||\n    (parentType1 !== parentType2 &&\n      (0, _definition.isObjectType)(parentType1) &&\n      (0, _definition.isObjectType)(parentType2));\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [\n        [responseName, `\"${name1}\" and \"${name2}\" are different fields`],\n        [node1],\n        [node2],\n      ];\n    } // Two field calls must have the same arguments.\n\n    if (stringifyArguments(node1) !== stringifyArguments(node2)) {\n      return [\n        [responseName, 'they have differing arguments'],\n        [node1],\n        [node2],\n      ];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [\n      [\n        responseName,\n        `they return conflicting types \"${(0, _inspect.inspect)(\n          type1,\n        )}\" and \"${(0, _inspect.inspect)(type2)}\"`,\n      ],\n      [node1],\n      [node2],\n    ];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(\n      context,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      (0, _definition.getNamedType)(type1),\n      selectionSet1,\n      (0, _definition.getNamedType)(type2),\n      selectionSet2,\n    );\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction stringifyArguments(fieldNode) {\n  var _fieldNode$arguments;\n\n  // FIXME https://github.com/graphql/graphql-js/issues/2203\n  const args =\n    /* c8 ignore next */\n    (_fieldNode$arguments = fieldNode.arguments) !== null &&\n    _fieldNode$arguments !== void 0\n      ? _fieldNode$arguments\n      : [];\n  const inputObjectWithArgs = {\n    kind: _kinds.Kind.OBJECT,\n    fields: args.map((argNode) => ({\n      kind: _kinds.Kind.OBJECT_FIELD,\n      name: argNode.name,\n      value: argNode.value,\n    })),\n  };\n  return (0, _printer.print)(\n    (0, _sortValueNode.sortValueNode)(inputObjectWithArgs),\n  );\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if ((0, _definition.isListType)(type1)) {\n    return (0, _definition.isListType)(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if ((0, _definition.isListType)(type2)) {\n    return true;\n  }\n\n  if ((0, _definition.isNonNullType)(type1)) {\n    return (0, _definition.isNonNullType)(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if ((0, _definition.isNonNullType)(type2)) {\n    return true;\n  }\n\n  if (\n    (0, _definition.isLeafType)(type1) ||\n    (0, _definition.isLeafType)(type2)\n  ) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  parentType,\n  selectionSet,\n) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n\n  _collectFieldsAndFragmentNames(\n    context,\n    parentType,\n    selectionSet,\n    nodeAndDefs,\n    fragmentNames,\n  );\n\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  fragment,\n) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const fragmentType = (0, _typeFromAST.typeFromAST)(\n    context.getSchema(),\n    fragment.typeCondition,\n  );\n  return getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    fragmentType,\n    fragment.selectionSet,\n  );\n}\n\nfunction _collectFieldsAndFragmentNames(\n  context,\n  parentType,\n  selectionSet,\n  nodeAndDefs,\n  fragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case _kinds.Kind.FIELD: {\n        const fieldName = selection.name.value;\n        let fieldDef;\n\n        if (\n          (0, _definition.isObjectType)(parentType) ||\n          (0, _definition.isInterfaceType)(parentType)\n        ) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n\n        const responseName = selection.alias\n          ? selection.alias.value\n          : fieldName;\n\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      }\n\n      case _kinds.Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case _kinds.Kind.INLINE_FRAGMENT: {\n        const typeCondition = selection.typeCondition;\n        const inlineFragmentType = typeCondition\n          ? (0, _typeFromAST.typeFromAST)(context.getSchema(), typeCondition)\n          : parentType;\n\n        _collectFieldsAndFragmentNames(\n          context,\n          inlineFragmentType,\n          selection.selectionSet,\n          nodeAndDefs,\n          fragmentNames,\n        );\n\n        break;\n      }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [\n      [responseName, conflicts.map(([reason]) => reason)],\n      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],\n      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],\n    ];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result =\n      (_this$_data$get = this._data.get(key1)) === null ||\n      _this$_data$get === void 0\n        ? void 0\n        : _this$_data$get.get(key2);\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n\n    const map = this._data.get(key1);\n\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.PossibleFragmentSpreadsRule = PossibleFragmentSpreadsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeComparators = require('../../utilities/typeComparators.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nfunction PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n\n      if (\n        (0, _definition.isCompositeType)(fragType) &&\n        (0, _definition.isCompositeType)(parentType) &&\n        !(0, _typeComparators.doTypesOverlap)(\n          context.getSchema(),\n          fragType,\n          parentType,\n        )\n      ) {\n        const parentTypeStr = (0, _inspect.inspect)(parentType);\n        const fragTypeStr = (0, _inspect.inspect)(fragType);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n\n      if (\n        fragType &&\n        parentType &&\n        !(0, _typeComparators.doTypesOverlap)(\n          context.getSchema(),\n          fragType,\n          parentType,\n        )\n      ) {\n        const parentTypeStr = (0, _inspect.inspect)(parentType);\n        const fragTypeStr = (0, _inspect.inspect)(fragType);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n\n  if (frag) {\n    const type = (0, _typeFromAST.typeFromAST)(\n      context.getSchema(),\n      frag.typeCondition,\n    );\n\n    if ((0, _definition.isCompositeType)(type)) {\n      return type;\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.PossibleTypeExtensionsRule = PossibleTypeExtensionsRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nfunction PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension,\n  };\n\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType =\n      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Cannot extend non-${kindStr} type \"${typeName}\".`,\n            {\n              nodes: defNode ? [defNode, node] : node,\n            },\n          ),\n        );\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0\n          ? void 0\n          : schema.getTypeMap()),\n      });\n      const suggestedTypes = (0, _suggestionList.suggestionList)(\n        typeName,\n        allTypeNames,\n      );\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Cannot extend type \"${typeName}\" because it is not defined.` +\n            (0, _didYouMean.didYouMean)(suggestedTypes),\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n    }\n  }\n}\n\nconst defKindToExtKind = {\n  [_kinds.Kind.SCALAR_TYPE_DEFINITION]: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n  [_kinds.Kind.OBJECT_TYPE_DEFINITION]: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n  [_kinds.Kind.INTERFACE_TYPE_DEFINITION]: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n  [_kinds.Kind.UNION_TYPE_DEFINITION]: _kinds.Kind.UNION_TYPE_EXTENSION,\n  [_kinds.Kind.ENUM_TYPE_DEFINITION]: _kinds.Kind.ENUM_TYPE_EXTENSION,\n  [_kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION]:\n    _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n};\n\nfunction typeToExtKind(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return _kinds.Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return _kinds.Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return _kinds.Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return _kinds.Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return _kinds.Kind.ENUM_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n      false ||\n        (0, _invariant.invariant)(\n          false,\n          'Unexpected kind: ' + (0, _inspect.inspect)(kind),\n        );\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ProvidedRequiredArgumentsOnDirectivesRule =\n  ProvidedRequiredArgumentsOnDirectivesRule;\nexports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nfunction ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (\n            !providedArgs.has(argDef.name) &&\n            (0, _definition.isRequiredArgument)(argDef)\n          ) {\n            const argTypeStr = (0, _inspect.inspect)(argDef.type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = (0, _keyMap.keyMap)(\n      directive.args.filter(_definition.isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = (0, _keyMap.keyMap)(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = (0, _definition.isType)(argDef.type)\n                ? (0, _inspect.inspect)(argDef.type)\n                : (0, _printer.print)(argDef.type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return (\n    arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ScalarLeafsRule = ScalarLeafsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = (0, _inspect.inspect)(type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                {\n                  nodes: selectionSet,\n                },\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = (0, _inspect.inspect)(type);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printPathArray = printPathArray;\n\n/**\n * Build a string describing the path.\n */\nfunction printPathArray(path) {\n  return path\n    .map((key) =>\n      typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key,\n    )\n    .join('');\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.addPath = addPath;\nexports.pathToArray = pathToArray;\n\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename,\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nfunction pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.coerceInputValue = coerceInputValue;\n\nvar _didYouMean = require('../jsutils/didYouMean.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _printPathArray = require('../jsutils/printPathArray.js');\n\nvar _suggestionList = require('../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nfunction coerceInputValue(inputValue, type, onError = defaultOnError) {\n  return coerceInputValueImpl(inputValue, type, onError, undefined);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  let errorPrefix = 'Invalid value ' + (0, _inspect.inspect)(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += ` at \"value${(0, _printPathArray.printPathArray)(path)}\"`;\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if ((0, _definition.isNonNullType)(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(\n      (0, _Path.pathToArray)(path),\n      inputValue,\n      new _GraphQLError.GraphQLError(\n        `Expected non-nullable type \"${(0, _inspect.inspect)(\n          type,\n        )}\" not to be null.`,\n      ),\n    );\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if ((0, _isIterableObject.isIterableObject)(inputValue)) {\n      return Array.from(inputValue, (itemValue, index) => {\n        const itemPath = (0, _Path.addPath)(path, index, undefined);\n        return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n      });\n    } // Lists accept a non-list value as a list of one.\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (!(0, _isObjectLike.isObjectLike)(inputValue)) {\n      onError(\n        (0, _Path.pathToArray)(path),\n        inputValue,\n        new _GraphQLError.GraphQLError(\n          `Expected type \"${type.name}\" to be an object.`,\n        ),\n      );\n      return;\n    }\n\n    const coercedValue = {};\n    const fieldDefs = type.getFields();\n\n    for (const field of Object.values(fieldDefs)) {\n      const fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if ((0, _definition.isNonNullType)(field.type)) {\n          const typeStr = (0, _inspect.inspect)(field.type);\n          onError(\n            (0, _Path.pathToArray)(path),\n            inputValue,\n            new _GraphQLError.GraphQLError(\n              `Field \"${field.name}\" of required type \"${typeStr}\" was not provided.`,\n            ),\n          );\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(\n        fieldValue,\n        field.type,\n        onError,\n        (0, _Path.addPath)(path, field.name, type.name),\n      );\n    } // Ensure every provided field is defined.\n\n    for (const fieldName of Object.keys(inputValue)) {\n      if (!fieldDefs[fieldName]) {\n        const suggestions = (0, _suggestionList.suggestionList)(\n          fieldName,\n          Object.keys(type.getFields()),\n        );\n        onError(\n          (0, _Path.pathToArray)(path),\n          inputValue,\n          new _GraphQLError.GraphQLError(\n            `Field \"${fieldName}\" is not defined by type \"${type.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n          ),\n        );\n      }\n    }\n\n    return coercedValue;\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    let parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof _GraphQLError.GraphQLError) {\n        onError((0, _Path.pathToArray)(path), inputValue, error);\n      } else {\n        onError(\n          (0, _Path.pathToArray)(path),\n          inputValue,\n          new _GraphQLError.GraphQLError(\n            `Expected type \"${type.name}\". ` + error.message,\n            {\n              originalError: error,\n            },\n          ),\n        );\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(\n        (0, _Path.pathToArray)(path),\n        inputValue,\n        new _GraphQLError.GraphQLError(`Expected type \"${type.name}\".`),\n      );\n    }\n\n    return parseResult;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.valueFromAST = valueFromAST;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\nfunction valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === _kinds.Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    const variableValue = variables[variableName];\n\n    if (variableValue === null && (0, _definition.isNonNullType)(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n\n  if ((0, _definition.isNonNullType)(type)) {\n    if (valueNode.kind === _kinds.Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === _kinds.Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if (valueNode.kind === _kinds.Kind.LIST) {\n      const coercedValues = [];\n\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if ((0, _definition.isNonNullType)(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (valueNode.kind !== _kinds.Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    const coercedObj = Object.create(null);\n    const fieldNodes = (0, _keyMap.keyMap)(\n      valueNode.fields,\n      (field) => field.name.value,\n    );\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if ((0, _definition.isNonNullType)(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return (\n    valueNode.kind === _kinds.Kind.VARIABLE &&\n    (variables == null || variables[valueNode.name.value] === undefined)\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getArgumentValues = getArgumentValues;\nexports.getDirectiveValues = getDirectiveValues;\nexports.getVariableValues = getVariableValues;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _printPathArray = require('../jsutils/printPathArray.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _coerceInputValue = require('../utilities/coerceInputValue.js');\n\nvar _typeFromAST = require('../utilities/typeFromAST.js');\n\nvar _valueFromAST = require('../utilities/valueFromAST.js');\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors =\n    options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    const coerced = coerceVariableValues(\n      schema,\n      varDefNodes,\n      inputs,\n      (error) => {\n        if (maxErrors != null && errors.length >= maxErrors) {\n          throw new _GraphQLError.GraphQLError(\n            'Too many errors processing variables, error limit reached. Execution aborted.',\n          );\n        }\n\n        errors.push(error);\n      },\n    );\n\n    if (errors.length === 0) {\n      return {\n        coerced,\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors,\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = (0, _typeFromAST.typeFromAST)(schema, varDefNode.type);\n\n    if (!(0, _definition.isInputType)(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = (0, _printer.print)(varDefNode.type);\n      onError(\n        new _GraphQLError.GraphQLError(\n          `Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`,\n          {\n            nodes: varDefNode.type,\n          },\n        ),\n      );\n      continue;\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = (0, _valueFromAST.valueFromAST)(\n          varDefNode.defaultValue,\n          varType,\n        );\n      } else if ((0, _definition.isNonNullType)(varType)) {\n        const varTypeStr = (0, _inspect.inspect)(varType);\n        onError(\n          new _GraphQLError.GraphQLError(\n            `Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`,\n            {\n              nodes: varDefNode,\n            },\n          ),\n        );\n      }\n\n      continue;\n    }\n\n    const value = inputs[varName];\n\n    if (value === null && (0, _definition.isNonNullType)(varType)) {\n      const varTypeStr = (0, _inspect.inspect)(varType);\n      onError(\n        new _GraphQLError.GraphQLError(\n          `Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`,\n          {\n            nodes: varDefNode,\n          },\n        ),\n      );\n      continue;\n    }\n\n    coercedValues[varName] = (0, _coerceInputValue.coerceInputValue)(\n      value,\n      varType,\n      (path, invalidValue, error) => {\n        let prefix =\n          `Variable \"$${varName}\" got invalid value ` +\n          (0, _inspect.inspect)(invalidValue);\n\n        if (path.length > 0) {\n          prefix += ` at \"${varName}${(0, _printPathArray.printPathArray)(\n            path,\n          )}\"`;\n        }\n\n        onError(\n          new _GraphQLError.GraphQLError(prefix + '; ' + error.message, {\n            nodes: varDefNode,\n            originalError: error.originalError,\n          }),\n        );\n      },\n    );\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nfunction getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes =\n    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0\n      ? _node$arguments\n      : [];\n  const argNodeMap = (0, _keyMap.keyMap)(\n    argumentNodes,\n    (arg) => arg.name.value,\n  );\n\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if ((0, _definition.isNonNullType)(argType)) {\n        throw new _GraphQLError.GraphQLError(\n          `Argument \"${name}\" of required type \"${(0, _inspect.inspect)(\n            argType,\n          )}\" ` + 'was not provided.',\n          {\n            nodes: node,\n          },\n        );\n      }\n\n      continue;\n    }\n\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === _kinds.Kind.NULL;\n\n    if (valueNode.kind === _kinds.Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n\n      if (\n        variableValues == null ||\n        !hasOwnProperty(variableValues, variableName)\n      ) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if ((0, _definition.isNonNullType)(argType)) {\n          throw new _GraphQLError.GraphQLError(\n            `Argument \"${name}\" of required type \"${(0, _inspect.inspect)(\n              argType,\n            )}\" ` +\n              `was provided the variable \"$${variableName}\" which was not provided a runtime value.`,\n            {\n              nodes: valueNode,\n            },\n          );\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && (0, _definition.isNonNullType)(argType)) {\n      throw new _GraphQLError.GraphQLError(\n        `Argument \"${name}\" of non-null type \"${(0, _inspect.inspect)(\n          argType,\n        )}\" ` + 'must not be null.',\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const coercedValue = (0, _valueFromAST.valueFromAST)(\n      valueNode,\n      argType,\n      variableValues,\n    );\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new _GraphQLError.GraphQLError(\n        `Argument \"${name}\" has invalid value ${(0, _printer.print)(\n          valueNode,\n        )}.`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nfunction getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n\n  const directiveNode =\n    (_node$directives = node.directives) === null || _node$directives === void 0\n      ? void 0\n      : _node$directives.find(\n          (directive) => directive.name.value === directiveDef.name,\n        );\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.collectFields = collectFields;\nexports.collectSubfields = collectSubfields;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _typeFromAST = require('../utilities/typeFromAST.js');\n\nvar _values = require('./values.js');\n\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\nfunction collectFields(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n) {\n  const fields = new Map();\n  collectFieldsImpl(\n    schema,\n    fragments,\n    variableValues,\n    runtimeType,\n    selectionSet,\n    fields,\n    new Set(),\n  );\n  return fields;\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nfunction collectSubfields(\n  schema,\n  fragments,\n  variableValues,\n  returnType,\n  fieldNodes,\n) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(\n        schema,\n        fragments,\n        variableValues,\n        returnType,\n        node.selectionSet,\n        subFieldNodes,\n        visitedFragmentNames,\n      );\n    }\n  }\n\n  return subFieldNodes;\n}\n\nfunction collectFieldsImpl(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n  fields,\n  visitedFragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case _kinds.Kind.FIELD: {\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const name = getFieldEntryKey(selection);\n        const fieldList = fields.get(name);\n\n        if (fieldList !== undefined) {\n          fieldList.push(selection);\n        } else {\n          fields.set(name, [selection]);\n        }\n\n        break;\n      }\n\n      case _kinds.Kind.INLINE_FRAGMENT: {\n        if (\n          !shouldIncludeNode(variableValues, selection) ||\n          !doesFragmentConditionMatch(schema, selection, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          selection.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n\n      case _kinds.Kind.FRAGMENT_SPREAD: {\n        const fragName = selection.name.value;\n\n        if (\n          visitedFragmentNames.has(fragName) ||\n          !shouldIncludeNode(variableValues, selection)\n        ) {\n          continue;\n        }\n\n        visitedFragmentNames.add(fragName);\n        const fragment = fragments[fragName];\n\n        if (\n          !fragment ||\n          !doesFragmentConditionMatch(schema, fragment, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          fragment.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n    }\n  }\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = (0, _values.getDirectiveValues)(\n    _directives.GraphQLSkipDirective,\n    node,\n    variableValues,\n  );\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  const include = (0, _values.getDirectiveValues)(\n    _directives.GraphQLIncludeDirective,\n    node,\n    variableValues,\n  );\n\n  if (\n    (include === null || include === void 0 ? void 0 : include.if) === false\n  ) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  const conditionalType = (0, _typeFromAST.typeFromAST)(\n    schema,\n    typeConditionNode,\n  );\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.SingleFieldSubscriptionsRule = SingleFieldSubscriptionsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _collectFields = require('../../execution/collectFields.js');\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nfunction SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n\n          for (const definition of document.definitions) {\n            if (definition.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n\n          const fields = (0, _collectFields.collectFields)(\n            schema,\n            fragments,\n            variableValues,\n            subscriptionType,\n            node.selectionSet,\n          );\n\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operationName != null\n                  ? `Subscription \"${operationName}\" must select only one top level field.`\n                  : 'Anonymous Subscription must select only one top level field.',\n                {\n                  nodes: extraFieldSelections,\n                },\n              ),\n            );\n          }\n\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n\n            if (fieldName.startsWith('__')) {\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  operationName != null\n                    ? `Subscription \"${operationName}\" must not select an introspection top level field.`\n                    : 'Anonymous Subscription must not select an introspection top level field.',\n                  {\n                    nodes: fieldNodes,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.groupBy = groupBy;\n\n/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nfunction groupBy(list, keyFn) {\n  const result = new Map();\n\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueArgumentDefinitionNamesRule = UniqueArgumentDefinitionNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique argument definition names\n *\n * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.\n * A GraphQL Directive is only valid if all its arguments are uniquely named.\n */\nfunction UniqueArgumentDefinitionNamesRule(context) {\n  return {\n    DirectiveDefinition(directiveNode) {\n      var _directiveNode$argume;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argumentNodes =\n        (_directiveNode$argume = directiveNode.arguments) !== null &&\n        _directiveNode$argume !== void 0\n          ? _directiveNode$argume\n          : [];\n      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);\n    },\n\n    InterfaceTypeDefinition: checkArgUniquenessPerField,\n    InterfaceTypeExtension: checkArgUniquenessPerField,\n    ObjectTypeDefinition: checkArgUniquenessPerField,\n    ObjectTypeExtension: checkArgUniquenessPerField,\n  };\n\n  function checkArgUniquenessPerField(typeNode) {\n    var _typeNode$fields;\n\n    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_typeNode$fields = typeNode.fields) !== null &&\n      _typeNode$fields !== void 0\n        ? _typeNode$fields\n        : [];\n\n    for (const fieldDef of fieldNodes) {\n      var _fieldDef$arguments;\n\n      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n      const argumentNodes =\n        (_fieldDef$arguments = fieldDef.arguments) !== null &&\n        _fieldDef$arguments !== void 0\n          ? _fieldDef$arguments\n          : [];\n      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);\n    }\n\n    return false;\n  }\n\n  function checkArgUniqueness(parentName, argumentNodes) {\n    const seenArgs = (0, _groupBy.groupBy)(\n      argumentNodes,\n      (arg) => arg.name.value,\n    );\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Argument \"${parentName}(${argName}:)\" can only be defined once.`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueArgumentNamesRule = UniqueArgumentNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nfunction UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = (0, _groupBy.groupBy)(\n      argumentNodes,\n      (arg) => arg.name.value,\n    );\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueDirectiveNamesRule = UniqueDirectiveNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nfunction UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (\n        schema !== null &&\n        schema !== void 0 &&\n        schema.getDirective(directiveName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one directive named \"@${directiveName}\".`,\n            {\n              nodes: [knownDirectiveNames[directiveName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueDirectivesPerLocationRule = UniqueDirectivesPerLocationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nfunction UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n        node.kind === _kinds.Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (\n        (0, _predicates.isTypeDefinitionNode)(node) ||\n        (0, _predicates.isTypeExtensionNode)(node)\n      ) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueEnumValueNamesRule = UniqueEnumValueNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nfunction UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (\n        (0, _definition.isEnumType)(existingType) &&\n        existingType.getValue(valueName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: valueDef.name,\n            },\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            {\n              nodes: [valueNames[valueName], valueDef.name],\n            },\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueFieldDefinitionNamesRule = UniqueFieldDefinitionNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nfunction UniqueFieldDefinitionNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness,\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    const typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_node$fields = node.fields) !== null && _node$fields !== void 0\n        ? _node$fields\n        : [];\n    const fieldNames = knownFieldNames[typeName];\n\n    for (const fieldDef of fieldNodes) {\n      const fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${typeName}.${fieldName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: fieldDef.name,\n            },\n          ),\n        );\n      } else if (fieldNames[fieldName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${typeName}.${fieldName}\" can only be defined once.`,\n            {\n              nodes: [fieldNames[fieldName], fieldDef.name],\n            },\n          ),\n        );\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (\n    (0, _definition.isObjectType)(type) ||\n    (0, _definition.isInterfaceType)(type) ||\n    (0, _definition.isInputObjectType)(type)\n  ) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueFragmentNamesRule = UniqueFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nfunction UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueInputFieldNamesRule = UniqueInputFieldNamesRule;\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nfunction UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || (0, _invariant.invariant)(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueOperationNamesRule = UniqueOperationNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nfunction UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueOperationTypesRule = UniqueOperationTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nfunction UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema\n    ? {\n        query: schema.getQueryType(),\n        mutation: schema.getMutationType(),\n        subscription: schema.getSubscriptionType(),\n      }\n    : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes,\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes =\n      (_node$operationTypes = node.operationTypes) !== null &&\n      _node$operationTypes !== void 0\n        ? _node$operationTypes\n        : [];\n\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Type for ${operation} already defined in the schema. It cannot be redefined.`,\n            {\n              nodes: operationType,\n            },\n          ),\n        );\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one ${operation} type in schema.`,\n            {\n              nodes: [alreadyDefinedOperationType, operationType],\n            },\n          ),\n        );\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueTypeNamesRule = UniqueTypeNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nfunction UniqueTypeNamesRule(context) {\n  const knownTypeNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName,\n  };\n\n  function checkTypeName(node) {\n    const typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Type \"${typeName}\" already exists in the schema. It cannot also be defined in this type definition.`,\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `There can be only one type named \"${typeName}\".`,\n          {\n            nodes: [knownTypeNames[typeName], node.name],\n          },\n        ),\n      );\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueVariableNamesRule = UniqueVariableNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = (0, _groupBy.groupBy)(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ValuesOfCorrectTypeRule = ValuesOfCorrectTypeRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nfunction ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = (0, _definition.getNullableType)(\n        context.getParentInputType(),\n      );\n\n      if (!(0, _definition.isListType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n\n    ObjectValue(node) {\n      const type = (0, _definition.getNamedType)(context.getInputType());\n\n      if (!(0, _definition.isInputObjectType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = (0, _keyMap.keyMap)(\n        node.fields,\n        (field) => field.name.value,\n      );\n\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && (0, _definition.isRequiredInputField)(fieldDef)) {\n          const typeStr = (0, _inspect.inspect)(fieldDef.type);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const parentType = (0, _definition.getNamedType)(\n        context.getParentInputType(),\n      );\n      const fieldType = context.getInputType();\n\n      if (!fieldType && (0, _definition.isInputObjectType)(parentType)) {\n        const suggestions = (0, _suggestionList.suggestionList)(\n          node.name.value,\n          Object.keys(parentType.getFields()),\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    NullValue(node) {\n      const type = context.getInputType();\n\n      if ((0, _definition.isNonNullType)(type)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Expected value of type \"${(0, _inspect.inspect)(\n              type,\n            )}\", found ${(0, _printer.print)(node)}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    EnumValue: (node) => isValidValueNode(context, node),\n    IntValue: (node) => isValidValueNode(context, node),\n    FloatValue: (node) => isValidValueNode(context, node),\n    StringValue: (node) => isValidValueNode(context, node),\n    BooleanValue: (node) => isValidValueNode(context, node),\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  const type = (0, _definition.getNamedType)(locationType);\n\n  if (!(0, _definition.isLeafType)(type)) {\n    const typeStr = (0, _inspect.inspect)(locationType);\n    context.reportError(\n      new _GraphQLError.GraphQLError(\n        `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n          node,\n        )}.`,\n        {\n          nodes: node,\n        },\n      ),\n    );\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(\n      node,\n      undefined,\n      /* variables */\n    );\n\n    if (parseResult === undefined) {\n      const typeStr = (0, _inspect.inspect)(locationType);\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n            node,\n          )}.`,\n          {\n            nodes: node,\n          },\n        ),\n      );\n    }\n  } catch (error) {\n    const typeStr = (0, _inspect.inspect)(locationType);\n\n    if (error instanceof _GraphQLError.GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n            node,\n          )}; ` + error.message,\n          {\n            nodes: node,\n            originalError: error,\n          },\n        ),\n      );\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.VariablesAreInputTypesRule = VariablesAreInputTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nfunction VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = (0, _typeFromAST.typeFromAST)(\n        context.getSchema(),\n        node.type,\n      );\n\n      if (type !== undefined && !(0, _definition.isInputType)(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = (0, _printer.print)(node.type);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            {\n              nodes: node.type,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.VariablesInAllowedPositionRule = VariablesInAllowedPositionRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeComparators = require('../../utilities/typeComparators.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nfunction VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = (0, _inspect.inspect)(varType);\n              const typeStr = (0, _inspect.inspect)(type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  {\n                    nodes: [varDef, node],\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (\n    (0, _definition.isNonNullType)(locationType) &&\n    !(0, _definition.isNonNullType)(varType)\n  ) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== _kinds.Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return (0, _typeComparators.isTypeSubTypeOf)(\n      schema,\n      varType,\n      nullableLocationType,\n    );\n  }\n\n  return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, locationType);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.specifiedSDLRules = exports.specifiedRules = void 0;\n\nvar _ExecutableDefinitionsRule = require('./rules/ExecutableDefinitionsRule.js');\n\nvar _FieldsOnCorrectTypeRule = require('./rules/FieldsOnCorrectTypeRule.js');\n\nvar _FragmentsOnCompositeTypesRule = require('./rules/FragmentsOnCompositeTypesRule.js');\n\nvar _KnownArgumentNamesRule = require('./rules/KnownArgumentNamesRule.js');\n\nvar _KnownDirectivesRule = require('./rules/KnownDirectivesRule.js');\n\nvar _KnownFragmentNamesRule = require('./rules/KnownFragmentNamesRule.js');\n\nvar _KnownTypeNamesRule = require('./rules/KnownTypeNamesRule.js');\n\nvar _LoneAnonymousOperationRule = require('./rules/LoneAnonymousOperationRule.js');\n\nvar _LoneSchemaDefinitionRule = require('./rules/LoneSchemaDefinitionRule.js');\n\nvar _NoFragmentCyclesRule = require('./rules/NoFragmentCyclesRule.js');\n\nvar _NoUndefinedVariablesRule = require('./rules/NoUndefinedVariablesRule.js');\n\nvar _NoUnusedFragmentsRule = require('./rules/NoUnusedFragmentsRule.js');\n\nvar _NoUnusedVariablesRule = require('./rules/NoUnusedVariablesRule.js');\n\nvar _OverlappingFieldsCanBeMergedRule = require('./rules/OverlappingFieldsCanBeMergedRule.js');\n\nvar _PossibleFragmentSpreadsRule = require('./rules/PossibleFragmentSpreadsRule.js');\n\nvar _PossibleTypeExtensionsRule = require('./rules/PossibleTypeExtensionsRule.js');\n\nvar _ProvidedRequiredArgumentsRule = require('./rules/ProvidedRequiredArgumentsRule.js');\n\nvar _ScalarLeafsRule = require('./rules/ScalarLeafsRule.js');\n\nvar _SingleFieldSubscriptionsRule = require('./rules/SingleFieldSubscriptionsRule.js');\n\nvar _UniqueArgumentDefinitionNamesRule = require('./rules/UniqueArgumentDefinitionNamesRule.js');\n\nvar _UniqueArgumentNamesRule = require('./rules/UniqueArgumentNamesRule.js');\n\nvar _UniqueDirectiveNamesRule = require('./rules/UniqueDirectiveNamesRule.js');\n\nvar _UniqueDirectivesPerLocationRule = require('./rules/UniqueDirectivesPerLocationRule.js');\n\nvar _UniqueEnumValueNamesRule = require('./rules/UniqueEnumValueNamesRule.js');\n\nvar _UniqueFieldDefinitionNamesRule = require('./rules/UniqueFieldDefinitionNamesRule.js');\n\nvar _UniqueFragmentNamesRule = require('./rules/UniqueFragmentNamesRule.js');\n\nvar _UniqueInputFieldNamesRule = require('./rules/UniqueInputFieldNamesRule.js');\n\nvar _UniqueOperationNamesRule = require('./rules/UniqueOperationNamesRule.js');\n\nvar _UniqueOperationTypesRule = require('./rules/UniqueOperationTypesRule.js');\n\nvar _UniqueTypeNamesRule = require('./rules/UniqueTypeNamesRule.js');\n\nvar _UniqueVariableNamesRule = require('./rules/UniqueVariableNamesRule.js');\n\nvar _ValuesOfCorrectTypeRule = require('./rules/ValuesOfCorrectTypeRule.js');\n\nvar _VariablesAreInputTypesRule = require('./rules/VariablesAreInputTypesRule.js');\n\nvar _VariablesInAllowedPositionRule = require('./rules/VariablesInAllowedPositionRule.js');\n\n// Spec Section: \"Executable Definitions\"\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n// Spec Section: \"Fragments on Composite Types\"\n// Spec Section: \"Argument Names\"\n// Spec Section: \"Directives Are Defined\"\n// Spec Section: \"Fragment spread target defined\"\n// Spec Section: \"Fragment Spread Type Existence\"\n// Spec Section: \"Lone Anonymous Operation\"\n// SDL-specific validation rules\n// Spec Section: \"Fragments must not form cycles\"\n// Spec Section: \"All Variable Used Defined\"\n// Spec Section: \"Fragments must be used\"\n// Spec Section: \"All Variables Used\"\n// Spec Section: \"Field Selection Merging\"\n// Spec Section: \"Fragment spread is possible\"\n// Spec Section: \"Argument Optionality\"\n// Spec Section: \"Leaf Field Selections\"\n// Spec Section: \"Subscriptions with Single Root Field\"\n// Spec Section: \"Argument Uniqueness\"\n// Spec Section: \"Directives Are Unique Per Location\"\n// Spec Section: \"Fragment Name Uniqueness\"\n// Spec Section: \"Input Object Field Uniqueness\"\n// Spec Section: \"Operation Name Uniqueness\"\n// Spec Section: \"Variable Uniqueness\"\n// Spec Section: \"Value Type Correctness\"\n// Spec Section: \"Variables are Input Types\"\n// Spec Section: \"All Variable Usages Are Allowed\"\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nconst specifiedRules = Object.freeze([\n  _ExecutableDefinitionsRule.ExecutableDefinitionsRule,\n  _UniqueOperationNamesRule.UniqueOperationNamesRule,\n  _LoneAnonymousOperationRule.LoneAnonymousOperationRule,\n  _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule,\n  _KnownTypeNamesRule.KnownTypeNamesRule,\n  _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule,\n  _VariablesAreInputTypesRule.VariablesAreInputTypesRule,\n  _ScalarLeafsRule.ScalarLeafsRule,\n  _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule,\n  _UniqueFragmentNamesRule.UniqueFragmentNamesRule,\n  _KnownFragmentNamesRule.KnownFragmentNamesRule,\n  _NoUnusedFragmentsRule.NoUnusedFragmentsRule,\n  _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule,\n  _NoFragmentCyclesRule.NoFragmentCyclesRule,\n  _UniqueVariableNamesRule.UniqueVariableNamesRule,\n  _NoUndefinedVariablesRule.NoUndefinedVariablesRule,\n  _NoUnusedVariablesRule.NoUnusedVariablesRule,\n  _KnownDirectivesRule.KnownDirectivesRule,\n  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,\n  _KnownArgumentNamesRule.KnownArgumentNamesRule,\n  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,\n  _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule,\n  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule,\n  _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule,\n  _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule,\n  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,\n]);\n/**\n * @internal\n */\n\nexports.specifiedRules = specifiedRules;\nconst specifiedSDLRules = Object.freeze([\n  _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule,\n  _UniqueOperationTypesRule.UniqueOperationTypesRule,\n  _UniqueTypeNamesRule.UniqueTypeNamesRule,\n  _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule,\n  _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule,\n  _UniqueArgumentDefinitionNamesRule.UniqueArgumentDefinitionNamesRule,\n  _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule,\n  _KnownTypeNamesRule.KnownTypeNamesRule,\n  _KnownDirectivesRule.KnownDirectivesRule,\n  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,\n  _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule,\n  _KnownArgumentNamesRule.KnownArgumentNamesOnDirectivesRule,\n  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,\n  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,\n  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsOnDirectivesRule,\n]);\nexports.specifiedSDLRules = specifiedSDLRules;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ValidationContext =\n  exports.SDLValidationContext =\n  exports.ASTValidationContext =\n    void 0;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _TypeInfo = require('../utilities/TypeInfo.js');\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nclass ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n\n  reportError(error) {\n    this._onError(error);\n  }\n\n  getDocument() {\n    return this._ast;\n  }\n\n  getFragment(name) {\n    let fragments;\n\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n\n      this._fragments = fragments;\n    }\n\n    return fragments[name];\n  }\n\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n\n      while ((set = setsToVisit.pop())) {\n        for (const selection of set.selections) {\n          if (selection.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  }\n\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n\n      while ((node = nodesToVisit.pop())) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  }\n}\n\nexports.ASTValidationContext = ASTValidationContext;\n\nclass SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n}\n\nexports.SDLValidationContext = SDLValidationContext;\n\nclass ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(\n        node,\n        (0, _TypeInfo.visitWithTypeInfo)(typeInfo, {\n          VariableDefinition: () => false,\n\n          Variable(variable) {\n            newUsages.push({\n              node: variable,\n              type: typeInfo.getInputType(),\n              defaultValue: typeInfo.getDefaultValue(),\n            });\n          },\n        }),\n      );\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  }\n\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  }\n\n  getType() {\n    return this._typeInfo.getType();\n  }\n\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n\nexports.ValidationContext = ValidationContext;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidSDL = assertValidSDL;\nexports.assertValidSDLExtension = assertValidSDLExtension;\nexports.validate = validate;\nexports.validateSDL = validateSDL;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _validate = require('../type/validate.js');\n\nvar _TypeInfo = require('../utilities/TypeInfo.js');\n\nvar _specifiedRules = require('./specifiedRules.js');\n\nvar _ValidationContext = require('./ValidationContext.js');\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nfunction validate(\n  schema,\n  documentAST,\n  rules = _specifiedRules.specifiedRules,\n  options,\n  /** @deprecated will be removed in 17.0.0 */\n  typeInfo = new _TypeInfo.TypeInfo(schema),\n) {\n  var _options$maxErrors;\n\n  const maxErrors =\n    (_options$maxErrors =\n      options === null || options === void 0 ? void 0 : options.maxErrors) !==\n      null && _options$maxErrors !== void 0\n      ? _options$maxErrors\n      : 100;\n  documentAST || (0, _devAssert.devAssert)(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  (0, _validate.assertValidSchema)(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new _ValidationContext.ValidationContext(\n    schema,\n    documentAST,\n    typeInfo,\n    (error) => {\n      if (errors.length >= maxErrors) {\n        errors.push(\n          new _GraphQLError.GraphQLError(\n            'Too many validation errors, error limit reached. Validation aborted.',\n          ),\n        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n        throw abortObj;\n      }\n\n      errors.push(error);\n    },\n  ); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = (0, _visitor.visitInParallel)(\n    rules.map((rule) => rule(context)),\n  ); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    (0, _visitor.visit)(\n      documentAST,\n      (0, _TypeInfo.visitWithTypeInfo)(typeInfo, visitor),\n    );\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nfunction validateSDL(\n  documentAST,\n  schemaToExtend,\n  rules = _specifiedRules.specifiedSDLRules,\n) {\n  const errors = [];\n  const context = new _ValidationContext.SDLValidationContext(\n    documentAST,\n    schemaToExtend,\n    (error) => {\n      errors.push(error);\n    },\n  );\n  const visitors = rules.map((rule) => rule(context));\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitInParallel)(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nfunction assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nfunction assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.memoize3 = memoize3;\n\n/**\n * Memoizes the provided three-argument function.\n */\nfunction memoize3(fn) {\n  let cache0;\n  return function memoized(a1, a2, a3) {\n    if (cache0 === undefined) {\n      cache0 = new WeakMap();\n    }\n\n    let cache1 = cache0.get(a1);\n\n    if (cache1 === undefined) {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    let cache2 = cache1.get(a2);\n\n    if (cache2 === undefined) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    let fnResult = cache2.get(a3);\n\n    if (fnResult === undefined) {\n      fnResult = fn(a1, a2, a3);\n      cache2.set(a3, fnResult);\n    }\n\n    return fnResult;\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.promiseForObject = promiseForObject;\n\n/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nfunction promiseForObject(object) {\n  return Promise.all(Object.values(object)).then((resolvedValues) => {\n    const resolvedObject = Object.create(null);\n\n    for (const [i, key] of Object.keys(object).entries()) {\n      resolvedObject[key] = resolvedValues[i];\n    }\n\n    return resolvedObject;\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.promiseReduce = promiseReduce;\n\nvar _isPromise = require('./isPromise.js');\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n\n  for (const value of values) {\n    accumulator = (0, _isPromise.isPromise)(accumulator)\n      ? accumulator.then((resolved) => callbackFn(resolved, value))\n      : callbackFn(accumulator, value);\n  }\n\n  return accumulator;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.toError = toError;\n\nvar _inspect = require('./inspect.js');\n\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\nfunction toError(thrownValue) {\n  return thrownValue instanceof Error\n    ? thrownValue\n    : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + (0, _inspect.inspect)(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.locatedError = locatedError;\n\nvar _toError = require('../jsutils/toError.js');\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = (0, _toError.toError)(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError.message, {\n    nodes:\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\n        ? _nodes\n        : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError,\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidExecutionArguments = assertValidExecutionArguments;\nexports.buildExecutionContext = buildExecutionContext;\nexports.buildResolveInfo = buildResolveInfo;\nexports.defaultTypeResolver = exports.defaultFieldResolver = void 0;\nexports.execute = execute;\nexports.executeSync = executeSync;\nexports.getFieldDef = getFieldDef;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _isPromise = require('../jsutils/isPromise.js');\n\nvar _memoize = require('../jsutils/memoize3.js');\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _promiseForObject = require('../jsutils/promiseForObject.js');\n\nvar _promiseReduce = require('../jsutils/promiseReduce.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _locatedError = require('../error/locatedError.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _validate = require('../type/validate.js');\n\nvar _collectFields = require('./collectFields.js');\n\nvar _values = require('./values.js');\n\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\nconst collectSubfields = (0, _memoize.memoize3)(\n  (exeContext, returnType, fieldNodes) =>\n    (0, _collectFields.collectSubfields)(\n      exeContext.schema,\n      exeContext.fragments,\n      exeContext.variableValues,\n      returnType,\n      fieldNodes,\n    ),\n);\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g `a`\n * 2) fragment \"spreads\" e.g. `...c`\n * 3) inline fragment \"spreads\" e.g. `...on Type { a }`\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nfunction execute(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    (0, _devAssert.devAssert)(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const { schema, document, variableValues, rootValue } = args; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  //\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    const { operation } = exeContext;\n    const result = executeOperation(exeContext, operation, rootValue);\n\n    if ((0, _isPromise.isPromise)(result)) {\n      return result.then(\n        (data) => buildResponse(data, exeContext.errors),\n        (error) => {\n          exeContext.errors.push(error);\n          return buildResponse(null, exeContext.errors);\n        },\n      );\n    }\n\n    return buildResponse(result, exeContext.errors);\n  } catch (error) {\n    exeContext.errors.push(error);\n    return buildResponse(null, exeContext.errors);\n  }\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction executeSync(args) {\n  const result = execute(args); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\nfunction buildResponse(data, errors) {\n  return errors.length === 0\n    ? {\n        data,\n      }\n    : {\n        errors,\n        data,\n      };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n  document || (0, _devAssert.devAssert)(false, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  (0, _validate.assertValidSchema)(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null ||\n    (0, _isObjectLike.isObjectLike)(rawVariableValues) ||\n    (0, _devAssert.devAssert)(\n      false,\n      'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.',\n    );\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\nfunction buildExecutionContext(args) {\n  var _definition$name, _operation$variableDe;\n\n  const {\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues: rawVariableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n    subscribeFieldResolver,\n  } = args;\n  let operation;\n  const fragments = Object.create(null);\n\n  for (const definition of document.definitions) {\n    switch (definition.kind) {\n      case _kinds.Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [\n              new _GraphQLError.GraphQLError(\n                'Must provide operation name if query contains multiple operations.',\n              ),\n            ];\n          }\n\n          operation = definition;\n        } else if (\n          ((_definition$name = definition.name) === null ||\n          _definition$name === void 0\n            ? void 0\n            : _definition$name.value) === operationName\n        ) {\n          operation = definition;\n        }\n\n        break;\n\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  }\n\n  if (!operation) {\n    if (operationName != null) {\n      return [\n        new _GraphQLError.GraphQLError(\n          `Unknown operation named \"${operationName}\".`,\n        ),\n      ];\n    }\n\n    return [new _GraphQLError.GraphQLError('Must provide an operation.')];\n  } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const variableDefinitions =\n    (_operation$variableDe = operation.variableDefinitions) !== null &&\n    _operation$variableDe !== void 0\n      ? _operation$variableDe\n      : [];\n  const coercedVariableValues = (0, _values.getVariableValues)(\n    schema,\n    variableDefinitions,\n    rawVariableValues !== null && rawVariableValues !== void 0\n      ? rawVariableValues\n      : {},\n    {\n      maxErrors: 50,\n    },\n  );\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema,\n    fragments,\n    rootValue,\n    contextValue,\n    operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver:\n      fieldResolver !== null && fieldResolver !== void 0\n        ? fieldResolver\n        : defaultFieldResolver,\n    typeResolver:\n      typeResolver !== null && typeResolver !== void 0\n        ? typeResolver\n        : defaultTypeResolver,\n    subscribeFieldResolver:\n      subscribeFieldResolver !== null && subscribeFieldResolver !== void 0\n        ? subscribeFieldResolver\n        : defaultFieldResolver,\n    errors: [],\n  };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  const rootType = exeContext.schema.getRootType(operation.operation);\n\n  if (rootType == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Schema is not configured to execute ${operation.operation} operation.`,\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = (0, _collectFields.collectFields)(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const path = undefined;\n\n  switch (operation.operation) {\n    case _ast.OperationTypeNode.QUERY:\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n\n    case _ast.OperationTypeNode.MUTATION:\n      return executeFieldsSerially(\n        exeContext,\n        rootType,\n        rootValue,\n        path,\n        rootFields,\n      );\n\n    case _ast.OperationTypeNode.SUBSCRIPTION:\n      // TODO: deprecate `subscribe` and move all logic here\n      // Temporary solution until we finish merging execute and subscribe together\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n  }\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\n\nfunction executeFieldsSerially(\n  exeContext,\n  parentType,\n  sourceValue,\n  path,\n  fields,\n) {\n  return (0, _promiseReduce.promiseReduce)(\n    fields.entries(),\n    (results, [responseName, fieldNodes]) => {\n      const fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result === undefined) {\n        return results;\n      }\n\n      if ((0, _isPromise.isPromise)(result)) {\n        return result.then((resolvedResult) => {\n          results[responseName] = resolvedResult;\n          return results;\n        });\n      }\n\n      results[responseName] = result;\n      return results;\n    },\n    Object.create(null),\n  );\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  const results = Object.create(null);\n  let containsPromise = false;\n\n  for (const [responseName, fieldNodes] of fields.entries()) {\n    const fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);\n    const result = executeField(\n      exeContext,\n      parentType,\n      sourceValue,\n      fieldNodes,\n      fieldPath,\n    );\n\n    if (result !== undefined) {\n      results[responseName] = result;\n\n      if ((0, _isPromise.isPromise)(result)) {\n        containsPromise = true;\n      }\n    }\n  } // If there are no promises, we can just return the object\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n  return (0, _promiseForObject.promiseForObject)(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\n\nfunction executeField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n\n  const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  const returnType = fieldDef.type;\n  const resolveFn =\n    (_fieldDef$resolve = fieldDef.resolve) !== null &&\n    _fieldDef$resolve !== void 0\n      ? _fieldDef$resolve\n      : exeContext.fieldResolver;\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    parentType,\n    path,\n  ); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    const args = (0, _values.getArgumentValues)(\n      fieldDef,\n      fieldNodes[0],\n      exeContext.variableValues,\n    ); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue;\n    const result = resolveFn(source, args, contextValue, info);\n    let completed;\n\n    if ((0, _isPromise.isPromise)(result)) {\n      completed = result.then((resolved) =>\n        completeValue(exeContext, returnType, fieldNodes, info, path, resolved),\n      );\n    } else {\n      completed = completeValue(\n        exeContext,\n        returnType,\n        fieldNodes,\n        info,\n        path,\n        result,\n      );\n    }\n\n    if ((0, _isPromise.isPromise)(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, (rawError) => {\n        const error = (0, _locatedError.locatedError)(\n          rawError,\n          fieldNodes,\n          (0, _Path.pathToArray)(path),\n        );\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (rawError) {\n    const error = (0, _locatedError.locatedError)(\n      rawError,\n      fieldNodes,\n      (0, _Path.pathToArray)(path),\n    );\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes,\n    returnType: fieldDef.type,\n    parentType,\n    path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues,\n  };\n}\n\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if ((0, _definition.isNonNullType)(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n  if ((0, _definition.isNonNullType)(returnType)) {\n    const completed = completeValue(\n      exeContext,\n      returnType.ofType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n\n    if (completed === null) {\n      throw new Error(\n        `Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`,\n      );\n    }\n\n    return completed;\n  } // If result value is null or undefined then return null.\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n  if ((0, _definition.isListType)(returnType)) {\n    return completeListValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n  if ((0, _definition.isLeafType)(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n  if ((0, _definition.isAbstractType)(returnType)) {\n    return completeAbstractValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is Object, execute and complete all sub-selections.\n\n  if ((0, _definition.isObjectType)(returnType)) {\n    return completeObjectValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  }\n  /* c8 ignore next 6 */\n  // Not reachable, all possible output types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Cannot complete value of unexpected output type: ' +\n        (0, _inspect.inspect)(returnType),\n    );\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\nfunction completeListValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  if (!(0, _isIterableObject.isIterableObject)(result)) {\n    throw new _GraphQLError.GraphQLError(\n      `Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`,\n    );\n  } // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n\n  const itemType = returnType.ofType;\n  let containsPromise = false;\n  const completedResults = Array.from(result, (item, index) => {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    const itemPath = (0, _Path.addPath)(path, index, undefined);\n\n    try {\n      let completedItem;\n\n      if ((0, _isPromise.isPromise)(item)) {\n        completedItem = item.then((resolved) =>\n          completeValue(\n            exeContext,\n            itemType,\n            fieldNodes,\n            info,\n            itemPath,\n            resolved,\n          ),\n        );\n      } else {\n        completedItem = completeValue(\n          exeContext,\n          itemType,\n          fieldNodes,\n          info,\n          itemPath,\n          item,\n        );\n      }\n\n      if ((0, _isPromise.isPromise)(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, (rawError) => {\n          const error = (0, _locatedError.locatedError)(\n            rawError,\n            fieldNodes,\n            (0, _Path.pathToArray)(itemPath),\n          );\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n\n      return completedItem;\n    } catch (rawError) {\n      const error = (0, _locatedError.locatedError)(\n        rawError,\n        fieldNodes,\n        (0, _Path.pathToArray)(itemPath),\n      );\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\nfunction completeLeafValue(returnType, result) {\n  const serializedResult = returnType.serialize(result);\n\n  if (serializedResult == null) {\n    throw new Error(\n      `Expected \\`${(0, _inspect.inspect)(returnType)}.serialize(${(0,\n      _inspect.inspect)(result)})\\` to ` +\n        `return non-nullable value, returned: ${(0, _inspect.inspect)(\n          serializedResult,\n        )}`,\n    );\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\nfunction completeAbstractValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  var _returnType$resolveTy;\n\n  const resolveTypeFn =\n    (_returnType$resolveTy = returnType.resolveType) !== null &&\n    _returnType$resolveTy !== void 0\n      ? _returnType$resolveTy\n      : exeContext.typeResolver;\n  const contextValue = exeContext.contextValue;\n  const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if ((0, _isPromise.isPromise)(runtimeType)) {\n    return runtimeType.then((resolvedRuntimeType) =>\n      completeObjectValue(\n        exeContext,\n        ensureValidRuntimeType(\n          resolvedRuntimeType,\n          exeContext,\n          returnType,\n          fieldNodes,\n          info,\n          result,\n        ),\n        fieldNodes,\n        info,\n        path,\n        result,\n      ),\n    );\n  }\n\n  return completeObjectValue(\n    exeContext,\n    ensureValidRuntimeType(\n      runtimeType,\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      result,\n    ),\n    fieldNodes,\n    info,\n    path,\n    result,\n  );\n}\n\nfunction ensureValidRuntimeType(\n  runtimeTypeName,\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  result,\n) {\n  if (runtimeTypeName == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`,\n      fieldNodes,\n    );\n  } // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n  // TODO: remove in 17.0.0 release\n\n  if ((0, _definition.isObjectType)(runtimeTypeName)) {\n    throw new _GraphQLError.GraphQLError(\n      'Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.',\n    );\n  }\n\n  if (typeof runtimeTypeName !== 'string') {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n        `value ${(0, _inspect.inspect)(result)}, received \"${(0,\n        _inspect.inspect)(runtimeTypeName)}\".`,\n    );\n  }\n\n  const runtimeType = exeContext.schema.getType(runtimeTypeName);\n\n  if (runtimeType == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!(0, _definition.isObjectType)(runtimeType)) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new _GraphQLError.GraphQLError(\n      `Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\nfunction completeObjectValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  // Collect sub-fields to execute to complete this value.\n  const subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes); // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n\n  if (returnType.isTypeOf) {\n    const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if ((0, _isPromise.isPromise)(isTypeOf)) {\n      return isTypeOf.then((resolvedIsTypeOf) => {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return executeFields(\n          exeContext,\n          returnType,\n          result,\n          path,\n          subFieldNodes,\n        );\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new _GraphQLError.GraphQLError(\n    `Expected value of type \"${returnType.name}\" but got: ${(0,\n    _inspect.inspect)(result)}.`,\n    {\n      nodes: fieldNodes,\n    },\n  );\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\nconst defaultTypeResolver = function (value, contextValue, info, abstractType) {\n  // First, look for `__typename`.\n  if (\n    (0, _isObjectLike.isObjectLike)(value) &&\n    typeof value.__typename === 'string'\n  ) {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n  const possibleTypes = info.schema.getPossibleTypes(abstractType);\n  const promisedIsTypeOfResults = [];\n\n  for (let i = 0; i < possibleTypes.length; i++) {\n    const type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if ((0, _isPromise.isPromise)(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then((isTypeOfResults) => {\n      for (let i = 0; i < isTypeOfResults.length; i++) {\n        if (isTypeOfResults[i]) {\n          return possibleTypes[i].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nexports.defaultTypeResolver = defaultTypeResolver;\n\nconst defaultFieldResolver = function (source, args, contextValue, info) {\n  // ensure source is a value for which property access is acceptable.\n  if ((0, _isObjectLike.isObjectLike)(source) || typeof source === 'function') {\n    const property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\nexports.defaultFieldResolver = defaultFieldResolver;\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const fieldName = fieldNode.name.value;\n\n  if (\n    fieldName === _introspection.SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.SchemaMetaFieldDef;\n  } else if (\n    fieldName === _introspection.TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.TypeMetaFieldDef;\n  } else if (fieldName === _introspection.TypeNameMetaFieldDef.name) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.graphql = graphql;\nexports.graphqlSync = graphqlSync;\n\nvar _devAssert = require('./jsutils/devAssert.js');\n\nvar _isPromise = require('./jsutils/isPromise.js');\n\nvar _parser = require('./language/parser.js');\n\nvar _validate = require('./type/validate.js');\n\nvar _validate2 = require('./validation/validate.js');\n\nvar _execute = require('./execution/execute.js');\n\nfunction graphql(args) {\n  // Always return a Promise for a consistent API.\n  return new Promise((resolve) => resolve(graphqlImpl(args)));\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction graphqlSync(args) {\n  const result = graphqlImpl(args); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    (0, _devAssert.devAssert)(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const {\n    schema,\n    source,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  } = args; // Validate Schema\n\n  const schemaValidationErrors = (0, _validate.validateSchema)(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors,\n    };\n  } // Parse\n\n  let document;\n\n  try {\n    document = (0, _parser.parse)(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError],\n    };\n  } // Validate\n\n  const validationErrors = (0, _validate2.validate)(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors,\n    };\n  } // Execute\n\n  return (0, _execute.execute)({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'DEFAULT_DEPRECATION_REASON', {\n  enumerable: true,\n  get: function () {\n    return _directives.DEFAULT_DEPRECATION_REASON;\n  },\n});\nObject.defineProperty(exports, 'GRAPHQL_MAX_INT', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GRAPHQL_MAX_INT;\n  },\n});\nObject.defineProperty(exports, 'GRAPHQL_MIN_INT', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GRAPHQL_MIN_INT;\n  },\n});\nObject.defineProperty(exports, 'GraphQLBoolean', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLBoolean;\n  },\n});\nObject.defineProperty(exports, 'GraphQLDeprecatedDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLDeprecatedDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLEnumType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLEnumType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLFloat', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLFloat;\n  },\n});\nObject.defineProperty(exports, 'GraphQLID', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLID;\n  },\n});\nObject.defineProperty(exports, 'GraphQLIncludeDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLIncludeDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInt', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLInt;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLList', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLList;\n  },\n});\nObject.defineProperty(exports, 'GraphQLNonNull', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLNonNull;\n  },\n});\nObject.defineProperty(exports, 'GraphQLObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLObjectType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLScalarType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLScalarType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSchema', {\n  enumerable: true,\n  get: function () {\n    return _schema.GraphQLSchema;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSkipDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLSkipDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSpecifiedByDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLSpecifiedByDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLString', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLString;\n  },\n});\nObject.defineProperty(exports, 'GraphQLUnionType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLUnionType;\n  },\n});\nObject.defineProperty(exports, 'SchemaMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _introspection.SchemaMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'TypeKind', {\n  enumerable: true,\n  get: function () {\n    return _introspection.TypeKind;\n  },\n});\nObject.defineProperty(exports, 'TypeMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _introspection.TypeMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'TypeNameMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _introspection.TypeNameMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, '__Directive', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__Directive;\n  },\n});\nObject.defineProperty(exports, '__DirectiveLocation', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__DirectiveLocation;\n  },\n});\nObject.defineProperty(exports, '__EnumValue', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__EnumValue;\n  },\n});\nObject.defineProperty(exports, '__Field', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__Field;\n  },\n});\nObject.defineProperty(exports, '__InputValue', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__InputValue;\n  },\n});\nObject.defineProperty(exports, '__Schema', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__Schema;\n  },\n});\nObject.defineProperty(exports, '__Type', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__Type;\n  },\n});\nObject.defineProperty(exports, '__TypeKind', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__TypeKind;\n  },\n});\nObject.defineProperty(exports, 'assertAbstractType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertAbstractType;\n  },\n});\nObject.defineProperty(exports, 'assertCompositeType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertCompositeType;\n  },\n});\nObject.defineProperty(exports, 'assertDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.assertDirective;\n  },\n});\nObject.defineProperty(exports, 'assertEnumType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertEnumType;\n  },\n});\nObject.defineProperty(exports, 'assertEnumValueName', {\n  enumerable: true,\n  get: function () {\n    return _assertName.assertEnumValueName;\n  },\n});\nObject.defineProperty(exports, 'assertInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'assertInputType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertInputType;\n  },\n});\nObject.defineProperty(exports, 'assertInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'assertLeafType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertLeafType;\n  },\n});\nObject.defineProperty(exports, 'assertListType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertListType;\n  },\n});\nObject.defineProperty(exports, 'assertName', {\n  enumerable: true,\n  get: function () {\n    return _assertName.assertName;\n  },\n});\nObject.defineProperty(exports, 'assertNamedType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertNamedType;\n  },\n});\nObject.defineProperty(exports, 'assertNonNullType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertNonNullType;\n  },\n});\nObject.defineProperty(exports, 'assertNullableType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertNullableType;\n  },\n});\nObject.defineProperty(exports, 'assertObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertObjectType;\n  },\n});\nObject.defineProperty(exports, 'assertOutputType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertOutputType;\n  },\n});\nObject.defineProperty(exports, 'assertScalarType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertScalarType;\n  },\n});\nObject.defineProperty(exports, 'assertSchema', {\n  enumerable: true,\n  get: function () {\n    return _schema.assertSchema;\n  },\n});\nObject.defineProperty(exports, 'assertType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertType;\n  },\n});\nObject.defineProperty(exports, 'assertUnionType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertUnionType;\n  },\n});\nObject.defineProperty(exports, 'assertValidSchema', {\n  enumerable: true,\n  get: function () {\n    return _validate.assertValidSchema;\n  },\n});\nObject.defineProperty(exports, 'assertWrappingType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertWrappingType;\n  },\n});\nObject.defineProperty(exports, 'getNamedType', {\n  enumerable: true,\n  get: function () {\n    return _definition.getNamedType;\n  },\n});\nObject.defineProperty(exports, 'getNullableType', {\n  enumerable: true,\n  get: function () {\n    return _definition.getNullableType;\n  },\n});\nObject.defineProperty(exports, 'introspectionTypes', {\n  enumerable: true,\n  get: function () {\n    return _introspection.introspectionTypes;\n  },\n});\nObject.defineProperty(exports, 'isAbstractType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isAbstractType;\n  },\n});\nObject.defineProperty(exports, 'isCompositeType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isCompositeType;\n  },\n});\nObject.defineProperty(exports, 'isDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.isDirective;\n  },\n});\nObject.defineProperty(exports, 'isEnumType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isEnumType;\n  },\n});\nObject.defineProperty(exports, 'isInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'isInputType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isInputType;\n  },\n});\nObject.defineProperty(exports, 'isInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'isIntrospectionType', {\n  enumerable: true,\n  get: function () {\n    return _introspection.isIntrospectionType;\n  },\n});\nObject.defineProperty(exports, 'isLeafType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isLeafType;\n  },\n});\nObject.defineProperty(exports, 'isListType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isListType;\n  },\n});\nObject.defineProperty(exports, 'isNamedType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isNamedType;\n  },\n});\nObject.defineProperty(exports, 'isNonNullType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isNonNullType;\n  },\n});\nObject.defineProperty(exports, 'isNullableType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isNullableType;\n  },\n});\nObject.defineProperty(exports, 'isObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isObjectType;\n  },\n});\nObject.defineProperty(exports, 'isOutputType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isOutputType;\n  },\n});\nObject.defineProperty(exports, 'isRequiredArgument', {\n  enumerable: true,\n  get: function () {\n    return _definition.isRequiredArgument;\n  },\n});\nObject.defineProperty(exports, 'isRequiredInputField', {\n  enumerable: true,\n  get: function () {\n    return _definition.isRequiredInputField;\n  },\n});\nObject.defineProperty(exports, 'isScalarType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isScalarType;\n  },\n});\nObject.defineProperty(exports, 'isSchema', {\n  enumerable: true,\n  get: function () {\n    return _schema.isSchema;\n  },\n});\nObject.defineProperty(exports, 'isSpecifiedDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.isSpecifiedDirective;\n  },\n});\nObject.defineProperty(exports, 'isSpecifiedScalarType', {\n  enumerable: true,\n  get: function () {\n    return _scalars.isSpecifiedScalarType;\n  },\n});\nObject.defineProperty(exports, 'isType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isType;\n  },\n});\nObject.defineProperty(exports, 'isUnionType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isUnionType;\n  },\n});\nObject.defineProperty(exports, 'isWrappingType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isWrappingType;\n  },\n});\nObject.defineProperty(exports, 'resolveObjMapThunk', {\n  enumerable: true,\n  get: function () {\n    return _definition.resolveObjMapThunk;\n  },\n});\nObject.defineProperty(exports, 'resolveReadonlyArrayThunk', {\n  enumerable: true,\n  get: function () {\n    return _definition.resolveReadonlyArrayThunk;\n  },\n});\nObject.defineProperty(exports, 'specifiedDirectives', {\n  enumerable: true,\n  get: function () {\n    return _directives.specifiedDirectives;\n  },\n});\nObject.defineProperty(exports, 'specifiedScalarTypes', {\n  enumerable: true,\n  get: function () {\n    return _scalars.specifiedScalarTypes;\n  },\n});\nObject.defineProperty(exports, 'validateSchema', {\n  enumerable: true,\n  get: function () {\n    return _validate.validateSchema;\n  },\n});\n\nvar _schema = require('./schema.js');\n\nvar _definition = require('./definition.js');\n\nvar _directives = require('./directives.js');\n\nvar _scalars = require('./scalars.js');\n\nvar _introspection = require('./introspection.js');\n\nvar _validate = require('./validate.js');\n\nvar _assertName = require('./assertName.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'BREAK', {\n  enumerable: true,\n  get: function () {\n    return _visitor.BREAK;\n  },\n});\nObject.defineProperty(exports, 'DirectiveLocation', {\n  enumerable: true,\n  get: function () {\n    return _directiveLocation.DirectiveLocation;\n  },\n});\nObject.defineProperty(exports, 'Kind', {\n  enumerable: true,\n  get: function () {\n    return _kinds.Kind;\n  },\n});\nObject.defineProperty(exports, 'Lexer', {\n  enumerable: true,\n  get: function () {\n    return _lexer.Lexer;\n  },\n});\nObject.defineProperty(exports, 'Location', {\n  enumerable: true,\n  get: function () {\n    return _ast.Location;\n  },\n});\nObject.defineProperty(exports, 'OperationTypeNode', {\n  enumerable: true,\n  get: function () {\n    return _ast.OperationTypeNode;\n  },\n});\nObject.defineProperty(exports, 'Source', {\n  enumerable: true,\n  get: function () {\n    return _source.Source;\n  },\n});\nObject.defineProperty(exports, 'Token', {\n  enumerable: true,\n  get: function () {\n    return _ast.Token;\n  },\n});\nObject.defineProperty(exports, 'TokenKind', {\n  enumerable: true,\n  get: function () {\n    return _tokenKind.TokenKind;\n  },\n});\nObject.defineProperty(exports, 'getEnterLeaveForKind', {\n  enumerable: true,\n  get: function () {\n    return _visitor.getEnterLeaveForKind;\n  },\n});\nObject.defineProperty(exports, 'getLocation', {\n  enumerable: true,\n  get: function () {\n    return _location.getLocation;\n  },\n});\nObject.defineProperty(exports, 'getVisitFn', {\n  enumerable: true,\n  get: function () {\n    return _visitor.getVisitFn;\n  },\n});\nObject.defineProperty(exports, 'isConstValueNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isConstValueNode;\n  },\n});\nObject.defineProperty(exports, 'isDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isExecutableDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isExecutableDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isSelectionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isSelectionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeExtensionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeExtensionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeSystemDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeSystemDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeSystemExtensionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeSystemExtensionNode;\n  },\n});\nObject.defineProperty(exports, 'isValueNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isValueNode;\n  },\n});\nObject.defineProperty(exports, 'parse', {\n  enumerable: true,\n  get: function () {\n    return _parser.parse;\n  },\n});\nObject.defineProperty(exports, 'parseConstValue', {\n  enumerable: true,\n  get: function () {\n    return _parser.parseConstValue;\n  },\n});\nObject.defineProperty(exports, 'parseType', {\n  enumerable: true,\n  get: function () {\n    return _parser.parseType;\n  },\n});\nObject.defineProperty(exports, 'parseValue', {\n  enumerable: true,\n  get: function () {\n    return _parser.parseValue;\n  },\n});\nObject.defineProperty(exports, 'print', {\n  enumerable: true,\n  get: function () {\n    return _printer.print;\n  },\n});\nObject.defineProperty(exports, 'printLocation', {\n  enumerable: true,\n  get: function () {\n    return _printLocation.printLocation;\n  },\n});\nObject.defineProperty(exports, 'printSourceLocation', {\n  enumerable: true,\n  get: function () {\n    return _printLocation.printSourceLocation;\n  },\n});\nObject.defineProperty(exports, 'visit', {\n  enumerable: true,\n  get: function () {\n    return _visitor.visit;\n  },\n});\nObject.defineProperty(exports, 'visitInParallel', {\n  enumerable: true,\n  get: function () {\n    return _visitor.visitInParallel;\n  },\n});\n\nvar _source = require('./source.js');\n\nvar _location = require('./location.js');\n\nvar _printLocation = require('./printLocation.js');\n\nvar _kinds = require('./kinds.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\nvar _lexer = require('./lexer.js');\n\nvar _parser = require('./parser.js');\n\nvar _printer = require('./printer.js');\n\nvar _visitor = require('./visitor.js');\n\nvar _ast = require('./ast.js');\n\nvar _predicates = require('./predicates.js');\n\nvar _directiveLocation = require('./directiveLocation.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isAsyncIterable = isAsyncIterable;\n\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * implementing a `Symbol.asyncIterator` method.\n */\nfunction isAsyncIterable(maybeAsyncIterable) {\n  return (\n    typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0\n      ? void 0\n      : maybeAsyncIterable[Symbol.asyncIterator]) === 'function'\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.mapAsyncIterator = mapAsyncIterator;\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n\n    try {\n      return {\n        value: await callback(result.value),\n        done: false,\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function'\n        ? mapResult(await iterator.return())\n        : {\n            value: undefined,\n            done: true,\n          };\n    },\n\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n\n      throw error;\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.createSourceEventStream = createSourceEventStream;\nexports.subscribe = subscribe;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _isAsyncIterable = require('../jsutils/isAsyncIterable.js');\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _locatedError = require('../error/locatedError.js');\n\nvar _collectFields = require('./collectFields.js');\n\nvar _execute = require('./execute.js');\n\nvar _mapAsyncIterator = require('./mapAsyncIterator.js');\n\nvar _values = require('./values.js');\n\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of ExecutionResults representing the response stream.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\nasync function subscribe(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    (0, _devAssert.devAssert)(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const resultOrStream = await createSourceEventStream(args);\n\n  if (!(0, _isAsyncIterable.isAsyncIterable)(resultOrStream)) {\n    return resultOrStream;\n  } // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  const mapSourceToResponse = (payload) =>\n    (0, _execute.execute)({ ...args, rootValue: payload }); // Map every source value to a ExecutionResult value as described above.\n\n  return (0, _mapAsyncIterator.mapAsyncIterator)(\n    resultOrStream,\n    mapSourceToResponse,\n  );\n}\n\nfunction toNormalizedArgs(args) {\n  const firstArg = args[0];\n\n  if (firstArg && 'document' in firstArg) {\n    return firstArg;\n  }\n\n  return {\n    schema: firstArg,\n    // FIXME: when underlying TS bug fixed, see https://github.com/microsoft/TypeScript/issues/31613\n    document: args[1],\n    rootValue: args[2],\n    contextValue: args[3],\n    variableValues: args[4],\n    operationName: args[5],\n    subscribeFieldResolver: args[6],\n  };\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\nasync function createSourceEventStream(...rawArgs) {\n  const args = toNormalizedArgs(rawArgs);\n  const { schema, document, variableValues } = args; // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n\n  (0, _execute.assertValidExecutionArguments)(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = (0, _execute.buildExecutionContext)(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  }\n\n  try {\n    const eventStream = await executeSubscription(exeContext); // Assert field returned an event stream, otherwise yield an error.\n\n    if (!(0, _isAsyncIterable.isAsyncIterable)(eventStream)) {\n      throw new Error(\n        'Subscription field must return Async Iterable. ' +\n          `Received: ${(0, _inspect.inspect)(eventStream)}.`,\n      );\n    }\n\n    return eventStream;\n  } catch (error) {\n    // If it GraphQLError, report it as an ExecutionResult, containing only errors and no data.\n    // Otherwise treat the error as a system-class error and re-throw it.\n    if (error instanceof _GraphQLError.GraphQLError) {\n      return {\n        errors: [error],\n      };\n    }\n\n    throw error;\n  }\n}\n\nasync function executeSubscription(exeContext) {\n  const { schema, fragments, operation, variableValues, rootValue } =\n    exeContext;\n  const rootType = schema.getSubscriptionType();\n\n  if (rootType == null) {\n    throw new _GraphQLError.GraphQLError(\n      'Schema is not configured to execute subscription operation.',\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = (0, _collectFields.collectFields)(\n    schema,\n    fragments,\n    variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const [responseName, fieldNodes] = [...rootFields.entries()][0];\n  const fieldDef = (0, _execute.getFieldDef)(schema, rootType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    const fieldName = fieldNodes[0].name.value;\n    throw new _GraphQLError.GraphQLError(\n      `The subscription field \"${fieldName}\" is not defined.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  const path = (0, _Path.addPath)(undefined, responseName, rootType.name);\n  const info = (0, _execute.buildResolveInfo)(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    rootType,\n    path,\n  );\n\n  try {\n    var _fieldDef$subscribe;\n\n    // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n    // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    const args = (0, _values.getArgumentValues)(\n      fieldDef,\n      fieldNodes[0],\n      variableValues,\n    ); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n    const resolveFn =\n      (_fieldDef$subscribe = fieldDef.subscribe) !== null &&\n      _fieldDef$subscribe !== void 0\n        ? _fieldDef$subscribe\n        : exeContext.subscribeFieldResolver;\n    const eventStream = await resolveFn(rootValue, args, contextValue, info);\n\n    if (eventStream instanceof Error) {\n      throw eventStream;\n    }\n\n    return eventStream;\n  } catch (error) {\n    throw (0, _locatedError.locatedError)(\n      error,\n      fieldNodes,\n      (0, _Path.pathToArray)(path),\n    );\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'createSourceEventStream', {\n  enumerable: true,\n  get: function () {\n    return _subscribe.createSourceEventStream;\n  },\n});\nObject.defineProperty(exports, 'defaultFieldResolver', {\n  enumerable: true,\n  get: function () {\n    return _execute.defaultFieldResolver;\n  },\n});\nObject.defineProperty(exports, 'defaultTypeResolver', {\n  enumerable: true,\n  get: function () {\n    return _execute.defaultTypeResolver;\n  },\n});\nObject.defineProperty(exports, 'execute', {\n  enumerable: true,\n  get: function () {\n    return _execute.execute;\n  },\n});\nObject.defineProperty(exports, 'executeSync', {\n  enumerable: true,\n  get: function () {\n    return _execute.executeSync;\n  },\n});\nObject.defineProperty(exports, 'getArgumentValues', {\n  enumerable: true,\n  get: function () {\n    return _values.getArgumentValues;\n  },\n});\nObject.defineProperty(exports, 'getDirectiveValues', {\n  enumerable: true,\n  get: function () {\n    return _values.getDirectiveValues;\n  },\n});\nObject.defineProperty(exports, 'getVariableValues', {\n  enumerable: true,\n  get: function () {\n    return _values.getVariableValues;\n  },\n});\nObject.defineProperty(exports, 'responsePathAsArray', {\n  enumerable: true,\n  get: function () {\n    return _Path.pathToArray;\n  },\n});\nObject.defineProperty(exports, 'subscribe', {\n  enumerable: true,\n  get: function () {\n    return _subscribe.subscribe;\n  },\n});\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _execute = require('./execute.js');\n\nvar _subscribe = require('./subscribe.js');\n\nvar _values = require('./values.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoDeprecatedCustomRule = NoDeprecatedCustomRule;\n\nvar _invariant = require('../../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../../error/GraphQLError.js');\n\nvar _definition = require('../../../type/definition.js');\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nfunction NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || (0, _invariant.invariant)(false);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) ||\n            (0, _invariant.invariant)(false);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = (0, _definition.getNamedType)(\n        context.getParentInputType(),\n      );\n\n      if ((0, _definition.isInputObjectType)(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = (0, _definition.getNamedType)(\n          context.getInputType(),\n        );\n        enumTypeDef != null || (0, _invariant.invariant)(false);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoSchemaIntrospectionCustomRule = NoSchemaIntrospectionCustomRule;\n\nvar _GraphQLError = require('../../../error/GraphQLError.js');\n\nvar _definition = require('../../../type/definition.js');\n\nvar _introspection = require('../../../type/introspection.js');\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nfunction NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = (0, _definition.getNamedType)(context.getType());\n\n      if (type && (0, _introspection.isIntrospectionType)(type)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'ExecutableDefinitionsRule', {\n  enumerable: true,\n  get: function () {\n    return _ExecutableDefinitionsRule.ExecutableDefinitionsRule;\n  },\n});\nObject.defineProperty(exports, 'FieldsOnCorrectTypeRule', {\n  enumerable: true,\n  get: function () {\n    return _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule;\n  },\n});\nObject.defineProperty(exports, 'FragmentsOnCompositeTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownArgumentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _KnownArgumentNamesRule.KnownArgumentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownDirectivesRule', {\n  enumerable: true,\n  get: function () {\n    return _KnownDirectivesRule.KnownDirectivesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownFragmentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _KnownFragmentNamesRule.KnownFragmentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownTypeNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _KnownTypeNamesRule.KnownTypeNamesRule;\n  },\n});\nObject.defineProperty(exports, 'LoneAnonymousOperationRule', {\n  enumerable: true,\n  get: function () {\n    return _LoneAnonymousOperationRule.LoneAnonymousOperationRule;\n  },\n});\nObject.defineProperty(exports, 'LoneSchemaDefinitionRule', {\n  enumerable: true,\n  get: function () {\n    return _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule;\n  },\n});\nObject.defineProperty(exports, 'NoDeprecatedCustomRule', {\n  enumerable: true,\n  get: function () {\n    return _NoDeprecatedCustomRule.NoDeprecatedCustomRule;\n  },\n});\nObject.defineProperty(exports, 'NoFragmentCyclesRule', {\n  enumerable: true,\n  get: function () {\n    return _NoFragmentCyclesRule.NoFragmentCyclesRule;\n  },\n});\nObject.defineProperty(exports, 'NoSchemaIntrospectionCustomRule', {\n  enumerable: true,\n  get: function () {\n    return _NoSchemaIntrospectionCustomRule.NoSchemaIntrospectionCustomRule;\n  },\n});\nObject.defineProperty(exports, 'NoUndefinedVariablesRule', {\n  enumerable: true,\n  get: function () {\n    return _NoUndefinedVariablesRule.NoUndefinedVariablesRule;\n  },\n});\nObject.defineProperty(exports, 'NoUnusedFragmentsRule', {\n  enumerable: true,\n  get: function () {\n    return _NoUnusedFragmentsRule.NoUnusedFragmentsRule;\n  },\n});\nObject.defineProperty(exports, 'NoUnusedVariablesRule', {\n  enumerable: true,\n  get: function () {\n    return _NoUnusedVariablesRule.NoUnusedVariablesRule;\n  },\n});\nObject.defineProperty(exports, 'OverlappingFieldsCanBeMergedRule', {\n  enumerable: true,\n  get: function () {\n    return _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule;\n  },\n});\nObject.defineProperty(exports, 'PossibleFragmentSpreadsRule', {\n  enumerable: true,\n  get: function () {\n    return _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule;\n  },\n});\nObject.defineProperty(exports, 'PossibleTypeExtensionsRule', {\n  enumerable: true,\n  get: function () {\n    return _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule;\n  },\n});\nObject.defineProperty(exports, 'ProvidedRequiredArgumentsRule', {\n  enumerable: true,\n  get: function () {\n    return _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule;\n  },\n});\nObject.defineProperty(exports, 'ScalarLeafsRule', {\n  enumerable: true,\n  get: function () {\n    return _ScalarLeafsRule.ScalarLeafsRule;\n  },\n});\nObject.defineProperty(exports, 'SingleFieldSubscriptionsRule', {\n  enumerable: true,\n  get: function () {\n    return _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueArgumentDefinitionNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueArgumentDefinitionNamesRule.UniqueArgumentDefinitionNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueArgumentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueArgumentNamesRule.UniqueArgumentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueDirectiveNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueDirectivesPerLocationRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueEnumValueNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueFieldDefinitionNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueFragmentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueFragmentNamesRule.UniqueFragmentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueInputFieldNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueOperationNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueOperationNamesRule.UniqueOperationNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueOperationTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueOperationTypesRule.UniqueOperationTypesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueTypeNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueTypeNamesRule.UniqueTypeNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueVariableNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueVariableNamesRule.UniqueVariableNamesRule;\n  },\n});\nObject.defineProperty(exports, 'ValidationContext', {\n  enumerable: true,\n  get: function () {\n    return _ValidationContext.ValidationContext;\n  },\n});\nObject.defineProperty(exports, 'ValuesOfCorrectTypeRule', {\n  enumerable: true,\n  get: function () {\n    return _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule;\n  },\n});\nObject.defineProperty(exports, 'VariablesAreInputTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _VariablesAreInputTypesRule.VariablesAreInputTypesRule;\n  },\n});\nObject.defineProperty(exports, 'VariablesInAllowedPositionRule', {\n  enumerable: true,\n  get: function () {\n    return _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule;\n  },\n});\nObject.defineProperty(exports, 'specifiedRules', {\n  enumerable: true,\n  get: function () {\n    return _specifiedRules.specifiedRules;\n  },\n});\nObject.defineProperty(exports, 'validate', {\n  enumerable: true,\n  get: function () {\n    return _validate.validate;\n  },\n});\n\nvar _validate = require('./validate.js');\n\nvar _ValidationContext = require('./ValidationContext.js');\n\nvar _specifiedRules = require('./specifiedRules.js');\n\nvar _ExecutableDefinitionsRule = require('./rules/ExecutableDefinitionsRule.js');\n\nvar _FieldsOnCorrectTypeRule = require('./rules/FieldsOnCorrectTypeRule.js');\n\nvar _FragmentsOnCompositeTypesRule = require('./rules/FragmentsOnCompositeTypesRule.js');\n\nvar _KnownArgumentNamesRule = require('./rules/KnownArgumentNamesRule.js');\n\nvar _KnownDirectivesRule = require('./rules/KnownDirectivesRule.js');\n\nvar _KnownFragmentNamesRule = require('./rules/KnownFragmentNamesRule.js');\n\nvar _KnownTypeNamesRule = require('./rules/KnownTypeNamesRule.js');\n\nvar _LoneAnonymousOperationRule = require('./rules/LoneAnonymousOperationRule.js');\n\nvar _NoFragmentCyclesRule = require('./rules/NoFragmentCyclesRule.js');\n\nvar _NoUndefinedVariablesRule = require('./rules/NoUndefinedVariablesRule.js');\n\nvar _NoUnusedFragmentsRule = require('./rules/NoUnusedFragmentsRule.js');\n\nvar _NoUnusedVariablesRule = require('./rules/NoUnusedVariablesRule.js');\n\nvar _OverlappingFieldsCanBeMergedRule = require('./rules/OverlappingFieldsCanBeMergedRule.js');\n\nvar _PossibleFragmentSpreadsRule = require('./rules/PossibleFragmentSpreadsRule.js');\n\nvar _ProvidedRequiredArgumentsRule = require('./rules/ProvidedRequiredArgumentsRule.js');\n\nvar _ScalarLeafsRule = require('./rules/ScalarLeafsRule.js');\n\nvar _SingleFieldSubscriptionsRule = require('./rules/SingleFieldSubscriptionsRule.js');\n\nvar _UniqueArgumentNamesRule = require('./rules/UniqueArgumentNamesRule.js');\n\nvar _UniqueDirectivesPerLocationRule = require('./rules/UniqueDirectivesPerLocationRule.js');\n\nvar _UniqueFragmentNamesRule = require('./rules/UniqueFragmentNamesRule.js');\n\nvar _UniqueInputFieldNamesRule = require('./rules/UniqueInputFieldNamesRule.js');\n\nvar _UniqueOperationNamesRule = require('./rules/UniqueOperationNamesRule.js');\n\nvar _UniqueVariableNamesRule = require('./rules/UniqueVariableNamesRule.js');\n\nvar _ValuesOfCorrectTypeRule = require('./rules/ValuesOfCorrectTypeRule.js');\n\nvar _VariablesAreInputTypesRule = require('./rules/VariablesAreInputTypesRule.js');\n\nvar _VariablesInAllowedPositionRule = require('./rules/VariablesInAllowedPositionRule.js');\n\nvar _LoneSchemaDefinitionRule = require('./rules/LoneSchemaDefinitionRule.js');\n\nvar _UniqueOperationTypesRule = require('./rules/UniqueOperationTypesRule.js');\n\nvar _UniqueTypeNamesRule = require('./rules/UniqueTypeNamesRule.js');\n\nvar _UniqueEnumValueNamesRule = require('./rules/UniqueEnumValueNamesRule.js');\n\nvar _UniqueFieldDefinitionNamesRule = require('./rules/UniqueFieldDefinitionNamesRule.js');\n\nvar _UniqueArgumentDefinitionNamesRule = require('./rules/UniqueArgumentDefinitionNamesRule.js');\n\nvar _UniqueDirectiveNamesRule = require('./rules/UniqueDirectiveNamesRule.js');\n\nvar _PossibleTypeExtensionsRule = require('./rules/PossibleTypeExtensionsRule.js');\n\nvar _NoDeprecatedCustomRule = require('./rules/custom/NoDeprecatedCustomRule.js');\n\nvar _NoSchemaIntrospectionCustomRule = require('./rules/custom/NoSchemaIntrospectionCustomRule.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'GraphQLError', {\n  enumerable: true,\n  get: function () {\n    return _GraphQLError.GraphQLError;\n  },\n});\nObject.defineProperty(exports, 'formatError', {\n  enumerable: true,\n  get: function () {\n    return _GraphQLError.formatError;\n  },\n});\nObject.defineProperty(exports, 'locatedError', {\n  enumerable: true,\n  get: function () {\n    return _locatedError.locatedError;\n  },\n});\nObject.defineProperty(exports, 'printError', {\n  enumerable: true,\n  get: function () {\n    return _GraphQLError.printError;\n  },\n});\nObject.defineProperty(exports, 'syntaxError', {\n  enumerable: true,\n  get: function () {\n    return _syntaxError.syntaxError;\n  },\n});\n\nvar _GraphQLError = require('./GraphQLError.js');\n\nvar _syntaxError = require('./syntaxError.js');\n\nvar _locatedError = require('./locatedError.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getIntrospectionQuery = getIntrospectionQuery;\n\n/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nfunction getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  let operation = null;\n\n  for (const definition of documentAST.definitions) {\n    if (definition.kind === _kinds.Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (\n        ((_definition$name = definition.name) === null ||\n        _definition$name === void 0\n          ? void 0\n          : _definition$name.value) === operationName\n      ) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getOperationRootType = getOperationRootType;\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nfunction getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema is not configured for mutations.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema is not configured for subscriptions.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return subscriptionType;\n  }\n\n  throw new _GraphQLError.GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _execute = require('../execution/execute.js');\n\nvar _getIntrospectionQuery = require('./getIntrospectionQuery.js');\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options,\n  };\n  const document = (0, _parser.parse)(\n    (0, _getIntrospectionQuery.getIntrospectionQuery)(optionsWithDefaults),\n  );\n  const result = (0, _execute.executeSync)({\n    schema,\n    document,\n  });\n  (!result.errors && result.data) || (0, _invariant.invariant)(false);\n  return result.data;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.buildClientSchema = buildClientSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\nfunction buildClientSchema(introspection, options) {\n  ((0, _isObjectLike.isObjectLike)(introspection) &&\n    (0, _isObjectLike.isObjectLike)(introspection.__schema)) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${(0,\n      _inspect.inspect)(introspection)}.`,\n    ); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = (0, _keyValMap.keyValMap)(\n    schemaIntrospection.types,\n    (typeIntrospection) => typeIntrospection.name,\n    (typeIntrospection) => buildType(typeIntrospection),\n  ); // Include standard types only if they are used.\n\n  for (const stdType of [\n    ..._scalars.specifiedScalarTypes,\n    ..._introspection.introspectionTypes,\n  ]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType\n    ? getObjectType(schemaIntrospection.queryType)\n    : null;\n  const mutationType = schemaIntrospection.mutationType\n    ? getObjectType(schemaIntrospection.mutationType)\n    : null;\n  const subscriptionType = schemaIntrospection.subscriptionType\n    ? getObjectType(schemaIntrospection.subscriptionType)\n    : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives\n    ? schemaIntrospection.directives.map(buildDirective)\n    : []; // Then produce and return a Schema with these types.\n\n  return new _schema.GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === _introspection.TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new _definition.GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === _introspection.TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      const nullableType = getType(nullableRef);\n      return new _definition.GraphQLNonNull(\n        (0, _definition.assertNullableType)(nullableType),\n      );\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(\n        `Unknown type reference: ${(0, _inspect.inspect)(typeRef)}.`,\n      );\n    }\n\n    const type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\n        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,\n      );\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return (0, _definition.assertObjectType)(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return (0, _definition.assertInterfaceType)(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case _introspection.TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case _introspection.TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case _introspection.TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case _introspection.TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case _introspection.TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case _introspection.TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    const typeStr = (0, _inspect.inspect)(type);\n    throw new Error(\n      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,\n    );\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new _definition.GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL,\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (\n      implementingIntrospection.interfaces === null &&\n      implementingIntrospection.kind === _introspection.TypeKind.INTERFACE\n    ) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = (0, _inspect.inspect)(\n        implementingIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,\n      );\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new _definition.GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection),\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new _definition.GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection),\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = (0, _inspect.inspect)(unionIntrospection);\n      throw new Error(\n        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType),\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = (0, _inspect.inspect)(enumIntrospection);\n      throw new Error(\n        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: (0, _keyValMap.keyValMap)(\n        enumIntrospection.enumValues,\n        (valueIntrospection) => valueIntrospection.name,\n        (valueIntrospection) => ({\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason,\n        }),\n      ),\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = (0, _inspect.inspect)(\n        inputObjectIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\n        `Introspection result missing fields: ${(0, _inspect.inspect)(\n          typeIntrospection,\n        )}.`,\n      );\n    }\n\n    return (0, _keyValMap.keyValMap)(\n      typeIntrospection.fields,\n      (fieldIntrospection) => fieldIntrospection.name,\n      buildField,\n    );\n  }\n\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n\n    if (!(0, _definition.isOutputType)(type)) {\n      const typeStr = (0, _inspect.inspect)(type);\n      throw new Error(\n        `Introspection must provide output type for fields, but received: ${typeStr}.`,\n      );\n    }\n\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = (0, _inspect.inspect)(fieldIntrospection);\n      throw new Error(\n        `Introspection result missing field args: ${fieldIntrospectionStr}.`,\n      );\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args),\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return (0, _keyValMap.keyValMap)(\n      inputValueIntrospections,\n      (inputValue) => inputValue.name,\n      buildInputValue,\n    );\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n\n    if (!(0, _definition.isInputType)(type)) {\n      const typeStr = (0, _inspect.inspect)(type);\n      throw new Error(\n        `Introspection must provide input type for arguments, but received: ${typeStr}.`,\n      );\n    }\n\n    const defaultValue =\n      inputValueIntrospection.defaultValue != null\n        ? (0, _valueFromAST.valueFromAST)(\n            (0, _parser.parseValue)(inputValueIntrospection.defaultValue),\n            type,\n          )\n        : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason,\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = (0, _inspect.inspect)(\n        directiveIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = (0, _inspect.inspect)(\n        directiveIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    return new _directives.GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args),\n    });\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.extendSchema = extendSchema;\nexports.extendSchemaImpl = extendSchemaImpl;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _mapValue = require('../jsutils/mapValue.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _predicates = require('../language/predicates.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _validate = require('../validation/validate.js');\n\nvar _values = require('../execution/values.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\nfunction extendSchema(schema, documentAST, options) {\n  (0, _schema.assertSchema)(schema);\n  (documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT) ||\n    (0, _devAssert.devAssert)(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    (0, _validate.assertValidSDLExtension)(documentAST, schema);\n  }\n\n  const schemaConfig = schema.toConfig();\n  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig\n    ? schema\n    : new _schema.GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nfunction extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  const typeDefs = [];\n  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  const directiveDefs = [];\n  let schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  const schemaExtensions = [];\n\n  for (const def of documentAST.definitions) {\n    if (def.kind === _kinds.Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === _kinds.Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      typeDefs.push(def);\n    } else if ((0, _predicates.isTypeExtensionNode)(def)) {\n      const extendedTypeName = def.name.value;\n      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions\n        ? existingTypeExtensions.concat([def])\n        : [def];\n    } else if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n  if (\n    Object.keys(typeExtensionsMap).length === 0 &&\n    typeDefs.length === 0 &&\n    directiveDefs.length === 0 &&\n    schemaExtensions.length === 0 &&\n    schemaDef == null\n  ) {\n    return schemaConfig;\n  }\n\n  const typeMap = Object.create(null);\n\n  for (const existingType of schemaConfig.types) {\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (const typeNode of typeDefs) {\n    var _stdTypeMap$name;\n\n    const name = typeNode.name.value;\n    typeMap[name] =\n      (_stdTypeMap$name = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name !== void 0\n        ? _stdTypeMap$name\n        : buildType(typeNode);\n  }\n\n  const operationTypes = {\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription:\n      schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),\n    // Then, incorporate schema definition and all schema extensions.\n    ...(schemaDef && getOperationTypes([schemaDef])),\n    ...getOperationTypes(schemaExtensions),\n  }; // Then produce and return a Schema config with these types.\n\n  return {\n    description:\n      (_schemaDef = schemaDef) === null || _schemaDef === void 0\n        ? void 0\n        : (_schemaDef$descriptio = _schemaDef.description) === null ||\n          _schemaDef$descriptio === void 0\n        ? void 0\n        : _schemaDef$descriptio.value,\n    ...operationTypes,\n    types: Object.values(typeMap),\n    directives: [\n      ...schemaConfig.directives.map(replaceDirective),\n      ...directiveDefs.map(buildDirective),\n    ],\n    extensions: Object.create(null),\n    astNode:\n      (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0\n        ? _schemaDef2\n        : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid:\n      (_options$assumeValid =\n        options === null || options === void 0\n          ? void 0\n          : options.assumeValid) !== null && _options$assumeValid !== void 0\n        ? _options$assumeValid\n        : false,\n  }; // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if ((0, _definition.isListType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLList(replaceType(type.ofType));\n    }\n\n    if ((0, _definition.isNonNullType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    const config = directive.toConfig();\n    return new _directives.GraphQLDirective({\n      ...config,\n      args: (0, _mapValue.mapValue)(config.args, extendArg),\n    });\n  }\n\n  function extendNamedType(type) {\n    if (\n      (0, _introspection.isIntrospectionType)(type) ||\n      (0, _scalars.isSpecifiedScalarType)(type)\n    ) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if ((0, _definition.isScalarType)(type)) {\n      return extendScalarType(type);\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      return extendObjectType(type);\n    }\n\n    if ((0, _definition.isInterfaceType)(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if ((0, _definition.isUnionType)(type)) {\n      return extendUnionType(type);\n    }\n\n    if ((0, _definition.isEnumType)(type)) {\n      return extendEnumType(type);\n    }\n\n    if ((0, _definition.isInputObjectType)(type)) {\n      return extendInputObjectType(type);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible type definition nodes have been considered.\n\n    false ||\n      (0, _invariant.invariant)(\n        false,\n        'Unexpected type: ' + (0, _inspect.inspect)(type),\n      );\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co !== void 0\n        ? _typeExtensionsMap$co\n        : [];\n    return new _definition.GraphQLInputObjectType({\n      ...config,\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, (field) => ({\n          ...field,\n          type: replaceType(field.type),\n        })),\n        ...buildInputFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null &&\n      _typeExtensionsMap$ty !== void 0\n        ? _typeExtensionsMap$ty\n        : [];\n    return new _definition.GraphQLEnumType({\n      ...config,\n      values: { ...config.values, ...buildEnumValueMap(extensions) },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co2 !== void 0\n        ? _typeExtensionsMap$co2\n        : [];\n    let specifiedByURL = config.specifiedByURL;\n\n    for (const extensionNode of extensions) {\n      var _getSpecifiedByURL;\n\n      specifiedByURL =\n        (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null &&\n        _getSpecifiedByURL !== void 0\n          ? _getSpecifiedByURL\n          : specifiedByURL;\n    }\n\n    return new _definition.GraphQLScalarType({\n      ...config,\n      specifiedByURL,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co3 !== void 0\n        ? _typeExtensionsMap$co3\n        : [];\n    return new _definition.GraphQLObjectType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co4 !== void 0\n        ? _typeExtensionsMap$co4\n        : [];\n    return new _definition.GraphQLInterfaceType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co5 !== void 0\n        ? _typeExtensionsMap$co5\n        : [];\n    return new _definition.GraphQLUnionType({\n      ...config,\n      types: () => [\n        ...type.getTypes().map(replaceNamedType),\n        ...buildUnionTypes(extensions),\n      ],\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendField(field) {\n    return {\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && (0, _mapValue.mapValue)(field.args, extendArg),\n    };\n  }\n\n  function extendArg(arg) {\n    return { ...arg, type: replaceType(arg.type) };\n  }\n\n  function getOperationTypes(nodes) {\n    const opTypes = {};\n\n    for (const node of nodes) {\n      var _node$operationTypes;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const operationTypesNodes =\n        /* c8 ignore next */\n        (_node$operationTypes = node.operationTypes) !== null &&\n        _node$operationTypes !== void 0\n          ? _node$operationTypes\n          : [];\n\n      for (const operationType of operationTypesNodes) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        // @ts-expect-error\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    }\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    const name = node.name.value;\n    const type =\n      (_stdTypeMap$name2 = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name2 !== void 0\n        ? _stdTypeMap$name2\n        : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(`Unknown type: \"${name}\".`);\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === _kinds.Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === _kinds.Kind.NON_NULL_TYPE) {\n      return new _definition.GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var _node$description;\n\n    return new _directives.GraphQLDirective({\n      name: node.name.value,\n      description:\n        (_node$description = node.description) === null ||\n        _node$description === void 0\n          ? void 0\n          : _node$description.value,\n      // @ts-expect-error\n      locations: node.locations.map(({ value }) => value),\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node,\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    const fieldConfigMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const nodeFields =\n        /* c8 ignore next */\n        (_node$fields = node.fields) !== null && _node$fields !== void 0\n          ? _node$fields\n          : [];\n\n      for (const field of nodeFields) {\n        var _field$description;\n\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description:\n            (_field$description = field.description) === null ||\n            _field$description === void 0\n              ? void 0\n              : _field$description.value,\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    const argsNodes =\n      /* c8 ignore next */\n      args !== null && args !== void 0 ? args : [];\n    const argConfigMap = Object.create(null);\n\n    for (const arg of argsNodes) {\n      var _arg$description;\n\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      const type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type,\n        description:\n          (_arg$description = arg.description) === null ||\n          _arg$description === void 0\n            ? void 0\n            : _arg$description.value,\n        defaultValue: (0, _valueFromAST.valueFromAST)(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg,\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    const inputFieldMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields2;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const fieldsNodes =\n        /* c8 ignore next */\n        (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0\n          ? _node$fields2\n          : [];\n\n      for (const field of fieldsNodes) {\n        var _field$description2;\n\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        const type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type,\n          description:\n            (_field$description2 = field.description) === null ||\n            _field$description2 === void 0\n              ? void 0\n              : _field$description2.value,\n          defaultValue: (0, _valueFromAST.valueFromAST)(\n            field.defaultValue,\n            type,\n          ),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    const enumValueMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$values;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const valuesNodes =\n        /* c8 ignore next */\n        (_node$values = node.values) !== null && _node$values !== void 0\n          ? _node$values\n          : [];\n\n      for (const value of valuesNodes) {\n        var _value$description;\n\n        enumValueMap[value.name.value] = {\n          description:\n            (_value$description = value.description) === null ||\n            _value$description === void 0\n              ? void 0\n              : _value$description.value,\n          deprecationReason: getDeprecationReason(value),\n          astNode: value,\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$interfaces$map, _node$interfaces;\n\n        return (\n          /* c8 ignore next */\n          (_node$interfaces$map =\n            (_node$interfaces = node.interfaces) === null ||\n            _node$interfaces === void 0\n              ? void 0\n              : _node$interfaces.map(getNamedType)) !== null &&\n            _node$interfaces$map !== void 0\n            ? _node$interfaces$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildUnionTypes(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$types$map, _node$types;\n\n        return (\n          /* c8 ignore next */\n          (_node$types$map =\n            (_node$types = node.types) === null || _node$types === void 0\n              ? void 0\n              : _node$types.map(getNamedType)) !== null &&\n            _node$types$map !== void 0\n            ? _node$types$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    const name = astNode.name.value;\n    const extensionASTNodes =\n      (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null &&\n      _typeExtensionsMap$na !== void 0\n        ? _typeExtensionsMap$na\n        : [];\n\n    switch (astNode.kind) {\n      case _kinds.Kind.OBJECT_TYPE_DEFINITION: {\n        var _astNode$description;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLObjectType({\n          name,\n          description:\n            (_astNode$description = astNode.description) === null ||\n            _astNode$description === void 0\n              ? void 0\n              : _astNode$description.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.INTERFACE_TYPE_DEFINITION: {\n        var _astNode$description2;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLInterfaceType({\n          name,\n          description:\n            (_astNode$description2 = astNode.description) === null ||\n            _astNode$description2 === void 0\n              ? void 0\n              : _astNode$description2.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.ENUM_TYPE_DEFINITION: {\n        var _astNode$description3;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLEnumType({\n          name,\n          description:\n            (_astNode$description3 = astNode.description) === null ||\n            _astNode$description3 === void 0\n              ? void 0\n              : _astNode$description3.value,\n          values: buildEnumValueMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.UNION_TYPE_DEFINITION: {\n        var _astNode$description4;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLUnionType({\n          name,\n          description:\n            (_astNode$description4 = astNode.description) === null ||\n            _astNode$description4 === void 0\n              ? void 0\n              : _astNode$description4.value,\n          types: () => buildUnionTypes(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.SCALAR_TYPE_DEFINITION: {\n        var _astNode$description5;\n\n        return new _definition.GraphQLScalarType({\n          name,\n          description:\n            (_astNode$description5 = astNode.description) === null ||\n            _astNode$description5 === void 0\n              ? void 0\n              : _astNode$description5.value,\n          specifiedByURL: getSpecifiedByURL(astNode),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION: {\n        var _astNode$description6;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLInputObjectType({\n          name,\n          description:\n            (_astNode$description6 = astNode.description) === null ||\n            _astNode$description6 === void 0\n              ? void 0\n              : _astNode$description6.value,\n          fields: () => buildInputFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n    }\n  }\n}\n\nconst stdTypeMap = (0, _keyMap.keyMap)(\n  [..._scalars.specifiedScalarTypes, ..._introspection.introspectionTypes],\n  (type) => type.name,\n);\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  const deprecated = (0, _values.getDirectiveValues)(\n    _directives.GraphQLDeprecatedDirective,\n    node,\n  ); // @ts-expect-error validated by `getDirectiveValues`\n\n  return deprecated === null || deprecated === void 0\n    ? void 0\n    : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByURL.\n */\n\nfunction getSpecifiedByURL(node) {\n  const specifiedBy = (0, _values.getDirectiveValues)(\n    _directives.GraphQLSpecifiedByDirective,\n    node,\n  ); // @ts-expect-error validated by `getDirectiveValues`\n\n  return specifiedBy === null || specifiedBy === void 0\n    ? void 0\n    : specifiedBy.url;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.buildASTSchema = buildASTSchema;\nexports.buildSchema = buildSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _validate = require('../validation/validate.js');\n\nvar _extendSchema = require('./extendSchema.js');\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query,\n * Mutation and Subscription.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nfunction buildASTSchema(documentAST, options) {\n  (documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT) ||\n    (0, _devAssert.devAssert)(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    (0, _validate.assertValidSDL)(documentAST);\n  }\n\n  const emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: Object.create(null),\n    extensionASTNodes: [],\n    assumeValid: false,\n  };\n  const config = (0, _extendSchema.extendSchemaImpl)(\n    emptySchemaConfig,\n    documentAST,\n    options,\n  );\n\n  if (config.astNode == null) {\n    for (const type of config.types) {\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          // @ts-expect-error validated in `validateSchema`\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          // @ts-expect-error validated in `validateSchema`\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          // @ts-expect-error validated in `validateSchema`\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  const directives = [\n    ...config.directives, // If specified directives were not explicitly declared, add them.\n    ..._directives.specifiedDirectives.filter((stdDirective) =>\n      config.directives.every(\n        (directive) => directive.name !== stdDirective.name,\n      ),\n    ),\n  ];\n  return new _schema.GraphQLSchema({ ...config, directives });\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nfunction buildSchema(source, options) {\n  const document = (0, _parser.parse)(source, {\n    noLocation:\n      options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacyFragmentVariables:\n      options === null || options === void 0\n        ? void 0\n        : options.allowLegacyFragmentVariables,\n  });\n  return buildASTSchema(document, {\n    assumeValidSDL:\n      options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.lexicographicSortSchema = lexicographicSortSchema;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _naturalCompare = require('../jsutils/naturalCompare.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _schema = require('../type/schema.js');\n\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\nfunction lexicographicSortSchema(schema) {\n  const schemaConfig = schema.toConfig();\n  const typeMap = (0, _keyValMap.keyValMap)(\n    sortByName(schemaConfig.types),\n    (type) => type.name,\n    sortNamedType,\n  );\n  return new _schema.GraphQLSchema({\n    ...schemaConfig,\n    types: Object.values(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription),\n  });\n\n  function replaceType(type) {\n    if ((0, _definition.isListType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLList(replaceType(type.ofType));\n    } else if ((0, _definition.isNonNullType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME: TS Conversion\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    const config = directive.toConfig();\n    return new _directives.GraphQLDirective({\n      ...config,\n      locations: sortBy(config.locations, (x) => x),\n      args: sortArgs(config.args),\n    });\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, (arg) => ({ ...arg, type: replaceType(arg.type) }));\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && sortArgs(field.args),\n    }));\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n    }));\n  }\n\n  function sortTypes(array) {\n    return sortByName(array).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (\n      (0, _definition.isScalarType)(type) ||\n      (0, _introspection.isIntrospectionType)(type)\n    ) {\n      return type;\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLObjectType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if ((0, _definition.isInterfaceType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLInterfaceType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if ((0, _definition.isUnionType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLUnionType({\n        ...config,\n        types: () => sortTypes(config.types),\n      });\n    }\n\n    if ((0, _definition.isEnumType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLEnumType({\n        ...config,\n        values: sortObjMap(config.values, (value) => value),\n      });\n    }\n\n    if ((0, _definition.isInputObjectType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLInputObjectType({\n        ...config,\n        fields: () => sortInputFields(config.fields),\n      });\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n\n    false ||\n      (0, _invariant.invariant)(\n        false,\n        'Unexpected type: ' + (0, _inspect.inspect)(type),\n      );\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  const sortedMap = Object.create(null);\n\n  for (const key of Object.keys(map).sort(_naturalCompare.naturalCompare)) {\n    sortedMap[key] = sortValueFn(map[key]);\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, (obj) => obj.name);\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort((obj1, obj2) => {\n    const key1 = mapToKey(obj1);\n    const key2 = mapToKey(obj2);\n    return (0, _naturalCompare.naturalCompare)(key1, key2);\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printSchema = printSchema;\nexports.printType = printType;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _blockString = require('../language/blockString.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nfunction printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !(0, _directives.isSpecifiedDirective)(n),\n    isDefinedType,\n  );\n}\n\nfunction printIntrospectionSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    _directives.isSpecifiedDirective,\n    _introspection.isIntrospectionType,\n  );\n}\n\nfunction isDefinedType(type) {\n  return (\n    !(0, _scalars.isSpecifiedScalarType)(type) &&\n    !(0, _introspection.isIntrospectionType)(type)\n  );\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return printScalar(type);\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return printObject(type);\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return printInterface(type);\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return printUnion(type);\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return printEnum(type);\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = (0, _astFromValue.astFromValue)(\n    arg.defaultValue,\n    arg.type,\n  );\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${(0, _printer.print)(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== _directives.DEFAULT_DEPRECATION_REASON) {\n    const astValue = (0, _printer.print)({\n      kind: _kinds.Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: description,\n    block: (0, _blockString.isPrintableAsBlockString)(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.concatAST = concatAST;\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nfunction concatAST(documents) {\n  const definitions = [];\n\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n\n  return {\n    kind: _kinds.Kind.DOCUMENT,\n    definitions,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.separateOperations = separateOperations;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n  const operations = [];\n  const depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (const definitionNode of documentAST.definitions) {\n    switch (definitionNode.kind) {\n      case _kinds.Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(\n          definitionNode.selectionSet,\n        );\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n  const separatedDocumentASTs = Object.create(null);\n\n  for (const operation of operations) {\n    const dependencies = new Set();\n\n    for (const fragmentName of collectDependencies(operation.selectionSet)) {\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n    const operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(\n        (node) =>\n          node === operation ||\n          (node.kind === _kinds.Kind.FRAGMENT_DEFINITION &&\n            dependencies.has(node.name.value)),\n      ),\n    };\n  }\n\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    const immediateDeps = depGraph[fromName];\n\n    if (immediateDeps !== undefined) {\n      for (const toName of immediateDeps) {\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n\nfunction collectDependencies(selectionSet) {\n  const dependencies = [];\n  (0, _visitor.visit)(selectionSet, {\n    FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    },\n  });\n  return dependencies;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.stripIgnoredCharacters = stripIgnoredCharacters;\n\nvar _blockString = require('../language/blockString.js');\n\nvar _lexer = require('../language/lexer.js');\n\nvar _source = require('../language/source.js');\n\nvar _tokenKind = require('../language/tokenKind.js');\n\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * ```graphql\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n * ```\n *\n * SDL example:\n *\n * ```graphql\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n * ```\n */\nfunction stripIgnoredCharacters(source) {\n  const sourceObj = (0, _source.isSource)(source)\n    ? source\n    : new _source.Source(source);\n  const body = sourceObj.body;\n  const lexer = new _lexer.Lexer(sourceObj);\n  let strippedBody = '';\n  let wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== _tokenKind.TokenKind.EOF) {\n    const currentToken = lexer.token;\n    const tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    const isNonPunctuator = !(0, _lexer.isPunctuatorTokenKind)(\n      currentToken.kind,\n    );\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (\n        isNonPunctuator ||\n        currentToken.kind === _tokenKind.TokenKind.SPREAD\n      ) {\n        strippedBody += ' ';\n      }\n    }\n\n    const tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === _tokenKind.TokenKind.BLOCK_STRING) {\n      strippedBody += (0, _blockString.printBlockString)(currentToken.value, {\n        minimize: true,\n      });\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _assertName = require('../type/assertName.js');\n\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction isValidNameError(name) {\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new _GraphQLError.GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    (0, _assertName.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.DangerousChangeType = exports.BreakingChangeType = void 0;\nexports.findBreakingChanges = findBreakingChanges;\nexports.findDangerousChanges = findDangerousChanges;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nvar _sortValueNode = require('./sortValueNode.js');\n\nvar BreakingChangeType;\nexports.BreakingChangeType = BreakingChangeType;\n\n(function (BreakingChangeType) {\n  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';\n  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';\n  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';\n  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';\n  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] =\n    'REQUIRED_INPUT_FIELD_ADDED';\n  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] =\n    'IMPLEMENTED_INTERFACE_REMOVED';\n  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';\n  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';\n  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';\n  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';\n  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';\n  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';\n  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';\n  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] =\n    'REQUIRED_DIRECTIVE_ARG_ADDED';\n  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] =\n    'DIRECTIVE_REPEATABLE_REMOVED';\n  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] =\n    'DIRECTIVE_LOCATION_REMOVED';\n})(\n  BreakingChangeType || (exports.BreakingChangeType = BreakingChangeType = {}),\n);\n\nvar DangerousChangeType;\nexports.DangerousChangeType = DangerousChangeType;\n\n(function (DangerousChangeType) {\n  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';\n  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';\n  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] =\n    'OPTIONAL_INPUT_FIELD_ADDED';\n  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';\n  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] =\n    'IMPLEMENTED_INTERFACE_ADDED';\n  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';\n})(\n  DangerousChangeType ||\n    (exports.DangerousChangeType = DangerousChangeType = {}),\n);\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nfunction findBreakingChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in BreakingChangeType,\n  );\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nfunction findDangerousChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in DangerousChangeType,\n  );\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [\n    ...findTypeChanges(oldSchema, newSchema),\n    ...findDirectiveChanges(oldSchema, newSchema),\n  ];\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const directivesDiff = diff(\n    oldSchema.getDirectives(),\n    newSchema.getDirectives(),\n  );\n\n  for (const oldDirective of directivesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: `${oldDirective.name} was removed.`,\n    });\n  }\n\n  for (const [oldDirective, newDirective] of directivesDiff.persisted) {\n    const argsDiff = diff(oldDirective.args, newDirective.args);\n\n    for (const newArg of argsDiff.added) {\n      if ((0, _definition.isRequiredArgument)(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`,\n        });\n      }\n    }\n\n    for (const oldArg of argsDiff.removed) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: `${oldArg.name} was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: `Repeatable flag was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    for (const location of oldDirective.locations) {\n      if (!newDirective.locations.includes(location)) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: `${location} was removed from ${oldDirective.name}.`,\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const typesDiff = diff(\n    Object.values(oldSchema.getTypeMap()),\n    Object.values(newSchema.getTypeMap()),\n  );\n\n  for (const oldType of typesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: (0, _scalars.isSpecifiedScalarType)(oldType)\n        ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.`\n        : `${oldType.name} was removed.`,\n    });\n  }\n\n  for (const [oldType, newType] of typesDiff.persisted) {\n    if (\n      (0, _definition.isEnumType)(oldType) &&\n      (0, _definition.isEnumType)(newType)\n    ) {\n      schemaChanges.push(...findEnumTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isUnionType)(oldType) &&\n      (0, _definition.isUnionType)(newType)\n    ) {\n      schemaChanges.push(...findUnionTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isInputObjectType)(oldType) &&\n      (0, _definition.isInputObjectType)(newType)\n    ) {\n      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isObjectType)(oldType) &&\n      (0, _definition.isObjectType)(newType)\n    ) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (\n      (0, _definition.isInterfaceType)(oldType) &&\n      (0, _definition.isInterfaceType)(newType)\n    ) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description:\n          `${oldType.name} changed from ` +\n          `${typeKindName(oldType)} to ${typeKindName(newType)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const newField of fieldsDiff.added) {\n    if ((0, _definition.isRequiredInputField)(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: `A required field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    }\n  }\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (const newPossibleType of possibleTypesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: `${newPossibleType.name} was added to union type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldPossibleType of possibleTypesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (const newValue of valuesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: `${newValue.name} was added to enum type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldValue of valuesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: `${oldValue.name} was removed from enum type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  const schemaChanges = [];\n  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (const newInterface of interfacesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`,\n    });\n  }\n\n  for (const oldInterface of interfacesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    schemaChanges.push(...findArgChanges(oldType, oldField, newField));\n    const isSafe = isChangeSafeForObjectOrInterfaceField(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  const schemaChanges = [];\n  const argsDiff = diff(oldField.args, newField.args);\n\n  for (const oldArg of argsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`,\n    });\n  }\n\n  for (const [oldArg, newArg] of argsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldArg.type,\n      newArg.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` +\n          `${String(oldArg.type)} to ${String(newArg.type)}.`,\n      });\n    } else if (oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`,\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);\n        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`,\n          });\n        }\n      }\n    }\n  }\n\n  for (const newArg of argsDiff.added) {\n    if ((0, _definition.isRequiredArgument)(newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      ((0, _definition.isListType)(newType) &&\n        isChangeSafeForObjectOrInterfaceField(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from nullable to non-null of the same underlying type is safe\n      ((0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (\n      (0, _definition.isNonNullType)(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType)\n    );\n  }\n\n  return (\n    // if they're both named types, see if their names are equivalent\n    ((0, _definition.isNamedType)(newType) && oldType.name === newType.name) || // moving from nullable to non-null of the same underlying type is safe\n    ((0, _definition.isNonNullType)(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (\n      (0, _definition.isListType)(newType) &&\n      isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType)\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      ((0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from non-null to nullable of the same underlying type is safe\n      (!(0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType))\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return (0, _definition.isNamedType)(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return 'a Scalar type';\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return 'an Object type';\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return 'an Interface type';\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return 'a Union type';\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return 'an Enum type';\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return 'an Input type';\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction stringifyValue(value, type) {\n  const ast = (0, _astFromValue.astFromValue)(value, type);\n  ast != null || (0, _invariant.invariant)(false);\n  return (0, _printer.print)((0, _sortValueNode.sortValueNode)(ast));\n}\n\nfunction diff(oldArray, newArray) {\n  const added = [];\n  const removed = [];\n  const persisted = [];\n  const oldMap = (0, _keyMap.keyMap)(oldArray, ({ name }) => name);\n  const newMap = (0, _keyMap.keyMap)(newArray, ({ name }) => name);\n\n  for (const oldItem of oldArray) {\n    const newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (const newItem of newArray) {\n    if (oldMap[newItem.name] === undefined) {\n      added.push(newItem);\n    }\n  }\n\n  return {\n    added,\n    persisted,\n    removed,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'BreakingChangeType', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.BreakingChangeType;\n  },\n});\nObject.defineProperty(exports, 'DangerousChangeType', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.DangerousChangeType;\n  },\n});\nObject.defineProperty(exports, 'TypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _TypeInfo.TypeInfo;\n  },\n});\nObject.defineProperty(exports, 'assertValidName', {\n  enumerable: true,\n  get: function () {\n    return _assertValidName.assertValidName;\n  },\n});\nObject.defineProperty(exports, 'astFromValue', {\n  enumerable: true,\n  get: function () {\n    return _astFromValue.astFromValue;\n  },\n});\nObject.defineProperty(exports, 'buildASTSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.buildASTSchema;\n  },\n});\nObject.defineProperty(exports, 'buildClientSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildClientSchema.buildClientSchema;\n  },\n});\nObject.defineProperty(exports, 'buildSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.buildSchema;\n  },\n});\nObject.defineProperty(exports, 'coerceInputValue', {\n  enumerable: true,\n  get: function () {\n    return _coerceInputValue.coerceInputValue;\n  },\n});\nObject.defineProperty(exports, 'concatAST', {\n  enumerable: true,\n  get: function () {\n    return _concatAST.concatAST;\n  },\n});\nObject.defineProperty(exports, 'doTypesOverlap', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.doTypesOverlap;\n  },\n});\nObject.defineProperty(exports, 'extendSchema', {\n  enumerable: true,\n  get: function () {\n    return _extendSchema.extendSchema;\n  },\n});\nObject.defineProperty(exports, 'findBreakingChanges', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.findBreakingChanges;\n  },\n});\nObject.defineProperty(exports, 'findDangerousChanges', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.findDangerousChanges;\n  },\n});\nObject.defineProperty(exports, 'getIntrospectionQuery', {\n  enumerable: true,\n  get: function () {\n    return _getIntrospectionQuery.getIntrospectionQuery;\n  },\n});\nObject.defineProperty(exports, 'getOperationAST', {\n  enumerable: true,\n  get: function () {\n    return _getOperationAST.getOperationAST;\n  },\n});\nObject.defineProperty(exports, 'getOperationRootType', {\n  enumerable: true,\n  get: function () {\n    return _getOperationRootType.getOperationRootType;\n  },\n});\nObject.defineProperty(exports, 'introspectionFromSchema', {\n  enumerable: true,\n  get: function () {\n    return _introspectionFromSchema.introspectionFromSchema;\n  },\n});\nObject.defineProperty(exports, 'isEqualType', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.isEqualType;\n  },\n});\nObject.defineProperty(exports, 'isTypeSubTypeOf', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.isTypeSubTypeOf;\n  },\n});\nObject.defineProperty(exports, 'isValidNameError', {\n  enumerable: true,\n  get: function () {\n    return _assertValidName.isValidNameError;\n  },\n});\nObject.defineProperty(exports, 'lexicographicSortSchema', {\n  enumerable: true,\n  get: function () {\n    return _lexicographicSortSchema.lexicographicSortSchema;\n  },\n});\nObject.defineProperty(exports, 'printIntrospectionSchema', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printIntrospectionSchema;\n  },\n});\nObject.defineProperty(exports, 'printSchema', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printSchema;\n  },\n});\nObject.defineProperty(exports, 'printType', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printType;\n  },\n});\nObject.defineProperty(exports, 'separateOperations', {\n  enumerable: true,\n  get: function () {\n    return _separateOperations.separateOperations;\n  },\n});\nObject.defineProperty(exports, 'stripIgnoredCharacters', {\n  enumerable: true,\n  get: function () {\n    return _stripIgnoredCharacters.stripIgnoredCharacters;\n  },\n});\nObject.defineProperty(exports, 'typeFromAST', {\n  enumerable: true,\n  get: function () {\n    return _typeFromAST.typeFromAST;\n  },\n});\nObject.defineProperty(exports, 'valueFromAST', {\n  enumerable: true,\n  get: function () {\n    return _valueFromAST.valueFromAST;\n  },\n});\nObject.defineProperty(exports, 'valueFromASTUntyped', {\n  enumerable: true,\n  get: function () {\n    return _valueFromASTUntyped.valueFromASTUntyped;\n  },\n});\nObject.defineProperty(exports, 'visitWithTypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _TypeInfo.visitWithTypeInfo;\n  },\n});\n\nvar _getIntrospectionQuery = require('./getIntrospectionQuery.js');\n\nvar _getOperationAST = require('./getOperationAST.js');\n\nvar _getOperationRootType = require('./getOperationRootType.js');\n\nvar _introspectionFromSchema = require('./introspectionFromSchema.js');\n\nvar _buildClientSchema = require('./buildClientSchema.js');\n\nvar _buildASTSchema = require('./buildASTSchema.js');\n\nvar _extendSchema = require('./extendSchema.js');\n\nvar _lexicographicSortSchema = require('./lexicographicSortSchema.js');\n\nvar _printSchema = require('./printSchema.js');\n\nvar _typeFromAST = require('./typeFromAST.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\nvar _valueFromASTUntyped = require('./valueFromASTUntyped.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nvar _TypeInfo = require('./TypeInfo.js');\n\nvar _coerceInputValue = require('./coerceInputValue.js');\n\nvar _concatAST = require('./concatAST.js');\n\nvar _separateOperations = require('./separateOperations.js');\n\nvar _stripIgnoredCharacters = require('./stripIgnoredCharacters.js');\n\nvar _typeComparators = require('./typeComparators.js');\n\nvar _assertValidName = require('./assertValidName.js');\n\nvar _findBreakingChanges = require('./findBreakingChanges.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'BREAK', {\n  enumerable: true,\n  get: function () {\n    return _index2.BREAK;\n  },\n});\nObject.defineProperty(exports, 'BreakingChangeType', {\n  enumerable: true,\n  get: function () {\n    return _index6.BreakingChangeType;\n  },\n});\nObject.defineProperty(exports, 'DEFAULT_DEPRECATION_REASON', {\n  enumerable: true,\n  get: function () {\n    return _index.DEFAULT_DEPRECATION_REASON;\n  },\n});\nObject.defineProperty(exports, 'DangerousChangeType', {\n  enumerable: true,\n  get: function () {\n    return _index6.DangerousChangeType;\n  },\n});\nObject.defineProperty(exports, 'DirectiveLocation', {\n  enumerable: true,\n  get: function () {\n    return _index2.DirectiveLocation;\n  },\n});\nObject.defineProperty(exports, 'ExecutableDefinitionsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.ExecutableDefinitionsRule;\n  },\n});\nObject.defineProperty(exports, 'FieldsOnCorrectTypeRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.FieldsOnCorrectTypeRule;\n  },\n});\nObject.defineProperty(exports, 'FragmentsOnCompositeTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.FragmentsOnCompositeTypesRule;\n  },\n});\nObject.defineProperty(exports, 'GRAPHQL_MAX_INT', {\n  enumerable: true,\n  get: function () {\n    return _index.GRAPHQL_MAX_INT;\n  },\n});\nObject.defineProperty(exports, 'GRAPHQL_MIN_INT', {\n  enumerable: true,\n  get: function () {\n    return _index.GRAPHQL_MIN_INT;\n  },\n});\nObject.defineProperty(exports, 'GraphQLBoolean', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLBoolean;\n  },\n});\nObject.defineProperty(exports, 'GraphQLDeprecatedDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLDeprecatedDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLEnumType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLEnumType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLError', {\n  enumerable: true,\n  get: function () {\n    return _index5.GraphQLError;\n  },\n});\nObject.defineProperty(exports, 'GraphQLFloat', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLFloat;\n  },\n});\nObject.defineProperty(exports, 'GraphQLID', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLID;\n  },\n});\nObject.defineProperty(exports, 'GraphQLIncludeDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLIncludeDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInt', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLInt;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLList', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLList;\n  },\n});\nObject.defineProperty(exports, 'GraphQLNonNull', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLNonNull;\n  },\n});\nObject.defineProperty(exports, 'GraphQLObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLObjectType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLScalarType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLScalarType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLSchema;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSkipDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLSkipDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSpecifiedByDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLSpecifiedByDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLString', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLString;\n  },\n});\nObject.defineProperty(exports, 'GraphQLUnionType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLUnionType;\n  },\n});\nObject.defineProperty(exports, 'Kind', {\n  enumerable: true,\n  get: function () {\n    return _index2.Kind;\n  },\n});\nObject.defineProperty(exports, 'KnownArgumentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.KnownArgumentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownDirectivesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.KnownDirectivesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownFragmentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.KnownFragmentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownTypeNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.KnownTypeNamesRule;\n  },\n});\nObject.defineProperty(exports, 'Lexer', {\n  enumerable: true,\n  get: function () {\n    return _index2.Lexer;\n  },\n});\nObject.defineProperty(exports, 'Location', {\n  enumerable: true,\n  get: function () {\n    return _index2.Location;\n  },\n});\nObject.defineProperty(exports, 'LoneAnonymousOperationRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.LoneAnonymousOperationRule;\n  },\n});\nObject.defineProperty(exports, 'LoneSchemaDefinitionRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.LoneSchemaDefinitionRule;\n  },\n});\nObject.defineProperty(exports, 'NoDeprecatedCustomRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoDeprecatedCustomRule;\n  },\n});\nObject.defineProperty(exports, 'NoFragmentCyclesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoFragmentCyclesRule;\n  },\n});\nObject.defineProperty(exports, 'NoSchemaIntrospectionCustomRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoSchemaIntrospectionCustomRule;\n  },\n});\nObject.defineProperty(exports, 'NoUndefinedVariablesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoUndefinedVariablesRule;\n  },\n});\nObject.defineProperty(exports, 'NoUnusedFragmentsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoUnusedFragmentsRule;\n  },\n});\nObject.defineProperty(exports, 'NoUnusedVariablesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoUnusedVariablesRule;\n  },\n});\nObject.defineProperty(exports, 'OperationTypeNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.OperationTypeNode;\n  },\n});\nObject.defineProperty(exports, 'OverlappingFieldsCanBeMergedRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.OverlappingFieldsCanBeMergedRule;\n  },\n});\nObject.defineProperty(exports, 'PossibleFragmentSpreadsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.PossibleFragmentSpreadsRule;\n  },\n});\nObject.defineProperty(exports, 'PossibleTypeExtensionsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.PossibleTypeExtensionsRule;\n  },\n});\nObject.defineProperty(exports, 'ProvidedRequiredArgumentsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.ProvidedRequiredArgumentsRule;\n  },\n});\nObject.defineProperty(exports, 'ScalarLeafsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.ScalarLeafsRule;\n  },\n});\nObject.defineProperty(exports, 'SchemaMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _index.SchemaMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'SingleFieldSubscriptionsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.SingleFieldSubscriptionsRule;\n  },\n});\nObject.defineProperty(exports, 'Source', {\n  enumerable: true,\n  get: function () {\n    return _index2.Source;\n  },\n});\nObject.defineProperty(exports, 'Token', {\n  enumerable: true,\n  get: function () {\n    return _index2.Token;\n  },\n});\nObject.defineProperty(exports, 'TokenKind', {\n  enumerable: true,\n  get: function () {\n    return _index2.TokenKind;\n  },\n});\nObject.defineProperty(exports, 'TypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _index6.TypeInfo;\n  },\n});\nObject.defineProperty(exports, 'TypeKind', {\n  enumerable: true,\n  get: function () {\n    return _index.TypeKind;\n  },\n});\nObject.defineProperty(exports, 'TypeMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _index.TypeMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'TypeNameMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _index.TypeNameMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'UniqueArgumentDefinitionNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueArgumentDefinitionNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueArgumentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueArgumentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueDirectiveNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueDirectiveNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueDirectivesPerLocationRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueDirectivesPerLocationRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueEnumValueNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueEnumValueNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueFieldDefinitionNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueFieldDefinitionNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueFragmentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueFragmentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueInputFieldNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueInputFieldNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueOperationNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueOperationNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueOperationTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueOperationTypesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueTypeNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueTypeNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueVariableNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueVariableNamesRule;\n  },\n});\nObject.defineProperty(exports, 'ValidationContext', {\n  enumerable: true,\n  get: function () {\n    return _index4.ValidationContext;\n  },\n});\nObject.defineProperty(exports, 'ValuesOfCorrectTypeRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.ValuesOfCorrectTypeRule;\n  },\n});\nObject.defineProperty(exports, 'VariablesAreInputTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.VariablesAreInputTypesRule;\n  },\n});\nObject.defineProperty(exports, 'VariablesInAllowedPositionRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.VariablesInAllowedPositionRule;\n  },\n});\nObject.defineProperty(exports, '__Directive', {\n  enumerable: true,\n  get: function () {\n    return _index.__Directive;\n  },\n});\nObject.defineProperty(exports, '__DirectiveLocation', {\n  enumerable: true,\n  get: function () {\n    return _index.__DirectiveLocation;\n  },\n});\nObject.defineProperty(exports, '__EnumValue', {\n  enumerable: true,\n  get: function () {\n    return _index.__EnumValue;\n  },\n});\nObject.defineProperty(exports, '__Field', {\n  enumerable: true,\n  get: function () {\n    return _index.__Field;\n  },\n});\nObject.defineProperty(exports, '__InputValue', {\n  enumerable: true,\n  get: function () {\n    return _index.__InputValue;\n  },\n});\nObject.defineProperty(exports, '__Schema', {\n  enumerable: true,\n  get: function () {\n    return _index.__Schema;\n  },\n});\nObject.defineProperty(exports, '__Type', {\n  enumerable: true,\n  get: function () {\n    return _index.__Type;\n  },\n});\nObject.defineProperty(exports, '__TypeKind', {\n  enumerable: true,\n  get: function () {\n    return _index.__TypeKind;\n  },\n});\nObject.defineProperty(exports, 'assertAbstractType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertAbstractType;\n  },\n});\nObject.defineProperty(exports, 'assertCompositeType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertCompositeType;\n  },\n});\nObject.defineProperty(exports, 'assertDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.assertDirective;\n  },\n});\nObject.defineProperty(exports, 'assertEnumType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertEnumType;\n  },\n});\nObject.defineProperty(exports, 'assertEnumValueName', {\n  enumerable: true,\n  get: function () {\n    return _index.assertEnumValueName;\n  },\n});\nObject.defineProperty(exports, 'assertInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'assertInputType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertInputType;\n  },\n});\nObject.defineProperty(exports, 'assertInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'assertLeafType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertLeafType;\n  },\n});\nObject.defineProperty(exports, 'assertListType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertListType;\n  },\n});\nObject.defineProperty(exports, 'assertName', {\n  enumerable: true,\n  get: function () {\n    return _index.assertName;\n  },\n});\nObject.defineProperty(exports, 'assertNamedType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertNamedType;\n  },\n});\nObject.defineProperty(exports, 'assertNonNullType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertNonNullType;\n  },\n});\nObject.defineProperty(exports, 'assertNullableType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertNullableType;\n  },\n});\nObject.defineProperty(exports, 'assertObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertObjectType;\n  },\n});\nObject.defineProperty(exports, 'assertOutputType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertOutputType;\n  },\n});\nObject.defineProperty(exports, 'assertScalarType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertScalarType;\n  },\n});\nObject.defineProperty(exports, 'assertSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.assertSchema;\n  },\n});\nObject.defineProperty(exports, 'assertType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertType;\n  },\n});\nObject.defineProperty(exports, 'assertUnionType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertUnionType;\n  },\n});\nObject.defineProperty(exports, 'assertValidName', {\n  enumerable: true,\n  get: function () {\n    return _index6.assertValidName;\n  },\n});\nObject.defineProperty(exports, 'assertValidSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.assertValidSchema;\n  },\n});\nObject.defineProperty(exports, 'assertWrappingType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertWrappingType;\n  },\n});\nObject.defineProperty(exports, 'astFromValue', {\n  enumerable: true,\n  get: function () {\n    return _index6.astFromValue;\n  },\n});\nObject.defineProperty(exports, 'buildASTSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.buildASTSchema;\n  },\n});\nObject.defineProperty(exports, 'buildClientSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.buildClientSchema;\n  },\n});\nObject.defineProperty(exports, 'buildSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.buildSchema;\n  },\n});\nObject.defineProperty(exports, 'coerceInputValue', {\n  enumerable: true,\n  get: function () {\n    return _index6.coerceInputValue;\n  },\n});\nObject.defineProperty(exports, 'concatAST', {\n  enumerable: true,\n  get: function () {\n    return _index6.concatAST;\n  },\n});\nObject.defineProperty(exports, 'createSourceEventStream', {\n  enumerable: true,\n  get: function () {\n    return _index3.createSourceEventStream;\n  },\n});\nObject.defineProperty(exports, 'defaultFieldResolver', {\n  enumerable: true,\n  get: function () {\n    return _index3.defaultFieldResolver;\n  },\n});\nObject.defineProperty(exports, 'defaultTypeResolver', {\n  enumerable: true,\n  get: function () {\n    return _index3.defaultTypeResolver;\n  },\n});\nObject.defineProperty(exports, 'doTypesOverlap', {\n  enumerable: true,\n  get: function () {\n    return _index6.doTypesOverlap;\n  },\n});\nObject.defineProperty(exports, 'execute', {\n  enumerable: true,\n  get: function () {\n    return _index3.execute;\n  },\n});\nObject.defineProperty(exports, 'executeSync', {\n  enumerable: true,\n  get: function () {\n    return _index3.executeSync;\n  },\n});\nObject.defineProperty(exports, 'extendSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.extendSchema;\n  },\n});\nObject.defineProperty(exports, 'findBreakingChanges', {\n  enumerable: true,\n  get: function () {\n    return _index6.findBreakingChanges;\n  },\n});\nObject.defineProperty(exports, 'findDangerousChanges', {\n  enumerable: true,\n  get: function () {\n    return _index6.findDangerousChanges;\n  },\n});\nObject.defineProperty(exports, 'formatError', {\n  enumerable: true,\n  get: function () {\n    return _index5.formatError;\n  },\n});\nObject.defineProperty(exports, 'getArgumentValues', {\n  enumerable: true,\n  get: function () {\n    return _index3.getArgumentValues;\n  },\n});\nObject.defineProperty(exports, 'getDirectiveValues', {\n  enumerable: true,\n  get: function () {\n    return _index3.getDirectiveValues;\n  },\n});\nObject.defineProperty(exports, 'getEnterLeaveForKind', {\n  enumerable: true,\n  get: function () {\n    return _index2.getEnterLeaveForKind;\n  },\n});\nObject.defineProperty(exports, 'getIntrospectionQuery', {\n  enumerable: true,\n  get: function () {\n    return _index6.getIntrospectionQuery;\n  },\n});\nObject.defineProperty(exports, 'getLocation', {\n  enumerable: true,\n  get: function () {\n    return _index2.getLocation;\n  },\n});\nObject.defineProperty(exports, 'getNamedType', {\n  enumerable: true,\n  get: function () {\n    return _index.getNamedType;\n  },\n});\nObject.defineProperty(exports, 'getNullableType', {\n  enumerable: true,\n  get: function () {\n    return _index.getNullableType;\n  },\n});\nObject.defineProperty(exports, 'getOperationAST', {\n  enumerable: true,\n  get: function () {\n    return _index6.getOperationAST;\n  },\n});\nObject.defineProperty(exports, 'getOperationRootType', {\n  enumerable: true,\n  get: function () {\n    return _index6.getOperationRootType;\n  },\n});\nObject.defineProperty(exports, 'getVariableValues', {\n  enumerable: true,\n  get: function () {\n    return _index3.getVariableValues;\n  },\n});\nObject.defineProperty(exports, 'getVisitFn', {\n  enumerable: true,\n  get: function () {\n    return _index2.getVisitFn;\n  },\n});\nObject.defineProperty(exports, 'graphql', {\n  enumerable: true,\n  get: function () {\n    return _graphql.graphql;\n  },\n});\nObject.defineProperty(exports, 'graphqlSync', {\n  enumerable: true,\n  get: function () {\n    return _graphql.graphqlSync;\n  },\n});\nObject.defineProperty(exports, 'introspectionFromSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.introspectionFromSchema;\n  },\n});\nObject.defineProperty(exports, 'introspectionTypes', {\n  enumerable: true,\n  get: function () {\n    return _index.introspectionTypes;\n  },\n});\nObject.defineProperty(exports, 'isAbstractType', {\n  enumerable: true,\n  get: function () {\n    return _index.isAbstractType;\n  },\n});\nObject.defineProperty(exports, 'isCompositeType', {\n  enumerable: true,\n  get: function () {\n    return _index.isCompositeType;\n  },\n});\nObject.defineProperty(exports, 'isConstValueNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isConstValueNode;\n  },\n});\nObject.defineProperty(exports, 'isDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.isDirective;\n  },\n});\nObject.defineProperty(exports, 'isEnumType', {\n  enumerable: true,\n  get: function () {\n    return _index.isEnumType;\n  },\n});\nObject.defineProperty(exports, 'isEqualType', {\n  enumerable: true,\n  get: function () {\n    return _index6.isEqualType;\n  },\n});\nObject.defineProperty(exports, 'isExecutableDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isExecutableDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.isInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'isInputType', {\n  enumerable: true,\n  get: function () {\n    return _index.isInputType;\n  },\n});\nObject.defineProperty(exports, 'isInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _index.isInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'isIntrospectionType', {\n  enumerable: true,\n  get: function () {\n    return _index.isIntrospectionType;\n  },\n});\nObject.defineProperty(exports, 'isLeafType', {\n  enumerable: true,\n  get: function () {\n    return _index.isLeafType;\n  },\n});\nObject.defineProperty(exports, 'isListType', {\n  enumerable: true,\n  get: function () {\n    return _index.isListType;\n  },\n});\nObject.defineProperty(exports, 'isNamedType', {\n  enumerable: true,\n  get: function () {\n    return _index.isNamedType;\n  },\n});\nObject.defineProperty(exports, 'isNonNullType', {\n  enumerable: true,\n  get: function () {\n    return _index.isNonNullType;\n  },\n});\nObject.defineProperty(exports, 'isNullableType', {\n  enumerable: true,\n  get: function () {\n    return _index.isNullableType;\n  },\n});\nObject.defineProperty(exports, 'isObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.isObjectType;\n  },\n});\nObject.defineProperty(exports, 'isOutputType', {\n  enumerable: true,\n  get: function () {\n    return _index.isOutputType;\n  },\n});\nObject.defineProperty(exports, 'isRequiredArgument', {\n  enumerable: true,\n  get: function () {\n    return _index.isRequiredArgument;\n  },\n});\nObject.defineProperty(exports, 'isRequiredInputField', {\n  enumerable: true,\n  get: function () {\n    return _index.isRequiredInputField;\n  },\n});\nObject.defineProperty(exports, 'isScalarType', {\n  enumerable: true,\n  get: function () {\n    return _index.isScalarType;\n  },\n});\nObject.defineProperty(exports, 'isSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.isSchema;\n  },\n});\nObject.defineProperty(exports, 'isSelectionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isSelectionNode;\n  },\n});\nObject.defineProperty(exports, 'isSpecifiedDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.isSpecifiedDirective;\n  },\n});\nObject.defineProperty(exports, 'isSpecifiedScalarType', {\n  enumerable: true,\n  get: function () {\n    return _index.isSpecifiedScalarType;\n  },\n});\nObject.defineProperty(exports, 'isType', {\n  enumerable: true,\n  get: function () {\n    return _index.isType;\n  },\n});\nObject.defineProperty(exports, 'isTypeDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeExtensionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeExtensionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeSubTypeOf', {\n  enumerable: true,\n  get: function () {\n    return _index6.isTypeSubTypeOf;\n  },\n});\nObject.defineProperty(exports, 'isTypeSystemDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeSystemDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeSystemExtensionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeSystemExtensionNode;\n  },\n});\nObject.defineProperty(exports, 'isUnionType', {\n  enumerable: true,\n  get: function () {\n    return _index.isUnionType;\n  },\n});\nObject.defineProperty(exports, 'isValidNameError', {\n  enumerable: true,\n  get: function () {\n    return _index6.isValidNameError;\n  },\n});\nObject.defineProperty(exports, 'isValueNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isValueNode;\n  },\n});\nObject.defineProperty(exports, 'isWrappingType', {\n  enumerable: true,\n  get: function () {\n    return _index.isWrappingType;\n  },\n});\nObject.defineProperty(exports, 'lexicographicSortSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.lexicographicSortSchema;\n  },\n});\nObject.defineProperty(exports, 'locatedError', {\n  enumerable: true,\n  get: function () {\n    return _index5.locatedError;\n  },\n});\nObject.defineProperty(exports, 'parse', {\n  enumerable: true,\n  get: function () {\n    return _index2.parse;\n  },\n});\nObject.defineProperty(exports, 'parseConstValue', {\n  enumerable: true,\n  get: function () {\n    return _index2.parseConstValue;\n  },\n});\nObject.defineProperty(exports, 'parseType', {\n  enumerable: true,\n  get: function () {\n    return _index2.parseType;\n  },\n});\nObject.defineProperty(exports, 'parseValue', {\n  enumerable: true,\n  get: function () {\n    return _index2.parseValue;\n  },\n});\nObject.defineProperty(exports, 'print', {\n  enumerable: true,\n  get: function () {\n    return _index2.print;\n  },\n});\nObject.defineProperty(exports, 'printError', {\n  enumerable: true,\n  get: function () {\n    return _index5.printError;\n  },\n});\nObject.defineProperty(exports, 'printIntrospectionSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.printIntrospectionSchema;\n  },\n});\nObject.defineProperty(exports, 'printLocation', {\n  enumerable: true,\n  get: function () {\n    return _index2.printLocation;\n  },\n});\nObject.defineProperty(exports, 'printSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.printSchema;\n  },\n});\nObject.defineProperty(exports, 'printSourceLocation', {\n  enumerable: true,\n  get: function () {\n    return _index2.printSourceLocation;\n  },\n});\nObject.defineProperty(exports, 'printType', {\n  enumerable: true,\n  get: function () {\n    return _index6.printType;\n  },\n});\nObject.defineProperty(exports, 'resolveObjMapThunk', {\n  enumerable: true,\n  get: function () {\n    return _index.resolveObjMapThunk;\n  },\n});\nObject.defineProperty(exports, 'resolveReadonlyArrayThunk', {\n  enumerable: true,\n  get: function () {\n    return _index.resolveReadonlyArrayThunk;\n  },\n});\nObject.defineProperty(exports, 'responsePathAsArray', {\n  enumerable: true,\n  get: function () {\n    return _index3.responsePathAsArray;\n  },\n});\nObject.defineProperty(exports, 'separateOperations', {\n  enumerable: true,\n  get: function () {\n    return _index6.separateOperations;\n  },\n});\nObject.defineProperty(exports, 'specifiedDirectives', {\n  enumerable: true,\n  get: function () {\n    return _index.specifiedDirectives;\n  },\n});\nObject.defineProperty(exports, 'specifiedRules', {\n  enumerable: true,\n  get: function () {\n    return _index4.specifiedRules;\n  },\n});\nObject.defineProperty(exports, 'specifiedScalarTypes', {\n  enumerable: true,\n  get: function () {\n    return _index.specifiedScalarTypes;\n  },\n});\nObject.defineProperty(exports, 'stripIgnoredCharacters', {\n  enumerable: true,\n  get: function () {\n    return _index6.stripIgnoredCharacters;\n  },\n});\nObject.defineProperty(exports, 'subscribe', {\n  enumerable: true,\n  get: function () {\n    return _index3.subscribe;\n  },\n});\nObject.defineProperty(exports, 'syntaxError', {\n  enumerable: true,\n  get: function () {\n    return _index5.syntaxError;\n  },\n});\nObject.defineProperty(exports, 'typeFromAST', {\n  enumerable: true,\n  get: function () {\n    return _index6.typeFromAST;\n  },\n});\nObject.defineProperty(exports, 'validate', {\n  enumerable: true,\n  get: function () {\n    return _index4.validate;\n  },\n});\nObject.defineProperty(exports, 'validateSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.validateSchema;\n  },\n});\nObject.defineProperty(exports, 'valueFromAST', {\n  enumerable: true,\n  get: function () {\n    return _index6.valueFromAST;\n  },\n});\nObject.defineProperty(exports, 'valueFromASTUntyped', {\n  enumerable: true,\n  get: function () {\n    return _index6.valueFromASTUntyped;\n  },\n});\nObject.defineProperty(exports, 'version', {\n  enumerable: true,\n  get: function () {\n    return _version.version;\n  },\n});\nObject.defineProperty(exports, 'versionInfo', {\n  enumerable: true,\n  get: function () {\n    return _version.versionInfo;\n  },\n});\nObject.defineProperty(exports, 'visit', {\n  enumerable: true,\n  get: function () {\n    return _index2.visit;\n  },\n});\nObject.defineProperty(exports, 'visitInParallel', {\n  enumerable: true,\n  get: function () {\n    return _index2.visitInParallel;\n  },\n});\nObject.defineProperty(exports, 'visitWithTypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _index6.visitWithTypeInfo;\n  },\n});\n\nvar _version = require('./version.js');\n\nvar _graphql = require('./graphql.js');\n\nvar _index = require('./type/index.js');\n\nvar _index2 = require('./language/index.js');\n\nvar _index3 = require('./execution/index.js');\n\nvar _index4 = require('./validation/index.js');\n\nvar _index5 = require('./error/index.js');\n\nvar _index6 = require('./utilities/index.js');\n", "import { parse } from 'graphql';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  Location,\n} from 'graphql/language/ast';\n\n// A map docString -> graphql document\nconst docCache = new Map<string, DocumentNode>();\n\n// A map fragmentName -> [normalized source]\nconst fragmentSourceMap = new Map<string, Set<string>>();\n\nlet printFragmentWarnings = true;\nlet experimentalFragmentVariables = false;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string: string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc: Location) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nfunction processFragments(ast: DocumentNode) {\n  const seenKeys = new Set<string>();\n  const definitions: DefinitionNode[] = [];\n\n  ast.definitions.forEach(fragmentDefinition => {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc!);\n\n      // We know something about this fragment\n      let sourceKeySet = fragmentSourceMap.get(fragmentName)!;\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n\n  return {\n    ...ast,\n    definitions,\n  };\n}\n\nfunction stripLoc(doc: DocumentNode) {\n  const workSet = new Set<Record<string, any>>(doc.definitions);\n\n  workSet.forEach(node => {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(key => {\n      const value = node[key];\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n\n  const loc = doc.loc as Record<string, any>;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source: string) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    const parsed = parse(source, {\n      experimentalFragmentVariables,\n      allowLegacyFragmentVariables: experimentalFragmentVariables,\n    } as any);\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n    docCache.set(\n      cacheKey,\n      // check that all \"new\" fragments inside the documents are consistent with\n      // existing fragments of the same name\n      stripLoc(processFragments(parsed)),\n    );\n  }\n  return docCache.get(cacheKey)!;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nexport function gql(\n  literals: string | readonly string[],\n  ...args: any[]\n) {\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  let result = literals[0];\n\n  args.forEach((arg, i) => {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n\n  return parseDocument(result);\n}\n\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\n\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\nconst extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n};\n\nexport namespace gql {\n  export const {\n    gql,\n    resetCaches,\n    disableFragmentWarnings,\n    enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables,\n  } = extras;\n}\n\ngql.default = gql;\n\nexport default gql;\n", "// For backwards compatibility, make sure require(\"graphql-tag\") returns\n// the gql function, rather than an exports object.\nmodule.exports = require('./lib/graphql-tag.umd.js').gql;\n", "import { Action, ActionPanel, Clipboard, Color, Form, Image, showToast, Toast, open } from \"@raycast/api\";\nimport { useCachedPromise } from \"@raycast/utils\";\nimport { useState, useEffect } from \"react\";\n\nimport View from \"./components/View\";\nimport { getErrorMessage } from \"./helpers/errors\";\nimport { getIssueStatus } from \"./helpers/issue\";\nimport { getGitHubClient } from \"./helpers/withGithubClient\";\nimport { useMyRepositories } from \"./hooks/useRepositories\";\n\ntype BranchFormValues = {\n  issue?: string;\n  name?: string;\n  repository: string;\n};\n\ntype BranchFormProps = {\n  draftValues?: BranchFormValues;\n};\n\nexport function BranchForm({ draftValues }: BranchFormProps) {\n  const { github } = getGitHubClient();\n\n  const [repositoryId, setRepositoryId] = useState<string>(draftValues?.repository ?? \"\");\n  const [issue, setIssue] = useState<string>(draftValues?.issue ?? \"\");\n  const [name, setName] = useState<string>(draftValues?.name ?? \"\");\n  const [nameError, setNameError] = useState<string | undefined>();\n\n  const { data: repositories, isLoading: repositoriesIsLoading } = useMyRepositories();\n  const { data, isLoading: repositoryIsLoading } = useCachedPromise(\n    (repository) => {\n      const selectedRepository = repositories?.find((r) => r.id === repository);\n\n      if (!selectedRepository) {\n        return Promise.resolve(null);\n      }\n\n      return github.repositoryIssues({ owner: selectedRepository.owner.login, name: selectedRepository.name });\n    },\n    [repositoryId],\n    { execute: !!repositoryId }\n  );\n\n  const issues = data?.repository?.issues?.nodes?.filter((node) => node?.linkedBranches.totalCount == 0);\n  const oid: string = data?.repository?.defaultBranchRef?.target?.oid;\n  const repositoryUrl: string = data?.repository?.url;\n\n  async function onSubmit(values: BranchFormValues) {\n    if (values.name?.length == 0 && values.issue?.length == 0) {\n      return setNameError(\"This field can't be empty!\");\n    }\n\n    const toast = await showToast({ style: Toast.Style.Animated, title: \"Creating a branch\" });\n\n    try {\n      let branchName: string | undefined;\n\n      if (values.issue?.length) {\n        const payload = { repositoryId: values.repository, issueId: values.issue, oid };\n\n        const createResult = await github.createLinkedBranch({\n          input: values.name === \"\" ? payload : { ...payload, name: values.name },\n        });\n\n        branchName = createResult.createLinkedBranch?.linkedBranch?.ref?.name;\n      } else if (values.name) {\n        const createResult = await github.createRef({\n          input: { repositoryId: values.repository, name: values.name, oid },\n        });\n        branchName = createResult.createRef?.ref?.name;\n      }\n\n      toast.style = Toast.Style.Success;\n      toast.title = `${branchName} is created`;\n\n      if (branchName) {\n        toast.primaryAction = {\n          title: \"Copy Branch Name\",\n          shortcut: { modifiers: [\"shift\", \"cmd\"], key: \"c\" },\n          onAction: () => branchName && Clipboard.copy(branchName),\n        };\n        toast.secondaryAction = {\n          title: \"Open in Browser\",\n          shortcut: { modifiers: [\"shift\", \"cmd\"], key: \"o\" },\n          onAction: async () => await open(`${repositoryUrl}/tree/${branchName}`),\n        };\n      }\n    } catch (error) {\n      toast.style = Toast.Style.Failure;\n      toast.title = \"Failed creating a branch\";\n      toast.message = getErrorMessage(error);\n    }\n  }\n\n  useEffect(() => {\n    if ((!!name.length && !!nameError?.length) || issue?.length) {\n      setNameError(undefined);\n    }\n    setName(name);\n  }, [issue]);\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <Action.SubmitForm\n            onSubmit={onSubmit}\n            title=\"Create Branch\"\n            icon={{ source: \"branch.svg\", tintColor: Color.PrimaryText }}\n          />\n        </ActionPanel>\n      }\n      enableDrafts\n      isLoading={repositoriesIsLoading || repositoryIsLoading}\n    >\n      <Form.Dropdown\n        id=\"repository\"\n        title=\"Repository\"\n        isLoading={repositoriesIsLoading}\n        value={repositoryId}\n        onChange={setRepositoryId}\n        autoFocus\n        storeValue\n      >\n        {repositories?.map((repository) => (\n          <Form.Dropdown.Item\n            key={repository.id}\n            title={repository.nameWithOwner}\n            value={repository.id}\n            icon={{ source: repository.owner.avatarUrl, mask: Image.Mask.Circle }}\n          />\n        ))}\n      </Form.Dropdown>\n\n      <Form.Separator />\n\n      <Form.Dropdown\n        id=\"issue\"\n        title=\"Linked Issue\"\n        isLoading={repositoryIsLoading}\n        value={issue}\n        onChange={setIssue}\n        info=\"If you don't select an issue, a ref pointing to the last commit of the selected repository will be created instead of an issue branch\"\n      >\n        <Form.Dropdown.Item key={\"default\"} title={\"No issue\"} value={\"\"} />\n        {issues?.map((issue) =>\n          issue ? (\n            <Form.Dropdown.Item\n              key={issue?.id}\n              title={`#${issue.number} ${issue.title}`}\n              value={issue.id}\n              {...getIssueStatus(issue)}\n            />\n          ) : null\n        )}\n      </Form.Dropdown>\n\n      <Form.TextField\n        id=\"name\"\n        title=\"Name\"\n        placeholder={issue ? \"Optional branch name (ie: my new branch)\" : \"Branch name (ie: refs/heads/my_new_branch)\"}\n        value={name}\n        error={nameError}\n        onChange={(newName) => {\n          if (!!newName.length && !!nameError?.length) {\n            setNameError(undefined);\n          }\n          setName(newName);\n        }}\n        onBlur={(event) => {\n          if (event.target.value?.length == 0 && issue.length == 0) {\n            setNameError(\"This field can't be empty!\");\n          } else {\n            setNameError(undefined);\n          }\n        }}\n      />\n    </Form>\n  );\n}\n\nexport default function Command(props: { draftValues?: BranchFormValues }) {\n  return (\n    <View>\n      <BranchForm draftValues={props.draftValues} />\n    </View>\n  );\n}\n", "import { Detail, environment, MenuBarExtra } from \"@raycast/api\";\nimport { getPreferenceValues } from \"@raycast/api\";\nimport { GraphQLClient } from \"graphql-request\";\nimport { Octokit } from \"octokit\";\nimport { useMemo, useState } from \"react\";\n\nimport { authorize } from \"../api/oauth\";\nimport { getSdk } from \"../generated/graphql\";\n\nlet github: ReturnType<typeof getSdk> | null = null;\nlet octokit: Octokit | null = null;\n\nexport function withGithubClient(component: JSX.Element) {\n  const [x, forceRerender] = useState(0);\n\n  // we use a `useMemo` instead of `useEffect` to avoid a render\n  useMemo(() => {\n    (async function () {\n      const { personalAccessToken } = getPreferenceValues();\n      const token = personalAccessToken || (await authorize());\n      const authorization = personalAccessToken ? `token ${token}` : `bearer ${token}`;\n      github = getSdk(new GraphQLClient(\"https://api.github.com/graphql\", { headers: { authorization } }));\n\n      octokit = new Octokit({ auth: token });\n\n      forceRerender(x + 1);\n    })();\n  }, []);\n\n  if (!github || !octokit) {\n    if (environment.commandMode === \"view\") {\n      // Using the <List /> component makes the placeholder buggy\n      return <Detail isLoading />;\n    } else if (environment.commandMode === \"menu-bar\") {\n      return <MenuBarExtra isLoading />;\n    } else {\n      console.error(\"`withGithubClient` is only supported in `view` and `menu-bar` mode\");\n      return null;\n    }\n  }\n\n  return component;\n}\n\nexport function getGitHubClient() {\n  if (!github || !octokit) {\n    throw new Error(\"getGitHubClient must be used when authenticated\");\n  }\n\n  return { github, octokit };\n}\n", "import { OAuth, environment } from \"@raycast/api\";\nimport fetch from \"node-fetch\";\n\nconst clientId = \"7235fe8d42157f1f38c0\";\n\nexport const oauthClient = new OAuth.PKCEClient({\n  redirectMethod: OAuth.RedirectMethod.Web,\n  providerName: \"GitHub\",\n  providerIcon: environment.theme === \"light\" ? \"icon.png\" : \"icon@dark.png\",\n  providerId: \"github\",\n  description: \"Connect your GitHub account\",\n});\n\nexport async function authorize() {\n  const existingTokens = await oauthClient.getTokens();\n\n  if (existingTokens?.accessToken) {\n    return existingTokens.accessToken;\n  }\n\n  const authRequest = await oauthClient.authorizationRequest({\n    endpoint: \"https://github.oauth-proxy.raycast.com/authorize\",\n    clientId,\n    scope: \"notifications repo read:org read:user read:project\",\n  });\n\n  const { authorizationCode } = await oauthClient.authorize(authRequest);\n  const tokens = await fetchTokens(authRequest, authorizationCode);\n  await oauthClient.setTokens(tokens);\n\n  return tokens.access_token;\n}\n\nexport async function fetchTokens(\n  authRequest: OAuth.AuthorizationRequest,\n  authCode: string\n): Promise<OAuth.TokenResponse> {\n  const response = await fetch(\"https://github.oauth-proxy.raycast.com/token\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      client_id: clientId,\n      code: authCode,\n      code_verifier: authRequest.codeVerifier,\n      grant_type: \"authorization_code\",\n      redirect_uri: authRequest.redirectURI,\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  const tokens = await response.json();\n\n  return tokens as OAuth.TokenResponse;\n}\n", "/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n", null, "\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n", "export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n", "\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n", "/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n", "/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n", "const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n", "/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n", "/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// \u00A75.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// \u00A75.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// \u00A75.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// \u00A75.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// \u00A75.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n", "export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n", "import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy \u00A78.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy \u00A73. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy \u00A73.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy \u00A73.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing \u00A73.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy \u00A78.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response\u2019s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in \u00A7 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n", "import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n", "import { GraphQLClient } from \"graphql-request\";\nimport * as Dom from \"graphql-request/dist/types.dom\";\nimport gql from \"graphql-tag\";\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  Base64String: any;\n  Date: any;\n  DateTime: any;\n  GitObjectID: any;\n  GitSSHRemote: any;\n  GitTimestamp: any;\n  HTML: any;\n  PreciseDateTime: any;\n  URI: any;\n  X509Certificate: any;\n};\n\n/** Autogenerated input type of AbortQueuedMigrations */\nexport type AbortQueuedMigrationsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the organization that is running the migrations. */\n  ownerId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AbortQueuedMigrations */\nexport type AbortQueuedMigrationsPayload = {\n  __typename?: \"AbortQueuedMigrationsPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** Did the operation succeed? */\n  success?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Autogenerated input type of AcceptEnterpriseAdministratorInvitation */\nexport type AcceptEnterpriseAdministratorInvitationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The id of the invitation being accepted */\n  invitationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AcceptEnterpriseAdministratorInvitation */\nexport type AcceptEnterpriseAdministratorInvitationPayload = {\n  __typename?: \"AcceptEnterpriseAdministratorInvitationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The invitation that was accepted. */\n  invitation?: Maybe<EnterpriseAdministratorInvitation>;\n  /** A message confirming the result of accepting an administrator invitation. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of AcceptTopicSuggestion */\nexport type AcceptTopicSuggestionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the suggested topic. */\n  name: Scalars[\"String\"];\n  /** The Node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AcceptTopicSuggestion */\nexport type AcceptTopicSuggestionPayload = {\n  __typename?: \"AcceptTopicSuggestionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The accepted topic. */\n  topic?: Maybe<Topic>;\n};\n\n/** Represents an object which can take actions on GitHub. Typically a User or Bot. */\nexport type Actor = {\n  /** A URL pointing to the actor's public avatar. */\n  avatarUrl: Scalars[\"URI\"];\n  /** The username of the actor. */\n  login: Scalars[\"String\"];\n  /** The HTTP path for this actor. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this actor. */\n  url: Scalars[\"URI\"];\n};\n\n/** Represents an object which can take actions on GitHub. Typically a User or Bot. */\nexport type ActorAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Location information for an actor */\nexport type ActorLocation = {\n  __typename?: \"ActorLocation\";\n  /** City */\n  city?: Maybe<Scalars[\"String\"]>;\n  /** Country name */\n  country?: Maybe<Scalars[\"String\"]>;\n  /** Country code */\n  countryCode?: Maybe<Scalars[\"String\"]>;\n  /** Region name */\n  region?: Maybe<Scalars[\"String\"]>;\n  /** Region or state code */\n  regionCode?: Maybe<Scalars[\"String\"]>;\n};\n\n/** The actor's type. */\nexport enum ActorType {\n  /** Indicates a team actor. */\n  Team = \"TEAM\",\n  /** Indicates a user actor. */\n  User = \"USER\",\n}\n\n/** Autogenerated input type of AddAssigneesToAssignable */\nexport type AddAssigneesToAssignableInput = {\n  /** The id of the assignable object to add assignees to. */\n  assignableId: Scalars[\"ID\"];\n  /** The id of users to add as assignees. */\n  assigneeIds: Array<Scalars[\"ID\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddAssigneesToAssignable */\nexport type AddAssigneesToAssignablePayload = {\n  __typename?: \"AddAssigneesToAssignablePayload\";\n  /** The item that was assigned. */\n  assignable?: Maybe<Assignable>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of AddComment */\nexport type AddCommentInput = {\n  /** The contents of the comment. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddComment */\nexport type AddCommentPayload = {\n  __typename?: \"AddCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The edge from the subject's comment connection. */\n  commentEdge?: Maybe<IssueCommentEdge>;\n  /** The subject */\n  subject?: Maybe<Node>;\n  /** The edge from the subject's timeline connection. */\n  timelineEdge?: Maybe<IssueTimelineItemEdge>;\n};\n\n/** Autogenerated input type of AddDiscussionComment */\nexport type AddDiscussionCommentInput = {\n  /** The contents of the comment. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion to comment on. */\n  discussionId: Scalars[\"ID\"];\n  /** The Node ID of the discussion comment within this discussion to reply to. */\n  replyToId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated return type of AddDiscussionComment */\nexport type AddDiscussionCommentPayload = {\n  __typename?: \"AddDiscussionCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The newly created discussion comment. */\n  comment?: Maybe<DiscussionComment>;\n};\n\n/** Autogenerated input type of AddDiscussionPollVote */\nexport type AddDiscussionPollVoteInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion poll option to vote for. */\n  pollOptionId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddDiscussionPollVote */\nexport type AddDiscussionPollVotePayload = {\n  __typename?: \"AddDiscussionPollVotePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The poll option that a vote was added to. */\n  pollOption?: Maybe<DiscussionPollOption>;\n};\n\n/** Autogenerated input type of AddEnterpriseOrganizationMember */\nexport type AddEnterpriseOrganizationMemberInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise which owns the organization. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The ID of the organization the users will be added to. */\n  organizationId: Scalars[\"ID\"];\n  /** The role to assign the users in the organization */\n  role?: InputMaybe<OrganizationMemberRole>;\n  /** The IDs of the enterprise members to add. */\n  userIds: Array<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated return type of AddEnterpriseOrganizationMember */\nexport type AddEnterpriseOrganizationMemberPayload = {\n  __typename?: \"AddEnterpriseOrganizationMemberPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The users who were added to the organization. */\n  users?: Maybe<Array<User>>;\n};\n\n/** Autogenerated input type of AddEnterpriseSupportEntitlement */\nexport type AddEnterpriseSupportEntitlementInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the Enterprise which the admin belongs to. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The login of a member who will receive the support entitlement. */\n  login: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of AddEnterpriseSupportEntitlement */\nexport type AddEnterpriseSupportEntitlementPayload = {\n  __typename?: \"AddEnterpriseSupportEntitlementPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** A message confirming the result of adding the support entitlement. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of AddLabelsToLabelable */\nexport type AddLabelsToLabelableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ids of the labels to add. */\n  labelIds: Array<Scalars[\"ID\"]>;\n  /** The id of the labelable object to add labels to. */\n  labelableId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddLabelsToLabelable */\nexport type AddLabelsToLabelablePayload = {\n  __typename?: \"AddLabelsToLabelablePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The item that was labeled. */\n  labelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of AddProjectCard */\nexport type AddProjectCardInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The content of the card. Must be a member of the ProjectCardItem union */\n  contentId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The note on the card. */\n  note?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the ProjectColumn. */\n  projectColumnId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddProjectCard */\nexport type AddProjectCardPayload = {\n  __typename?: \"AddProjectCardPayload\";\n  /** The edge from the ProjectColumn's card connection. */\n  cardEdge?: Maybe<ProjectCardEdge>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The ProjectColumn */\n  projectColumn?: Maybe<ProjectColumn>;\n};\n\n/** Autogenerated input type of AddProjectColumn */\nexport type AddProjectColumnInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the column. */\n  name: Scalars[\"String\"];\n  /** The Node ID of the project. */\n  projectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddProjectColumn */\nexport type AddProjectColumnPayload = {\n  __typename?: \"AddProjectColumnPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The edge from the project's column connection. */\n  columnEdge?: Maybe<ProjectColumnEdge>;\n  /** The project */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of AddProjectV2DraftIssue */\nexport type AddProjectV2DraftIssueInput = {\n  /** The IDs of the assignees of the draft issue. */\n  assigneeIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The body of the draft issue. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the Project to add the draft issue to. */\n  projectId: Scalars[\"ID\"];\n  /** The title of the draft issue. */\n  title: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of AddProjectV2DraftIssue */\nexport type AddProjectV2DraftIssuePayload = {\n  __typename?: \"AddProjectV2DraftIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The draft issue added to the project. */\n  projectItem?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of AddProjectV2ItemById */\nexport type AddProjectV2ItemByIdInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The id of the Issue or Pull Request to add. */\n  contentId: Scalars[\"ID\"];\n  /** The ID of the Project to add the item to. */\n  projectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddProjectV2ItemById */\nexport type AddProjectV2ItemByIdPayload = {\n  __typename?: \"AddProjectV2ItemByIdPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The item added to the project. */\n  item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of AddPullRequestReviewComment */\nexport type AddPullRequestReviewCommentInput = {\n  /** The text of the comment. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The SHA of the commit to comment on. */\n  commitOID?: InputMaybe<Scalars[\"GitObjectID\"]>;\n  /** The comment id to reply to. */\n  inReplyTo?: InputMaybe<Scalars[\"ID\"]>;\n  /** The relative path of the file to comment on. */\n  path?: InputMaybe<Scalars[\"String\"]>;\n  /** The line index in the diff to comment on. */\n  position?: InputMaybe<Scalars[\"Int\"]>;\n  /** The node ID of the pull request reviewing */\n  pullRequestId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The Node ID of the review to modify. */\n  pullRequestReviewId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated return type of AddPullRequestReviewComment */\nexport type AddPullRequestReviewCommentPayload = {\n  __typename?: \"AddPullRequestReviewCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The newly created comment. */\n  comment?: Maybe<PullRequestReviewComment>;\n  /** The edge from the review's comment connection. */\n  commentEdge?: Maybe<PullRequestReviewCommentEdge>;\n};\n\n/** Autogenerated input type of AddPullRequestReview */\nexport type AddPullRequestReviewInput = {\n  /** The contents of the review body comment. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The review line comments. */\n  comments?: InputMaybe<Array<InputMaybe<DraftPullRequestReviewComment>>>;\n  /** The commit OID the review pertains to. */\n  commitOID?: InputMaybe<Scalars[\"GitObjectID\"]>;\n  /** The event to perform on the pull request review. */\n  event?: InputMaybe<PullRequestReviewEvent>;\n  /** The Node ID of the pull request to modify. */\n  pullRequestId: Scalars[\"ID\"];\n  /** The review line comment threads. */\n  threads?: InputMaybe<Array<InputMaybe<DraftPullRequestReviewThread>>>;\n};\n\n/** Autogenerated return type of AddPullRequestReview */\nexport type AddPullRequestReviewPayload = {\n  __typename?: \"AddPullRequestReviewPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The newly created pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n  /** The edge from the pull request's review connection. */\n  reviewEdge?: Maybe<PullRequestReviewEdge>;\n};\n\n/** Autogenerated input type of AddPullRequestReviewThread */\nexport type AddPullRequestReviewThreadInput = {\n  /** Body of the thread's first comment. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The line of the blob to which the thread refers. The end of the line range for multi-line comments. */\n  line: Scalars[\"Int\"];\n  /** Path to the file being commented on. */\n  path: Scalars[\"String\"];\n  /** The node ID of the pull request reviewing */\n  pullRequestId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The Node ID of the review to modify. */\n  pullRequestReviewId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. */\n  side?: InputMaybe<DiffSide>;\n  /** The first line of the range to which the comment refers. */\n  startLine?: InputMaybe<Scalars[\"Int\"]>;\n  /** The side of the diff on which the start line resides. */\n  startSide?: InputMaybe<DiffSide>;\n};\n\n/** Autogenerated return type of AddPullRequestReviewThread */\nexport type AddPullRequestReviewThreadPayload = {\n  __typename?: \"AddPullRequestReviewThreadPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The newly created thread. */\n  thread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Autogenerated input type of AddReaction */\nexport type AddReactionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the emoji to react with. */\n  content: ReactionContent;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddReaction */\nexport type AddReactionPayload = {\n  __typename?: \"AddReactionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The reaction object. */\n  reaction?: Maybe<Reaction>;\n  /** The reaction groups for the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** The reactable subject. */\n  subject?: Maybe<Reactable>;\n};\n\n/** Autogenerated input type of AddStar */\nexport type AddStarInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Starrable ID to star. */\n  starrableId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddStar */\nexport type AddStarPayload = {\n  __typename?: \"AddStarPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The starrable. */\n  starrable?: Maybe<Starrable>;\n};\n\n/** Autogenerated input type of AddUpvote */\nexport type AddUpvoteInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion or comment to upvote. */\n  subjectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddUpvote */\nexport type AddUpvotePayload = {\n  __typename?: \"AddUpvotePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The votable subject. */\n  subject?: Maybe<Votable>;\n};\n\n/** Autogenerated input type of AddVerifiableDomain */\nexport type AddVerifiableDomainInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The URL of the domain */\n  domain: Scalars[\"URI\"];\n  /** The ID of the owner to add the domain to */\n  ownerId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of AddVerifiableDomain */\nexport type AddVerifiableDomainPayload = {\n  __typename?: \"AddVerifiableDomainPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The verifiable domain that was added. */\n  domain?: Maybe<VerifiableDomain>;\n};\n\n/** Represents a 'added_to_project' event on a given issue or pull request. */\nexport type AddedToProjectEvent = Node & {\n  __typename?: \"AddedToProjectEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n};\n\n/** A GitHub App. */\nexport type App = Node & {\n  __typename?: \"App\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The description of the app. */\n  description?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The IP addresses of the app. */\n  ipAllowListEntries: IpAllowListEntryConnection;\n  /** The hex color code, without the leading '#', for the logo background. */\n  logoBackgroundColor: Scalars[\"String\"];\n  /** A URL pointing to the app's logo. */\n  logoUrl: Scalars[\"URI\"];\n  /** The name of the app. */\n  name: Scalars[\"String\"];\n  /** A slug based on the name of the app for use in URLs. */\n  slug: Scalars[\"String\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The URL to the app's homepage. */\n  url: Scalars[\"URI\"];\n};\n\n/** A GitHub App. */\nexport type AppIpAllowListEntriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IpAllowListEntryOrder>;\n};\n\n/** A GitHub App. */\nexport type AppLogoUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Autogenerated input type of ApproveDeployments */\nexport type ApproveDeploymentsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Optional comment for approving deployments */\n  comment?: InputMaybe<Scalars[\"String\"]>;\n  /** The ids of environments to reject deployments */\n  environmentIds: Array<Scalars[\"ID\"]>;\n  /** The node ID of the workflow run containing the pending deployments. */\n  workflowRunId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ApproveDeployments */\nexport type ApproveDeploymentsPayload = {\n  __typename?: \"ApproveDeploymentsPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The affected deployments. */\n  deployments?: Maybe<Array<Deployment>>;\n};\n\n/** Autogenerated input type of ApproveVerifiableDomain */\nexport type ApproveVerifiableDomainInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the verifiable domain to approve. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ApproveVerifiableDomain */\nexport type ApproveVerifiableDomainPayload = {\n  __typename?: \"ApproveVerifiableDomainPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The verifiable domain that was approved. */\n  domain?: Maybe<VerifiableDomain>;\n};\n\n/** Autogenerated input type of ArchiveProjectV2Item */\nexport type ArchiveProjectV2ItemInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the ProjectV2Item to archive. */\n  itemId: Scalars[\"ID\"];\n  /** The ID of the Project to archive the item from. */\n  projectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ArchiveProjectV2Item */\nexport type ArchiveProjectV2ItemPayload = {\n  __typename?: \"ArchiveProjectV2ItemPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The item archived from the project. */\n  item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of ArchiveRepository */\nexport type ArchiveRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the repository to mark as archived. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ArchiveRepository */\nexport type ArchiveRepositoryPayload = {\n  __typename?: \"ArchiveRepositoryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The repository that was marked as archived. */\n  repository?: Maybe<Repository>;\n};\n\n/** An object that can have users assigned to it. */\nexport type Assignable = {\n  /** A list of Users assigned to this object. */\n  assignees: UserConnection;\n};\n\n/** An object that can have users assigned to it. */\nexport type AssignableAssigneesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents an 'assigned' event on any assignable object. */\nexport type AssignedEvent = Node & {\n  __typename?: \"AssignedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the assignable associated with the event. */\n  assignable: Assignable;\n  /** Identifies the user or mannequin that was assigned. */\n  assignee?: Maybe<Assignee>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /**\n   * Identifies the user who was assigned.\n   * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.\n   */\n  user?: Maybe<User>;\n};\n\n/** Types that can be assigned to issues. */\nexport type Assignee = Bot | Mannequin | Organization | User;\n\n/** An entry in the audit log. */\nexport type AuditEntry = {\n  /** The action name */\n  action: Scalars[\"String\"];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars[\"String\"]>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars[\"URI\"]>;\n  /** The time the action was initiated */\n  createdAt: Scalars[\"PreciseDateTime\"];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Types that can initiate an audit log event. */\nexport type AuditEntryActor = Bot | Organization | User;\n\n/** Ordering options for Audit Log connections. */\nexport type AuditLogOrder = {\n  /** The ordering direction. */\n  direction?: InputMaybe<OrderDirection>;\n  /** The field to order Audit Logs by. */\n  field?: InputMaybe<AuditLogOrderField>;\n};\n\n/** Properties by which Audit Log connections can be ordered. */\nexport enum AuditLogOrderField {\n  /** Order audit log entries by timestamp */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** Represents a 'auto_merge_disabled' event on a given pull request. */\nexport type AutoMergeDisabledEvent = Node & {\n  __typename?: \"AutoMergeDisabledEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The user who disabled auto-merge for this Pull Request */\n  disabler?: Maybe<User>;\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event */\n  pullRequest?: Maybe<PullRequest>;\n  /** The reason auto-merge was disabled */\n  reason?: Maybe<Scalars[\"String\"]>;\n  /** The reason_code relating to why auto-merge was disabled */\n  reasonCode?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Represents a 'auto_merge_enabled' event on a given pull request. */\nexport type AutoMergeEnabledEvent = Node & {\n  __typename?: \"AutoMergeEnabledEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The user who enabled auto-merge for this Pull Request */\n  enabler?: Maybe<User>;\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents an auto-merge request for a pull request */\nexport type AutoMergeRequest = {\n  __typename?: \"AutoMergeRequest\";\n  /** The email address of the author of this auto-merge request. */\n  authorEmail?: Maybe<Scalars[\"String\"]>;\n  /** The commit message of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging. */\n  commitBody?: Maybe<Scalars[\"String\"]>;\n  /** The commit title of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging */\n  commitHeadline?: Maybe<Scalars[\"String\"]>;\n  /** When was this auto-merge request was enabled. */\n  enabledAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** The actor who created the auto-merge request. */\n  enabledBy?: Maybe<Actor>;\n  /** The merge method of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging. */\n  mergeMethod: PullRequestMergeMethod;\n  /** The pull request that this auto-merge request is set against. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'auto_rebase_enabled' event on a given pull request. */\nexport type AutoRebaseEnabledEvent = Node & {\n  __typename?: \"AutoRebaseEnabledEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The user who enabled auto-merge (rebase) for this Pull Request */\n  enabler?: Maybe<User>;\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'auto_squash_enabled' event on a given pull request. */\nexport type AutoSquashEnabledEvent = Node & {\n  __typename?: \"AutoSquashEnabledEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The user who enabled auto-merge (squash) for this Pull Request */\n  enabler?: Maybe<User>;\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'automatic_base_change_failed' event on a given pull request. */\nexport type AutomaticBaseChangeFailedEvent = Node & {\n  __typename?: \"AutomaticBaseChangeFailedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** The new base for this PR */\n  newBase: Scalars[\"String\"];\n  /** The old base for this PR */\n  oldBase: Scalars[\"String\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'automatic_base_change_succeeded' event on a given pull request. */\nexport type AutomaticBaseChangeSucceededEvent = Node & {\n  __typename?: \"AutomaticBaseChangeSucceededEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** The new base for this PR */\n  newBase: Scalars[\"String\"];\n  /** The old base for this PR */\n  oldBase: Scalars[\"String\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'base_ref_changed' event on a given issue or pull request. */\nexport type BaseRefChangedEvent = Node & {\n  __typename?: \"BaseRefChangedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the name of the base ref for the pull request after it was changed. */\n  currentRefName: Scalars[\"String\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** Identifies the name of the base ref for the pull request before it was changed. */\n  previousRefName: Scalars[\"String\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'base_ref_deleted' event on a given pull request. */\nexport type BaseRefDeletedEvent = Node & {\n  __typename?: \"BaseRefDeletedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the name of the Ref associated with the `base_ref_deleted` event. */\n  baseRefName?: Maybe<Scalars[\"String\"]>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'base_ref_force_pushed' event on a given pull request. */\nexport type BaseRefForcePushedEvent = Node & {\n  __typename?: \"BaseRefForcePushedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the after commit SHA for the 'base_ref_force_pushed' event. */\n  afterCommit?: Maybe<Commit>;\n  /** Identifies the before commit SHA for the 'base_ref_force_pushed' event. */\n  beforeCommit?: Maybe<Commit>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the fully qualified ref name for the 'base_ref_force_pushed' event. */\n  ref?: Maybe<Ref>;\n};\n\n/** Represents a Git blame. */\nexport type Blame = {\n  __typename?: \"Blame\";\n  /** The list of ranges from a Git blame. */\n  ranges: Array<BlameRange>;\n};\n\n/** Represents a range of information from a Git blame. */\nexport type BlameRange = {\n  __typename?: \"BlameRange\";\n  /** Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change. */\n  age: Scalars[\"Int\"];\n  /** Identifies the line author */\n  commit: Commit;\n  /** The ending line for the range */\n  endingLine: Scalars[\"Int\"];\n  /** The starting line for the range */\n  startingLine: Scalars[\"Int\"];\n};\n\n/** Represents a Git blob. */\nexport type Blob = GitObject &\n  Node & {\n    __typename?: \"Blob\";\n    /** An abbreviated version of the Git object ID */\n    abbreviatedOid: Scalars[\"String\"];\n    /** Byte size of Blob object */\n    byteSize: Scalars[\"Int\"];\n    /** The HTTP path for this Git object */\n    commitResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this Git object */\n    commitUrl: Scalars[\"URI\"];\n    id: Scalars[\"ID\"];\n    /** Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding. */\n    isBinary?: Maybe<Scalars[\"Boolean\"]>;\n    /** Indicates whether the contents is truncated */\n    isTruncated: Scalars[\"Boolean\"];\n    /** The Git object ID */\n    oid: Scalars[\"GitObjectID\"];\n    /** The Repository the Git object belongs to */\n    repository: Repository;\n    /** UTF8 text data or null if the Blob is binary */\n    text?: Maybe<Scalars[\"String\"]>;\n  };\n\n/** A special type of user which takes actions on behalf of GitHub Apps. */\nexport type Bot = Actor &\n  Node &\n  UniformResourceLocatable & {\n    __typename?: \"Bot\";\n    /** A URL pointing to the GitHub App's public avatar. */\n    avatarUrl: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    id: Scalars[\"ID\"];\n    /** The username of the actor. */\n    login: Scalars[\"String\"];\n    /** The HTTP path for this bot */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this bot */\n    url: Scalars[\"URI\"];\n  };\n\n/** A special type of user which takes actions on behalf of GitHub Apps. */\nexport type BotAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Types which can be actors for `BranchActorAllowance` objects. */\nexport type BranchActorAllowanceActor = App | Team | User;\n\n/** A branch protection rule. */\nexport type BranchProtectionRule = Node & {\n  __typename?: \"BranchProtectionRule\";\n  /** Can this branch be deleted. */\n  allowsDeletions: Scalars[\"Boolean\"];\n  /** Are force pushes allowed on this branch. */\n  allowsForcePushes: Scalars[\"Boolean\"];\n  /** Is branch creation a protected operation. */\n  blocksCreations: Scalars[\"Boolean\"];\n  /** A list of conflicts matching branches protection rule and other branch protection rules */\n  branchProtectionRuleConflicts: BranchProtectionRuleConflictConnection;\n  /** A list of actors able to force push for this branch protection rule. */\n  bypassForcePushAllowances: BypassForcePushAllowanceConnection;\n  /** A list of actors able to bypass PRs for this branch protection rule. */\n  bypassPullRequestAllowances: BypassPullRequestAllowanceConnection;\n  /** The actor who created this branch protection rule. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** Will new commits pushed to matching branches dismiss pull request review approvals. */\n  dismissesStaleReviews: Scalars[\"Boolean\"];\n  id: Scalars[\"ID\"];\n  /** Can admins overwrite branch protection. */\n  isAdminEnforced: Scalars[\"Boolean\"];\n  /** Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing. */\n  lockAllowsFetchAndMerge: Scalars[\"Boolean\"];\n  /** Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. */\n  lockBranch: Scalars[\"Boolean\"];\n  /** Repository refs that are protected by this rule */\n  matchingRefs: RefConnection;\n  /** Identifies the protection rule pattern. */\n  pattern: Scalars[\"String\"];\n  /** A list push allowances for this branch protection rule. */\n  pushAllowances: PushAllowanceConnection;\n  /** The repository associated with this branch protection rule. */\n  repository?: Maybe<Repository>;\n  /** Whether the most recent push must be approved by someone other than the person who pushed it */\n  requireLastPushApproval: Scalars[\"Boolean\"];\n  /** Number of approving reviews required to update matching branches. */\n  requiredApprovingReviewCount?: Maybe<Scalars[\"Int\"]>;\n  /** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n  requiredStatusCheckContexts?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n  /** List of required status checks that must pass for commits to be accepted to matching branches. */\n  requiredStatusChecks?: Maybe<Array<RequiredStatusCheckDescription>>;\n  /** Are approving reviews required to update matching branches. */\n  requiresApprovingReviews: Scalars[\"Boolean\"];\n  /** Are reviews from code owners required to update matching branches. */\n  requiresCodeOwnerReviews: Scalars[\"Boolean\"];\n  /** Are commits required to be signed. */\n  requiresCommitSignatures: Scalars[\"Boolean\"];\n  /** Are conversations required to be resolved before merging. */\n  requiresConversationResolution: Scalars[\"Boolean\"];\n  /** Are merge commits prohibited from being pushed to this branch. */\n  requiresLinearHistory: Scalars[\"Boolean\"];\n  /** Are status checks required to update matching branches. */\n  requiresStatusChecks: Scalars[\"Boolean\"];\n  /** Are branches required to be up to date before merging. */\n  requiresStrictStatusChecks: Scalars[\"Boolean\"];\n  /** Is pushing to matching branches restricted. */\n  restrictsPushes: Scalars[\"Boolean\"];\n  /** Is dismissal of pull request reviews restricted. */\n  restrictsReviewDismissals: Scalars[\"Boolean\"];\n  /** A list review dismissal allowances for this branch protection rule. */\n  reviewDismissalAllowances: ReviewDismissalAllowanceConnection;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleBranchProtectionRuleConflictsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleBypassForcePushAllowancesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleBypassPullRequestAllowancesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleMatchingRefsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRulePushAllowancesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleReviewDismissalAllowancesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A conflict between two branch protection rules. */\nexport type BranchProtectionRuleConflict = {\n  __typename?: \"BranchProtectionRuleConflict\";\n  /** Identifies the branch protection rule. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** Identifies the conflicting branch protection rule. */\n  conflictingBranchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** Identifies the branch ref that has conflicting rules */\n  ref?: Maybe<Ref>;\n};\n\n/** The connection type for BranchProtectionRuleConflict. */\nexport type BranchProtectionRuleConflictConnection = {\n  __typename?: \"BranchProtectionRuleConflictConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<BranchProtectionRuleConflictEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<BranchProtectionRuleConflict>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type BranchProtectionRuleConflictEdge = {\n  __typename?: \"BranchProtectionRuleConflictEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<BranchProtectionRuleConflict>;\n};\n\n/** The connection type for BranchProtectionRule. */\nexport type BranchProtectionRuleConnection = {\n  __typename?: \"BranchProtectionRuleConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<BranchProtectionRuleEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<BranchProtectionRule>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type BranchProtectionRuleEdge = {\n  __typename?: \"BranchProtectionRuleEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<BranchProtectionRule>;\n};\n\n/** A user, team, or app who has the ability to bypass a force push requirement on a protected branch. */\nexport type BypassForcePushAllowance = Node & {\n  __typename?: \"BypassForcePushAllowance\";\n  /** The actor that can force push. */\n  actor?: Maybe<BranchActorAllowanceActor>;\n  /** Identifies the branch protection rule associated with the allowed user, team, or app. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  id: Scalars[\"ID\"];\n};\n\n/** The connection type for BypassForcePushAllowance. */\nexport type BypassForcePushAllowanceConnection = {\n  __typename?: \"BypassForcePushAllowanceConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<BypassForcePushAllowanceEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<BypassForcePushAllowance>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type BypassForcePushAllowanceEdge = {\n  __typename?: \"BypassForcePushAllowanceEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<BypassForcePushAllowance>;\n};\n\n/** A user, team, or app who has the ability to bypass a pull request requirement on a protected branch. */\nexport type BypassPullRequestAllowance = Node & {\n  __typename?: \"BypassPullRequestAllowance\";\n  /** The actor that can bypass. */\n  actor?: Maybe<BranchActorAllowanceActor>;\n  /** Identifies the branch protection rule associated with the allowed user, team, or app. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  id: Scalars[\"ID\"];\n};\n\n/** The connection type for BypassPullRequestAllowance. */\nexport type BypassPullRequestAllowanceConnection = {\n  __typename?: \"BypassPullRequestAllowanceConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<BypassPullRequestAllowanceEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<BypassPullRequestAllowance>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type BypassPullRequestAllowanceEdge = {\n  __typename?: \"BypassPullRequestAllowanceEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<BypassPullRequestAllowance>;\n};\n\n/** The Common Vulnerability Scoring System */\nexport type Cvss = {\n  __typename?: \"CVSS\";\n  /** The CVSS score associated with this advisory */\n  score: Scalars[\"Float\"];\n  /** The CVSS vector string associated with this advisory */\n  vectorString?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A common weakness enumeration */\nexport type Cwe = Node & {\n  __typename?: \"CWE\";\n  /** The id of the CWE */\n  cweId: Scalars[\"String\"];\n  /** A detailed description of this CWE */\n  description: Scalars[\"String\"];\n  id: Scalars[\"ID\"];\n  /** The name of this CWE */\n  name: Scalars[\"String\"];\n};\n\n/** The connection type for CWE. */\nexport type CweConnection = {\n  __typename?: \"CWEConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CweEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Cwe>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CweEdge = {\n  __typename?: \"CWEEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Cwe>;\n};\n\n/** Autogenerated input type of CancelEnterpriseAdminInvitation */\nexport type CancelEnterpriseAdminInvitationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the pending enterprise administrator invitation. */\n  invitationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of CancelEnterpriseAdminInvitation */\nexport type CancelEnterpriseAdminInvitationPayload = {\n  __typename?: \"CancelEnterpriseAdminInvitationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The invitation that was canceled. */\n  invitation?: Maybe<EnterpriseAdministratorInvitation>;\n  /** A message confirming the result of canceling an administrator invitation. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of CancelSponsorship */\nexport type CancelSponsorshipInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given. */\n  sponsorId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given. */\n  sponsorLogin?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given. */\n  sponsorableId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given. */\n  sponsorableLogin?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CancelSponsorship */\nexport type CancelSponsorshipPayload = {\n  __typename?: \"CancelSponsorshipPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The tier that was being used at the time of cancellation. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n};\n\n/** Autogenerated input type of ChangeUserStatus */\nexport type ChangeUserStatusInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., :grinning:. */\n  emoji?: InputMaybe<Scalars[\"String\"]>;\n  /** If set, the user status will not be shown after this date. */\n  expiresAt?: InputMaybe<Scalars[\"DateTime\"]>;\n  /** Whether this status should indicate you are not fully available on GitHub, e.g., you are away. */\n  limitedAvailability?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** A short description of your current status. */\n  message?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the organization whose members will be allowed to see the status. If omitted, the status will be publicly visible. */\n  organizationId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated return type of ChangeUserStatus */\nexport type ChangeUserStatusPayload = {\n  __typename?: \"ChangeUserStatusPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** Your updated status. */\n  status?: Maybe<UserStatus>;\n};\n\n/** A single check annotation. */\nexport type CheckAnnotation = {\n  __typename?: \"CheckAnnotation\";\n  /** The annotation's severity level. */\n  annotationLevel?: Maybe<CheckAnnotationLevel>;\n  /** The path to the file that this annotation was made on. */\n  blobUrl: Scalars[\"URI\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The position of this annotation. */\n  location: CheckAnnotationSpan;\n  /** The annotation's message. */\n  message: Scalars[\"String\"];\n  /** The path that this annotation was made on. */\n  path: Scalars[\"String\"];\n  /** Additional information about the annotation. */\n  rawDetails?: Maybe<Scalars[\"String\"]>;\n  /** The annotation's title */\n  title?: Maybe<Scalars[\"String\"]>;\n};\n\n/** The connection type for CheckAnnotation. */\nexport type CheckAnnotationConnection = {\n  __typename?: \"CheckAnnotationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CheckAnnotationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CheckAnnotation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Information from a check run analysis to specific lines of code. */\nexport type CheckAnnotationData = {\n  /** Represents an annotation's information level */\n  annotationLevel: CheckAnnotationLevel;\n  /** The location of the annotation */\n  location: CheckAnnotationRange;\n  /** A short description of the feedback for these lines of code. */\n  message: Scalars[\"String\"];\n  /** The path of the file to add an annotation to. */\n  path: Scalars[\"String\"];\n  /** Details about this annotation. */\n  rawDetails?: InputMaybe<Scalars[\"String\"]>;\n  /** The title that represents the annotation. */\n  title?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** An edge in a connection. */\nexport type CheckAnnotationEdge = {\n  __typename?: \"CheckAnnotationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CheckAnnotation>;\n};\n\n/** Represents an annotation's information level. */\nexport enum CheckAnnotationLevel {\n  /** An annotation indicating an inescapable error. */\n  Failure = \"FAILURE\",\n  /** An annotation indicating some information. */\n  Notice = \"NOTICE\",\n  /** An annotation indicating an ignorable error. */\n  Warning = \"WARNING\",\n}\n\n/** A character position in a check annotation. */\nexport type CheckAnnotationPosition = {\n  __typename?: \"CheckAnnotationPosition\";\n  /** Column number (1 indexed). */\n  column?: Maybe<Scalars[\"Int\"]>;\n  /** Line number (1 indexed). */\n  line: Scalars[\"Int\"];\n};\n\n/** Information from a check run analysis to specific lines of code. */\nexport type CheckAnnotationRange = {\n  /** The ending column of the range. */\n  endColumn?: InputMaybe<Scalars[\"Int\"]>;\n  /** The ending line of the range. */\n  endLine: Scalars[\"Int\"];\n  /** The starting column of the range. */\n  startColumn?: InputMaybe<Scalars[\"Int\"]>;\n  /** The starting line of the range. */\n  startLine: Scalars[\"Int\"];\n};\n\n/** An inclusive pair of positions for a check annotation. */\nexport type CheckAnnotationSpan = {\n  __typename?: \"CheckAnnotationSpan\";\n  /** End position (inclusive). */\n  end: CheckAnnotationPosition;\n  /** Start position (inclusive). */\n  start: CheckAnnotationPosition;\n};\n\n/** The possible states for a check suite or run conclusion. */\nexport enum CheckConclusionState {\n  /** The check suite or run requires action. */\n  ActionRequired = \"ACTION_REQUIRED\",\n  /** The check suite or run has been cancelled. */\n  Cancelled = \"CANCELLED\",\n  /** The check suite or run has failed. */\n  Failure = \"FAILURE\",\n  /** The check suite or run was neutral. */\n  Neutral = \"NEUTRAL\",\n  /** The check suite or run was skipped. */\n  Skipped = \"SKIPPED\",\n  /** The check suite or run was marked stale by GitHub. Only GitHub can use this conclusion. */\n  Stale = \"STALE\",\n  /** The check suite or run has failed at startup. */\n  StartupFailure = \"STARTUP_FAILURE\",\n  /** The check suite or run has succeeded. */\n  Success = \"SUCCESS\",\n  /** The check suite or run has timed out. */\n  TimedOut = \"TIMED_OUT\",\n}\n\n/** A check run. */\nexport type CheckRun = Node &\n  RequirableByPullRequest &\n  UniformResourceLocatable & {\n    __typename?: \"CheckRun\";\n    /** The check run's annotations */\n    annotations?: Maybe<CheckAnnotationConnection>;\n    /** The check suite that this run is a part of. */\n    checkSuite: CheckSuite;\n    /** Identifies the date and time when the check run was completed. */\n    completedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** The conclusion of the check run. */\n    conclusion?: Maybe<CheckConclusionState>;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The corresponding deployment for this job, if any */\n    deployment?: Maybe<Deployment>;\n    /** The URL from which to find full details of the check run on the integrator's site. */\n    detailsUrl?: Maybe<Scalars[\"URI\"]>;\n    /** A reference for the check run on the integrator's system. */\n    externalId?: Maybe<Scalars[\"String\"]>;\n    id: Scalars[\"ID\"];\n    /** Whether this is required to pass before merging for a specific pull request. */\n    isRequired: Scalars[\"Boolean\"];\n    /** The name of the check for this check run. */\n    name: Scalars[\"String\"];\n    /** Information about a pending deployment, if any, in this check run */\n    pendingDeploymentRequest?: Maybe<DeploymentRequest>;\n    /** The permalink to the check run summary. */\n    permalink: Scalars[\"URI\"];\n    /** The repository associated with this check run. */\n    repository: Repository;\n    /** The HTTP path for this check run. */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the date and time when the check run was started. */\n    startedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** The current status of the check run. */\n    status: CheckStatusState;\n    /** The check run's steps */\n    steps?: Maybe<CheckStepConnection>;\n    /** A string representing the check run's summary */\n    summary?: Maybe<Scalars[\"String\"]>;\n    /** A string representing the check run's text */\n    text?: Maybe<Scalars[\"String\"]>;\n    /** A string representing the check run */\n    title?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this check run. */\n    url: Scalars[\"URI\"];\n  };\n\n/** A check run. */\nexport type CheckRunAnnotationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A check run. */\nexport type CheckRunIsRequiredArgs = {\n  pullRequestId?: InputMaybe<Scalars[\"ID\"]>;\n  pullRequestNumber?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A check run. */\nexport type CheckRunStepsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  number?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Possible further actions the integrator can perform. */\nexport type CheckRunAction = {\n  /** A short explanation of what this action would do. */\n  description: Scalars[\"String\"];\n  /** A reference for the action on the integrator's system.  */\n  identifier: Scalars[\"String\"];\n  /** The text to be displayed on a button in the web UI. */\n  label: Scalars[\"String\"];\n};\n\n/** The connection type for CheckRun. */\nexport type CheckRunConnection = {\n  __typename?: \"CheckRunConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CheckRunEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CheckRun>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CheckRunEdge = {\n  __typename?: \"CheckRunEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CheckRun>;\n};\n\n/** The filters that are available when fetching check runs. */\nexport type CheckRunFilter = {\n  /** Filters the check runs created by this application ID. */\n  appId?: InputMaybe<Scalars[\"Int\"]>;\n  /** Filters the check runs by this name. */\n  checkName?: InputMaybe<Scalars[\"String\"]>;\n  /** Filters the check runs by this type. */\n  checkType?: InputMaybe<CheckRunType>;\n  /** Filters the check runs by these conclusions. */\n  conclusions?: InputMaybe<Array<CheckConclusionState>>;\n  /** Filters the check runs by this status. Superceded by statuses. */\n  status?: InputMaybe<CheckStatusState>;\n  /** Filters the check runs by this status. Overrides status. */\n  statuses?: InputMaybe<Array<CheckStatusState>>;\n};\n\n/** Descriptive details about the check run. */\nexport type CheckRunOutput = {\n  /** The annotations that are made as part of the check run. */\n  annotations?: InputMaybe<Array<CheckAnnotationData>>;\n  /** Images attached to the check run output displayed in the GitHub pull request UI. */\n  images?: InputMaybe<Array<CheckRunOutputImage>>;\n  /** The summary of the check run (supports Commonmark). */\n  summary: Scalars[\"String\"];\n  /** The details of the check run (supports Commonmark). */\n  text?: InputMaybe<Scalars[\"String\"]>;\n  /** A title to provide for this check run. */\n  title: Scalars[\"String\"];\n};\n\n/** Images attached to the check run output displayed in the GitHub pull request UI. */\nexport type CheckRunOutputImage = {\n  /** The alternative text for the image. */\n  alt: Scalars[\"String\"];\n  /** A short image description. */\n  caption?: InputMaybe<Scalars[\"String\"]>;\n  /** The full URL of the image. */\n  imageUrl: Scalars[\"URI\"];\n};\n\n/** The possible states of a check run in a status rollup. */\nexport enum CheckRunState {\n  /** The check run requires action. */\n  ActionRequired = \"ACTION_REQUIRED\",\n  /** The check run has been cancelled. */\n  Cancelled = \"CANCELLED\",\n  /** The check run has been completed. */\n  Completed = \"COMPLETED\",\n  /** The check run has failed. */\n  Failure = \"FAILURE\",\n  /** The check run is in progress. */\n  InProgress = \"IN_PROGRESS\",\n  /** The check run was neutral. */\n  Neutral = \"NEUTRAL\",\n  /** The check run is in pending state. */\n  Pending = \"PENDING\",\n  /** The check run has been queued. */\n  Queued = \"QUEUED\",\n  /** The check run was skipped. */\n  Skipped = \"SKIPPED\",\n  /** The check run was marked stale by GitHub. Only GitHub can use this conclusion. */\n  Stale = \"STALE\",\n  /** The check run has failed at startup. */\n  StartupFailure = \"STARTUP_FAILURE\",\n  /** The check run has succeeded. */\n  Success = \"SUCCESS\",\n  /** The check run has timed out. */\n  TimedOut = \"TIMED_OUT\",\n  /** The check run is in waiting state. */\n  Waiting = \"WAITING\",\n}\n\n/** Represents a count of the state of a check run. */\nexport type CheckRunStateCount = {\n  __typename?: \"CheckRunStateCount\";\n  /** The number of check runs with this state. */\n  count: Scalars[\"Int\"];\n  /** The state of a check run. */\n  state: CheckRunState;\n};\n\n/** The possible types of check runs. */\nexport enum CheckRunType {\n  /** Every check run available. */\n  All = \"ALL\",\n  /** The latest check run. */\n  Latest = \"LATEST\",\n}\n\n/** The possible states for a check suite or run status. */\nexport enum CheckStatusState {\n  /** The check suite or run has been completed. */\n  Completed = \"COMPLETED\",\n  /** The check suite or run is in progress. */\n  InProgress = \"IN_PROGRESS\",\n  /** The check suite or run is in pending state. */\n  Pending = \"PENDING\",\n  /** The check suite or run has been queued. */\n  Queued = \"QUEUED\",\n  /** The check suite or run has been requested. */\n  Requested = \"REQUESTED\",\n  /** The check suite or run is in waiting state. */\n  Waiting = \"WAITING\",\n}\n\n/** A single check step. */\nexport type CheckStep = {\n  __typename?: \"CheckStep\";\n  /** Identifies the date and time when the check step was completed. */\n  completedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** The conclusion of the check step. */\n  conclusion?: Maybe<CheckConclusionState>;\n  /** A reference for the check step on the integrator's system. */\n  externalId?: Maybe<Scalars[\"String\"]>;\n  /** The step's name. */\n  name: Scalars[\"String\"];\n  /** The index of the step in the list of steps of the parent check run. */\n  number: Scalars[\"Int\"];\n  /** Number of seconds to completion. */\n  secondsToCompletion?: Maybe<Scalars[\"Int\"]>;\n  /** Identifies the date and time when the check step was started. */\n  startedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** The current status of the check step. */\n  status: CheckStatusState;\n};\n\n/** The connection type for CheckStep. */\nexport type CheckStepConnection = {\n  __typename?: \"CheckStepConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CheckStepEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CheckStep>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CheckStepEdge = {\n  __typename?: \"CheckStepEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CheckStep>;\n};\n\n/** A check suite. */\nexport type CheckSuite = Node & {\n  __typename?: \"CheckSuite\";\n  /** The GitHub App which created this check suite. */\n  app?: Maybe<App>;\n  /** The name of the branch for this check suite. */\n  branch?: Maybe<Ref>;\n  /** The check runs associated with a check suite. */\n  checkRuns?: Maybe<CheckRunConnection>;\n  /** The commit for this check suite */\n  commit: Commit;\n  /** The conclusion of this check suite. */\n  conclusion?: Maybe<CheckConclusionState>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The user who triggered the check suite. */\n  creator?: Maybe<User>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** A list of open pull requests matching the check suite. */\n  matchingPullRequests?: Maybe<PullRequestConnection>;\n  /** The push that triggered this check suite. */\n  push?: Maybe<Push>;\n  /** The repository associated with this check suite. */\n  repository: Repository;\n  /** The HTTP path for this check suite */\n  resourcePath: Scalars[\"URI\"];\n  /** The status of this check suite. */\n  status: CheckStatusState;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The HTTP URL for this check suite */\n  url: Scalars[\"URI\"];\n  /** The workflow run associated with this check suite. */\n  workflowRun?: Maybe<WorkflowRun>;\n};\n\n/** A check suite. */\nexport type CheckSuiteCheckRunsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  filterBy?: InputMaybe<CheckRunFilter>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A check suite. */\nexport type CheckSuiteMatchingPullRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  baseRefName?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  headRefName?: InputMaybe<Scalars[\"String\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** The auto-trigger preferences that are available for check suites. */\nexport type CheckSuiteAutoTriggerPreference = {\n  /** The node ID of the application that owns the check suite. */\n  appId: Scalars[\"ID\"];\n  /** Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository. */\n  setting: Scalars[\"Boolean\"];\n};\n\n/** The connection type for CheckSuite. */\nexport type CheckSuiteConnection = {\n  __typename?: \"CheckSuiteConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CheckSuiteEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CheckSuite>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CheckSuiteEdge = {\n  __typename?: \"CheckSuiteEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CheckSuite>;\n};\n\n/** The filters that are available when fetching check suites. */\nexport type CheckSuiteFilter = {\n  /** Filters the check suites created by this application ID. */\n  appId?: InputMaybe<Scalars[\"Int\"]>;\n  /** Filters the check suites by this name. */\n  checkName?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** An object which can have its data claimed or claim data from another. */\nexport type Claimable = Mannequin | User;\n\n/** Autogenerated input type of ClearLabelsFromLabelable */\nexport type ClearLabelsFromLabelableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The id of the labelable object to clear the labels from. */\n  labelableId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ClearLabelsFromLabelable */\nexport type ClearLabelsFromLabelablePayload = {\n  __typename?: \"ClearLabelsFromLabelablePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The item that was unlabeled. */\n  labelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of ClearProjectV2ItemFieldValue */\nexport type ClearProjectV2ItemFieldValueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the field to be cleared. */\n  fieldId: Scalars[\"ID\"];\n  /** The ID of the item to be cleared. */\n  itemId: Scalars[\"ID\"];\n  /** The ID of the Project. */\n  projectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ClearProjectV2ItemFieldValue */\nexport type ClearProjectV2ItemFieldValuePayload = {\n  __typename?: \"ClearProjectV2ItemFieldValuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated item. */\n  projectV2Item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of CloneProject */\nexport type CloneProjectInput = {\n  /** The description of the project. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Whether or not to clone the source project's workflows. */\n  includeWorkflows: Scalars[\"Boolean\"];\n  /** The name of the project. */\n  name: Scalars[\"String\"];\n  /** The visibility of the project, defaults to false (private). */\n  public?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The source project to clone. */\n  sourceId: Scalars[\"ID\"];\n  /** The owner ID to create the project under. */\n  targetOwnerId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of CloneProject */\nexport type CloneProjectPayload = {\n  __typename?: \"CloneProjectPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The id of the JobStatus for populating cloned fields. */\n  jobStatusId?: Maybe<Scalars[\"String\"]>;\n  /** The new cloned project. */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of CloneTemplateRepository */\nexport type CloneTemplateRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** A short description of the new repository. */\n  description?: InputMaybe<Scalars[\"String\"]>;\n  /** Whether to copy all branches from the template to the new repository. Defaults to copying only the default branch of the template. */\n  includeAllBranches?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The name of the new repository. */\n  name: Scalars[\"String\"];\n  /** The ID of the owner for the new repository. */\n  ownerId: Scalars[\"ID\"];\n  /** The Node ID of the template repository. */\n  repositoryId: Scalars[\"ID\"];\n  /** Indicates the repository's visibility level. */\n  visibility: RepositoryVisibility;\n};\n\n/** Autogenerated return type of CloneTemplateRepository */\nexport type CloneTemplateRepositoryPayload = {\n  __typename?: \"CloneTemplateRepositoryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** An object that can be closed */\nexport type Closable = {\n  /** `true` if the object is closed (definition of closed may depend on type) */\n  closed: Scalars[\"Boolean\"];\n  /** Identifies the date and time when the object was closed. */\n  closedAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** Autogenerated input type of CloseIssue */\nexport type CloseIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the issue to be closed. */\n  issueId: Scalars[\"ID\"];\n  /** The reason the issue is to be closed. */\n  stateReason?: InputMaybe<IssueClosedStateReason>;\n};\n\n/** Autogenerated return type of CloseIssue */\nexport type CloseIssuePayload = {\n  __typename?: \"CloseIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The issue that was closed. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of ClosePullRequest */\nexport type ClosePullRequestInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the pull request to be closed. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ClosePullRequest */\nexport type ClosePullRequestPayload = {\n  __typename?: \"ClosePullRequestPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request that was closed. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'closed' event on any `Closable`. */\nexport type ClosedEvent = Node &\n  UniformResourceLocatable & {\n    __typename?: \"ClosedEvent\";\n    /** Identifies the actor who performed the event. */\n    actor?: Maybe<Actor>;\n    /** Object that was closed. */\n    closable: Closable;\n    /** Object which triggered the creation of this event. */\n    closer?: Maybe<Closer>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    id: Scalars[\"ID\"];\n    /** The HTTP path for this closed event. */\n    resourcePath: Scalars[\"URI\"];\n    /** The reason the issue state was changed to closed. */\n    stateReason?: Maybe<IssueStateReason>;\n    /** The HTTP URL for this closed event. */\n    url: Scalars[\"URI\"];\n  };\n\n/** The object which triggered a `ClosedEvent`. */\nexport type Closer = Commit | PullRequest;\n\n/** The Code of Conduct for a repository */\nexport type CodeOfConduct = Node & {\n  __typename?: \"CodeOfConduct\";\n  /** The body of the Code of Conduct */\n  body?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The key for the Code of Conduct */\n  key: Scalars[\"String\"];\n  /** The formal name of the Code of Conduct */\n  name: Scalars[\"String\"];\n  /** The HTTP path for this Code of Conduct */\n  resourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for this Code of Conduct */\n  url?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Collaborators affiliation level with a subject. */\nexport enum CollaboratorAffiliation {\n  /** All collaborators the authenticated user can see. */\n  All = \"ALL\",\n  /** All collaborators with permissions to an organization-owned subject, regardless of organization membership status. */\n  Direct = \"DIRECT\",\n  /** All outside collaborators of an organization-owned subject. */\n  Outside = \"OUTSIDE\",\n}\n\n/** Represents a comment. */\nexport type Comment = {\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** The body as Markdown. */\n  body: Scalars[\"String\"];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars[\"HTML\"];\n  /** The body rendered to text. */\n  bodyText: Scalars[\"String\"];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars[\"Boolean\"];\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars[\"ID\"];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars[\"Boolean\"];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars[\"Boolean\"];\n};\n\n/** Represents a comment. */\nexport type CommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A comment author association with repository. */\nexport enum CommentAuthorAssociation {\n  /** Author has been invited to collaborate on the repository. */\n  Collaborator = \"COLLABORATOR\",\n  /** Author has previously committed to the repository. */\n  Contributor = \"CONTRIBUTOR\",\n  /** Author has not previously committed to GitHub. */\n  FirstTimer = \"FIRST_TIMER\",\n  /** Author has not previously committed to the repository. */\n  FirstTimeContributor = \"FIRST_TIME_CONTRIBUTOR\",\n  /** Author is a placeholder for an unclaimed user. */\n  Mannequin = \"MANNEQUIN\",\n  /** Author is a member of the organization that owns the repository. */\n  Member = \"MEMBER\",\n  /** Author has no association with the repository. */\n  None = \"NONE\",\n  /** Author is the owner of the repository. */\n  Owner = \"OWNER\",\n}\n\n/** The possible errors that will prevent a user from updating a comment. */\nexport enum CommentCannotUpdateReason {\n  /** Unable to create comment because repository is archived. */\n  Archived = \"ARCHIVED\",\n  /** You cannot update this comment */\n  Denied = \"DENIED\",\n  /** You must be the author or have write access to this repository to update this comment. */\n  InsufficientAccess = \"INSUFFICIENT_ACCESS\",\n  /** Unable to create comment because issue is locked. */\n  Locked = \"LOCKED\",\n  /** You must be logged in to update this comment. */\n  LoginRequired = \"LOGIN_REQUIRED\",\n  /** Repository is under maintenance. */\n  Maintenance = \"MAINTENANCE\",\n  /** At least one email address must be verified to update this comment. */\n  VerifiedEmailRequired = \"VERIFIED_EMAIL_REQUIRED\",\n}\n\n/** Represents a 'comment_deleted' event on a given issue or pull request. */\nexport type CommentDeletedEvent = Node & {\n  __typename?: \"CommentDeletedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The user who authored the deleted comment. */\n  deletedCommentAuthor?: Maybe<Actor>;\n  id: Scalars[\"ID\"];\n};\n\n/** Represents a Git commit. */\nexport type Commit = GitObject &\n  Node &\n  Subscribable &\n  UniformResourceLocatable & {\n    __typename?: \"Commit\";\n    /** An abbreviated version of the Git object ID */\n    abbreviatedOid: Scalars[\"String\"];\n    /** The number of additions in this commit. */\n    additions: Scalars[\"Int\"];\n    /** The merged Pull Request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open Pull Requests associated with the commit */\n    associatedPullRequests?: Maybe<PullRequestConnection>;\n    /** Authorship details of the commit. */\n    author?: Maybe<GitActor>;\n    /** Check if the committer and the author match. */\n    authoredByCommitter: Scalars[\"Boolean\"];\n    /** The datetime when this commit was authored. */\n    authoredDate: Scalars[\"DateTime\"];\n    /**\n     * The list of authors for this commit based on the git author and the Co-authored-by\n     * message trailer. The git author will always be first.\n     *\n     */\n    authors: GitActorConnection;\n    /** Fetches `git blame` information. */\n    blame: Blame;\n    /**\n     * We recommend using the `changedFielsIfAvailable` field instead of `changedFiles`, as `changedFiles` will cause your request to return an error if GitHub is unable to calculate the number of changed files.\n     * @deprecated `changedFiles` will be removed. Use `changedFilesIfAvailable` instead. Removal on 2023-01-01 UTC.\n     */\n    changedFiles: Scalars[\"Int\"];\n    /** The number of changed files in this commit. If GitHub is unable to calculate the number of changed files (for example due to a timeout), this will return `null`. We recommend using this field instead of `changedFiles`. */\n    changedFilesIfAvailable?: Maybe<Scalars[\"Int\"]>;\n    /** The check suites associated with a commit. */\n    checkSuites?: Maybe<CheckSuiteConnection>;\n    /** Comments made on the commit. */\n    comments: CommitCommentConnection;\n    /** The HTTP path for this Git object */\n    commitResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this Git object */\n    commitUrl: Scalars[\"URI\"];\n    /** The datetime when this commit was committed. */\n    committedDate: Scalars[\"DateTime\"];\n    /** Check if committed via GitHub web UI. */\n    committedViaWeb: Scalars[\"Boolean\"];\n    /** Committer details of the commit. */\n    committer?: Maybe<GitActor>;\n    /** The number of deletions in this commit. */\n    deletions: Scalars[\"Int\"];\n    /** The deployments associated with a commit. */\n    deployments?: Maybe<DeploymentConnection>;\n    /** The tree entry representing the file located at the given path. */\n    file?: Maybe<TreeEntry>;\n    /** The linear commit history starting from (and including) this commit, in the same order as `git log`. */\n    history: CommitHistoryConnection;\n    id: Scalars[\"ID\"];\n    /** The Git commit message */\n    message: Scalars[\"String\"];\n    /** The Git commit message body */\n    messageBody: Scalars[\"String\"];\n    /** The commit message body rendered to HTML. */\n    messageBodyHTML: Scalars[\"HTML\"];\n    /** The Git commit message headline */\n    messageHeadline: Scalars[\"String\"];\n    /** The commit message headline rendered to HTML. */\n    messageHeadlineHTML: Scalars[\"HTML\"];\n    /** The Git object ID */\n    oid: Scalars[\"GitObjectID\"];\n    /** The organization this commit was made on behalf of. */\n    onBehalfOf?: Maybe<Organization>;\n    /** The parents of a commit. */\n    parents: CommitConnection;\n    /** The datetime when this commit was pushed. */\n    pushedDate?: Maybe<Scalars[\"DateTime\"]>;\n    /** The Repository this commit belongs to */\n    repository: Repository;\n    /** The HTTP path for this commit */\n    resourcePath: Scalars[\"URI\"];\n    /** Commit signing information, if present. */\n    signature?: Maybe<GitSignature>;\n    /** Status information for this commit */\n    status?: Maybe<Status>;\n    /** Check and Status rollup information for this commit. */\n    statusCheckRollup?: Maybe<StatusCheckRollup>;\n    /** Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file. */\n    submodules: SubmoduleConnection;\n    /**\n     * Returns a URL to download a tarball archive for a repository.\n     * Note: For private repositories, these links are temporary and expire after five minutes.\n     */\n    tarballUrl: Scalars[\"URI\"];\n    /** Commit's root Tree */\n    tree: Tree;\n    /** The HTTP path for the tree of this commit */\n    treeResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for the tree of this commit */\n    treeUrl: Scalars[\"URI\"];\n    /** The HTTP URL for this commit */\n    url: Scalars[\"URI\"];\n    /** Check if the viewer is able to change their subscription status for the repository. */\n    viewerCanSubscribe: Scalars[\"Boolean\"];\n    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n    viewerSubscription?: Maybe<SubscriptionState>;\n    /**\n     * Returns a URL to download a zipball archive for a repository.\n     * Note: For private repositories, these links are temporary and expire after five minutes.\n     */\n    zipballUrl: Scalars[\"URI\"];\n  };\n\n/** Represents a Git commit. */\nexport type CommitAssociatedPullRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<PullRequestOrder>;\n};\n\n/** Represents a Git commit. */\nexport type CommitAuthorsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitBlameArgs = {\n  path: Scalars[\"String\"];\n};\n\n/** Represents a Git commit. */\nexport type CommitCheckSuitesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  filterBy?: InputMaybe<CheckSuiteFilter>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitDeploymentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  environments?: InputMaybe<Array<Scalars[\"String\"]>>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<DeploymentOrder>;\n};\n\n/** Represents a Git commit. */\nexport type CommitFileArgs = {\n  path: Scalars[\"String\"];\n};\n\n/** Represents a Git commit. */\nexport type CommitHistoryArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  author?: InputMaybe<CommitAuthor>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  path?: InputMaybe<Scalars[\"String\"]>;\n  since?: InputMaybe<Scalars[\"GitTimestamp\"]>;\n  until?: InputMaybe<Scalars[\"GitTimestamp\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitParentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitSubmodulesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Specifies an author for filtering Git commits. */\nexport type CommitAuthor = {\n  /** Email addresses to filter by. Commits authored by any of the specified email addresses will be returned. */\n  emails?: InputMaybe<Array<Scalars[\"String\"]>>;\n  /** ID of a User to filter by. If non-null, only commits authored by this user will be returned. This field takes precedence over emails. */\n  id?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Represents a comment on a given Commit. */\nexport type CommitComment = Comment &\n  Deletable &\n  Minimizable &\n  Node &\n  Reactable &\n  RepositoryNode &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"CommitComment\";\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the subject of the comment. */\n    authorAssociation: CommentAuthorAssociation;\n    /** Identifies the comment body. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** Identifies the commit associated with the comment, if the commit exists. */\n    commit?: Maybe<Commit>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** Returns whether or not a comment has been minimized. */\n    isMinimized: Scalars[\"Boolean\"];\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation. */\n    minimizedReason?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the file path associated with the comment. */\n    path?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the line position associated with the comment. */\n    position?: Maybe<Scalars[\"Int\"]>;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** The HTTP path permalink for this commit comment. */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL permalink for this commit comment. */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Check if the current viewer can minimize this object. */\n    viewerCanMinimize: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n  };\n\n/** Represents a comment on a given Commit. */\nexport type CommitCommentReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** Represents a comment on a given Commit. */\nexport type CommitCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for CommitComment. */\nexport type CommitCommentConnection = {\n  __typename?: \"CommitCommentConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CommitCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CommitComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CommitCommentEdge = {\n  __typename?: \"CommitCommentEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CommitComment>;\n};\n\n/** A thread of comments on a commit. */\nexport type CommitCommentThread = Node &\n  RepositoryNode & {\n    __typename?: \"CommitCommentThread\";\n    /** The comments that exist in this thread. */\n    comments: CommitCommentConnection;\n    /** The commit the comments were made on. */\n    commit?: Maybe<Commit>;\n    id: Scalars[\"ID\"];\n    /** The file the comments were made on. */\n    path?: Maybe<Scalars[\"String\"]>;\n    /** The position in the diff for the commit that the comment was made on. */\n    position?: Maybe<Scalars[\"Int\"]>;\n    /** The repository associated with this node. */\n    repository: Repository;\n  };\n\n/** A thread of comments on a commit. */\nexport type CommitCommentThreadCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Commit. */\nexport type CommitConnection = {\n  __typename?: \"CommitConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CommitEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Commit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Ordering options for commit contribution connections. */\nexport type CommitContributionOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field by which to order commit contributions. */\n  field: CommitContributionOrderField;\n};\n\n/** Properties by which commit contribution connections can be ordered. */\nexport enum CommitContributionOrderField {\n  /** Order commit contributions by how many commits they represent. */\n  CommitCount = \"COMMIT_COUNT\",\n  /** Order commit contributions by when they were made. */\n  OccurredAt = \"OCCURRED_AT\",\n}\n\n/** This aggregates commits made by a user within one repository. */\nexport type CommitContributionsByRepository = {\n  __typename?: \"CommitContributionsByRepository\";\n  /** The commit contributions, each representing a day. */\n  contributions: CreatedCommitContributionConnection;\n  /** The repository in which the commits were made. */\n  repository: Repository;\n  /** The HTTP path for the user's commits to the repository in this time range. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for the user's commits to the repository in this time range. */\n  url: Scalars[\"URI\"];\n};\n\n/** This aggregates commits made by a user within one repository. */\nexport type CommitContributionsByRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<CommitContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type CommitEdge = {\n  __typename?: \"CommitEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Commit>;\n};\n\n/** The connection type for Commit. */\nexport type CommitHistoryConnection = {\n  __typename?: \"CommitHistoryConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CommitEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Commit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** A message to include with a new commit */\nexport type CommitMessage = {\n  /** The body of the message. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** The headline of the message. */\n  headline: Scalars[\"String\"];\n};\n\n/**\n * A git ref for a commit to be appended to.\n *\n * The ref must be a branch, i.e. its fully qualified name must start\n * with `refs/heads/` (although the input is not required to be fully\n * qualified).\n *\n * The Ref may be specified by its global node ID or by the\n * `repositoryNameWithOwner` and `branchName`.\n *\n * ### Examples\n *\n * Specify a branch using a global node ID:\n *\n *     { \"id\": \"MDM6UmVmMTpyZWZzL2hlYWRzL21haW4=\" }\n *\n * Specify a branch using `repositoryNameWithOwner` and `branchName`:\n *\n *     {\n *       \"repositoryNameWithOwner\": \"github/graphql-client\",\n *       \"branchName\": \"main\"\n *     }\n *\n *\n */\nexport type CommittableBranch = {\n  /** The unqualified name of the branch to append the commit to. */\n  branchName?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the Ref to be updated. */\n  id?: InputMaybe<Scalars[\"ID\"]>;\n  /** The nameWithOwner of the repository to commit to. */\n  repositoryNameWithOwner?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Represents a comparison between two commit revisions. */\nexport type Comparison = Node & {\n  __typename?: \"Comparison\";\n  /** The number of commits ahead of the base branch. */\n  aheadBy: Scalars[\"Int\"];\n  /** The base revision of this comparison. */\n  baseTarget: GitObject;\n  /** The number of commits behind the base branch. */\n  behindBy: Scalars[\"Int\"];\n  /** The commits which compose this comparison. */\n  commits: ComparisonCommitConnection;\n  /** The head revision of this comparison. */\n  headTarget: GitObject;\n  id: Scalars[\"ID\"];\n  /** The status of this comparison. */\n  status: ComparisonStatus;\n};\n\n/** Represents a comparison between two commit revisions. */\nexport type ComparisonCommitsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Commit. */\nexport type ComparisonCommitConnection = {\n  __typename?: \"ComparisonCommitConnection\";\n  /** The total count of authors and co-authors across all commits. */\n  authorCount: Scalars[\"Int\"];\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CommitEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Commit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** The status of a git comparison between two refs. */\nexport enum ComparisonStatus {\n  /** The head ref is ahead of the base ref. */\n  Ahead = \"AHEAD\",\n  /** The head ref is behind the base ref. */\n  Behind = \"BEHIND\",\n  /** The head ref is both ahead and behind of the base ref, indicating git history has diverged. */\n  Diverged = \"DIVERGED\",\n  /** The head ref and base ref are identical. */\n  Identical = \"IDENTICAL\",\n}\n\n/** Represents a 'connected' event on a given issue or pull request. */\nexport type ConnectedEvent = Node & {\n  __typename?: \"ConnectedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Reference originated in a different repository. */\n  isCrossRepository: Scalars[\"Boolean\"];\n  /** Issue or pull request that made the reference. */\n  source: ReferencedSubject;\n  /** Issue or pull request which was connected. */\n  subject: ReferencedSubject;\n};\n\n/** Represents a contribution a user made on GitHub, such as opening an issue. */\nexport type Contribution = {\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   *\n   */\n  isRestricted: Scalars[\"Boolean\"];\n  /** When this contribution was made. */\n  occurredAt: Scalars[\"DateTime\"];\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this contribution. */\n  url: Scalars[\"URI\"];\n  /**\n   * The user who made this contribution.\n   *\n   */\n  user: User;\n};\n\n/** A calendar of contributions made on GitHub by a user. */\nexport type ContributionCalendar = {\n  __typename?: \"ContributionCalendar\";\n  /** A list of hex color codes used in this calendar. The darker the color, the more contributions it represents. */\n  colors: Array<Scalars[\"String\"]>;\n  /** Determine if the color set was chosen because it's currently Halloween. */\n  isHalloween: Scalars[\"Boolean\"];\n  /** A list of the months of contributions in this calendar. */\n  months: Array<ContributionCalendarMonth>;\n  /** The count of total contributions in the calendar. */\n  totalContributions: Scalars[\"Int\"];\n  /** A list of the weeks of contributions in this calendar. */\n  weeks: Array<ContributionCalendarWeek>;\n};\n\n/** Represents a single day of contributions on GitHub by a user. */\nexport type ContributionCalendarDay = {\n  __typename?: \"ContributionCalendarDay\";\n  /** The hex color code that represents how many contributions were made on this day compared to others in the calendar. */\n  color: Scalars[\"String\"];\n  /** How many contributions were made by the user on this day. */\n  contributionCount: Scalars[\"Int\"];\n  /** Indication of contributions, relative to other days. Can be used to indicate which color to represent this day on a calendar. */\n  contributionLevel: ContributionLevel;\n  /** The day this square represents. */\n  date: Scalars[\"Date\"];\n  /** A number representing which day of the week this square represents, e.g., 1 is Monday. */\n  weekday: Scalars[\"Int\"];\n};\n\n/** A month of contributions in a user's contribution graph. */\nexport type ContributionCalendarMonth = {\n  __typename?: \"ContributionCalendarMonth\";\n  /** The date of the first day of this month. */\n  firstDay: Scalars[\"Date\"];\n  /** The name of the month. */\n  name: Scalars[\"String\"];\n  /** How many weeks started in this month. */\n  totalWeeks: Scalars[\"Int\"];\n  /** The year the month occurred in. */\n  year: Scalars[\"Int\"];\n};\n\n/** A week of contributions in a user's contribution graph. */\nexport type ContributionCalendarWeek = {\n  __typename?: \"ContributionCalendarWeek\";\n  /** The days of contributions in this week. */\n  contributionDays: Array<ContributionCalendarDay>;\n  /** The date of the earliest square in this week. */\n  firstDay: Scalars[\"Date\"];\n};\n\n/** Varying levels of contributions from none to many. */\nexport enum ContributionLevel {\n  /** Lowest 25% of days of contributions. */\n  FirstQuartile = \"FIRST_QUARTILE\",\n  /** Highest 25% of days of contributions. More contributions than the third quartile. */\n  FourthQuartile = \"FOURTH_QUARTILE\",\n  /** No contributions occurred. */\n  None = \"NONE\",\n  /** Second lowest 25% of days of contributions. More contributions than the first quartile. */\n  SecondQuartile = \"SECOND_QUARTILE\",\n  /** Second highest 25% of days of contributions. More contributions than second quartile, less than the fourth quartile. */\n  ThirdQuartile = \"THIRD_QUARTILE\",\n}\n\n/** Ordering options for contribution connections. */\nexport type ContributionOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollection = {\n  __typename?: \"ContributionsCollection\";\n  /** Commit contributions made by the user, grouped by repository. */\n  commitContributionsByRepository: Array<CommitContributionsByRepository>;\n  /** A calendar of this user's contributions on GitHub. */\n  contributionCalendar: ContributionCalendar;\n  /** The years the user has been making contributions with the most recent year first. */\n  contributionYears: Array<Scalars[\"Int\"]>;\n  /**\n   * Determine if this collection's time span ends in the current month.\n   *\n   */\n  doesEndInCurrentMonth: Scalars[\"Boolean\"];\n  /** The date of the first restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts. */\n  earliestRestrictedContributionDate?: Maybe<Scalars[\"Date\"]>;\n  /** The ending date and time of this collection. */\n  endedAt: Scalars[\"DateTime\"];\n  /** The first issue the user opened on GitHub. This will be null if that issue was opened outside the collection's time range and ignoreTimeRange is false. If the issue is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned. */\n  firstIssueContribution?: Maybe<CreatedIssueOrRestrictedContribution>;\n  /** The first pull request the user opened on GitHub. This will be null if that pull request was opened outside the collection's time range and ignoreTimeRange is not true. If the pull request is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned. */\n  firstPullRequestContribution?: Maybe<CreatedPullRequestOrRestrictedContribution>;\n  /** The first repository the user created on GitHub. This will be null if that first repository was created outside the collection's time range and ignoreTimeRange is false. If the repository is not visible, then a RestrictedContribution is returned. */\n  firstRepositoryContribution?: Maybe<CreatedRepositoryOrRestrictedContribution>;\n  /** Does the user have any more activity in the timeline that occurred prior to the collection's time range? */\n  hasActivityInThePast: Scalars[\"Boolean\"];\n  /** Determine if there are any contributions in this collection. */\n  hasAnyContributions: Scalars[\"Boolean\"];\n  /** Determine if the user made any contributions in this time frame whose details are not visible because they were made in a private repository. Can only be true if the user enabled private contribution counts. */\n  hasAnyRestrictedContributions: Scalars[\"Boolean\"];\n  /** Whether or not the collector's time span is all within the same day. */\n  isSingleDay: Scalars[\"Boolean\"];\n  /** A list of issues the user opened. */\n  issueContributions: CreatedIssueContributionConnection;\n  /** Issue contributions made by the user, grouped by repository. */\n  issueContributionsByRepository: Array<IssueContributionsByRepository>;\n  /** When the user signed up for GitHub. This will be null if that sign up date falls outside the collection's time range and ignoreTimeRange is false. */\n  joinedGitHubContribution?: Maybe<JoinedGitHubContribution>;\n  /** The date of the most recent restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts. */\n  latestRestrictedContributionDate?: Maybe<Scalars[\"Date\"]>;\n  /**\n   * When this collection's time range does not include any activity from the user, use this\n   * to get a different collection from an earlier time range that does have activity.\n   *\n   */\n  mostRecentCollectionWithActivity?: Maybe<ContributionsCollection>;\n  /**\n   * Returns a different contributions collection from an earlier time range than this one\n   * that does not have any contributions.\n   *\n   */\n  mostRecentCollectionWithoutActivity?: Maybe<ContributionsCollection>;\n  /**\n   * The issue the user opened on GitHub that received the most comments in the specified\n   * time frame.\n   *\n   */\n  popularIssueContribution?: Maybe<CreatedIssueContribution>;\n  /**\n   * The pull request the user opened on GitHub that received the most comments in the\n   * specified time frame.\n   *\n   */\n  popularPullRequestContribution?: Maybe<CreatedPullRequestContribution>;\n  /** Pull request contributions made by the user. */\n  pullRequestContributions: CreatedPullRequestContributionConnection;\n  /** Pull request contributions made by the user, grouped by repository. */\n  pullRequestContributionsByRepository: Array<PullRequestContributionsByRepository>;\n  /**\n   * Pull request review contributions made by the user. Returns the most recently\n   * submitted review for each PR reviewed by the user.\n   *\n   */\n  pullRequestReviewContributions: CreatedPullRequestReviewContributionConnection;\n  /** Pull request review contributions made by the user, grouped by repository. */\n  pullRequestReviewContributionsByRepository: Array<PullRequestReviewContributionsByRepository>;\n  /** A list of repositories owned by the user that the user created in this time range. */\n  repositoryContributions: CreatedRepositoryContributionConnection;\n  /** A count of contributions made by the user that the viewer cannot access. Only non-zero when the user has chosen to share their private contribution counts. */\n  restrictedContributionsCount: Scalars[\"Int\"];\n  /** The beginning date and time of this collection. */\n  startedAt: Scalars[\"DateTime\"];\n  /** How many commits were made by the user in this time span. */\n  totalCommitContributions: Scalars[\"Int\"];\n  /** How many issues the user opened. */\n  totalIssueContributions: Scalars[\"Int\"];\n  /** How many pull requests the user opened. */\n  totalPullRequestContributions: Scalars[\"Int\"];\n  /** How many pull request reviews the user left. */\n  totalPullRequestReviewContributions: Scalars[\"Int\"];\n  /** How many different repositories the user committed to. */\n  totalRepositoriesWithContributedCommits: Scalars[\"Int\"];\n  /** How many different repositories the user opened issues in. */\n  totalRepositoriesWithContributedIssues: Scalars[\"Int\"];\n  /** How many different repositories the user left pull request reviews in. */\n  totalRepositoriesWithContributedPullRequestReviews: Scalars[\"Int\"];\n  /** How many different repositories the user opened pull requests in. */\n  totalRepositoriesWithContributedPullRequests: Scalars[\"Int\"];\n  /** How many repositories the user created. */\n  totalRepositoryContributions: Scalars[\"Int\"];\n  /** The user who made the contributions in this collection. */\n  user: User;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionCommitContributionsByRepositoryArgs = {\n  maxRepositories?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionIssueContributionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludePopular?: InputMaybe<Scalars[\"Boolean\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionIssueContributionsByRepositoryArgs = {\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludePopular?: InputMaybe<Scalars[\"Boolean\"]>;\n  maxRepositories?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestContributionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludePopular?: InputMaybe<Scalars[\"Boolean\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestContributionsByRepositoryArgs = {\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludePopular?: InputMaybe<Scalars[\"Boolean\"]>;\n  maxRepositories?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestReviewContributionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestReviewContributionsByRepositoryArgs = {\n  maxRepositories?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalIssueContributionsArgs = {\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludePopular?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalPullRequestContributionsArgs = {\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludePopular?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoriesWithContributedIssuesArgs = {\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludePopular?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoriesWithContributedPullRequestsArgs = {\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludePopular?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoryContributionsArgs = {\n  excludeFirst?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** Autogenerated input type of ConvertProjectCardNoteToIssue */\nexport type ConvertProjectCardNoteToIssueInput = {\n  /** The body of the newly created issue. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ProjectCard ID to convert. */\n  projectCardId: Scalars[\"ID\"];\n  /** The ID of the repository to create the issue in. */\n  repositoryId: Scalars[\"ID\"];\n  /** The title of the newly created issue. Defaults to the card's note text. */\n  title?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ConvertProjectCardNoteToIssue */\nexport type ConvertProjectCardNoteToIssuePayload = {\n  __typename?: \"ConvertProjectCardNoteToIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated ProjectCard. */\n  projectCard?: Maybe<ProjectCard>;\n};\n\n/** Autogenerated input type of ConvertPullRequestToDraft */\nexport type ConvertPullRequestToDraftInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the pull request to convert to draft */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ConvertPullRequestToDraft */\nexport type ConvertPullRequestToDraftPayload = {\n  __typename?: \"ConvertPullRequestToDraftPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request that is now a draft. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'convert_to_draft' event on a given pull request. */\nexport type ConvertToDraftEvent = Node &\n  UniformResourceLocatable & {\n    __typename?: \"ConvertToDraftEvent\";\n    /** Identifies the actor who performed the event. */\n    actor?: Maybe<Actor>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    id: Scalars[\"ID\"];\n    /** PullRequest referenced by event. */\n    pullRequest: PullRequest;\n    /** The HTTP path for this convert to draft event. */\n    resourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this convert to draft event. */\n    url: Scalars[\"URI\"];\n  };\n\n/** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\nexport type ConvertedNoteToIssueEvent = Node & {\n  __typename?: \"ConvertedNoteToIssueEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n};\n\n/** Represents a 'converted_to_discussion' event on a given issue. */\nexport type ConvertedToDiscussionEvent = Node & {\n  __typename?: \"ConvertedToDiscussionEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The discussion that the issue was converted into. */\n  discussion?: Maybe<Discussion>;\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated input type of CreateAttributionInvitation */\nexport type CreateAttributionInvitationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the owner scoping the reattributable data. */\n  ownerId: Scalars[\"ID\"];\n  /** The Node ID of the account owning the data to reattribute. */\n  sourceId: Scalars[\"ID\"];\n  /** The Node ID of the account which may claim the data. */\n  targetId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of CreateAttributionInvitation */\nexport type CreateAttributionInvitationPayload = {\n  __typename?: \"CreateAttributionInvitationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The owner scoping the reattributable data. */\n  owner?: Maybe<Organization>;\n  /** The account owning the data to reattribute. */\n  source?: Maybe<Claimable>;\n  /** The account which may claim the data. */\n  target?: Maybe<Claimable>;\n};\n\n/** Autogenerated input type of CreateBranchProtectionRule */\nexport type CreateBranchProtectionRuleInput = {\n  /** Can this branch be deleted. */\n  allowsDeletions?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are force pushes allowed on this branch. */\n  allowsForcePushes?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Is branch creation a protected operation. */\n  blocksCreations?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** A list of User, Team, or App IDs allowed to bypass force push targeting matching branches. */\n  bypassForcePushActorIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches. */\n  bypassPullRequestActorIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Will new commits pushed to matching branches dismiss pull request review approvals. */\n  dismissesStaleReviews?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Can admins overwrite branch protection. */\n  isAdminEnforced?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing. */\n  lockAllowsFetchAndMerge?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. */\n  lockBranch?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The glob-like pattern used to determine matching branches. */\n  pattern: Scalars[\"String\"];\n  /** A list of User, Team, or App IDs allowed to push to matching branches. */\n  pushActorIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The global relay id of the repository in which a new branch protection rule should be created in. */\n  repositoryId: Scalars[\"ID\"];\n  /** Whether the most recent push must be approved by someone other than the person who pushed it */\n  requireLastPushApproval?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Number of approving reviews required to update matching branches. */\n  requiredApprovingReviewCount?: InputMaybe<Scalars[\"Int\"]>;\n  /** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n  requiredStatusCheckContexts?: InputMaybe<Array<Scalars[\"String\"]>>;\n  /** The list of required status checks */\n  requiredStatusChecks?: InputMaybe<Array<RequiredStatusCheckInput>>;\n  /** Are approving reviews required to update matching branches. */\n  requiresApprovingReviews?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are reviews from code owners required to update matching branches. */\n  requiresCodeOwnerReviews?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are commits required to be signed. */\n  requiresCommitSignatures?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are conversations required to be resolved before merging. */\n  requiresConversationResolution?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are merge commits prohibited from being pushed to this branch. */\n  requiresLinearHistory?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are status checks required to update matching branches. */\n  requiresStatusChecks?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are branches required to be up to date before merging. */\n  requiresStrictStatusChecks?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Is pushing to matching branches restricted. */\n  restrictsPushes?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Is dismissal of pull request reviews restricted. */\n  restrictsReviewDismissals?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches. */\n  reviewDismissalActorIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n};\n\n/** Autogenerated return type of CreateBranchProtectionRule */\nexport type CreateBranchProtectionRulePayload = {\n  __typename?: \"CreateBranchProtectionRulePayload\";\n  /** The newly created BranchProtectionRule. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of CreateCheckRun */\nexport type CreateCheckRunInput = {\n  /** Possible further actions the integrator can perform, which a user may trigger. */\n  actions?: InputMaybe<Array<CheckRunAction>>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The time that the check run finished. */\n  completedAt?: InputMaybe<Scalars[\"DateTime\"]>;\n  /** The final conclusion of the check. */\n  conclusion?: InputMaybe<CheckConclusionState>;\n  /** The URL of the integrator's site that has the full details of the check. */\n  detailsUrl?: InputMaybe<Scalars[\"URI\"]>;\n  /** A reference for the run on the integrator's system. */\n  externalId?: InputMaybe<Scalars[\"String\"]>;\n  /** The SHA of the head commit. */\n  headSha: Scalars[\"GitObjectID\"];\n  /** The name of the check. */\n  name: Scalars[\"String\"];\n  /** Descriptive details about the run. */\n  output?: InputMaybe<CheckRunOutput>;\n  /** The node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n  /** The time that the check run began. */\n  startedAt?: InputMaybe<Scalars[\"DateTime\"]>;\n  /** The current status. */\n  status?: InputMaybe<RequestableCheckStatusState>;\n};\n\n/** Autogenerated return type of CreateCheckRun */\nexport type CreateCheckRunPayload = {\n  __typename?: \"CreateCheckRunPayload\";\n  /** The newly created check run. */\n  checkRun?: Maybe<CheckRun>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of CreateCheckSuite */\nexport type CreateCheckSuiteInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The SHA of the head commit. */\n  headSha: Scalars[\"GitObjectID\"];\n  /** The Node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of CreateCheckSuite */\nexport type CreateCheckSuitePayload = {\n  __typename?: \"CreateCheckSuitePayload\";\n  /** The newly created check suite. */\n  checkSuite?: Maybe<CheckSuite>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of CreateCommitOnBranch */\nexport type CreateCommitOnBranchInput = {\n  /** The Ref to be updated.  Must be a branch. */\n  branch: CommittableBranch;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The git commit oid expected at the head of the branch prior to the commit */\n  expectedHeadOid: Scalars[\"GitObjectID\"];\n  /** A description of changes to files in this commit. */\n  fileChanges?: InputMaybe<FileChanges>;\n  /** The commit message the be included with the commit. */\n  message: CommitMessage;\n};\n\n/** Autogenerated return type of CreateCommitOnBranch */\nexport type CreateCommitOnBranchPayload = {\n  __typename?: \"CreateCommitOnBranchPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new commit. */\n  commit?: Maybe<Commit>;\n  /** The ref which has been updated to point to the new commit. */\n  ref?: Maybe<Ref>;\n};\n\n/** Autogenerated input type of CreateDiscussion */\nexport type CreateDiscussionInput = {\n  /** The body of the discussion. */\n  body: Scalars[\"String\"];\n  /** The id of the discussion category to associate with this discussion. */\n  categoryId: Scalars[\"ID\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The id of the repository on which to create the discussion. */\n  repositoryId: Scalars[\"ID\"];\n  /** The title of the discussion. */\n  title: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of CreateDiscussion */\nexport type CreateDiscussionPayload = {\n  __typename?: \"CreateDiscussionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The discussion that was just created. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of CreateEnterpriseOrganization */\nexport type CreateEnterpriseOrganizationInput = {\n  /** The logins for the administrators of the new organization. */\n  adminLogins: Array<Scalars[\"String\"]>;\n  /** The email used for sending billing receipts. */\n  billingEmail: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise owning the new organization. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The login of the new organization. */\n  login: Scalars[\"String\"];\n  /** The profile name of the new organization. */\n  profileName: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of CreateEnterpriseOrganization */\nexport type CreateEnterpriseOrganizationPayload = {\n  __typename?: \"CreateEnterpriseOrganizationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise that owns the created organization. */\n  enterprise?: Maybe<Enterprise>;\n  /** The organization that was created. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of CreateEnvironment */\nexport type CreateEnvironmentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the environment. */\n  name: Scalars[\"String\"];\n  /** The node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of CreateEnvironment */\nexport type CreateEnvironmentPayload = {\n  __typename?: \"CreateEnvironmentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new or existing environment. */\n  environment?: Maybe<Environment>;\n};\n\n/** Autogenerated input type of CreateIpAllowListEntry */\nexport type CreateIpAllowListEntryInput = {\n  /** An IP address or range of addresses in CIDR notation. */\n  allowListValue: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Whether the IP allow list entry is active when an IP allow list is enabled. */\n  isActive: Scalars[\"Boolean\"];\n  /** An optional name for the IP allow list entry. */\n  name?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the owner for which to create the new IP allow list entry. */\n  ownerId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of CreateIpAllowListEntry */\nexport type CreateIpAllowListEntryPayload = {\n  __typename?: \"CreateIpAllowListEntryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The IP allow list entry that was created. */\n  ipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of CreateIssue */\nexport type CreateIssueInput = {\n  /** The Node ID for the user assignee for this issue. */\n  assigneeIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The body for the issue description. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of an issue template in the repository, assigns labels and assignees from the template to the issue */\n  issueTemplate?: InputMaybe<Scalars[\"String\"]>;\n  /** An array of Node IDs of labels for this issue. */\n  labelIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The Node ID of the milestone for this issue. */\n  milestoneId?: InputMaybe<Scalars[\"ID\"]>;\n  /** An array of Node IDs for projects associated with this issue. */\n  projectIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n  /** The title for the issue. */\n  title: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of CreateIssue */\nexport type CreateIssuePayload = {\n  __typename?: \"CreateIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new issue. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of CreateLinkedBranch */\nexport type CreateLinkedBranchInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the issue to link to. */\n  issueId: Scalars[\"ID\"];\n  /** The name of the new branch. Defaults to issue number and title. */\n  name?: InputMaybe<Scalars[\"String\"]>;\n  /** The commit SHA to base the new branch on. */\n  oid: Scalars[\"GitObjectID\"];\n  /** ID of the repository to create the branch in. Defaults to the issue repository. */\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated return type of CreateLinkedBranch */\nexport type CreateLinkedBranchPayload = {\n  __typename?: \"CreateLinkedBranchPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new branch issue reference. */\n  linkedBranch?: Maybe<LinkedBranch>;\n};\n\n/** Autogenerated input type of CreateMigrationSource */\nexport type CreateMigrationSourceInput = {\n  /** The migration source access token. */\n  accessToken?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The GitHub personal access token of the user importing to the target repository. */\n  githubPat?: InputMaybe<Scalars[\"String\"]>;\n  /** The migration source name. */\n  name: Scalars[\"String\"];\n  /** The ID of the organization that will own the migration source. */\n  ownerId: Scalars[\"ID\"];\n  /** The migration source type. */\n  type: MigrationSourceType;\n  /** The migration source URL. */\n  url: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of CreateMigrationSource */\nexport type CreateMigrationSourcePayload = {\n  __typename?: \"CreateMigrationSourcePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The created migration source. */\n  migrationSource?: Maybe<MigrationSource>;\n};\n\n/** Autogenerated input type of CreateProject */\nexport type CreateProjectInput = {\n  /** The description of project. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of project. */\n  name: Scalars[\"String\"];\n  /** The owner ID to create the project under. */\n  ownerId: Scalars[\"ID\"];\n  /** A list of repository IDs to create as linked repositories for the project */\n  repositoryIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The name of the GitHub-provided template. */\n  template?: InputMaybe<ProjectTemplate>;\n};\n\n/** Autogenerated return type of CreateProject */\nexport type CreateProjectPayload = {\n  __typename?: \"CreateProjectPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new project. */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of CreateProjectV2 */\nexport type CreateProjectV2Input = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The owner ID to create the project under. */\n  ownerId: Scalars[\"ID\"];\n  /** The repository to link the project to. */\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The team to link the project to. The team will be granted read permissions. */\n  teamId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The title of the project. */\n  title: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of CreateProjectV2 */\nexport type CreateProjectV2Payload = {\n  __typename?: \"CreateProjectV2Payload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new project. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Autogenerated input type of CreatePullRequest */\nexport type CreatePullRequestInput = {\n  /**\n   * The name of the branch you want your changes pulled into. This should be an existing branch\n   * on the current repository. You cannot update the base branch on a pull request to point\n   * to another repository.\n   *\n   */\n  baseRefName: Scalars[\"String\"];\n  /** The contents of the pull request. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Indicates whether this pull request should be a draft. */\n  draft?: InputMaybe<Scalars[\"Boolean\"]>;\n  /**\n   * The name of the branch where your changes are implemented. For cross-repository pull requests\n   * in the same network, namespace `head_ref_name` with a user like this: `username:branch`.\n   *\n   */\n  headRefName: Scalars[\"String\"];\n  /** The Node ID of the head repository. */\n  headRepositoryId?: InputMaybe<Scalars[\"ID\"]>;\n  /** Indicates whether maintainers can modify the pull request. */\n  maintainerCanModify?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n  /** The title of the pull request. */\n  title: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of CreatePullRequest */\nexport type CreatePullRequestPayload = {\n  __typename?: \"CreatePullRequestPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of CreateRef */\nexport type CreateRefInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The fully qualified name of the new Ref (ie: `refs/heads/my_new_branch`). */\n  name: Scalars[\"String\"];\n  /** The GitObjectID that the new Ref shall target. Must point to a commit. */\n  oid: Scalars[\"GitObjectID\"];\n  /** The Node ID of the Repository to create the Ref in. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of CreateRef */\nexport type CreateRefPayload = {\n  __typename?: \"CreateRefPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The newly created ref. */\n  ref?: Maybe<Ref>;\n};\n\n/** Autogenerated input type of CreateRepository */\nexport type CreateRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** A short description of the new repository. */\n  description?: InputMaybe<Scalars[\"String\"]>;\n  /** Indicates if the repository should have the issues feature enabled. */\n  hasIssuesEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Indicates if the repository should have the wiki feature enabled. */\n  hasWikiEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The URL for a web page about this repository. */\n  homepageUrl?: InputMaybe<Scalars[\"URI\"]>;\n  /** The name of the new repository. */\n  name: Scalars[\"String\"];\n  /** The ID of the owner for the new repository. */\n  ownerId?: InputMaybe<Scalars[\"ID\"]>;\n  /** When an organization is specified as the owner, this ID identifies the team that should be granted access to the new repository. */\n  teamId?: InputMaybe<Scalars[\"ID\"]>;\n  /** Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure. */\n  template?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Indicates the repository's visibility level. */\n  visibility: RepositoryVisibility;\n};\n\n/** Autogenerated return type of CreateRepository */\nexport type CreateRepositoryPayload = {\n  __typename?: \"CreateRepositoryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of CreateSponsorsListing */\nexport type CreateSponsorsListingInput = {\n  /** The country or region where the sponsorable's bank account is located. Required if fiscalHostLogin is not specified, ignored when fiscalHostLogin is specified. */\n  billingCountryOrRegionCode?: InputMaybe<SponsorsCountryOrRegionCode>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The email address we should use to contact you about the GitHub Sponsors profile being created. This will not be shared publicly. Must be a verified email address already on your GitHub account. Only relevant when the sponsorable is yourself. Defaults to your primary email address on file if omitted. */\n  contactEmail?: InputMaybe<Scalars[\"String\"]>;\n  /** The username of the supported fiscal host's GitHub organization, if you want to receive sponsorship payouts through a fiscal host rather than directly to a bank account. For example, 'Open-Source-Collective' for Open Source Collective or 'numfocus' for numFOCUS. Case insensitive. See https://docs.github.com/sponsors/receiving-sponsorships-through-github-sponsors/using-a-fiscal-host-to-receive-github-sponsors-payouts for more information. */\n  fiscalHostLogin?: InputMaybe<Scalars[\"String\"]>;\n  /** The URL for your profile page on the fiscal host's website, e.g., https://opencollective.com/babel or https://numfocus.org/project/bokeh. Required if fiscalHostLogin is specified. */\n  fiscallyHostedProjectProfileUrl?: InputMaybe<Scalars[\"String\"]>;\n  /** Provide an introduction to serve as the main focus that appears on your GitHub Sponsors profile. It's a great opportunity to help potential sponsors learn more about you, your work, and why their sponsorship is important to you. GitHub-flavored Markdown is supported. */\n  fullDescription?: InputMaybe<Scalars[\"String\"]>;\n  /** The country or region where the sponsorable resides. This is for tax purposes. Required if the sponsorable is yourself, ignored when sponsorableLogin specifies an organization. */\n  residenceCountryOrRegionCode?: InputMaybe<SponsorsCountryOrRegionCode>;\n  /** The username of the organization to create a GitHub Sponsors profile for, if desired. Defaults to creating a GitHub Sponsors profile for the authenticated user if omitted. */\n  sponsorableLogin?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateSponsorsListing */\nexport type CreateSponsorsListingPayload = {\n  __typename?: \"CreateSponsorsListingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new GitHub Sponsors profile. */\n  sponsorsListing?: Maybe<SponsorsListing>;\n};\n\n/** Autogenerated input type of CreateSponsorsTier */\nexport type CreateSponsorsTierInput = {\n  /** The value of the new tier in US dollars. Valid values: 1-12000. */\n  amount: Scalars[\"Int\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** A description of what this tier is, what perks sponsors might receive, what a sponsorship at this tier means for you, etc. */\n  description: Scalars[\"String\"];\n  /** Whether sponsorships using this tier should happen monthly/yearly or just once. */\n  isRecurring?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Whether to make the tier available immediately for sponsors to choose. Defaults to creating a draft tier that will not be publicly visible. */\n  publish?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Optional ID of the private repository that sponsors at this tier should gain read-only access to. Must be owned by an organization. */\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n  /** Optional name of the private repository that sponsors at this tier should gain read-only access to. Must be owned by an organization. Necessary if repositoryOwnerLogin is given. Will be ignored if repositoryId is given. */\n  repositoryName?: InputMaybe<Scalars[\"String\"]>;\n  /** Optional login of the organization owner of the private repository that sponsors at this tier should gain read-only access to. Necessary if repositoryName is given. Will be ignored if repositoryId is given. */\n  repositoryOwnerLogin?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the user or organization who owns the GitHub Sponsors profile. Defaults to the current user if omitted and sponsorableLogin is not given. */\n  sponsorableId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The username of the user or organization who owns the GitHub Sponsors profile. Defaults to the current user if omitted and sponsorableId is not given. */\n  sponsorableLogin?: InputMaybe<Scalars[\"String\"]>;\n  /** Optional message new sponsors at this tier will receive. */\n  welcomeMessage?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateSponsorsTier */\nexport type CreateSponsorsTierPayload = {\n  __typename?: \"CreateSponsorsTierPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new tier. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n};\n\n/** Autogenerated input type of CreateSponsorship */\nexport type CreateSponsorshipInput = {\n  /** The amount to pay to the sponsorable in US dollars. Required if a tierId is not specified. Valid values: 1-12000. */\n  amount?: InputMaybe<Scalars[\"Int\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Whether the sponsorship should happen monthly/yearly or just this one time. Required if a tierId is not specified. */\n  isRecurring?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Specify whether others should be able to see that the sponsor is sponsoring the sponsorable. Public visibility still does not reveal which tier is used. */\n  privacyLevel?: InputMaybe<SponsorshipPrivacy>;\n  /** Whether the sponsor should receive email updates from the sponsorable. */\n  receiveEmails?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given. */\n  sponsorId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given. */\n  sponsorLogin?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given. */\n  sponsorableId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given. */\n  sponsorableLogin?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of one of sponsorable's existing tiers to sponsor at. Required if amount is not specified. */\n  tierId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated return type of CreateSponsorship */\nexport type CreateSponsorshipPayload = {\n  __typename?: \"CreateSponsorshipPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The sponsorship that was started. */\n  sponsorship?: Maybe<Sponsorship>;\n};\n\n/** Autogenerated input type of CreateTeamDiscussionComment */\nexport type CreateTeamDiscussionCommentInput = {\n  /** The content of the comment. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the discussion to which the comment belongs. */\n  discussionId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of CreateTeamDiscussionComment */\nexport type CreateTeamDiscussionCommentPayload = {\n  __typename?: \"CreateTeamDiscussionCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new comment. */\n  teamDiscussionComment?: Maybe<TeamDiscussionComment>;\n};\n\n/** Autogenerated input type of CreateTeamDiscussion */\nexport type CreateTeamDiscussionInput = {\n  /** The content of the discussion. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** If true, restricts the visibility of this discussion to team members and organization admins. If false or not specified, allows any organization member to view this discussion. */\n  private?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The ID of the team to which the discussion belongs. */\n  teamId: Scalars[\"ID\"];\n  /** The title of the discussion. */\n  title: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of CreateTeamDiscussion */\nexport type CreateTeamDiscussionPayload = {\n  __typename?: \"CreateTeamDiscussionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new discussion. */\n  teamDiscussion?: Maybe<TeamDiscussion>;\n};\n\n/** Represents the contribution a user made by committing to a repository. */\nexport type CreatedCommitContribution = Contribution & {\n  __typename?: \"CreatedCommitContribution\";\n  /** How many commits were made on this day to this repository by the user. */\n  commitCount: Scalars[\"Int\"];\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   *\n   */\n  isRestricted: Scalars[\"Boolean\"];\n  /** When this contribution was made. */\n  occurredAt: Scalars[\"DateTime\"];\n  /** The repository the user made a commit in. */\n  repository: Repository;\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this contribution. */\n  url: Scalars[\"URI\"];\n  /**\n   * The user who made this contribution.\n   *\n   */\n  user: User;\n};\n\n/** The connection type for CreatedCommitContribution. */\nexport type CreatedCommitContributionConnection = {\n  __typename?: \"CreatedCommitContributionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedCommitContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedCommitContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /**\n   * Identifies the total count of commits across days and repositories in the connection.\n   *\n   */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedCommitContributionEdge = {\n  __typename?: \"CreatedCommitContributionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedCommitContribution>;\n};\n\n/** Represents the contribution a user made on GitHub by opening an issue. */\nexport type CreatedIssueContribution = Contribution & {\n  __typename?: \"CreatedIssueContribution\";\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   *\n   */\n  isRestricted: Scalars[\"Boolean\"];\n  /** The issue that was opened. */\n  issue: Issue;\n  /** When this contribution was made. */\n  occurredAt: Scalars[\"DateTime\"];\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this contribution. */\n  url: Scalars[\"URI\"];\n  /**\n   * The user who made this contribution.\n   *\n   */\n  user: User;\n};\n\n/** The connection type for CreatedIssueContribution. */\nexport type CreatedIssueContributionConnection = {\n  __typename?: \"CreatedIssueContributionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedIssueContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedIssueContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedIssueContributionEdge = {\n  __typename?: \"CreatedIssueContributionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedIssueContribution>;\n};\n\n/** Represents either a issue the viewer can access or a restricted contribution. */\nexport type CreatedIssueOrRestrictedContribution = CreatedIssueContribution | RestrictedContribution;\n\n/** Represents the contribution a user made on GitHub by opening a pull request. */\nexport type CreatedPullRequestContribution = Contribution & {\n  __typename?: \"CreatedPullRequestContribution\";\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   *\n   */\n  isRestricted: Scalars[\"Boolean\"];\n  /** When this contribution was made. */\n  occurredAt: Scalars[\"DateTime\"];\n  /** The pull request that was opened. */\n  pullRequest: PullRequest;\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this contribution. */\n  url: Scalars[\"URI\"];\n  /**\n   * The user who made this contribution.\n   *\n   */\n  user: User;\n};\n\n/** The connection type for CreatedPullRequestContribution. */\nexport type CreatedPullRequestContributionConnection = {\n  __typename?: \"CreatedPullRequestContributionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedPullRequestContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedPullRequestContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedPullRequestContributionEdge = {\n  __typename?: \"CreatedPullRequestContributionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedPullRequestContribution>;\n};\n\n/** Represents either a pull request the viewer can access or a restricted contribution. */\nexport type CreatedPullRequestOrRestrictedContribution = CreatedPullRequestContribution | RestrictedContribution;\n\n/** Represents the contribution a user made by leaving a review on a pull request. */\nexport type CreatedPullRequestReviewContribution = Contribution & {\n  __typename?: \"CreatedPullRequestReviewContribution\";\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   *\n   */\n  isRestricted: Scalars[\"Boolean\"];\n  /** When this contribution was made. */\n  occurredAt: Scalars[\"DateTime\"];\n  /** The pull request the user reviewed. */\n  pullRequest: PullRequest;\n  /** The review the user left on the pull request. */\n  pullRequestReview: PullRequestReview;\n  /** The repository containing the pull request that the user reviewed. */\n  repository: Repository;\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this contribution. */\n  url: Scalars[\"URI\"];\n  /**\n   * The user who made this contribution.\n   *\n   */\n  user: User;\n};\n\n/** The connection type for CreatedPullRequestReviewContribution. */\nexport type CreatedPullRequestReviewContributionConnection = {\n  __typename?: \"CreatedPullRequestReviewContributionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedPullRequestReviewContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedPullRequestReviewContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedPullRequestReviewContributionEdge = {\n  __typename?: \"CreatedPullRequestReviewContributionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedPullRequestReviewContribution>;\n};\n\n/** Represents the contribution a user made on GitHub by creating a repository. */\nexport type CreatedRepositoryContribution = Contribution & {\n  __typename?: \"CreatedRepositoryContribution\";\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   *\n   */\n  isRestricted: Scalars[\"Boolean\"];\n  /** When this contribution was made. */\n  occurredAt: Scalars[\"DateTime\"];\n  /** The repository that was created. */\n  repository: Repository;\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this contribution. */\n  url: Scalars[\"URI\"];\n  /**\n   * The user who made this contribution.\n   *\n   */\n  user: User;\n};\n\n/** The connection type for CreatedRepositoryContribution. */\nexport type CreatedRepositoryContributionConnection = {\n  __typename?: \"CreatedRepositoryContributionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedRepositoryContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedRepositoryContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedRepositoryContributionEdge = {\n  __typename?: \"CreatedRepositoryContributionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedRepositoryContribution>;\n};\n\n/** Represents either a repository the viewer can access or a restricted contribution. */\nexport type CreatedRepositoryOrRestrictedContribution = CreatedRepositoryContribution | RestrictedContribution;\n\n/** Represents a mention made by one issue or pull request to another. */\nexport type CrossReferencedEvent = Node &\n  UniformResourceLocatable & {\n    __typename?: \"CrossReferencedEvent\";\n    /** Identifies the actor who performed the event. */\n    actor?: Maybe<Actor>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    id: Scalars[\"ID\"];\n    /** Reference originated in a different repository. */\n    isCrossRepository: Scalars[\"Boolean\"];\n    /** Identifies when the reference was made. */\n    referencedAt: Scalars[\"DateTime\"];\n    /** The HTTP path for this pull request. */\n    resourcePath: Scalars[\"URI\"];\n    /** Issue or pull request that made the reference. */\n    source: ReferencedSubject;\n    /** Issue or pull request to which the reference was made. */\n    target: ReferencedSubject;\n    /** The HTTP URL for this pull request. */\n    url: Scalars[\"URI\"];\n    /** Checks if the target will be closed when the source is merged. */\n    willCloseTarget: Scalars[\"Boolean\"];\n  };\n\n/** Autogenerated input type of DeclineTopicSuggestion */\nexport type DeclineTopicSuggestionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the suggested topic. */\n  name: Scalars[\"String\"];\n  /** The reason why the suggested topic is declined. */\n  reason: TopicSuggestionDeclineReason;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeclineTopicSuggestion */\nexport type DeclineTopicSuggestionPayload = {\n  __typename?: \"DeclineTopicSuggestionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The declined topic. */\n  topic?: Maybe<Topic>;\n};\n\n/** The possible base permissions for repositories. */\nexport enum DefaultRepositoryPermissionField {\n  /** Can read, write, and administrate repos by default */\n  Admin = \"ADMIN\",\n  /** No access */\n  None = \"NONE\",\n  /** Can read repos by default */\n  Read = \"READ\",\n  /** Can read and write repos by default */\n  Write = \"WRITE\",\n}\n\n/** Entities that can be deleted. */\nexport type Deletable = {\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars[\"Boolean\"];\n};\n\n/** Autogenerated input type of DeleteBranchProtectionRule */\nexport type DeleteBranchProtectionRuleInput = {\n  /** The global relay id of the branch protection rule to be deleted. */\n  branchProtectionRuleId: Scalars[\"ID\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteBranchProtectionRule */\nexport type DeleteBranchProtectionRulePayload = {\n  __typename?: \"DeleteBranchProtectionRulePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteDeployment */\nexport type DeleteDeploymentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the deployment to be deleted. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteDeployment */\nexport type DeleteDeploymentPayload = {\n  __typename?: \"DeleteDeploymentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteDiscussionComment */\nexport type DeleteDiscussionCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node id of the discussion comment to delete. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteDiscussionComment */\nexport type DeleteDiscussionCommentPayload = {\n  __typename?: \"DeleteDiscussionCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The discussion comment that was just deleted. */\n  comment?: Maybe<DiscussionComment>;\n};\n\n/** Autogenerated input type of DeleteDiscussion */\nexport type DeleteDiscussionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The id of the discussion to delete. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteDiscussion */\nexport type DeleteDiscussionPayload = {\n  __typename?: \"DeleteDiscussionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The discussion that was just deleted. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of DeleteEnvironment */\nexport type DeleteEnvironmentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the environment to be deleted. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteEnvironment */\nexport type DeleteEnvironmentPayload = {\n  __typename?: \"DeleteEnvironmentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteIpAllowListEntry */\nexport type DeleteIpAllowListEntryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the IP allow list entry to delete. */\n  ipAllowListEntryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteIpAllowListEntry */\nexport type DeleteIpAllowListEntryPayload = {\n  __typename?: \"DeleteIpAllowListEntryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The IP allow list entry that was deleted. */\n  ipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of DeleteIssueComment */\nexport type DeleteIssueCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the comment to delete. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteIssueComment */\nexport type DeleteIssueCommentPayload = {\n  __typename?: \"DeleteIssueCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteIssue */\nexport type DeleteIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the issue to delete. */\n  issueId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteIssue */\nexport type DeleteIssuePayload = {\n  __typename?: \"DeleteIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The repository the issue belonged to */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of DeleteLinkedBranch */\nexport type DeleteLinkedBranchInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the linked branch */\n  linkedBranchId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteLinkedBranch */\nexport type DeleteLinkedBranchPayload = {\n  __typename?: \"DeleteLinkedBranchPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The issue the linked branch was unlinked from. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of DeleteProjectCard */\nexport type DeleteProjectCardInput = {\n  /** The id of the card to delete. */\n  cardId: Scalars[\"ID\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteProjectCard */\nexport type DeleteProjectCardPayload = {\n  __typename?: \"DeleteProjectCardPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The column the deleted card was in. */\n  column?: Maybe<ProjectColumn>;\n  /** The deleted card ID. */\n  deletedCardId?: Maybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated input type of DeleteProjectColumn */\nexport type DeleteProjectColumnInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The id of the column to delete. */\n  columnId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteProjectColumn */\nexport type DeleteProjectColumnPayload = {\n  __typename?: \"DeleteProjectColumnPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The deleted column ID. */\n  deletedColumnId?: Maybe<Scalars[\"ID\"]>;\n  /** The project the deleted column was in. */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of DeleteProject */\nexport type DeleteProjectInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Project ID to update. */\n  projectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteProject */\nexport type DeleteProjectPayload = {\n  __typename?: \"DeleteProjectPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The repository or organization the project was removed from. */\n  owner?: Maybe<ProjectOwner>;\n};\n\n/** Autogenerated input type of DeleteProjectV2Item */\nexport type DeleteProjectV2ItemInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the item to be removed. */\n  itemId: Scalars[\"ID\"];\n  /** The ID of the Project from which the item should be removed. */\n  projectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteProjectV2Item */\nexport type DeleteProjectV2ItemPayload = {\n  __typename?: \"DeleteProjectV2ItemPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The ID of the deleted item. */\n  deletedItemId?: Maybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated input type of DeletePullRequestReviewComment */\nexport type DeletePullRequestReviewCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the comment to delete. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeletePullRequestReviewComment */\nexport type DeletePullRequestReviewCommentPayload = {\n  __typename?: \"DeletePullRequestReviewCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request review the deleted comment belonged to. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n  /** The deleted pull request review comment. */\n  pullRequestReviewComment?: Maybe<PullRequestReviewComment>;\n};\n\n/** Autogenerated input type of DeletePullRequestReview */\nexport type DeletePullRequestReviewInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the pull request review to delete. */\n  pullRequestReviewId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeletePullRequestReview */\nexport type DeletePullRequestReviewPayload = {\n  __typename?: \"DeletePullRequestReviewPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The deleted pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** Autogenerated input type of DeleteRef */\nexport type DeleteRefInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the Ref to be deleted. */\n  refId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteRef */\nexport type DeleteRefPayload = {\n  __typename?: \"DeleteRefPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteTeamDiscussionComment */\nexport type DeleteTeamDiscussionCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the comment to delete. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteTeamDiscussionComment */\nexport type DeleteTeamDiscussionCommentPayload = {\n  __typename?: \"DeleteTeamDiscussionCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteTeamDiscussion */\nexport type DeleteTeamDiscussionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The discussion ID to delete. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteTeamDiscussion */\nexport type DeleteTeamDiscussionPayload = {\n  __typename?: \"DeleteTeamDiscussionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteVerifiableDomain */\nexport type DeleteVerifiableDomainInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the verifiable domain to delete. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DeleteVerifiableDomain */\nexport type DeleteVerifiableDomainPayload = {\n  __typename?: \"DeleteVerifiableDomainPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The owning account from which the domain was deleted. */\n  owner?: Maybe<VerifiableDomainOwner>;\n};\n\n/** Represents a 'demilestoned' event on a given issue or pull request. */\nexport type DemilestonedEvent = Node & {\n  __typename?: \"DemilestonedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Identifies the milestone title associated with the 'demilestoned' event. */\n  milestoneTitle: Scalars[\"String\"];\n  /** Object referenced by event. */\n  subject: MilestoneItem;\n};\n\n/** A Dependabot Update for a dependency in a repository */\nexport type DependabotUpdate = RepositoryNode & {\n  __typename?: \"DependabotUpdate\";\n  /** The error from a dependency update */\n  error?: Maybe<DependabotUpdateError>;\n  /** The associated pull request */\n  pullRequest?: Maybe<PullRequest>;\n  /** The repository associated with this node. */\n  repository: Repository;\n};\n\n/** An error produced from a Dependabot Update */\nexport type DependabotUpdateError = {\n  __typename?: \"DependabotUpdateError\";\n  /** The body of the error */\n  body: Scalars[\"String\"];\n  /** The error code */\n  errorType: Scalars[\"String\"];\n  /** The title of the error */\n  title: Scalars[\"String\"];\n};\n\n/** The possible ecosystems of a dependency graph package. */\nexport enum DependencyGraphEcosystem {\n  /** GitHub Actions */\n  Actions = \"ACTIONS\",\n  /** PHP packages hosted at packagist.org */\n  Composer = \"COMPOSER\",\n  /** Go modules */\n  Go = \"GO\",\n  /** Java artifacts hosted at the Maven central repository */\n  Maven = \"MAVEN\",\n  /** JavaScript packages hosted at npmjs.com */\n  Npm = \"NPM\",\n  /** .NET packages hosted at the NuGet Gallery */\n  Nuget = \"NUGET\",\n  /** Python packages hosted at PyPI.org */\n  Pip = \"PIP\",\n  /** Dart packages hosted at pub.dev */\n  Pub = \"PUB\",\n  /** Ruby gems hosted at RubyGems.org */\n  Rubygems = \"RUBYGEMS\",\n  /** Rust crates */\n  Rust = \"RUST\",\n}\n\n/** A repository deploy key. */\nexport type DeployKey = Node & {\n  __typename?: \"DeployKey\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** The deploy key. */\n  key: Scalars[\"String\"];\n  /** Whether or not the deploy key is read only. */\n  readOnly: Scalars[\"Boolean\"];\n  /** The deploy key title. */\n  title: Scalars[\"String\"];\n  /** Whether or not the deploy key has been verified. */\n  verified: Scalars[\"Boolean\"];\n};\n\n/** The connection type for DeployKey. */\nexport type DeployKeyConnection = {\n  __typename?: \"DeployKeyConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeployKeyEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeployKey>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeployKeyEdge = {\n  __typename?: \"DeployKeyEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeployKey>;\n};\n\n/** Represents a 'deployed' event on a given pull request. */\nexport type DeployedEvent = Node & {\n  __typename?: \"DeployedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The deployment associated with the 'deployed' event. */\n  deployment: Deployment;\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** The ref associated with the 'deployed' event. */\n  ref?: Maybe<Ref>;\n};\n\n/** Represents triggered deployment instance. */\nexport type Deployment = Node & {\n  __typename?: \"Deployment\";\n  /** Identifies the commit sha of the deployment. */\n  commit?: Maybe<Commit>;\n  /** Identifies the oid of the deployment commit, even if the commit has been deleted. */\n  commitOid: Scalars[\"String\"];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the actor who triggered the deployment. */\n  creator: Actor;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The deployment description. */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** The latest environment to which this deployment was made. */\n  environment?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The latest environment to which this deployment was made. */\n  latestEnvironment?: Maybe<Scalars[\"String\"]>;\n  /** The latest status of this deployment. */\n  latestStatus?: Maybe<DeploymentStatus>;\n  /** The original environment to which this deployment was made. */\n  originalEnvironment?: Maybe<Scalars[\"String\"]>;\n  /** Extra information that a deployment system might need. */\n  payload?: Maybe<Scalars[\"String\"]>;\n  /** Identifies the Ref of the deployment, if the deployment was created by ref. */\n  ref?: Maybe<Ref>;\n  /** Identifies the repository associated with the deployment. */\n  repository: Repository;\n  /** The current state of the deployment. */\n  state?: Maybe<DeploymentState>;\n  /** A list of statuses associated with the deployment. */\n  statuses?: Maybe<DeploymentStatusConnection>;\n  /** The deployment task. */\n  task?: Maybe<Scalars[\"String\"]>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** Represents triggered deployment instance. */\nexport type DeploymentStatusesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Deployment. */\nexport type DeploymentConnection = {\n  __typename?: \"DeploymentConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Deployment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeploymentEdge = {\n  __typename?: \"DeploymentEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Deployment>;\n};\n\n/** Represents a 'deployment_environment_changed' event on a given pull request. */\nexport type DeploymentEnvironmentChangedEvent = Node & {\n  __typename?: \"DeploymentEnvironmentChangedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The deployment status that updated the deployment environment. */\n  deploymentStatus: DeploymentStatus;\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Ordering options for deployment connections */\nexport type DeploymentOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order deployments by. */\n  field: DeploymentOrderField;\n};\n\n/** Properties by which deployment connections can be ordered. */\nexport enum DeploymentOrderField {\n  /** Order collection by creation time */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** A protection rule. */\nexport type DeploymentProtectionRule = {\n  __typename?: \"DeploymentProtectionRule\";\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The teams or users that can review the deployment */\n  reviewers: DeploymentReviewerConnection;\n  /** The timeout in minutes for this protection rule. */\n  timeout: Scalars[\"Int\"];\n  /** The type of protection rule. */\n  type: DeploymentProtectionRuleType;\n};\n\n/** A protection rule. */\nexport type DeploymentProtectionRuleReviewersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for DeploymentProtectionRule. */\nexport type DeploymentProtectionRuleConnection = {\n  __typename?: \"DeploymentProtectionRuleConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentProtectionRuleEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentProtectionRule>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeploymentProtectionRuleEdge = {\n  __typename?: \"DeploymentProtectionRuleEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentProtectionRule>;\n};\n\n/** The possible protection rule types. */\nexport enum DeploymentProtectionRuleType {\n  /** Required reviewers */\n  RequiredReviewers = \"REQUIRED_REVIEWERS\",\n  /** Wait timer */\n  WaitTimer = \"WAIT_TIMER\",\n}\n\n/** A request to deploy a workflow run to an environment. */\nexport type DeploymentRequest = {\n  __typename?: \"DeploymentRequest\";\n  /** Whether or not the current user can approve the deployment */\n  currentUserCanApprove: Scalars[\"Boolean\"];\n  /** The target environment of the deployment */\n  environment: Environment;\n  /** The teams or users that can review the deployment */\n  reviewers: DeploymentReviewerConnection;\n  /** The wait timer in minutes configured in the environment */\n  waitTimer: Scalars[\"Int\"];\n  /** The wait timer in minutes configured in the environment */\n  waitTimerStartedAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** A request to deploy a workflow run to an environment. */\nexport type DeploymentRequestReviewersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for DeploymentRequest. */\nexport type DeploymentRequestConnection = {\n  __typename?: \"DeploymentRequestConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentRequestEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentRequest>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeploymentRequestEdge = {\n  __typename?: \"DeploymentRequestEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentRequest>;\n};\n\n/** A deployment review. */\nexport type DeploymentReview = Node & {\n  __typename?: \"DeploymentReview\";\n  /** The comment the user left. */\n  comment: Scalars[\"String\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The environments approved or rejected */\n  environments: EnvironmentConnection;\n  id: Scalars[\"ID\"];\n  /** The decision of the user. */\n  state: DeploymentReviewState;\n  /** The user that reviewed the deployment. */\n  user: User;\n};\n\n/** A deployment review. */\nexport type DeploymentReviewEnvironmentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for DeploymentReview. */\nexport type DeploymentReviewConnection = {\n  __typename?: \"DeploymentReviewConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentReviewEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentReview>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeploymentReviewEdge = {\n  __typename?: \"DeploymentReviewEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentReview>;\n};\n\n/** The possible states for a deployment review. */\nexport enum DeploymentReviewState {\n  /** The deployment was approved. */\n  Approved = \"APPROVED\",\n  /** The deployment was rejected. */\n  Rejected = \"REJECTED\",\n}\n\n/** Users and teams. */\nexport type DeploymentReviewer = Team | User;\n\n/** The connection type for DeploymentReviewer. */\nexport type DeploymentReviewerConnection = {\n  __typename?: \"DeploymentReviewerConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentReviewerEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentReviewer>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeploymentReviewerEdge = {\n  __typename?: \"DeploymentReviewerEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentReviewer>;\n};\n\n/** The possible states in which a deployment can be. */\nexport enum DeploymentState {\n  /** The pending deployment was not updated after 30 minutes. */\n  Abandoned = \"ABANDONED\",\n  /** The deployment is currently active. */\n  Active = \"ACTIVE\",\n  /** An inactive transient deployment. */\n  Destroyed = \"DESTROYED\",\n  /** The deployment experienced an error. */\n  Error = \"ERROR\",\n  /** The deployment has failed. */\n  Failure = \"FAILURE\",\n  /** The deployment is inactive. */\n  Inactive = \"INACTIVE\",\n  /** The deployment is in progress. */\n  InProgress = \"IN_PROGRESS\",\n  /** The deployment is pending. */\n  Pending = \"PENDING\",\n  /** The deployment has queued */\n  Queued = \"QUEUED\",\n  /** The deployment is waiting. */\n  Waiting = \"WAITING\",\n}\n\n/** Describes the status of a given deployment attempt. */\nexport type DeploymentStatus = Node & {\n  __typename?: \"DeploymentStatus\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the actor who triggered the deployment. */\n  creator: Actor;\n  /** Identifies the deployment associated with status. */\n  deployment: Deployment;\n  /** Identifies the description of the deployment. */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Identifies the environment URL of the deployment. */\n  environmentUrl?: Maybe<Scalars[\"URI\"]>;\n  id: Scalars[\"ID\"];\n  /** Identifies the log URL of the deployment. */\n  logUrl?: Maybe<Scalars[\"URI\"]>;\n  /** Identifies the current state of the deployment. */\n  state: DeploymentStatusState;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** The connection type for DeploymentStatus. */\nexport type DeploymentStatusConnection = {\n  __typename?: \"DeploymentStatusConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentStatusEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentStatus>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeploymentStatusEdge = {\n  __typename?: \"DeploymentStatusEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentStatus>;\n};\n\n/** The possible states for a deployment status. */\nexport enum DeploymentStatusState {\n  /** The deployment experienced an error. */\n  Error = \"ERROR\",\n  /** The deployment has failed. */\n  Failure = \"FAILURE\",\n  /** The deployment is inactive. */\n  Inactive = \"INACTIVE\",\n  /** The deployment is in progress. */\n  InProgress = \"IN_PROGRESS\",\n  /** The deployment is pending. */\n  Pending = \"PENDING\",\n  /** The deployment is queued */\n  Queued = \"QUEUED\",\n  /** The deployment was successful. */\n  Success = \"SUCCESS\",\n  /** The deployment is waiting. */\n  Waiting = \"WAITING\",\n}\n\n/** The possible sides of a diff. */\nexport enum DiffSide {\n  /** The left side of the diff. */\n  Left = \"LEFT\",\n  /** The right side of the diff. */\n  Right = \"RIGHT\",\n}\n\n/** Autogenerated input type of DisablePullRequestAutoMerge */\nexport type DisablePullRequestAutoMergeInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the pull request to disable auto merge on. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DisablePullRequestAutoMerge */\nexport type DisablePullRequestAutoMergePayload = {\n  __typename?: \"DisablePullRequestAutoMergePayload\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request auto merge was disabled on. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'disconnected' event on a given issue or pull request. */\nexport type DisconnectedEvent = Node & {\n  __typename?: \"DisconnectedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Reference originated in a different repository. */\n  isCrossRepository: Scalars[\"Boolean\"];\n  /** Issue or pull request from which the issue was disconnected. */\n  source: ReferencedSubject;\n  /** Issue or pull request which was disconnected. */\n  subject: ReferencedSubject;\n};\n\n/** A discussion in a repository. */\nexport type Discussion = Comment &\n  Deletable &\n  Labelable &\n  Lockable &\n  Node &\n  Reactable &\n  RepositoryNode &\n  Subscribable &\n  Updatable &\n  Votable & {\n    __typename?: \"Discussion\";\n    /** Reason that the conversation was locked. */\n    activeLockReason?: Maybe<LockReason>;\n    /** The comment chosen as this discussion's answer, if any. */\n    answer?: Maybe<DiscussionComment>;\n    /** The time when a user chose this discussion's answer, if answered. */\n    answerChosenAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** The user who chose this discussion's answer, if answered. */\n    answerChosenBy?: Maybe<Actor>;\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the subject of the comment. */\n    authorAssociation: CommentAuthorAssociation;\n    /** The main text of the discussion post. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** The category for this discussion. */\n    category: DiscussionCategory;\n    /** The replies to the discussion. */\n    comments: DiscussionCommentConnection;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** A list of labels associated with the object. */\n    labels?: Maybe<LabelConnection>;\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** `true` if the object is locked */\n    locked: Scalars[\"Boolean\"];\n    /** The number identifying this discussion within the repository. */\n    number: Scalars[\"Int\"];\n    /** The poll associated with this discussion, if one exists. */\n    poll?: Maybe<DiscussionPoll>;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** The path for this discussion. */\n    resourcePath: Scalars[\"URI\"];\n    /** The title of this discussion. */\n    title: Scalars[\"String\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** Number of upvotes that this subject has received. */\n    upvoteCount: Scalars[\"Int\"];\n    /** The URL for this discussion. */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the viewer is able to change their subscription status for the repository. */\n    viewerCanSubscribe: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Whether or not the current user can add or remove an upvote on this subject. */\n    viewerCanUpvote: Scalars[\"Boolean\"];\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n    /** Whether or not the current user has already upvoted this subject. */\n    viewerHasUpvoted: Scalars[\"Boolean\"];\n    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n    viewerSubscription?: Maybe<SubscriptionState>;\n  };\n\n/** A discussion in a repository. */\nexport type DiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A discussion in a repository. */\nexport type DiscussionLabelsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n/** A discussion in a repository. */\nexport type DiscussionReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** A discussion in a repository. */\nexport type DiscussionUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A category for discussions in a repository. */\nexport type DiscussionCategory = Node &\n  RepositoryNode & {\n    __typename?: \"DiscussionCategory\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** A description of this category. */\n    description?: Maybe<Scalars[\"String\"]>;\n    /** An emoji representing this category. */\n    emoji: Scalars[\"String\"];\n    /** This category's emoji rendered as HTML. */\n    emojiHTML: Scalars[\"HTML\"];\n    id: Scalars[\"ID\"];\n    /** Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation. */\n    isAnswerable: Scalars[\"Boolean\"];\n    /** The name of this category. */\n    name: Scalars[\"String\"];\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** The slug of this category. */\n    slug: Scalars[\"String\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** The connection type for DiscussionCategory. */\nexport type DiscussionCategoryConnection = {\n  __typename?: \"DiscussionCategoryConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DiscussionCategoryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DiscussionCategory>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DiscussionCategoryEdge = {\n  __typename?: \"DiscussionCategoryEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DiscussionCategory>;\n};\n\n/** A comment on a discussion. */\nexport type DiscussionComment = Comment &\n  Deletable &\n  Minimizable &\n  Node &\n  Reactable &\n  Updatable &\n  UpdatableComment &\n  Votable & {\n    __typename?: \"DiscussionComment\";\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the subject of the comment. */\n    authorAssociation: CommentAuthorAssociation;\n    /** The body as Markdown. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The time when this replied-to comment was deleted */\n    deletedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** The discussion this comment was created in */\n    discussion?: Maybe<Discussion>;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** Has this comment been chosen as the answer of its discussion? */\n    isAnswer: Scalars[\"Boolean\"];\n    /** Returns whether or not a comment has been minimized. */\n    isMinimized: Scalars[\"Boolean\"];\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation. */\n    minimizedReason?: Maybe<Scalars[\"String\"]>;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The threaded replies to this comment. */\n    replies: DiscussionCommentConnection;\n    /** The discussion comment this comment is a reply to */\n    replyTo?: Maybe<DiscussionComment>;\n    /** The path for this discussion comment. */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** Number of upvotes that this subject has received. */\n    upvoteCount: Scalars[\"Int\"];\n    /** The URL for this discussion comment. */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Can the current user mark this comment as an answer? */\n    viewerCanMarkAsAnswer: Scalars[\"Boolean\"];\n    /** Check if the current viewer can minimize this object. */\n    viewerCanMinimize: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Can the current user unmark this comment as an answer? */\n    viewerCanUnmarkAsAnswer: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Whether or not the current user can add or remove an upvote on this subject. */\n    viewerCanUpvote: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n    /** Whether or not the current user has already upvoted this subject. */\n    viewerHasUpvoted: Scalars[\"Boolean\"];\n  };\n\n/** A comment on a discussion. */\nexport type DiscussionCommentReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** A comment on a discussion. */\nexport type DiscussionCommentRepliesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A comment on a discussion. */\nexport type DiscussionCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for DiscussionComment. */\nexport type DiscussionCommentConnection = {\n  __typename?: \"DiscussionCommentConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DiscussionCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DiscussionComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DiscussionCommentEdge = {\n  __typename?: \"DiscussionCommentEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DiscussionComment>;\n};\n\n/** The connection type for Discussion. */\nexport type DiscussionConnection = {\n  __typename?: \"DiscussionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DiscussionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Discussion>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DiscussionEdge = {\n  __typename?: \"DiscussionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Discussion>;\n};\n\n/** Ways in which lists of discussions can be ordered upon return. */\nexport type DiscussionOrder = {\n  /** The direction in which to order discussions by the specified field. */\n  direction: OrderDirection;\n  /** The field by which to order discussions. */\n  field: DiscussionOrderField;\n};\n\n/** Properties by which discussion connections can be ordered. */\nexport enum DiscussionOrderField {\n  /** Order discussions by creation time. */\n  CreatedAt = \"CREATED_AT\",\n  /** Order discussions by most recent modification time. */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** A poll for a discussion. */\nexport type DiscussionPoll = Node & {\n  __typename?: \"DiscussionPoll\";\n  /** The discussion that this poll belongs to. */\n  discussion?: Maybe<Discussion>;\n  id: Scalars[\"ID\"];\n  /** The options for this poll. */\n  options?: Maybe<DiscussionPollOptionConnection>;\n  /** The question that is being asked by this poll. */\n  question: Scalars[\"String\"];\n  /** The total number of votes that have been cast for this poll. */\n  totalVoteCount: Scalars[\"Int\"];\n  /** Indicates if the viewer has permission to vote in this poll. */\n  viewerCanVote: Scalars[\"Boolean\"];\n  /** Indicates if the viewer has voted for any option in this poll. */\n  viewerHasVoted: Scalars[\"Boolean\"];\n};\n\n/** A poll for a discussion. */\nexport type DiscussionPollOptionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<DiscussionPollOptionOrder>;\n};\n\n/** An option for a discussion poll. */\nexport type DiscussionPollOption = Node & {\n  __typename?: \"DiscussionPollOption\";\n  id: Scalars[\"ID\"];\n  /** The text for this option. */\n  option: Scalars[\"String\"];\n  /** The discussion poll that this option belongs to. */\n  poll?: Maybe<DiscussionPoll>;\n  /** The total number of votes that have been cast for this option. */\n  totalVoteCount: Scalars[\"Int\"];\n  /** Indicates if the viewer has voted for this option in the poll. */\n  viewerHasVoted: Scalars[\"Boolean\"];\n};\n\n/** The connection type for DiscussionPollOption. */\nexport type DiscussionPollOptionConnection = {\n  __typename?: \"DiscussionPollOptionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DiscussionPollOptionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DiscussionPollOption>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DiscussionPollOptionEdge = {\n  __typename?: \"DiscussionPollOptionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<DiscussionPollOption>;\n};\n\n/** Ordering options for discussion poll option connections. */\nexport type DiscussionPollOptionOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order poll options by. */\n  field: DiscussionPollOptionOrderField;\n};\n\n/** Properties by which discussion poll option connections can be ordered. */\nexport enum DiscussionPollOptionOrderField {\n  /** Order poll options by the order that the poll author specified when creating the poll. */\n  AuthoredOrder = \"AUTHORED_ORDER\",\n  /** Order poll options by the number of votes it has. */\n  VoteCount = \"VOTE_COUNT\",\n}\n\n/** Autogenerated input type of DismissPullRequestReview */\nexport type DismissPullRequestReviewInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The contents of the pull request review dismissal message. */\n  message: Scalars[\"String\"];\n  /** The Node ID of the pull request review to modify. */\n  pullRequestReviewId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DismissPullRequestReview */\nexport type DismissPullRequestReviewPayload = {\n  __typename?: \"DismissPullRequestReviewPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The dismissed pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** The possible reasons that a Dependabot alert was dismissed. */\nexport enum DismissReason {\n  /** A fix has already been started */\n  FixStarted = \"FIX_STARTED\",\n  /** This alert is inaccurate or incorrect */\n  Inaccurate = \"INACCURATE\",\n  /** Vulnerable code is not actually used */\n  NotUsed = \"NOT_USED\",\n  /** No bandwidth to fix this */\n  NoBandwidth = \"NO_BANDWIDTH\",\n  /** Risk is tolerable to this project */\n  TolerableRisk = \"TOLERABLE_RISK\",\n}\n\n/** Autogenerated input type of DismissRepositoryVulnerabilityAlert */\nexport type DismissRepositoryVulnerabilityAlertInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The reason the Dependabot alert is being dismissed. */\n  dismissReason: DismissReason;\n  /** The Dependabot alert ID to dismiss. */\n  repositoryVulnerabilityAlertId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of DismissRepositoryVulnerabilityAlert */\nexport type DismissRepositoryVulnerabilityAlertPayload = {\n  __typename?: \"DismissRepositoryVulnerabilityAlertPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The Dependabot alert that was dismissed */\n  repositoryVulnerabilityAlert?: Maybe<RepositoryVulnerabilityAlert>;\n};\n\n/** A draft issue within a project. */\nexport type DraftIssue = Node & {\n  __typename?: \"DraftIssue\";\n  /** A list of users to assigned to this draft issue. */\n  assignees: UserConnection;\n  /** The body of the draft issue. */\n  body: Scalars[\"String\"];\n  /** The body of the draft issue rendered to HTML. */\n  bodyHTML: Scalars[\"HTML\"];\n  /** The body of the draft issue rendered to text. */\n  bodyText: Scalars[\"String\"];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The actor who created this draft issue. */\n  creator?: Maybe<Actor>;\n  id: Scalars[\"ID\"];\n  /** List of items linked with the draft issue (currently draft issue can be linked to only one item). */\n  projectV2Items: ProjectV2ItemConnection;\n  /** Projects that link to this draft issue (currently draft issue can be linked to only one project). */\n  projectsV2: ProjectV2Connection;\n  /** The title of the draft issue */\n  title: Scalars[\"String\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** A draft issue within a project. */\nexport type DraftIssueAssigneesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A draft issue within a project. */\nexport type DraftIssueProjectV2ItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A draft issue within a project. */\nexport type DraftIssueProjectsV2Args = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Specifies a review comment to be left with a Pull Request Review. */\nexport type DraftPullRequestReviewComment = {\n  /** Body of the comment to leave. */\n  body: Scalars[\"String\"];\n  /** Path to the file being commented on. */\n  path: Scalars[\"String\"];\n  /** Position in the file to leave a comment on. */\n  position: Scalars[\"Int\"];\n};\n\n/** Specifies a review comment thread to be left with a Pull Request Review. */\nexport type DraftPullRequestReviewThread = {\n  /** Body of the comment to leave. */\n  body: Scalars[\"String\"];\n  /** The line of the blob to which the thread refers. The end of the line range for multi-line comments. */\n  line: Scalars[\"Int\"];\n  /** Path to the file being commented on. */\n  path: Scalars[\"String\"];\n  /** The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. */\n  side?: InputMaybe<DiffSide>;\n  /** The first line of the range to which the comment refers. */\n  startLine?: InputMaybe<Scalars[\"Int\"]>;\n  /** The side of the diff on which the start line resides. */\n  startSide?: InputMaybe<DiffSide>;\n};\n\n/** Autogenerated input type of EnablePullRequestAutoMerge */\nexport type EnablePullRequestAutoMergeInput = {\n  /** The email address to associate with this merge. */\n  authorEmail?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Commit body to use for the commit when the PR is mergable; if omitted, a default message will be used. NOTE: when merging with a merge queue any input value for commit message is ignored. */\n  commitBody?: InputMaybe<Scalars[\"String\"]>;\n  /** Commit headline to use for the commit when the PR is mergable; if omitted, a default message will be used. NOTE: when merging with a merge queue any input value for commit headline is ignored. */\n  commitHeadline?: InputMaybe<Scalars[\"String\"]>;\n  /** The merge method to use. If omitted, defaults to `MERGE`. NOTE: when merging with a merge queue any input value for merge method is ignored. */\n  mergeMethod?: InputMaybe<PullRequestMergeMethod>;\n  /** ID of the pull request to enable auto-merge on. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of EnablePullRequestAutoMerge */\nexport type EnablePullRequestAutoMergePayload = {\n  __typename?: \"EnablePullRequestAutoMergePayload\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request auto-merge was enabled on. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type Enterprise = Node & {\n  __typename?: \"Enterprise\";\n  /** A URL pointing to the enterprise's public avatar. */\n  avatarUrl: Scalars[\"URI\"];\n  /** Enterprise billing information\u00A0visible to enterprise billing managers. */\n  billingInfo?: Maybe<EnterpriseBillingInfo>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The description of the enterprise. */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** The description of the enterprise as HTML. */\n  descriptionHTML: Scalars[\"HTML\"];\n  id: Scalars[\"ID\"];\n  /** The location of the enterprise. */\n  location?: Maybe<Scalars[\"String\"]>;\n  /** A list of users who are members of this enterprise. */\n  members: EnterpriseMemberConnection;\n  /** The name of the enterprise. */\n  name: Scalars[\"String\"];\n  /** A list of organizations that belong to this enterprise. */\n  organizations: OrganizationConnection;\n  /** Enterprise information only visible to enterprise owners. */\n  ownerInfo?: Maybe<EnterpriseOwnerInfo>;\n  /** The HTTP path for this enterprise. */\n  resourcePath: Scalars[\"URI\"];\n  /** The URL-friendly identifier for the enterprise. */\n  slug: Scalars[\"String\"];\n  /** The HTTP URL for this enterprise. */\n  url: Scalars[\"URI\"];\n  /** Is the current viewer an admin of this enterprise? */\n  viewerIsAdmin: Scalars[\"Boolean\"];\n  /** The URL of the enterprise website. */\n  websiteUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseMembersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  deployment?: InputMaybe<EnterpriseUserDeployment>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  hasTwoFactorEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<EnterpriseMemberOrder>;\n  organizationLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  role?: InputMaybe<EnterpriseUserAccountMembershipRole>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  viewerOrganizationRole?: InputMaybe<RoleInOrganization>;\n};\n\n/** The connection type for User. */\nexport type EnterpriseAdministratorConnection = {\n  __typename?: \"EnterpriseAdministratorConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseAdministratorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** A User who is an administrator of an enterprise. */\nexport type EnterpriseAdministratorEdge = {\n  __typename?: \"EnterpriseAdministratorEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n  /** The role of the administrator. */\n  role: EnterpriseAdministratorRole;\n};\n\n/** An invitation for a user to become an owner or billing manager of an enterprise. */\nexport type EnterpriseAdministratorInvitation = Node & {\n  __typename?: \"EnterpriseAdministratorInvitation\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The email of the person who was invited to the enterprise. */\n  email?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise the invitation is for. */\n  enterprise: Enterprise;\n  id: Scalars[\"ID\"];\n  /** The user who was invited to the enterprise. */\n  invitee?: Maybe<User>;\n  /** The user who created the invitation. */\n  inviter?: Maybe<User>;\n  /** The invitee's pending role in the enterprise (owner or billing_manager). */\n  role: EnterpriseAdministratorRole;\n};\n\n/** The connection type for EnterpriseAdministratorInvitation. */\nexport type EnterpriseAdministratorInvitationConnection = {\n  __typename?: \"EnterpriseAdministratorInvitationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseAdministratorInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseAdministratorInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseAdministratorInvitationEdge = {\n  __typename?: \"EnterpriseAdministratorInvitationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseAdministratorInvitation>;\n};\n\n/** Ordering options for enterprise administrator invitation connections */\nexport type EnterpriseAdministratorInvitationOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order enterprise administrator invitations by. */\n  field: EnterpriseAdministratorInvitationOrderField;\n};\n\n/** Properties by which enterprise administrator invitation connections can be ordered. */\nexport enum EnterpriseAdministratorInvitationOrderField {\n  /** Order enterprise administrator member invitations by creation time */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** The possible administrator roles in an enterprise account. */\nexport enum EnterpriseAdministratorRole {\n  /** Represents a billing manager of the enterprise account. */\n  BillingManager = \"BILLING_MANAGER\",\n  /** Represents an owner of the enterprise account. */\n  Owner = \"OWNER\",\n}\n\n/** The possible values for the enterprise allow private repository forking policy value. */\nexport enum EnterpriseAllowPrivateRepositoryForkingPolicyValue {\n  /** Members can fork a repository to an organization within this enterprise. */\n  EnterpriseOrganizations = \"ENTERPRISE_ORGANIZATIONS\",\n  /** Members can fork a repository to their enterprise-managed user account or an organization inside this enterprise. */\n  EnterpriseOrganizationsUserAccounts = \"ENTERPRISE_ORGANIZATIONS_USER_ACCOUNTS\",\n  /** Members can fork a repository to their user account or an organization, either inside or outside of this enterprise. */\n  Everywhere = \"EVERYWHERE\",\n  /** Members can fork a repository only within the same organization (intra-org). */\n  SameOrganization = \"SAME_ORGANIZATION\",\n  /** Members can fork a repository to their user account or within the same organization. */\n  SameOrganizationUserAccounts = \"SAME_ORGANIZATION_USER_ACCOUNTS\",\n  /** Members can fork a repository to their user account. */\n  UserAccounts = \"USER_ACCOUNTS\",\n}\n\n/** Metadata for an audit entry containing enterprise account information. */\nexport type EnterpriseAuditEntryData = {\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Enterprise billing information visible to enterprise billing managers and owners. */\nexport type EnterpriseBillingInfo = {\n  __typename?: \"EnterpriseBillingInfo\";\n  /** The number of licenseable users/emails across the enterprise. */\n  allLicensableUsersCount: Scalars[\"Int\"];\n  /** The number of data packs used by all organizations owned by the enterprise. */\n  assetPacks: Scalars[\"Int\"];\n  /** The bandwidth quota in GB for all organizations owned by the enterprise. */\n  bandwidthQuota: Scalars[\"Float\"];\n  /** The bandwidth usage in GB for all organizations owned by the enterprise. */\n  bandwidthUsage: Scalars[\"Float\"];\n  /** The bandwidth usage as a percentage of the bandwidth quota. */\n  bandwidthUsagePercentage: Scalars[\"Int\"];\n  /** The storage quota in GB for all organizations owned by the enterprise. */\n  storageQuota: Scalars[\"Float\"];\n  /** The storage usage in GB for all organizations owned by the enterprise. */\n  storageUsage: Scalars[\"Float\"];\n  /** The storage usage as a percentage of the storage quota. */\n  storageUsagePercentage: Scalars[\"Int\"];\n  /** The number of available licenses across all owned organizations based on the unique number of billable users. */\n  totalAvailableLicenses: Scalars[\"Int\"];\n  /** The total number of licenses allocated. */\n  totalLicenses: Scalars[\"Int\"];\n};\n\n/** The possible values for the enterprise base repository permission setting. */\nexport enum EnterpriseDefaultRepositoryPermissionSettingValue {\n  /** Organization members will be able to clone, pull, push, and add new collaborators to all organization repositories. */\n  Admin = \"ADMIN\",\n  /** Organization members will only be able to clone and pull public repositories. */\n  None = \"NONE\",\n  /** Organizations in the enterprise choose base repository permissions for their members. */\n  NoPolicy = \"NO_POLICY\",\n  /** Organization members will be able to clone and pull all organization repositories. */\n  Read = \"READ\",\n  /** Organization members will be able to clone, pull, and push all organization repositories. */\n  Write = \"WRITE\",\n}\n\n/** The possible values for an enabled/disabled enterprise setting. */\nexport enum EnterpriseEnabledDisabledSettingValue {\n  /** The setting is disabled for organizations in the enterprise. */\n  Disabled = \"DISABLED\",\n  /** The setting is enabled for organizations in the enterprise. */\n  Enabled = \"ENABLED\",\n  /** There is no policy set for organizations in the enterprise. */\n  NoPolicy = \"NO_POLICY\",\n}\n\n/** The possible values for an enabled/no policy enterprise setting. */\nexport enum EnterpriseEnabledSettingValue {\n  /** The setting is enabled for organizations in the enterprise. */\n  Enabled = \"ENABLED\",\n  /** There is no policy set for organizations in the enterprise. */\n  NoPolicy = \"NO_POLICY\",\n}\n\n/** An identity provider configured to provision identities for an enterprise. */\nexport type EnterpriseIdentityProvider = Node & {\n  __typename?: \"EnterpriseIdentityProvider\";\n  /** The digest algorithm used to sign SAML requests for the identity provider. */\n  digestMethod?: Maybe<SamlDigestAlgorithm>;\n  /** The enterprise this identity provider belongs to. */\n  enterprise?: Maybe<Enterprise>;\n  /** ExternalIdentities provisioned by this identity provider. */\n  externalIdentities: ExternalIdentityConnection;\n  id: Scalars[\"ID\"];\n  /** The x509 certificate used by the identity provider to sign assertions and responses. */\n  idpCertificate?: Maybe<Scalars[\"X509Certificate\"]>;\n  /** The Issuer Entity ID for the SAML identity provider. */\n  issuer?: Maybe<Scalars[\"String\"]>;\n  /** Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable. */\n  recoveryCodes?: Maybe<Array<Scalars[\"String\"]>>;\n  /** The signature algorithm used to sign SAML requests for the identity provider. */\n  signatureMethod?: Maybe<SamlSignatureAlgorithm>;\n  /** The URL endpoint for the identity provider's SAML SSO. */\n  ssoUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** An identity provider configured to provision identities for an enterprise. */\nexport type EnterpriseIdentityProviderExternalIdentitiesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  login?: InputMaybe<Scalars[\"String\"]>;\n  membersOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  userName?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** An object that is a member of an enterprise. */\nexport type EnterpriseMember = EnterpriseUserAccount | User;\n\n/** The connection type for EnterpriseMember. */\nexport type EnterpriseMemberConnection = {\n  __typename?: \"EnterpriseMemberConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseMemberEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseMember>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** A User who is a member of an enterprise through one or more organizations. */\nexport type EnterpriseMemberEdge = {\n  __typename?: \"EnterpriseMemberEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseMember>;\n};\n\n/** Ordering options for enterprise member connections. */\nexport type EnterpriseMemberOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order enterprise members by. */\n  field: EnterpriseMemberOrderField;\n};\n\n/** Properties by which enterprise member connections can be ordered. */\nexport enum EnterpriseMemberOrderField {\n  /** Order enterprise members by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order enterprise members by login */\n  Login = \"LOGIN\",\n}\n\n/** The possible values for the enterprise members can create repositories setting. */\nexport enum EnterpriseMembersCanCreateRepositoriesSettingValue {\n  /** Members will be able to create public and private repositories. */\n  All = \"ALL\",\n  /** Members will not be able to create public or private repositories. */\n  Disabled = \"DISABLED\",\n  /** Organization administrators choose whether to allow members to create repositories. */\n  NoPolicy = \"NO_POLICY\",\n  /** Members will be able to create only private repositories. */\n  Private = \"PRIVATE\",\n  /** Members will be able to create only public repositories. */\n  Public = \"PUBLIC\",\n}\n\n/** The possible values for the members can make purchases setting. */\nexport enum EnterpriseMembersCanMakePurchasesSettingValue {\n  /** The setting is disabled for organizations in the enterprise. */\n  Disabled = \"DISABLED\",\n  /** The setting is enabled for organizations in the enterprise. */\n  Enabled = \"ENABLED\",\n}\n\n/** The connection type for Organization. */\nexport type EnterpriseOrganizationMembershipConnection = {\n  __typename?: \"EnterpriseOrganizationMembershipConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseOrganizationMembershipEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Organization>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An enterprise organization that a user is a member of. */\nexport type EnterpriseOrganizationMembershipEdge = {\n  __typename?: \"EnterpriseOrganizationMembershipEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Organization>;\n  /** The role of the user in the enterprise membership. */\n  role: EnterpriseUserAccountMembershipRole;\n};\n\n/** The connection type for User. */\nexport type EnterpriseOutsideCollaboratorConnection = {\n  __typename?: \"EnterpriseOutsideCollaboratorConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseOutsideCollaboratorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** A User who is an outside collaborator of an enterprise through one or more organizations. */\nexport type EnterpriseOutsideCollaboratorEdge = {\n  __typename?: \"EnterpriseOutsideCollaboratorEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n  /** The enterprise organization repositories this user is a member of. */\n  repositories: EnterpriseRepositoryInfoConnection;\n};\n\n/** A User who is an outside collaborator of an enterprise through one or more organizations. */\nexport type EnterpriseOutsideCollaboratorEdgeRepositoriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfo = {\n  __typename?: \"EnterpriseOwnerInfo\";\n  /** A list of all of the administrators for this enterprise. */\n  admins: EnterpriseAdministratorConnection;\n  /** A list of users in the enterprise who currently have two-factor authentication disabled. */\n  affiliatedUsersWithTwoFactorDisabled: UserConnection;\n  /** Whether or not affiliated users with two-factor authentication disabled exist in the enterprise. */\n  affiliatedUsersWithTwoFactorDisabledExist: Scalars[\"Boolean\"];\n  /** The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise. */\n  allowPrivateRepositoryForkingSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided private repository forking setting value. */\n  allowPrivateRepositoryForkingSettingOrganizations: OrganizationConnection;\n  /** The value for the allow private repository forking policy on the enterprise. */\n  allowPrivateRepositoryForkingSettingPolicyValue?: Maybe<EnterpriseAllowPrivateRepositoryForkingPolicyValue>;\n  /** The setting value for base repository permissions for organizations in this enterprise. */\n  defaultRepositoryPermissionSetting: EnterpriseDefaultRepositoryPermissionSettingValue;\n  /** A list of enterprise organizations configured with the provided base repository permission. */\n  defaultRepositoryPermissionSettingOrganizations: OrganizationConnection;\n  /** A list of domains owned by the enterprise. */\n  domains: VerifiableDomainConnection;\n  /** Enterprise Server installations owned by the enterprise. */\n  enterpriseServerInstallations: EnterpriseServerInstallationConnection;\n  /** The setting value for whether the enterprise has an IP allow list enabled. */\n  ipAllowListEnabledSetting: IpAllowListEnabledSettingValue;\n  /** The IP addresses that are allowed to access resources owned by the enterprise. */\n  ipAllowListEntries: IpAllowListEntryConnection;\n  /** The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled. */\n  ipAllowListForInstalledAppsEnabledSetting: IpAllowListForInstalledAppsEnabledSettingValue;\n  /** Whether or not the base repository permission is currently being updated. */\n  isUpdatingDefaultRepositoryPermission: Scalars[\"Boolean\"];\n  /** Whether the two-factor authentication requirement is currently being enforced. */\n  isUpdatingTwoFactorRequirement: Scalars[\"Boolean\"];\n  /** The setting value for whether organization members with admin permissions on a repository can change repository visibility. */\n  membersCanChangeRepositoryVisibilitySetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided can change repository visibility setting value. */\n  membersCanChangeRepositoryVisibilitySettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members of organizations in the enterprise can create internal repositories. */\n  membersCanCreateInternalRepositoriesSetting?: Maybe<Scalars[\"Boolean\"]>;\n  /** The setting value for whether members of organizations in the enterprise can create private repositories. */\n  membersCanCreatePrivateRepositoriesSetting?: Maybe<Scalars[\"Boolean\"]>;\n  /** The setting value for whether members of organizations in the enterprise can create public repositories. */\n  membersCanCreatePublicRepositoriesSetting?: Maybe<Scalars[\"Boolean\"]>;\n  /** The setting value for whether members of organizations in the enterprise can create repositories. */\n  membersCanCreateRepositoriesSetting?: Maybe<EnterpriseMembersCanCreateRepositoriesSettingValue>;\n  /** A list of enterprise organizations configured with the provided repository creation setting value. */\n  membersCanCreateRepositoriesSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members with admin permissions for repositories can delete issues. */\n  membersCanDeleteIssuesSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can delete issues setting value. */\n  membersCanDeleteIssuesSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members with admin permissions for repositories can delete or transfer repositories. */\n  membersCanDeleteRepositoriesSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can delete repositories setting value. */\n  membersCanDeleteRepositoriesSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members of organizations in the enterprise can invite outside collaborators. */\n  membersCanInviteCollaboratorsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can invite collaborators setting value. */\n  membersCanInviteCollaboratorsSettingOrganizations: OrganizationConnection;\n  /** Indicates whether members of this enterprise's organizations can purchase additional services for those organizations. */\n  membersCanMakePurchasesSetting: EnterpriseMembersCanMakePurchasesSettingValue;\n  /** The setting value for whether members with admin permissions for repositories can update protected branches. */\n  membersCanUpdateProtectedBranchesSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can update protected branches setting value. */\n  membersCanUpdateProtectedBranchesSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members can view dependency insights. */\n  membersCanViewDependencyInsightsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can view dependency insights setting value. */\n  membersCanViewDependencyInsightsSettingOrganizations: OrganizationConnection;\n  /** Indicates if email notification delivery for this enterprise is restricted to verified or approved domains. */\n  notificationDeliveryRestrictionEnabledSetting: NotificationRestrictionSettingValue;\n  /** The OIDC Identity Provider for the enterprise. */\n  oidcProvider?: Maybe<OidcProvider>;\n  /** The setting value for whether organization projects are enabled for organizations in this enterprise. */\n  organizationProjectsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided organization projects setting value. */\n  organizationProjectsSettingOrganizations: OrganizationConnection;\n  /** A list of outside collaborators across the repositories in the enterprise. */\n  outsideCollaborators: EnterpriseOutsideCollaboratorConnection;\n  /** A list of pending administrator invitations for the enterprise. */\n  pendingAdminInvitations: EnterpriseAdministratorInvitationConnection;\n  /** A list of pending collaborator invitations across the repositories in the enterprise. */\n  pendingCollaboratorInvitations: RepositoryInvitationConnection;\n  /** A list of pending member invitations for organizations in the enterprise. */\n  pendingMemberInvitations: EnterprisePendingMemberInvitationConnection;\n  /** The setting value for whether repository projects are enabled in this enterprise. */\n  repositoryProjectsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided repository projects setting value. */\n  repositoryProjectsSettingOrganizations: OrganizationConnection;\n  /** The SAML Identity Provider for the enterprise. When used by a GitHub App, requires an installation token with read and write access to members. */\n  samlIdentityProvider?: Maybe<EnterpriseIdentityProvider>;\n  /** A list of enterprise organizations configured with the SAML single sign-on setting value. */\n  samlIdentityProviderSettingOrganizations: OrganizationConnection;\n  /** A list of members with a support entitlement. */\n  supportEntitlements: EnterpriseMemberConnection;\n  /** The setting value for whether team discussions are enabled for organizations in this enterprise. */\n  teamDiscussionsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided team discussions setting value. */\n  teamDiscussionsSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether the enterprise requires two-factor authentication for its organizations and users. */\n  twoFactorRequiredSetting: EnterpriseEnabledSettingValue;\n  /** A list of enterprise organizations configured with the two-factor authentication setting value. */\n  twoFactorRequiredSettingOrganizations: OrganizationConnection;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoAdminsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  hasTwoFactorEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<EnterpriseMemberOrder>;\n  organizationLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  role?: InputMaybe<EnterpriseAdministratorRole>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoAffiliatedUsersWithTwoFactorDisabledArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoAllowPrivateRepositoryForkingSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoDefaultRepositoryPermissionSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: DefaultRepositoryPermissionField;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoDomainsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isApproved?: InputMaybe<Scalars[\"Boolean\"]>;\n  isVerified?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<VerifiableDomainOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoEnterpriseServerInstallationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  connectedOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<EnterpriseServerInstallationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoIpAllowListEntriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IpAllowListEntryOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanChangeRepositoryVisibilitySettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanCreateRepositoriesSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: OrganizationMembersCanCreateRepositoriesSettingValue;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanDeleteIssuesSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanDeleteRepositoriesSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanInviteCollaboratorsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanUpdateProtectedBranchesSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanViewDependencyInsightsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoOrganizationProjectsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoOutsideCollaboratorsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  hasTwoFactorEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  login?: InputMaybe<Scalars[\"String\"]>;\n  orderBy?: InputMaybe<EnterpriseMemberOrder>;\n  organizationLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  visibility?: InputMaybe<RepositoryVisibility>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoPendingAdminInvitationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<EnterpriseAdministratorInvitationOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  role?: InputMaybe<EnterpriseAdministratorRole>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoPendingCollaboratorInvitationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryInvitationOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoPendingMemberInvitationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  organizationLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoRepositoryProjectsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoSamlIdentityProviderSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: IdentityProviderConfigurationState;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoSupportEntitlementsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<EnterpriseMemberOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoTeamDiscussionsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoTwoFactorRequiredSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars[\"Boolean\"];\n};\n\n/** The connection type for OrganizationInvitation. */\nexport type EnterprisePendingMemberInvitationConnection = {\n  __typename?: \"EnterprisePendingMemberInvitationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterprisePendingMemberInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<OrganizationInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n  /** Identifies the total count of unique users in the connection. */\n  totalUniqueUserCount: Scalars[\"Int\"];\n};\n\n/** An invitation to be a member in an enterprise organization. */\nexport type EnterprisePendingMemberInvitationEdge = {\n  __typename?: \"EnterprisePendingMemberInvitationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<OrganizationInvitation>;\n};\n\n/** A subset of repository information queryable from an enterprise. */\nexport type EnterpriseRepositoryInfo = Node & {\n  __typename?: \"EnterpriseRepositoryInfo\";\n  id: Scalars[\"ID\"];\n  /** Identifies if the repository is private or internal. */\n  isPrivate: Scalars[\"Boolean\"];\n  /** The repository's name. */\n  name: Scalars[\"String\"];\n  /** The repository's name with owner. */\n  nameWithOwner: Scalars[\"String\"];\n};\n\n/** The connection type for EnterpriseRepositoryInfo. */\nexport type EnterpriseRepositoryInfoConnection = {\n  __typename?: \"EnterpriseRepositoryInfoConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseRepositoryInfoEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseRepositoryInfo>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseRepositoryInfoEdge = {\n  __typename?: \"EnterpriseRepositoryInfoEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseRepositoryInfo>;\n};\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallation = Node & {\n  __typename?: \"EnterpriseServerInstallation\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The customer name to which the Enterprise Server installation belongs. */\n  customerName: Scalars[\"String\"];\n  /** The host name of the Enterprise Server installation. */\n  hostName: Scalars[\"String\"];\n  id: Scalars[\"ID\"];\n  /** Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect. */\n  isConnected: Scalars[\"Boolean\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** User accounts on this Enterprise Server installation. */\n  userAccounts: EnterpriseServerUserAccountConnection;\n  /** User accounts uploads for the Enterprise Server installation. */\n  userAccountsUploads: EnterpriseServerUserAccountsUploadConnection;\n};\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallationUserAccountsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<EnterpriseServerUserAccountOrder>;\n};\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallationUserAccountsUploadsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<EnterpriseServerUserAccountsUploadOrder>;\n};\n\n/** The connection type for EnterpriseServerInstallation. */\nexport type EnterpriseServerInstallationConnection = {\n  __typename?: \"EnterpriseServerInstallationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerInstallationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerInstallation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerInstallationEdge = {\n  __typename?: \"EnterpriseServerInstallationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerInstallation>;\n};\n\n/** Ordering options for Enterprise Server installation connections. */\nexport type EnterpriseServerInstallationOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order Enterprise Server installations by. */\n  field: EnterpriseServerInstallationOrderField;\n};\n\n/** Properties by which Enterprise Server installation connections can be ordered. */\nexport enum EnterpriseServerInstallationOrderField {\n  /** Order Enterprise Server installations by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order Enterprise Server installations by customer name */\n  CustomerName = \"CUSTOMER_NAME\",\n  /** Order Enterprise Server installations by host name */\n  HostName = \"HOST_NAME\",\n}\n\n/** A user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccount = Node & {\n  __typename?: \"EnterpriseServerUserAccount\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** User emails belonging to this user account. */\n  emails: EnterpriseServerUserAccountEmailConnection;\n  /** The Enterprise Server installation on which this user account exists. */\n  enterpriseServerInstallation: EnterpriseServerInstallation;\n  id: Scalars[\"ID\"];\n  /** Whether the user account is a site administrator on the Enterprise Server installation. */\n  isSiteAdmin: Scalars[\"Boolean\"];\n  /** The login of the user account on the Enterprise Server installation. */\n  login: Scalars[\"String\"];\n  /** The profile name of the user account on the Enterprise Server installation. */\n  profileName?: Maybe<Scalars[\"String\"]>;\n  /** The date and time when the user account was created on the Enterprise Server installation. */\n  remoteCreatedAt: Scalars[\"DateTime\"];\n  /** The ID of the user account on the Enterprise Server installation. */\n  remoteUserId: Scalars[\"Int\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** A user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountEmailsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<EnterpriseServerUserAccountEmailOrder>;\n};\n\n/** The connection type for EnterpriseServerUserAccount. */\nexport type EnterpriseServerUserAccountConnection = {\n  __typename?: \"EnterpriseServerUserAccountConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerUserAccountEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerUserAccount>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountEdge = {\n  __typename?: \"EnterpriseServerUserAccountEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerUserAccount>;\n};\n\n/** An email belonging to a user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountEmail = Node & {\n  __typename?: \"EnterpriseServerUserAccountEmail\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The email address. */\n  email: Scalars[\"String\"];\n  id: Scalars[\"ID\"];\n  /** Indicates whether this is the primary email of the associated user account. */\n  isPrimary: Scalars[\"Boolean\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The user account to which the email belongs. */\n  userAccount: EnterpriseServerUserAccount;\n};\n\n/** The connection type for EnterpriseServerUserAccountEmail. */\nexport type EnterpriseServerUserAccountEmailConnection = {\n  __typename?: \"EnterpriseServerUserAccountEmailConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerUserAccountEmailEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerUserAccountEmail>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountEmailEdge = {\n  __typename?: \"EnterpriseServerUserAccountEmailEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerUserAccountEmail>;\n};\n\n/** Ordering options for Enterprise Server user account email connections. */\nexport type EnterpriseServerUserAccountEmailOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order emails by. */\n  field: EnterpriseServerUserAccountEmailOrderField;\n};\n\n/** Properties by which Enterprise Server user account email connections can be ordered. */\nexport enum EnterpriseServerUserAccountEmailOrderField {\n  /** Order emails by email */\n  Email = \"EMAIL\",\n}\n\n/** Ordering options for Enterprise Server user account connections. */\nexport type EnterpriseServerUserAccountOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order user accounts by. */\n  field: EnterpriseServerUserAccountOrderField;\n};\n\n/** Properties by which Enterprise Server user account connections can be ordered. */\nexport enum EnterpriseServerUserAccountOrderField {\n  /** Order user accounts by login */\n  Login = \"LOGIN\",\n  /** Order user accounts by creation time on the Enterprise Server installation */\n  RemoteCreatedAt = \"REMOTE_CREATED_AT\",\n}\n\n/** A user accounts upload from an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountsUpload = Node & {\n  __typename?: \"EnterpriseServerUserAccountsUpload\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The enterprise to which this upload belongs. */\n  enterprise: Enterprise;\n  /** The Enterprise Server installation for which this upload was generated. */\n  enterpriseServerInstallation: EnterpriseServerInstallation;\n  id: Scalars[\"ID\"];\n  /** The name of the file uploaded. */\n  name: Scalars[\"String\"];\n  /** The synchronization state of the upload */\n  syncState: EnterpriseServerUserAccountsUploadSyncState;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** The connection type for EnterpriseServerUserAccountsUpload. */\nexport type EnterpriseServerUserAccountsUploadConnection = {\n  __typename?: \"EnterpriseServerUserAccountsUploadConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerUserAccountsUploadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerUserAccountsUpload>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountsUploadEdge = {\n  __typename?: \"EnterpriseServerUserAccountsUploadEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerUserAccountsUpload>;\n};\n\n/** Ordering options for Enterprise Server user accounts upload connections. */\nexport type EnterpriseServerUserAccountsUploadOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order user accounts uploads by. */\n  field: EnterpriseServerUserAccountsUploadOrderField;\n};\n\n/** Properties by which Enterprise Server user accounts upload connections can be ordered. */\nexport enum EnterpriseServerUserAccountsUploadOrderField {\n  /** Order user accounts uploads by creation time */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** Synchronization state of the Enterprise Server user accounts upload */\nexport enum EnterpriseServerUserAccountsUploadSyncState {\n  /** The synchronization of the upload failed. */\n  Failure = \"FAILURE\",\n  /** The synchronization of the upload is pending. */\n  Pending = \"PENDING\",\n  /** The synchronization of the upload succeeded. */\n  Success = \"SUCCESS\",\n}\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccount = Actor &\n  Node & {\n    __typename?: \"EnterpriseUserAccount\";\n    /** A URL pointing to the enterprise user account's public avatar. */\n    avatarUrl: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The enterprise in which this user account exists. */\n    enterprise: Enterprise;\n    id: Scalars[\"ID\"];\n    /** An identifier for the enterprise user account, a login or email address */\n    login: Scalars[\"String\"];\n    /** The name of the enterprise user account */\n    name?: Maybe<Scalars[\"String\"]>;\n    /** A list of enterprise organizations this user is a member of. */\n    organizations: EnterpriseOrganizationMembershipConnection;\n    /** The HTTP path for this user. */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this user. */\n    url: Scalars[\"URI\"];\n    /** The user within the enterprise. */\n    user?: Maybe<User>;\n  };\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccountAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccountOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  role?: InputMaybe<EnterpriseUserAccountMembershipRole>;\n};\n\n/** The possible roles for enterprise membership. */\nexport enum EnterpriseUserAccountMembershipRole {\n  /** The user is a member of an organization in the enterprise. */\n  Member = \"MEMBER\",\n  /** The user is an owner of an organization in the enterprise. */\n  Owner = \"OWNER\",\n  /** The user is not an owner of the enterprise, and not a member or owner of any organizations in the enterprise; only for EMU-enabled enterprises. */\n  Unaffiliated = \"UNAFFILIATED\",\n}\n\n/** The possible GitHub Enterprise deployments where this user can exist. */\nexport enum EnterpriseUserDeployment {\n  /** The user is part of a GitHub Enterprise Cloud deployment. */\n  Cloud = \"CLOUD\",\n  /** The user is part of a GitHub Enterprise Server deployment. */\n  Server = \"SERVER\",\n}\n\n/** An environment. */\nexport type Environment = Node & {\n  __typename?: \"Environment\";\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** The name of the environment */\n  name: Scalars[\"String\"];\n  /** The protection rules defined for this environment */\n  protectionRules: DeploymentProtectionRuleConnection;\n};\n\n/** An environment. */\nexport type EnvironmentProtectionRulesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Environment. */\nexport type EnvironmentConnection = {\n  __typename?: \"EnvironmentConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnvironmentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Environment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnvironmentEdge = {\n  __typename?: \"EnvironmentEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Environment>;\n};\n\n/** An external identity provisioned by SAML SSO or SCIM. */\nexport type ExternalIdentity = Node & {\n  __typename?: \"ExternalIdentity\";\n  /** The GUID for this identity */\n  guid: Scalars[\"String\"];\n  id: Scalars[\"ID\"];\n  /** Organization invitation for this SCIM-provisioned external identity */\n  organizationInvitation?: Maybe<OrganizationInvitation>;\n  /** SAML Identity attributes */\n  samlIdentity?: Maybe<ExternalIdentitySamlAttributes>;\n  /** SCIM Identity attributes */\n  scimIdentity?: Maybe<ExternalIdentityScimAttributes>;\n  /** User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member. */\n  user?: Maybe<User>;\n};\n\n/** An attribute for the External Identity attributes collection */\nexport type ExternalIdentityAttribute = {\n  __typename?: \"ExternalIdentityAttribute\";\n  /** The attribute metadata as JSON */\n  metadata?: Maybe<Scalars[\"String\"]>;\n  /** The attribute name */\n  name: Scalars[\"String\"];\n  /** The attribute value */\n  value: Scalars[\"String\"];\n};\n\n/** The connection type for ExternalIdentity. */\nexport type ExternalIdentityConnection = {\n  __typename?: \"ExternalIdentityConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ExternalIdentityEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ExternalIdentity>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ExternalIdentityEdge = {\n  __typename?: \"ExternalIdentityEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ExternalIdentity>;\n};\n\n/** SAML attributes for the External Identity */\nexport type ExternalIdentitySamlAttributes = {\n  __typename?: \"ExternalIdentitySamlAttributes\";\n  /** SAML Identity attributes */\n  attributes: Array<ExternalIdentityAttribute>;\n  /** The emails associated with the SAML identity */\n  emails?: Maybe<Array<UserEmailMetadata>>;\n  /** Family name of the SAML identity */\n  familyName?: Maybe<Scalars[\"String\"]>;\n  /** Given name of the SAML identity */\n  givenName?: Maybe<Scalars[\"String\"]>;\n  /** The groups linked to this identity in IDP */\n  groups?: Maybe<Array<Scalars[\"String\"]>>;\n  /** The NameID of the SAML identity */\n  nameId?: Maybe<Scalars[\"String\"]>;\n  /** The userName of the SAML identity */\n  username?: Maybe<Scalars[\"String\"]>;\n};\n\n/** SCIM attributes for the External Identity */\nexport type ExternalIdentityScimAttributes = {\n  __typename?: \"ExternalIdentityScimAttributes\";\n  /** The emails associated with the SCIM identity */\n  emails?: Maybe<Array<UserEmailMetadata>>;\n  /** Family name of the SCIM identity */\n  familyName?: Maybe<Scalars[\"String\"]>;\n  /** Given name of the SCIM identity */\n  givenName?: Maybe<Scalars[\"String\"]>;\n  /** The groups linked to this identity in IDP */\n  groups?: Maybe<Array<Scalars[\"String\"]>>;\n  /** The userName of the SCIM identity */\n  username?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A command to add a file at the given path with the given contents as part of a commit.  Any existing file at that that path will be replaced. */\nexport type FileAddition = {\n  /** The base64 encoded contents of the file */\n  contents: Scalars[\"Base64String\"];\n  /** The path in the repository where the file will be located */\n  path: Scalars[\"String\"];\n};\n\n/**\n * A description of a set of changes to a file tree to be made as part of\n * a git commit, modeled as zero or more file `additions` and zero or more\n * file `deletions`.\n *\n * Both fields are optional; omitting both will produce a commit with no\n * file changes.\n *\n * `deletions` and `additions` describe changes to files identified\n * by their path in the git tree using unix-style path separators, i.e.\n * `/`.  The root of a git tree is an empty string, so paths are not\n * slash-prefixed.\n *\n * `path` values must be unique across all `additions` and `deletions`\n * provided.  Any duplication will result in a validation error.\n *\n * ### Encoding\n *\n * File contents must be provided in full for each `FileAddition`.\n *\n * The `contents` of a `FileAddition` must be encoded using RFC 4648\n * compliant base64, i.e. correct padding is required and no characters\n * outside the standard alphabet may be used.  Invalid base64\n * encoding will be rejected with a validation error.\n *\n * The encoded contents may be binary.\n *\n * For text files, no assumptions are made about the character encoding of\n * the file contents (after base64 decoding).  No charset transcoding or\n * line-ending normalization will be performed; it is the client's\n * responsibility to manage the character encoding of files they provide.\n * However, for maximum compatibility we recommend using UTF-8 encoding\n * and ensuring that all files in a repository use a consistent\n * line-ending convention (`\\n` or `\\r\\n`), and that all files end\n * with a newline.\n *\n * ### Modeling file changes\n *\n * Each of the the five types of conceptual changes that can be made in a\n * git commit can be described using the `FileChanges` type as follows:\n *\n * 1. New file addition: create file `hello world\\n` at path `docs/README.txt`:\n *\n *        {\n *          \"additions\" [\n *            {\n *              \"path\": \"docs/README.txt\",\n *              \"contents\": base64encode(\"hello world\\n\")\n *            }\n *          ]\n *        }\n *\n * 2. Existing file modification: change existing `docs/README.txt` to have new\n *    content `new content here\\n`:\n *\n *        {\n *          \"additions\" [\n *            {\n *              \"path\": \"docs/README.txt\",\n *              \"contents\": base64encode(\"new content here\\n\")\n *            }\n *          ]\n *        }\n *\n * 3. Existing file deletion: remove existing file `docs/README.txt`.\n *    Note that the path is required to exist -- specifying a\n *    path that does not exist on the given branch will abort the\n *    commit and return an error.\n *\n *        {\n *          \"deletions\" [\n *            {\n *              \"path\": \"docs/README.txt\"\n *            }\n *          ]\n *        }\n *\n *\n * 4. File rename with no changes: rename `docs/README.txt` with\n *    previous content `hello world\\n` to the same content at\n *    `newdocs/README.txt`:\n *\n *        {\n *          \"deletions\" [\n *            {\n *              \"path\": \"docs/README.txt\",\n *            }\n *          ],\n *          \"additions\" [\n *            {\n *              \"path\": \"newdocs/README.txt\",\n *              \"contents\": base64encode(\"hello world\\n\")\n *            }\n *          ]\n *        }\n *\n *\n * 5. File rename with changes: rename `docs/README.txt` with\n *    previous content `hello world\\n` to a file at path\n *    `newdocs/README.txt` with content `new contents\\n`:\n *\n *        {\n *          \"deletions\" [\n *            {\n *              \"path\": \"docs/README.txt\",\n *            }\n *          ],\n *          \"additions\" [\n *            {\n *              \"path\": \"newdocs/README.txt\",\n *              \"contents\": base64encode(\"new contents\\n\")\n *            }\n *          ]\n *        }\n *\n */\nexport type FileChanges = {\n  /** File to add or change. */\n  additions?: InputMaybe<Array<FileAddition>>;\n  /** Files to delete. */\n  deletions?: InputMaybe<Array<FileDeletion>>;\n};\n\n/** A command to delete the file at the given path as part of a commit. */\nexport type FileDeletion = {\n  /** The path to delete */\n  path: Scalars[\"String\"];\n};\n\n/** The possible viewed states of a file . */\nexport enum FileViewedState {\n  /** The file has new changes since last viewed. */\n  Dismissed = \"DISMISSED\",\n  /** The file has not been marked as viewed. */\n  Unviewed = \"UNVIEWED\",\n  /** The file has been marked as viewed. */\n  Viewed = \"VIEWED\",\n}\n\n/** Autogenerated input type of FollowOrganization */\nexport type FollowOrganizationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the organization to follow. */\n  organizationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of FollowOrganization */\nexport type FollowOrganizationPayload = {\n  __typename?: \"FollowOrganizationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The organization that was followed. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of FollowUser */\nexport type FollowUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the user to follow. */\n  userId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of FollowUser */\nexport type FollowUserPayload = {\n  __typename?: \"FollowUserPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The user that was followed. */\n  user?: Maybe<User>;\n};\n\n/** The connection type for User. */\nexport type FollowerConnection = {\n  __typename?: \"FollowerConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** The connection type for User. */\nexport type FollowingConnection = {\n  __typename?: \"FollowingConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** A funding platform link for a repository. */\nexport type FundingLink = {\n  __typename?: \"FundingLink\";\n  /** The funding platform this link is for. */\n  platform: FundingPlatform;\n  /** The configured URL for this funding link. */\n  url: Scalars[\"URI\"];\n};\n\n/** The possible funding platforms for repository funding links. */\nexport enum FundingPlatform {\n  /** Community Bridge funding platform. */\n  CommunityBridge = \"COMMUNITY_BRIDGE\",\n  /** Custom funding platform. */\n  Custom = \"CUSTOM\",\n  /** GitHub funding platform. */\n  Github = \"GITHUB\",\n  /** IssueHunt funding platform. */\n  Issuehunt = \"ISSUEHUNT\",\n  /** Ko-fi funding platform. */\n  KoFi = \"KO_FI\",\n  /** LFX Crowdfunding funding platform. */\n  LfxCrowdfunding = \"LFX_CROWDFUNDING\",\n  /** Liberapay funding platform. */\n  Liberapay = \"LIBERAPAY\",\n  /** Open Collective funding platform. */\n  OpenCollective = \"OPEN_COLLECTIVE\",\n  /** Otechie funding platform. */\n  Otechie = \"OTECHIE\",\n  /** Patreon funding platform. */\n  Patreon = \"PATREON\",\n  /** Tidelift funding platform. */\n  Tidelift = \"TIDELIFT\",\n}\n\n/** A generic hovercard context with a message and icon */\nexport type GenericHovercardContext = HovercardContext & {\n  __typename?: \"GenericHovercardContext\";\n  /** A string describing this context */\n  message: Scalars[\"String\"];\n  /** An octicon to accompany this context */\n  octicon: Scalars[\"String\"];\n};\n\n/** A Gist. */\nexport type Gist = Node &\n  Starrable &\n  UniformResourceLocatable & {\n    __typename?: \"Gist\";\n    /** A list of comments associated with the gist */\n    comments: GistCommentConnection;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The gist description. */\n    description?: Maybe<Scalars[\"String\"]>;\n    /** The files in this gist. */\n    files?: Maybe<Array<Maybe<GistFile>>>;\n    /** A list of forks associated with the gist */\n    forks: GistConnection;\n    id: Scalars[\"ID\"];\n    /** Identifies if the gist is a fork. */\n    isFork: Scalars[\"Boolean\"];\n    /** Whether the gist is public or not. */\n    isPublic: Scalars[\"Boolean\"];\n    /** The gist name. */\n    name: Scalars[\"String\"];\n    /** The gist owner. */\n    owner?: Maybe<RepositoryOwner>;\n    /** Identifies when the gist was last pushed to. */\n    pushedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** The HTML path to this resource. */\n    resourcePath: Scalars[\"URI\"];\n    /**\n     * Returns a count of how many stargazers there are on this object\n     *\n     */\n    stargazerCount: Scalars[\"Int\"];\n    /** A list of users who have starred this starrable. */\n    stargazers: StargazerConnection;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this Gist. */\n    url: Scalars[\"URI\"];\n    /** Returns a boolean indicating whether the viewing user has starred this starrable. */\n    viewerHasStarred: Scalars[\"Boolean\"];\n  };\n\n/** A Gist. */\nexport type GistCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A Gist. */\nexport type GistFilesArgs = {\n  limit?: InputMaybe<Scalars[\"Int\"]>;\n  oid?: InputMaybe<Scalars[\"GitObjectID\"]>;\n};\n\n/** A Gist. */\nexport type GistForksArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<GistOrder>;\n};\n\n/** A Gist. */\nexport type GistStargazersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<StarOrder>;\n};\n\n/** Represents a comment on an Gist. */\nexport type GistComment = Comment &\n  Deletable &\n  Minimizable &\n  Node &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"GistComment\";\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the gist. */\n    authorAssociation: CommentAuthorAssociation;\n    /** Identifies the comment body. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    /** The associated gist. */\n    gist: Gist;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** Returns whether or not a comment has been minimized. */\n    isMinimized: Scalars[\"Boolean\"];\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation. */\n    minimizedReason?: Maybe<Scalars[\"String\"]>;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Check if the current viewer can minimize this object. */\n    viewerCanMinimize: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n  };\n\n/** Represents a comment on an Gist. */\nexport type GistCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for GistComment. */\nexport type GistCommentConnection = {\n  __typename?: \"GistCommentConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<GistCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<GistComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type GistCommentEdge = {\n  __typename?: \"GistCommentEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<GistComment>;\n};\n\n/** The connection type for Gist. */\nexport type GistConnection = {\n  __typename?: \"GistConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<GistEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Gist>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type GistEdge = {\n  __typename?: \"GistEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Gist>;\n};\n\n/** A file in a gist. */\nexport type GistFile = {\n  __typename?: \"GistFile\";\n  /** The file name encoded to remove characters that are invalid in URL paths. */\n  encodedName?: Maybe<Scalars[\"String\"]>;\n  /** The gist file encoding. */\n  encoding?: Maybe<Scalars[\"String\"]>;\n  /** The file extension from the file name. */\n  extension?: Maybe<Scalars[\"String\"]>;\n  /** Indicates if this file is an image. */\n  isImage: Scalars[\"Boolean\"];\n  /** Whether the file's contents were truncated. */\n  isTruncated: Scalars[\"Boolean\"];\n  /** The programming language this file is written in. */\n  language?: Maybe<Language>;\n  /** The gist file name. */\n  name?: Maybe<Scalars[\"String\"]>;\n  /** The gist file size in bytes. */\n  size?: Maybe<Scalars[\"Int\"]>;\n  /** UTF8 text data or null if the file is binary */\n  text?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A file in a gist. */\nexport type GistFileTextArgs = {\n  truncate?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Ordering options for gist connections */\nexport type GistOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order repositories by. */\n  field: GistOrderField;\n};\n\n/** Properties by which gist connections can be ordered. */\nexport enum GistOrderField {\n  /** Order gists by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order gists by push time */\n  PushedAt = \"PUSHED_AT\",\n  /** Order gists by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** The privacy of a Gist */\nexport enum GistPrivacy {\n  /** Gists that are public and secret */\n  All = \"ALL\",\n  /** Public */\n  Public = \"PUBLIC\",\n  /** Secret */\n  Secret = \"SECRET\",\n}\n\n/** Represents an actor in a Git commit (ie. an author or committer). */\nexport type GitActor = {\n  __typename?: \"GitActor\";\n  /** A URL pointing to the author's public avatar. */\n  avatarUrl: Scalars[\"URI\"];\n  /** The timestamp of the Git action (authoring or committing). */\n  date?: Maybe<Scalars[\"GitTimestamp\"]>;\n  /** The email in the Git commit. */\n  email?: Maybe<Scalars[\"String\"]>;\n  /** The name in the Git commit. */\n  name?: Maybe<Scalars[\"String\"]>;\n  /** The GitHub user corresponding to the email field. Null if no such user exists. */\n  user?: Maybe<User>;\n};\n\n/** Represents an actor in a Git commit (ie. an author or committer). */\nexport type GitActorAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for GitActor. */\nexport type GitActorConnection = {\n  __typename?: \"GitActorConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<GitActorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<GitActor>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type GitActorEdge = {\n  __typename?: \"GitActorEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<GitActor>;\n};\n\n/** Represents information about the GitHub instance. */\nexport type GitHubMetadata = {\n  __typename?: \"GitHubMetadata\";\n  /** Returns a String that's a SHA of `github-services` */\n  gitHubServicesSha: Scalars[\"GitObjectID\"];\n  /** IP addresses that users connect to for git operations */\n  gitIpAddresses?: Maybe<Array<Scalars[\"String\"]>>;\n  /** IP addresses that service hooks are sent from */\n  hookIpAddresses?: Maybe<Array<Scalars[\"String\"]>>;\n  /** IP addresses that the importer connects from */\n  importerIpAddresses?: Maybe<Array<Scalars[\"String\"]>>;\n  /** Whether or not users are verified */\n  isPasswordAuthenticationVerifiable: Scalars[\"Boolean\"];\n  /** IP addresses for GitHub Pages' A records */\n  pagesIpAddresses?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Represents a Git object. */\nexport type GitObject = {\n  /** An abbreviated version of the Git object ID */\n  abbreviatedOid: Scalars[\"String\"];\n  /** The HTTP path for this Git object */\n  commitResourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this Git object */\n  commitUrl: Scalars[\"URI\"];\n  id: Scalars[\"ID\"];\n  /** The Git object ID */\n  oid: Scalars[\"GitObjectID\"];\n  /** The Repository the Git object belongs to */\n  repository: Repository;\n};\n\n/** Information about a signature (GPG or S/MIME) on a Commit or Tag. */\nexport type GitSignature = {\n  /** Email used to sign this object. */\n  email: Scalars[\"String\"];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars[\"Boolean\"];\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars[\"String\"];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars[\"String\"];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** The state of a Git signature. */\nexport enum GitSignatureState {\n  /** The signing certificate or its chain could not be verified */\n  BadCert = \"BAD_CERT\",\n  /** Invalid email used for signing */\n  BadEmail = \"BAD_EMAIL\",\n  /** Signing key expired */\n  ExpiredKey = \"EXPIRED_KEY\",\n  /** Internal error - the GPG verification service misbehaved */\n  GpgverifyError = \"GPGVERIFY_ERROR\",\n  /** Internal error - the GPG verification service is unavailable at the moment */\n  GpgverifyUnavailable = \"GPGVERIFY_UNAVAILABLE\",\n  /** Invalid signature */\n  Invalid = \"INVALID\",\n  /** Malformed signature */\n  MalformedSig = \"MALFORMED_SIG\",\n  /** The usage flags for the key that signed this don't allow signing */\n  NotSigningKey = \"NOT_SIGNING_KEY\",\n  /** Email used for signing not known to GitHub */\n  NoUser = \"NO_USER\",\n  /** Valid signature, though certificate revocation check failed */\n  OcspError = \"OCSP_ERROR\",\n  /** Valid signature, pending certificate revocation checking */\n  OcspPending = \"OCSP_PENDING\",\n  /** One or more certificates in chain has been revoked */\n  OcspRevoked = \"OCSP_REVOKED\",\n  /** Key used for signing not known to GitHub */\n  UnknownKey = \"UNKNOWN_KEY\",\n  /** Unknown signature type */\n  UnknownSigType = \"UNKNOWN_SIG_TYPE\",\n  /** Unsigned */\n  Unsigned = \"UNSIGNED\",\n  /** Email used for signing unverified on GitHub */\n  UnverifiedEmail = \"UNVERIFIED_EMAIL\",\n  /** Valid signature and verified by GitHub */\n  Valid = \"VALID\",\n}\n\n/** Represents a GPG signature on a Commit or Tag. */\nexport type GpgSignature = GitSignature & {\n  __typename?: \"GpgSignature\";\n  /** Email used to sign this object. */\n  email: Scalars[\"String\"];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars[\"Boolean\"];\n  /** Hex-encoded ID of the key that signed this object. */\n  keyId?: Maybe<Scalars[\"String\"]>;\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars[\"String\"];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars[\"String\"];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** Autogenerated input type of GrantEnterpriseOrganizationsMigratorRole */\nexport type GrantEnterpriseOrganizationsMigratorRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise to which all organizations managed by it will be granted the migrator role. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The login of the user to grant the migrator role */\n  login: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole */\nexport type GrantEnterpriseOrganizationsMigratorRolePayload = {\n  __typename?: \"GrantEnterpriseOrganizationsMigratorRolePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The organizations that had the migrator role applied to for the given user. */\n  organizations?: Maybe<OrganizationConnection>;\n};\n\n/** Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole */\nexport type GrantEnterpriseOrganizationsMigratorRolePayloadOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Autogenerated input type of GrantMigratorRole */\nexport type GrantMigratorRoleInput = {\n  /** The user login or Team slug to grant the migrator role. */\n  actor: Scalars[\"String\"];\n  /** Specifies the type of the actor, can be either USER or TEAM. */\n  actorType: ActorType;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the organization that the user/team belongs to. */\n  organizationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of GrantMigratorRole */\nexport type GrantMigratorRolePayload = {\n  __typename?: \"GrantMigratorRolePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** Did the operation succeed? */\n  success?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Represents a 'head_ref_deleted' event on a given pull request. */\nexport type HeadRefDeletedEvent = Node & {\n  __typename?: \"HeadRefDeletedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the Ref associated with the `head_ref_deleted` event. */\n  headRef?: Maybe<Ref>;\n  /** Identifies the name of the Ref associated with the `head_ref_deleted` event. */\n  headRefName: Scalars[\"String\"];\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'head_ref_force_pushed' event on a given pull request. */\nexport type HeadRefForcePushedEvent = Node & {\n  __typename?: \"HeadRefForcePushedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the after commit SHA for the 'head_ref_force_pushed' event. */\n  afterCommit?: Maybe<Commit>;\n  /** Identifies the before commit SHA for the 'head_ref_force_pushed' event. */\n  beforeCommit?: Maybe<Commit>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the fully qualified ref name for the 'head_ref_force_pushed' event. */\n  ref?: Maybe<Ref>;\n};\n\n/** Represents a 'head_ref_restored' event on a given pull request. */\nexport type HeadRefRestoredEvent = Node & {\n  __typename?: \"HeadRefRestoredEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Detail needed to display a hovercard for a user */\nexport type Hovercard = {\n  __typename?: \"Hovercard\";\n  /** Each of the contexts for this hovercard */\n  contexts: Array<HovercardContext>;\n};\n\n/** An individual line of a hovercard */\nexport type HovercardContext = {\n  /** A string describing this context */\n  message: Scalars[\"String\"];\n  /** An octicon to accompany this context */\n  octicon: Scalars[\"String\"];\n};\n\n/** The possible states in which authentication can be configured with an identity provider. */\nexport enum IdentityProviderConfigurationState {\n  /** Authentication with an identity provider is configured but not enforced. */\n  Configured = \"CONFIGURED\",\n  /** Authentication with an identity provider is configured and enforced. */\n  Enforced = \"ENFORCED\",\n  /** Authentication with an identity provider is not configured. */\n  Unconfigured = \"UNCONFIGURED\",\n}\n\n/** Autogenerated input type of InviteEnterpriseAdmin */\nexport type InviteEnterpriseAdminInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The email of the person to invite as an administrator. */\n  email?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise to which you want to invite an administrator. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The login of a user to invite as an administrator. */\n  invitee?: InputMaybe<Scalars[\"String\"]>;\n  /** The role of the administrator. */\n  role?: InputMaybe<EnterpriseAdministratorRole>;\n};\n\n/** Autogenerated return type of InviteEnterpriseAdmin */\nexport type InviteEnterpriseAdminPayload = {\n  __typename?: \"InviteEnterpriseAdminPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The created enterprise administrator invitation. */\n  invitation?: Maybe<EnterpriseAdministratorInvitation>;\n};\n\n/** The possible values for the IP allow list enabled setting. */\nexport enum IpAllowListEnabledSettingValue {\n  /** The setting is disabled for the owner. */\n  Disabled = \"DISABLED\",\n  /** The setting is enabled for the owner. */\n  Enabled = \"ENABLED\",\n}\n\n/** An IP address or range of addresses that is allowed to access an owner's resources. */\nexport type IpAllowListEntry = Node & {\n  __typename?: \"IpAllowListEntry\";\n  /** A single IP address or range of IP addresses in CIDR notation. */\n  allowListValue: Scalars[\"String\"];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Whether the entry is currently active. */\n  isActive: Scalars[\"Boolean\"];\n  /** The name of the IP allow list entry. */\n  name?: Maybe<Scalars[\"String\"]>;\n  /** The owner of the IP allow list entry. */\n  owner: IpAllowListOwner;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** The connection type for IpAllowListEntry. */\nexport type IpAllowListEntryConnection = {\n  __typename?: \"IpAllowListEntryConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IpAllowListEntryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<IpAllowListEntry>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type IpAllowListEntryEdge = {\n  __typename?: \"IpAllowListEntryEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<IpAllowListEntry>;\n};\n\n/** Ordering options for IP allow list entry connections. */\nexport type IpAllowListEntryOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order IP allow list entries by. */\n  field: IpAllowListEntryOrderField;\n};\n\n/** Properties by which IP allow list entry connections can be ordered. */\nexport enum IpAllowListEntryOrderField {\n  /** Order IP allow list entries by the allow list value. */\n  AllowListValue = \"ALLOW_LIST_VALUE\",\n  /** Order IP allow list entries by creation time. */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** The possible values for the IP allow list configuration for installed GitHub Apps setting. */\nexport enum IpAllowListForInstalledAppsEnabledSettingValue {\n  /** The setting is disabled for the owner. */\n  Disabled = \"DISABLED\",\n  /** The setting is enabled for the owner. */\n  Enabled = \"ENABLED\",\n}\n\n/** Types that can own an IP allow list. */\nexport type IpAllowListOwner = App | Enterprise | Organization;\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type Issue = Assignable &\n  Closable &\n  Comment &\n  Labelable &\n  Lockable &\n  Node &\n  ProjectV2Owner &\n  Reactable &\n  RepositoryNode &\n  Subscribable &\n  UniformResourceLocatable &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"Issue\";\n    /** Reason that the conversation was locked. */\n    activeLockReason?: Maybe<LockReason>;\n    /** A list of Users assigned to this object. */\n    assignees: UserConnection;\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the subject of the comment. */\n    authorAssociation: CommentAuthorAssociation;\n    /** Identifies the body of the issue. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The http path for this issue body */\n    bodyResourcePath: Scalars[\"URI\"];\n    /** Identifies the body of the issue rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** The http URL for this issue body */\n    bodyUrl: Scalars[\"URI\"];\n    /** `true` if the object is closed (definition of closed may depend on type) */\n    closed: Scalars[\"Boolean\"];\n    /** Identifies the date and time when the object was closed. */\n    closedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of comments associated with the Issue. */\n    comments: IssueCommentConnection;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    /** The hovercard information for this issue */\n    hovercard: Hovercard;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** Indicates whether or not this issue is currently pinned to the repository issues list */\n    isPinned?: Maybe<Scalars[\"Boolean\"]>;\n    /** Is this issue read by the viewer */\n    isReadByViewer?: Maybe<Scalars[\"Boolean\"]>;\n    /** A list of labels associated with the object. */\n    labels?: Maybe<LabelConnection>;\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Branches linked to this issue. */\n    linkedBranches: LinkedBranchConnection;\n    /** `true` if the object is locked */\n    locked: Scalars[\"Boolean\"];\n    /** Identifies the milestone associated with the issue. */\n    milestone?: Maybe<Milestone>;\n    /** Identifies the issue number. */\n    number: Scalars[\"Int\"];\n    /** A list of Users that are participating in the Issue conversation. */\n    participants: UserConnection;\n    /** List of project cards associated with this issue. */\n    projectCards: ProjectCardConnection;\n    /** List of project items associated with this issue. */\n    projectItems: ProjectV2ItemConnection;\n    /** Find a project by number. */\n    projectV2?: Maybe<ProjectV2>;\n    /** A list of projects under the owner. */\n    projectsV2: ProjectV2Connection;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** The HTTP path for this issue */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the state of the issue. */\n    state: IssueState;\n    /** Identifies the reason for the issue state. */\n    stateReason?: Maybe<IssueStateReason>;\n    /**\n     * A list of events, comments, commits, etc. associated with the issue.\n     * @deprecated `timeline` will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC.\n     */\n    timeline: IssueTimelineConnection;\n    /** A list of events, comments, commits, etc. associated with the issue. */\n    timelineItems: IssueTimelineItemsConnection;\n    /** Identifies the issue title. */\n    title: Scalars[\"String\"];\n    /** Identifies the issue title rendered to HTML. */\n    titleHTML: Scalars[\"String\"];\n    /** A list of issues that track this issue */\n    trackedInIssues: IssueConnection;\n    /** A list of issues tracked inside the current issue */\n    trackedIssues: IssueConnection;\n    /** The number of tracked issues for this issue */\n    trackedIssuesCount: Scalars[\"Int\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this issue */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the viewer is able to change their subscription status for the repository. */\n    viewerCanSubscribe: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n    viewerSubscription?: Maybe<SubscriptionState>;\n  };\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueAssigneesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueCommentOrder>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueHovercardArgs = {\n  includeNotificationContexts?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueLabelsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueLinkedBranchesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueParticipantsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectCardsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  archivedStates?: InputMaybe<Array<InputMaybe<ProjectCardArchivedState>>>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includeArchived?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectV2Args = {\n  number: Scalars[\"Int\"];\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectsV2Args = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTimelineArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTimelineItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  itemTypes?: InputMaybe<Array<IssueTimelineItemsItemType>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  skip?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTrackedInIssuesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTrackedIssuesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTrackedIssuesCountArgs = {\n  states?: InputMaybe<Array<InputMaybe<TrackedIssueStates>>>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The possible state reasons of a closed issue. */\nexport enum IssueClosedStateReason {\n  /** An issue that has been closed as completed */\n  Completed = \"COMPLETED\",\n  /** An issue that has been closed as not planned */\n  NotPlanned = \"NOT_PLANNED\",\n}\n\n/** Represents a comment on an Issue. */\nexport type IssueComment = Comment &\n  Deletable &\n  Minimizable &\n  Node &\n  Reactable &\n  RepositoryNode &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"IssueComment\";\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the subject of the comment. */\n    authorAssociation: CommentAuthorAssociation;\n    /** The body as Markdown. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** Returns whether or not a comment has been minimized. */\n    isMinimized: Scalars[\"Boolean\"];\n    /** Identifies the issue associated with the comment. */\n    issue: Issue;\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation. */\n    minimizedReason?: Maybe<Scalars[\"String\"]>;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /**\n     * Returns the pull request associated with the comment, if this comment was made on a\n     * pull request.\n     *\n     */\n    pullRequest?: Maybe<PullRequest>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** The HTTP path for this issue comment */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this issue comment */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Check if the current viewer can minimize this object. */\n    viewerCanMinimize: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n  };\n\n/** Represents a comment on an Issue. */\nexport type IssueCommentReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** Represents a comment on an Issue. */\nexport type IssueCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for IssueComment. */\nexport type IssueCommentConnection = {\n  __typename?: \"IssueCommentConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IssueCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<IssueComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type IssueCommentEdge = {\n  __typename?: \"IssueCommentEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<IssueComment>;\n};\n\n/** Ways in which lists of issue comments can be ordered upon return. */\nexport type IssueCommentOrder = {\n  /** The direction in which to order issue comments by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order issue comments by. */\n  field: IssueCommentOrderField;\n};\n\n/** Properties by which issue comment connections can be ordered. */\nexport enum IssueCommentOrderField {\n  /** Order issue comments by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** The connection type for Issue. */\nexport type IssueConnection = {\n  __typename?: \"IssueConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IssueEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Issue>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** This aggregates issues opened by a user within one repository. */\nexport type IssueContributionsByRepository = {\n  __typename?: \"IssueContributionsByRepository\";\n  /** The issue contributions. */\n  contributions: CreatedIssueContributionConnection;\n  /** The repository in which the issues were opened. */\n  repository: Repository;\n};\n\n/** This aggregates issues opened by a user within one repository. */\nexport type IssueContributionsByRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type IssueEdge = {\n  __typename?: \"IssueEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Issue>;\n};\n\n/** Ways in which to filter lists of issues. */\nexport type IssueFilters = {\n  /** List issues assigned to given name. Pass in `null` for issues with no assigned user, and `*` for issues assigned to any user. */\n  assignee?: InputMaybe<Scalars[\"String\"]>;\n  /** List issues created by given name. */\n  createdBy?: InputMaybe<Scalars[\"String\"]>;\n  /** List issues where the list of label names exist on the issue. */\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  /** List issues where the given name is mentioned in the issue. */\n  mentioned?: InputMaybe<Scalars[\"String\"]>;\n  /** List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its database ID. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone. */\n  milestone?: InputMaybe<Scalars[\"String\"]>;\n  /** List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its number field. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone. */\n  milestoneNumber?: InputMaybe<Scalars[\"String\"]>;\n  /** List issues that have been updated at or after the given date. */\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  /** List issues filtered by the list of states given. */\n  states?: InputMaybe<Array<IssueState>>;\n  /** List issues subscribed to by viewer. */\n  viewerSubscribed?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** Used for return value of Repository.issueOrPullRequest. */\nexport type IssueOrPullRequest = Issue | PullRequest;\n\n/** Ways in which lists of issues can be ordered upon return. */\nexport type IssueOrder = {\n  /** The direction in which to order issues by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order issues by. */\n  field: IssueOrderField;\n};\n\n/** Properties by which issue connections can be ordered. */\nexport enum IssueOrderField {\n  /** Order issues by comment count */\n  Comments = \"COMMENTS\",\n  /** Order issues by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order issues by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** The possible states of an issue. */\nexport enum IssueState {\n  /** An issue that has been closed */\n  Closed = \"CLOSED\",\n  /** An issue that is still open */\n  Open = \"OPEN\",\n}\n\n/** The possible state reasons of an issue. */\nexport enum IssueStateReason {\n  /** An issue that has been closed as completed */\n  Completed = \"COMPLETED\",\n  /** An issue that has been closed as not planned */\n  NotPlanned = \"NOT_PLANNED\",\n  /** An issue that has been reopened */\n  Reopened = \"REOPENED\",\n}\n\n/** A repository issue template. */\nexport type IssueTemplate = {\n  __typename?: \"IssueTemplate\";\n  /** The template purpose. */\n  about?: Maybe<Scalars[\"String\"]>;\n  /** The suggested issue body. */\n  body?: Maybe<Scalars[\"String\"]>;\n  /** The template filename. */\n  filename: Scalars[\"String\"];\n  /** The template name. */\n  name: Scalars[\"String\"];\n  /** The suggested issue title. */\n  title?: Maybe<Scalars[\"String\"]>;\n};\n\n/** The connection type for IssueTimelineItem. */\nexport type IssueTimelineConnection = {\n  __typename?: \"IssueTimelineConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IssueTimelineItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<IssueTimelineItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An item in an issue timeline */\nexport type IssueTimelineItem =\n  | AssignedEvent\n  | ClosedEvent\n  | Commit\n  | CrossReferencedEvent\n  | DemilestonedEvent\n  | IssueComment\n  | LabeledEvent\n  | LockedEvent\n  | MilestonedEvent\n  | ReferencedEvent\n  | RenamedTitleEvent\n  | ReopenedEvent\n  | SubscribedEvent\n  | TransferredEvent\n  | UnassignedEvent\n  | UnlabeledEvent\n  | UnlockedEvent\n  | UnsubscribedEvent\n  | UserBlockedEvent;\n\n/** An edge in a connection. */\nexport type IssueTimelineItemEdge = {\n  __typename?: \"IssueTimelineItemEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<IssueTimelineItem>;\n};\n\n/** An item in an issue timeline */\nexport type IssueTimelineItems =\n  | AddedToProjectEvent\n  | AssignedEvent\n  | ClosedEvent\n  | CommentDeletedEvent\n  | ConnectedEvent\n  | ConvertedNoteToIssueEvent\n  | ConvertedToDiscussionEvent\n  | CrossReferencedEvent\n  | DemilestonedEvent\n  | DisconnectedEvent\n  | IssueComment\n  | LabeledEvent\n  | LockedEvent\n  | MarkedAsDuplicateEvent\n  | MentionedEvent\n  | MilestonedEvent\n  | MovedColumnsInProjectEvent\n  | PinnedEvent\n  | ReferencedEvent\n  | RemovedFromProjectEvent\n  | RenamedTitleEvent\n  | ReopenedEvent\n  | SubscribedEvent\n  | TransferredEvent\n  | UnassignedEvent\n  | UnlabeledEvent\n  | UnlockedEvent\n  | UnmarkedAsDuplicateEvent\n  | UnpinnedEvent\n  | UnsubscribedEvent\n  | UserBlockedEvent;\n\n/** The connection type for IssueTimelineItems. */\nexport type IssueTimelineItemsConnection = {\n  __typename?: \"IssueTimelineItemsConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IssueTimelineItemsEdge>>>;\n  /** Identifies the count of items after applying `before` and `after` filters. */\n  filteredCount: Scalars[\"Int\"];\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<IssueTimelineItems>>>;\n  /** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */\n  pageCount: Scalars[\"Int\"];\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n  /** Identifies the date and time when the timeline was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** An edge in a connection. */\nexport type IssueTimelineItemsEdge = {\n  __typename?: \"IssueTimelineItemsEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<IssueTimelineItems>;\n};\n\n/** The possible item types found in a timeline. */\nexport enum IssueTimelineItemsItemType {\n  /** Represents a 'added_to_project' event on a given issue or pull request. */\n  AddedToProjectEvent = \"ADDED_TO_PROJECT_EVENT\",\n  /** Represents an 'assigned' event on any assignable object. */\n  AssignedEvent = \"ASSIGNED_EVENT\",\n  /** Represents a 'closed' event on any `Closable`. */\n  ClosedEvent = \"CLOSED_EVENT\",\n  /** Represents a 'comment_deleted' event on a given issue or pull request. */\n  CommentDeletedEvent = \"COMMENT_DELETED_EVENT\",\n  /** Represents a 'connected' event on a given issue or pull request. */\n  ConnectedEvent = \"CONNECTED_EVENT\",\n  /** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\n  ConvertedNoteToIssueEvent = \"CONVERTED_NOTE_TO_ISSUE_EVENT\",\n  /** Represents a 'converted_to_discussion' event on a given issue. */\n  ConvertedToDiscussionEvent = \"CONVERTED_TO_DISCUSSION_EVENT\",\n  /** Represents a mention made by one issue or pull request to another. */\n  CrossReferencedEvent = \"CROSS_REFERENCED_EVENT\",\n  /** Represents a 'demilestoned' event on a given issue or pull request. */\n  DemilestonedEvent = \"DEMILESTONED_EVENT\",\n  /** Represents a 'disconnected' event on a given issue or pull request. */\n  DisconnectedEvent = \"DISCONNECTED_EVENT\",\n  /** Represents a comment on an Issue. */\n  IssueComment = \"ISSUE_COMMENT\",\n  /** Represents a 'labeled' event on a given issue or pull request. */\n  LabeledEvent = \"LABELED_EVENT\",\n  /** Represents a 'locked' event on a given issue or pull request. */\n  LockedEvent = \"LOCKED_EVENT\",\n  /** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\n  MarkedAsDuplicateEvent = \"MARKED_AS_DUPLICATE_EVENT\",\n  /** Represents a 'mentioned' event on a given issue or pull request. */\n  MentionedEvent = \"MENTIONED_EVENT\",\n  /** Represents a 'milestoned' event on a given issue or pull request. */\n  MilestonedEvent = \"MILESTONED_EVENT\",\n  /** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\n  MovedColumnsInProjectEvent = \"MOVED_COLUMNS_IN_PROJECT_EVENT\",\n  /** Represents a 'pinned' event on a given issue or pull request. */\n  PinnedEvent = \"PINNED_EVENT\",\n  /** Represents a 'referenced' event on a given `ReferencedSubject`. */\n  ReferencedEvent = \"REFERENCED_EVENT\",\n  /** Represents a 'removed_from_project' event on a given issue or pull request. */\n  RemovedFromProjectEvent = \"REMOVED_FROM_PROJECT_EVENT\",\n  /** Represents a 'renamed' event on a given issue or pull request */\n  RenamedTitleEvent = \"RENAMED_TITLE_EVENT\",\n  /** Represents a 'reopened' event on any `Closable`. */\n  ReopenedEvent = \"REOPENED_EVENT\",\n  /** Represents a 'subscribed' event on a given `Subscribable`. */\n  SubscribedEvent = \"SUBSCRIBED_EVENT\",\n  /** Represents a 'transferred' event on a given issue or pull request. */\n  TransferredEvent = \"TRANSFERRED_EVENT\",\n  /** Represents an 'unassigned' event on any assignable object. */\n  UnassignedEvent = \"UNASSIGNED_EVENT\",\n  /** Represents an 'unlabeled' event on a given issue or pull request. */\n  UnlabeledEvent = \"UNLABELED_EVENT\",\n  /** Represents an 'unlocked' event on a given issue or pull request. */\n  UnlockedEvent = \"UNLOCKED_EVENT\",\n  /** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\n  UnmarkedAsDuplicateEvent = \"UNMARKED_AS_DUPLICATE_EVENT\",\n  /** Represents an 'unpinned' event on a given issue or pull request. */\n  UnpinnedEvent = \"UNPINNED_EVENT\",\n  /** Represents an 'unsubscribed' event on a given `Subscribable`. */\n  UnsubscribedEvent = \"UNSUBSCRIBED_EVENT\",\n  /** Represents a 'user_blocked' event on a given user. */\n  UserBlockedEvent = \"USER_BLOCKED_EVENT\",\n}\n\n/** Represents a user signing up for a GitHub account. */\nexport type JoinedGitHubContribution = Contribution & {\n  __typename?: \"JoinedGitHubContribution\";\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   *\n   */\n  isRestricted: Scalars[\"Boolean\"];\n  /** When this contribution was made. */\n  occurredAt: Scalars[\"DateTime\"];\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this contribution. */\n  url: Scalars[\"URI\"];\n  /**\n   * The user who made this contribution.\n   *\n   */\n  user: User;\n};\n\n/** A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository. */\nexport type Label = Node & {\n  __typename?: \"Label\";\n  /** Identifies the label color. */\n  color: Scalars[\"String\"];\n  /** Identifies the date and time when the label was created. */\n  createdAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** A brief description of this label. */\n  description?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** Indicates whether or not this is a default label. */\n  isDefault: Scalars[\"Boolean\"];\n  /** A list of issues associated with this label. */\n  issues: IssueConnection;\n  /** Identifies the label name. */\n  name: Scalars[\"String\"];\n  /** A list of pull requests associated with this label. */\n  pullRequests: PullRequestConnection;\n  /** The repository associated with this label. */\n  repository: Repository;\n  /** The HTTP path for this label. */\n  resourcePath: Scalars[\"URI\"];\n  /** Identifies the date and time when the label was last updated. */\n  updatedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** The HTTP URL for this label. */\n  url: Scalars[\"URI\"];\n};\n\n/** A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository. */\nexport type LabelIssuesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  filterBy?: InputMaybe<IssueFilters>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<IssueState>>;\n};\n\n/** A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository. */\nexport type LabelPullRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  baseRefName?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  headRefName?: InputMaybe<Scalars[\"String\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** The connection type for Label. */\nexport type LabelConnection = {\n  __typename?: \"LabelConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LabelEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Label>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type LabelEdge = {\n  __typename?: \"LabelEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Label>;\n};\n\n/** Ways in which lists of labels can be ordered upon return. */\nexport type LabelOrder = {\n  /** The direction in which to order labels by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order labels by. */\n  field: LabelOrderField;\n};\n\n/** Properties by which label connections can be ordered. */\nexport enum LabelOrderField {\n  /** Order labels by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order labels by name  */\n  Name = \"NAME\",\n}\n\n/** An object that can have labels assigned to it. */\nexport type Labelable = {\n  /** A list of labels associated with the object. */\n  labels?: Maybe<LabelConnection>;\n};\n\n/** An object that can have labels assigned to it. */\nexport type LabelableLabelsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n/** Represents a 'labeled' event on a given issue or pull request. */\nexport type LabeledEvent = Node & {\n  __typename?: \"LabeledEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Identifies the label associated with the 'labeled' event. */\n  label: Label;\n  /** Identifies the `Labelable` associated with the event. */\n  labelable: Labelable;\n};\n\n/** Represents a given language found in repositories. */\nexport type Language = Node & {\n  __typename?: \"Language\";\n  /** The color defined for the current language. */\n  color?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The name of the current language. */\n  name: Scalars[\"String\"];\n};\n\n/** A list of languages associated with the parent. */\nexport type LanguageConnection = {\n  __typename?: \"LanguageConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LanguageEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Language>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n  /** The total size in bytes of files written in that language. */\n  totalSize: Scalars[\"Int\"];\n};\n\n/** Represents the language of a repository. */\nexport type LanguageEdge = {\n  __typename?: \"LanguageEdge\";\n  cursor: Scalars[\"String\"];\n  node: Language;\n  /** The number of bytes of code written in the language. */\n  size: Scalars[\"Int\"];\n};\n\n/** Ordering options for language connections. */\nexport type LanguageOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order languages by. */\n  field: LanguageOrderField;\n};\n\n/** Properties by which language connections can be ordered. */\nexport enum LanguageOrderField {\n  /** Order languages by the size of all files containing the language */\n  Size = \"SIZE\",\n}\n\n/** A repository's open source license */\nexport type License = Node & {\n  __typename?: \"License\";\n  /** The full text of the license */\n  body: Scalars[\"String\"];\n  /** The conditions set by the license */\n  conditions: Array<Maybe<LicenseRule>>;\n  /** A human-readable description of the license */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Whether the license should be featured */\n  featured: Scalars[\"Boolean\"];\n  /** Whether the license should be displayed in license pickers */\n  hidden: Scalars[\"Boolean\"];\n  id: Scalars[\"ID\"];\n  /** Instructions on how to implement the license */\n  implementation?: Maybe<Scalars[\"String\"]>;\n  /** The lowercased SPDX ID of the license */\n  key: Scalars[\"String\"];\n  /** The limitations set by the license */\n  limitations: Array<Maybe<LicenseRule>>;\n  /** The license full name specified by <https://spdx.org/licenses> */\n  name: Scalars[\"String\"];\n  /** Customary short name if applicable (e.g, GPLv3) */\n  nickname?: Maybe<Scalars[\"String\"]>;\n  /** The permissions set by the license */\n  permissions: Array<Maybe<LicenseRule>>;\n  /** Whether the license is a pseudo-license placeholder (e.g., other, no-license) */\n  pseudoLicense: Scalars[\"Boolean\"];\n  /** Short identifier specified by <https://spdx.org/licenses> */\n  spdxId?: Maybe<Scalars[\"String\"]>;\n  /** URL to the license on <https://choosealicense.com> */\n  url?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Describes a License's conditions, permissions, and limitations */\nexport type LicenseRule = {\n  __typename?: \"LicenseRule\";\n  /** A description of the rule */\n  description: Scalars[\"String\"];\n  /** The machine-readable rule key */\n  key: Scalars[\"String\"];\n  /** The human-readable rule label */\n  label: Scalars[\"String\"];\n};\n\n/** Autogenerated input type of LinkProjectV2ToRepository */\nexport type LinkProjectV2ToRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the project to link to the repository. */\n  projectId: Scalars[\"ID\"];\n  /** The ID of the repository to link to the project. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of LinkProjectV2ToRepository */\nexport type LinkProjectV2ToRepositoryPayload = {\n  __typename?: \"LinkProjectV2ToRepositoryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The repository the project is linked to. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of LinkProjectV2ToTeam */\nexport type LinkProjectV2ToTeamInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the project to link to the team. */\n  projectId: Scalars[\"ID\"];\n  /** The ID of the team to link to the project. */\n  teamId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of LinkProjectV2ToTeam */\nexport type LinkProjectV2ToTeamPayload = {\n  __typename?: \"LinkProjectV2ToTeamPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The team the project is linked to */\n  team?: Maybe<Team>;\n};\n\n/** Autogenerated input type of LinkRepositoryToProject */\nexport type LinkRepositoryToProjectInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the Project to link to a Repository */\n  projectId: Scalars[\"ID\"];\n  /** The ID of the Repository to link to a Project. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of LinkRepositoryToProject */\nexport type LinkRepositoryToProjectPayload = {\n  __typename?: \"LinkRepositoryToProjectPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The linked Project. */\n  project?: Maybe<Project>;\n  /** The linked Repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** A branch linked to an issue. */\nexport type LinkedBranch = Node & {\n  __typename?: \"LinkedBranch\";\n  id: Scalars[\"ID\"];\n  /** The branch's ref. */\n  ref?: Maybe<Ref>;\n};\n\n/** The connection type for LinkedBranch. */\nexport type LinkedBranchConnection = {\n  __typename?: \"LinkedBranchConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LinkedBranchEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<LinkedBranch>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type LinkedBranchEdge = {\n  __typename?: \"LinkedBranchEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<LinkedBranch>;\n};\n\n/** Autogenerated input type of LockLockable */\nexport type LockLockableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** A reason for why the item will be locked. */\n  lockReason?: InputMaybe<LockReason>;\n  /** ID of the item to be locked. */\n  lockableId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of LockLockable */\nexport type LockLockablePayload = {\n  __typename?: \"LockLockablePayload\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The item that was locked. */\n  lockedRecord?: Maybe<Lockable>;\n};\n\n/** The possible reasons that an issue or pull request was locked. */\nexport enum LockReason {\n  /** The issue or pull request was locked because the conversation was off-topic. */\n  OffTopic = \"OFF_TOPIC\",\n  /** The issue or pull request was locked because the conversation was resolved. */\n  Resolved = \"RESOLVED\",\n  /** The issue or pull request was locked because the conversation was spam. */\n  Spam = \"SPAM\",\n  /** The issue or pull request was locked because the conversation was too heated. */\n  TooHeated = \"TOO_HEATED\",\n}\n\n/** An object that can be locked. */\nexport type Lockable = {\n  /** Reason that the conversation was locked. */\n  activeLockReason?: Maybe<LockReason>;\n  /** `true` if the object is locked */\n  locked: Scalars[\"Boolean\"];\n};\n\n/** Represents a 'locked' event on a given issue or pull request. */\nexport type LockedEvent = Node & {\n  __typename?: \"LockedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Reason that the conversation was locked (optional). */\n  lockReason?: Maybe<LockReason>;\n  /** Object that was locked. */\n  lockable: Lockable;\n};\n\n/** A placeholder user for attribution of imported data on GitHub. */\nexport type Mannequin = Actor &\n  Node &\n  UniformResourceLocatable & {\n    __typename?: \"Mannequin\";\n    /** A URL pointing to the GitHub App's public avatar. */\n    avatarUrl: Scalars[\"URI\"];\n    /** The user that has claimed the data attributed to this mannequin. */\n    claimant?: Maybe<User>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The mannequin's email on the source instance. */\n    email?: Maybe<Scalars[\"String\"]>;\n    id: Scalars[\"ID\"];\n    /** The username of the actor. */\n    login: Scalars[\"String\"];\n    /** The HTML path to this resource. */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The URL to this resource. */\n    url: Scalars[\"URI\"];\n  };\n\n/** A placeholder user for attribution of imported data on GitHub. */\nexport type MannequinAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Mannequin. */\nexport type MannequinConnection = {\n  __typename?: \"MannequinConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<MannequinEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Mannequin>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a mannequin. */\nexport type MannequinEdge = {\n  __typename?: \"MannequinEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Mannequin>;\n};\n\n/** Ordering options for mannequins. */\nexport type MannequinOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order mannequins by. */\n  field: MannequinOrderField;\n};\n\n/** Properties by which mannequins can be ordered. */\nexport enum MannequinOrderField {\n  /** Order mannequins why when they were created. */\n  CreatedAt = \"CREATED_AT\",\n  /** Order mannequins alphabetically by their source login. */\n  Login = \"LOGIN\",\n}\n\n/** Autogenerated input type of MarkDiscussionCommentAsAnswer */\nexport type MarkDiscussionCommentAsAnswerInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion comment to mark as an answer. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of MarkDiscussionCommentAsAnswer */\nexport type MarkDiscussionCommentAsAnswerPayload = {\n  __typename?: \"MarkDiscussionCommentAsAnswerPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The discussion that includes the chosen comment. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of MarkFileAsViewed */\nexport type MarkFileAsViewedInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The path of the file to mark as viewed */\n  path: Scalars[\"String\"];\n  /** The Node ID of the pull request. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of MarkFileAsViewed */\nexport type MarkFileAsViewedPayload = {\n  __typename?: \"MarkFileAsViewedPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of MarkPullRequestReadyForReview */\nexport type MarkPullRequestReadyForReviewInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the pull request to be marked as ready for review. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of MarkPullRequestReadyForReview */\nexport type MarkPullRequestReadyForReviewPayload = {\n  __typename?: \"MarkPullRequestReadyForReviewPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request that is ready for review. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\nexport type MarkedAsDuplicateEvent = Node & {\n  __typename?: \"MarkedAsDuplicateEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** The authoritative issue or pull request which has been duplicated by another. */\n  canonical?: Maybe<IssueOrPullRequest>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The issue or pull request which has been marked as a duplicate of another. */\n  duplicate?: Maybe<IssueOrPullRequest>;\n  id: Scalars[\"ID\"];\n  /** Canonical and duplicate belong to different repositories. */\n  isCrossRepository: Scalars[\"Boolean\"];\n};\n\n/** A public description of a Marketplace category. */\nexport type MarketplaceCategory = Node & {\n  __typename?: \"MarketplaceCategory\";\n  /** The category's description. */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** The technical description of how apps listed in this category work with GitHub. */\n  howItWorks?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The category's name. */\n  name: Scalars[\"String\"];\n  /** How many Marketplace listings have this as their primary category. */\n  primaryListingCount: Scalars[\"Int\"];\n  /** The HTTP path for this Marketplace category. */\n  resourcePath: Scalars[\"URI\"];\n  /** How many Marketplace listings have this as their secondary category. */\n  secondaryListingCount: Scalars[\"Int\"];\n  /** The short name of the category used in its URL. */\n  slug: Scalars[\"String\"];\n  /** The HTTP URL for this Marketplace category. */\n  url: Scalars[\"URI\"];\n};\n\n/** A listing in the GitHub integration marketplace. */\nexport type MarketplaceListing = Node & {\n  __typename?: \"MarketplaceListing\";\n  /** The GitHub App this listing represents. */\n  app?: Maybe<App>;\n  /** URL to the listing owner's company site. */\n  companyUrl?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP path for configuring access to the listing's integration or OAuth app */\n  configurationResourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for configuring access to the listing's integration or OAuth app */\n  configurationUrl: Scalars[\"URI\"];\n  /** URL to the listing's documentation. */\n  documentationUrl?: Maybe<Scalars[\"URI\"]>;\n  /** The listing's detailed description. */\n  extendedDescription?: Maybe<Scalars[\"String\"]>;\n  /** The listing's detailed description rendered to HTML. */\n  extendedDescriptionHTML: Scalars[\"HTML\"];\n  /** The listing's introductory description. */\n  fullDescription: Scalars[\"String\"];\n  /** The listing's introductory description rendered to HTML. */\n  fullDescriptionHTML: Scalars[\"HTML\"];\n  /** Does this listing have any plans with a free trial? */\n  hasPublishedFreeTrialPlans: Scalars[\"Boolean\"];\n  /** Does this listing have a terms of service link? */\n  hasTermsOfService: Scalars[\"Boolean\"];\n  /** Whether the creator of the app is a verified org */\n  hasVerifiedOwner: Scalars[\"Boolean\"];\n  /** A technical description of how this app works with GitHub. */\n  howItWorks?: Maybe<Scalars[\"String\"]>;\n  /** The listing's technical description rendered to HTML. */\n  howItWorksHTML: Scalars[\"HTML\"];\n  id: Scalars[\"ID\"];\n  /** URL to install the product to the viewer's account or organization. */\n  installationUrl?: Maybe<Scalars[\"URI\"]>;\n  /** Whether this listing's app has been installed for the current viewer */\n  installedForViewer: Scalars[\"Boolean\"];\n  /** Whether this listing has been removed from the Marketplace. */\n  isArchived: Scalars[\"Boolean\"];\n  /** Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace. */\n  isDraft: Scalars[\"Boolean\"];\n  /** Whether the product this listing represents is available as part of a paid plan. */\n  isPaid: Scalars[\"Boolean\"];\n  /** Whether this listing has been approved for display in the Marketplace. */\n  isPublic: Scalars[\"Boolean\"];\n  /** Whether this listing has been rejected by GitHub for display in the Marketplace. */\n  isRejected: Scalars[\"Boolean\"];\n  /** Whether this listing has been approved for unverified display in the Marketplace. */\n  isUnverified: Scalars[\"Boolean\"];\n  /** Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace. */\n  isUnverifiedPending: Scalars[\"Boolean\"];\n  /** Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */\n  isVerificationPendingFromDraft: Scalars[\"Boolean\"];\n  /** Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */\n  isVerificationPendingFromUnverified: Scalars[\"Boolean\"];\n  /** Whether this listing has been approved for verified display in the Marketplace. */\n  isVerified: Scalars[\"Boolean\"];\n  /** The hex color code, without the leading '#', for the logo background. */\n  logoBackgroundColor: Scalars[\"String\"];\n  /** URL for the listing's logo image. */\n  logoUrl?: Maybe<Scalars[\"URI\"]>;\n  /** The listing's full name. */\n  name: Scalars[\"String\"];\n  /** The listing's very short description without a trailing period or ampersands. */\n  normalizedShortDescription: Scalars[\"String\"];\n  /** URL to the listing's detailed pricing. */\n  pricingUrl?: Maybe<Scalars[\"URI\"]>;\n  /** The category that best describes the listing. */\n  primaryCategory: MarketplaceCategory;\n  /** URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL. */\n  privacyPolicyUrl: Scalars[\"URI\"];\n  /** The HTTP path for the Marketplace listing. */\n  resourcePath: Scalars[\"URI\"];\n  /** The URLs for the listing's screenshots. */\n  screenshotUrls: Array<Maybe<Scalars[\"String\"]>>;\n  /** An alternate category that describes the listing. */\n  secondaryCategory?: Maybe<MarketplaceCategory>;\n  /** The listing's very short description. */\n  shortDescription: Scalars[\"String\"];\n  /** The short name of the listing used in its URL. */\n  slug: Scalars[\"String\"];\n  /** URL to the listing's status page. */\n  statusUrl?: Maybe<Scalars[\"URI\"]>;\n  /** An email address for support for this listing's app. */\n  supportEmail?: Maybe<Scalars[\"String\"]>;\n  /** Either a URL or an email address for support for this listing's app, may return an empty string for listings that do not require a support URL. */\n  supportUrl: Scalars[\"URI\"];\n  /** URL to the listing's terms of service. */\n  termsOfServiceUrl?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for the Marketplace listing. */\n  url: Scalars[\"URI\"];\n  /** Can the current viewer add plans for this Marketplace listing. */\n  viewerCanAddPlans: Scalars[\"Boolean\"];\n  /** Can the current viewer approve this Marketplace listing. */\n  viewerCanApprove: Scalars[\"Boolean\"];\n  /** Can the current viewer delist this Marketplace listing. */\n  viewerCanDelist: Scalars[\"Boolean\"];\n  /** Can the current viewer edit this Marketplace listing. */\n  viewerCanEdit: Scalars[\"Boolean\"];\n  /**\n   * Can the current viewer edit the primary and secondary category of this\n   * Marketplace listing.\n   *\n   */\n  viewerCanEditCategories: Scalars[\"Boolean\"];\n  /** Can the current viewer edit the plans for this Marketplace listing. */\n  viewerCanEditPlans: Scalars[\"Boolean\"];\n  /**\n   * Can the current viewer return this Marketplace listing to draft state\n   * so it becomes editable again.\n   *\n   */\n  viewerCanRedraft: Scalars[\"Boolean\"];\n  /**\n   * Can the current viewer reject this Marketplace listing by returning it to\n   * an editable draft state or rejecting it entirely.\n   *\n   */\n  viewerCanReject: Scalars[\"Boolean\"];\n  /**\n   * Can the current viewer request this listing be reviewed for display in\n   * the Marketplace as verified.\n   *\n   */\n  viewerCanRequestApproval: Scalars[\"Boolean\"];\n  /**\n   * Indicates whether the current user has an active subscription to this Marketplace listing.\n   *\n   */\n  viewerHasPurchased: Scalars[\"Boolean\"];\n  /**\n   * Indicates if the current user has purchased a subscription to this Marketplace listing\n   * for all of the organizations the user owns.\n   *\n   */\n  viewerHasPurchasedForAllOrganizations: Scalars[\"Boolean\"];\n  /**\n   * Does the current viewer role allow them to administer this Marketplace listing.\n   *\n   */\n  viewerIsListingAdmin: Scalars[\"Boolean\"];\n};\n\n/** A listing in the GitHub integration marketplace. */\nexport type MarketplaceListingLogoUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Look up Marketplace Listings */\nexport type MarketplaceListingConnection = {\n  __typename?: \"MarketplaceListingConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<MarketplaceListingEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<MarketplaceListing>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type MarketplaceListingEdge = {\n  __typename?: \"MarketplaceListingEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<MarketplaceListing>;\n};\n\n/** Entities that have members who can set status messages. */\nexport type MemberStatusable = {\n  /** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n  memberStatuses: UserStatusConnection;\n};\n\n/** Entities that have members who can set status messages. */\nexport type MemberStatusableMemberStatusesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<UserStatusOrder>;\n};\n\n/** Audit log entry for a members_can_delete_repos.clear event. */\nexport type MembersCanDeleteReposClearAuditEntry = AuditEntry &\n  EnterpriseAuditEntryData &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"MembersCanDeleteReposClearAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The HTTP path for this enterprise. */\n    enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The slug of the enterprise. */\n    enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this enterprise. */\n    enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a members_can_delete_repos.disable event. */\nexport type MembersCanDeleteReposDisableAuditEntry = AuditEntry &\n  EnterpriseAuditEntryData &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"MembersCanDeleteReposDisableAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The HTTP path for this enterprise. */\n    enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The slug of the enterprise. */\n    enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this enterprise. */\n    enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a members_can_delete_repos.enable event. */\nexport type MembersCanDeleteReposEnableAuditEntry = AuditEntry &\n  EnterpriseAuditEntryData &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"MembersCanDeleteReposEnableAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The HTTP path for this enterprise. */\n    enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The slug of the enterprise. */\n    enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this enterprise. */\n    enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Represents a 'mentioned' event on a given issue or pull request. */\nexport type MentionedEvent = Node & {\n  __typename?: \"MentionedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated input type of MergeBranch */\nexport type MergeBranchInput = {\n  /** The email address to associate with this commit. */\n  authorEmail?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the base branch that the provided head will be merged into. */\n  base: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Message to use for the merge commit. If omitted, a default will be used. */\n  commitMessage?: InputMaybe<Scalars[\"String\"]>;\n  /** The head to merge into the base branch. This can be a branch name or a commit GitObjectID. */\n  head: Scalars[\"String\"];\n  /** The Node ID of the Repository containing the base branch that will be modified. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of MergeBranch */\nexport type MergeBranchPayload = {\n  __typename?: \"MergeBranchPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The resulting merge Commit. */\n  mergeCommit?: Maybe<Commit>;\n};\n\n/** The possible default commit messages for merges. */\nexport enum MergeCommitMessage {\n  /** Default to a blank commit message. */\n  Blank = \"BLANK\",\n  /** Default to the pull request's body. */\n  PrBody = \"PR_BODY\",\n  /** Default to the pull request's title. */\n  PrTitle = \"PR_TITLE\",\n}\n\n/** The possible default commit titles for merges. */\nexport enum MergeCommitTitle {\n  /** Default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name). */\n  MergeMessage = \"MERGE_MESSAGE\",\n  /** Default to the pull request's title. */\n  PrTitle = \"PR_TITLE\",\n}\n\n/** Autogenerated input type of MergePullRequest */\nexport type MergePullRequestInput = {\n  /** The email address to associate with this merge. */\n  authorEmail?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Commit body to use for the merge commit; if omitted, a default message will be used */\n  commitBody?: InputMaybe<Scalars[\"String\"]>;\n  /** Commit headline to use for the merge commit; if omitted, a default message will be used. */\n  commitHeadline?: InputMaybe<Scalars[\"String\"]>;\n  /** OID that the pull request head ref must match to allow merge; if omitted, no check is performed. */\n  expectedHeadOid?: InputMaybe<Scalars[\"GitObjectID\"]>;\n  /** The merge method to use. If omitted, defaults to 'MERGE' */\n  mergeMethod?: InputMaybe<PullRequestMergeMethod>;\n  /** ID of the pull request to be merged. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of MergePullRequest */\nexport type MergePullRequestPayload = {\n  __typename?: \"MergePullRequestPayload\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request that was merged. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Whether or not a PullRequest can be merged. */\nexport enum MergeableState {\n  /** The pull request cannot be merged due to merge conflicts. */\n  Conflicting = \"CONFLICTING\",\n  /** The pull request can be merged. */\n  Mergeable = \"MERGEABLE\",\n  /** The mergeability of the pull request is still being calculated. */\n  Unknown = \"UNKNOWN\",\n}\n\n/** Represents a 'merged' event on a given pull request. */\nexport type MergedEvent = Node &\n  UniformResourceLocatable & {\n    __typename?: \"MergedEvent\";\n    /** Identifies the actor who performed the event. */\n    actor?: Maybe<Actor>;\n    /** Identifies the commit associated with the `merge` event. */\n    commit?: Maybe<Commit>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    id: Scalars[\"ID\"];\n    /** Identifies the Ref associated with the `merge` event. */\n    mergeRef?: Maybe<Ref>;\n    /** Identifies the name of the Ref associated with the `merge` event. */\n    mergeRefName: Scalars[\"String\"];\n    /** PullRequest referenced by event. */\n    pullRequest: PullRequest;\n    /** The HTTP path for this merged event. */\n    resourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this merged event. */\n    url: Scalars[\"URI\"];\n  };\n\n/** Represents a GitHub Enterprise Importer (GEI) migration. */\nexport type Migration = {\n  /** The migration flag to continue on error. */\n  continueOnError: Scalars[\"Boolean\"];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"String\"]>;\n  /** The reason the migration failed. */\n  failureReason?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The URL for the migration log (expires 1 day after migration completes). */\n  migrationLogUrl?: Maybe<Scalars[\"URI\"]>;\n  /** The migration source. */\n  migrationSource: MigrationSource;\n  /** The target repository name. */\n  repositoryName: Scalars[\"String\"];\n  /** The migration source URL. */\n  sourceUrl: Scalars[\"URI\"];\n  /** The migration state. */\n  state: MigrationState;\n};\n\n/** A GitHub Enterprise Importer (GEI) migration source. */\nexport type MigrationSource = Node & {\n  __typename?: \"MigrationSource\";\n  id: Scalars[\"ID\"];\n  /** The migration source name. */\n  name: Scalars[\"String\"];\n  /** The migration source type. */\n  type: MigrationSourceType;\n  /** The migration source URL. */\n  url: Scalars[\"URI\"];\n};\n\n/** Represents the different GitHub Enterprise Importer (GEI) migration sources. */\nexport enum MigrationSourceType {\n  /** An Azure DevOps migration source. */\n  AzureDevops = \"AZURE_DEVOPS\",\n  /** A Bitbucket Server migration source. */\n  BitbucketServer = \"BITBUCKET_SERVER\",\n  /** A GitHub Migration API source. */\n  GithubArchive = \"GITHUB_ARCHIVE\",\n}\n\n/** The GitHub Enterprise Importer (GEI) migration state. */\nexport enum MigrationState {\n  /** The migration has failed. */\n  Failed = \"FAILED\",\n  /** The migration has invalid credentials. */\n  FailedValidation = \"FAILED_VALIDATION\",\n  /** The migration is in progress. */\n  InProgress = \"IN_PROGRESS\",\n  /** The migration has not started. */\n  NotStarted = \"NOT_STARTED\",\n  /** The migration needs to have its credentials validated. */\n  PendingValidation = \"PENDING_VALIDATION\",\n  /** The migration has been queued. */\n  Queued = \"QUEUED\",\n  /** The migration has succeeded. */\n  Succeeded = \"SUCCEEDED\",\n}\n\n/** Represents a Milestone object on a given repository. */\nexport type Milestone = Closable &\n  Node &\n  UniformResourceLocatable & {\n    __typename?: \"Milestone\";\n    /** `true` if the object is closed (definition of closed may depend on type) */\n    closed: Scalars[\"Boolean\"];\n    /** Identifies the date and time when the object was closed. */\n    closedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the actor who created the milestone. */\n    creator?: Maybe<Actor>;\n    /** Identifies the description of the milestone. */\n    description?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the due date of the milestone. */\n    dueOn?: Maybe<Scalars[\"DateTime\"]>;\n    id: Scalars[\"ID\"];\n    /** A list of issues associated with the milestone. */\n    issues: IssueConnection;\n    /** Identifies the number of the milestone. */\n    number: Scalars[\"Int\"];\n    /** Identifies the percentage complete for the milestone */\n    progressPercentage: Scalars[\"Float\"];\n    /** A list of pull requests associated with the milestone. */\n    pullRequests: PullRequestConnection;\n    /** The repository associated with this milestone. */\n    repository: Repository;\n    /** The HTTP path for this milestone */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the state of the milestone. */\n    state: MilestoneState;\n    /** Identifies the title of the milestone. */\n    title: Scalars[\"String\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this milestone */\n    url: Scalars[\"URI\"];\n  };\n\n/** Represents a Milestone object on a given repository. */\nexport type MilestoneIssuesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  filterBy?: InputMaybe<IssueFilters>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<IssueState>>;\n};\n\n/** Represents a Milestone object on a given repository. */\nexport type MilestonePullRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  baseRefName?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  headRefName?: InputMaybe<Scalars[\"String\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** The connection type for Milestone. */\nexport type MilestoneConnection = {\n  __typename?: \"MilestoneConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<MilestoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Milestone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type MilestoneEdge = {\n  __typename?: \"MilestoneEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Milestone>;\n};\n\n/** Types that can be inside a Milestone. */\nexport type MilestoneItem = Issue | PullRequest;\n\n/** Ordering options for milestone connections. */\nexport type MilestoneOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order milestones by. */\n  field: MilestoneOrderField;\n};\n\n/** Properties by which milestone connections can be ordered. */\nexport enum MilestoneOrderField {\n  /** Order milestones by when they were created. */\n  CreatedAt = \"CREATED_AT\",\n  /** Order milestones by when they are due. */\n  DueDate = \"DUE_DATE\",\n  /** Order milestones by their number. */\n  Number = \"NUMBER\",\n  /** Order milestones by when they were last updated. */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** The possible states of a milestone. */\nexport enum MilestoneState {\n  /** A milestone that has been closed. */\n  Closed = \"CLOSED\",\n  /** A milestone that is still open. */\n  Open = \"OPEN\",\n}\n\n/** Represents a 'milestoned' event on a given issue or pull request. */\nexport type MilestonedEvent = Node & {\n  __typename?: \"MilestonedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Identifies the milestone title associated with the 'milestoned' event. */\n  milestoneTitle: Scalars[\"String\"];\n  /** Object referenced by event. */\n  subject: MilestoneItem;\n};\n\n/** Entities that can be minimized. */\nexport type Minimizable = {\n  /** Returns whether or not a comment has been minimized. */\n  isMinimized: Scalars[\"Boolean\"];\n  /** Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation. */\n  minimizedReason?: Maybe<Scalars[\"String\"]>;\n  /** Check if the current viewer can minimize this object. */\n  viewerCanMinimize: Scalars[\"Boolean\"];\n};\n\n/** Autogenerated input type of MinimizeComment */\nexport type MinimizeCommentInput = {\n  /** The classification of comment */\n  classifier: ReportedContentClassifiers;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of MinimizeComment */\nexport type MinimizeCommentPayload = {\n  __typename?: \"MinimizeCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The comment that was minimized. */\n  minimizedComment?: Maybe<Minimizable>;\n};\n\n/** Autogenerated input type of MoveProjectCard */\nexport type MoveProjectCardInput = {\n  /** Place the new card after the card with this id. Pass null to place it at the top. */\n  afterCardId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The id of the card to move. */\n  cardId: Scalars[\"ID\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The id of the column to move it into. */\n  columnId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of MoveProjectCard */\nexport type MoveProjectCardPayload = {\n  __typename?: \"MoveProjectCardPayload\";\n  /** The new edge of the moved card. */\n  cardEdge?: Maybe<ProjectCardEdge>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of MoveProjectColumn */\nexport type MoveProjectColumnInput = {\n  /** Place the new column after the column with this id. Pass null to place it at the front. */\n  afterColumnId?: InputMaybe<Scalars[\"ID\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The id of the column to move. */\n  columnId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of MoveProjectColumn */\nexport type MoveProjectColumnPayload = {\n  __typename?: \"MoveProjectColumnPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new edge of the moved column. */\n  columnEdge?: Maybe<ProjectColumnEdge>;\n};\n\n/** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\nexport type MovedColumnsInProjectEvent = Node & {\n  __typename?: \"MovedColumnsInProjectEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type Mutation = {\n  __typename?: \"Mutation\";\n  /** Clear all of a customer's queued migrations */\n  abortQueuedMigrations?: Maybe<AbortQueuedMigrationsPayload>;\n  /** Accepts a pending invitation for a user to become an administrator of an enterprise. */\n  acceptEnterpriseAdministratorInvitation?: Maybe<AcceptEnterpriseAdministratorInvitationPayload>;\n  /** Applies a suggested topic to the repository. */\n  acceptTopicSuggestion?: Maybe<AcceptTopicSuggestionPayload>;\n  /** Adds assignees to an assignable object. */\n  addAssigneesToAssignable?: Maybe<AddAssigneesToAssignablePayload>;\n  /** Adds a comment to an Issue or Pull Request. */\n  addComment?: Maybe<AddCommentPayload>;\n  /** Adds a comment to a Discussion, possibly as a reply to another comment. */\n  addDiscussionComment?: Maybe<AddDiscussionCommentPayload>;\n  /** Vote for an option in a discussion poll. */\n  addDiscussionPollVote?: Maybe<AddDiscussionPollVotePayload>;\n  /** Adds enterprise members to an organization within the enterprise. */\n  addEnterpriseOrganizationMember?: Maybe<AddEnterpriseOrganizationMemberPayload>;\n  /** Adds a support entitlement to an enterprise member. */\n  addEnterpriseSupportEntitlement?: Maybe<AddEnterpriseSupportEntitlementPayload>;\n  /** Adds labels to a labelable object. */\n  addLabelsToLabelable?: Maybe<AddLabelsToLabelablePayload>;\n  /** Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both. */\n  addProjectCard?: Maybe<AddProjectCardPayload>;\n  /** Adds a column to a Project. */\n  addProjectColumn?: Maybe<AddProjectColumnPayload>;\n  /** Creates a new draft issue and add it to a Project. */\n  addProjectV2DraftIssue?: Maybe<AddProjectV2DraftIssuePayload>;\n  /** Links an existing content instance to a Project. */\n  addProjectV2ItemById?: Maybe<AddProjectV2ItemByIdPayload>;\n  /** Adds a review to a Pull Request. */\n  addPullRequestReview?: Maybe<AddPullRequestReviewPayload>;\n  /** Adds a comment to a review. */\n  addPullRequestReviewComment?: Maybe<AddPullRequestReviewCommentPayload>;\n  /** Adds a new thread to a pending Pull Request Review. */\n  addPullRequestReviewThread?: Maybe<AddPullRequestReviewThreadPayload>;\n  /** Adds a reaction to a subject. */\n  addReaction?: Maybe<AddReactionPayload>;\n  /** Adds a star to a Starrable. */\n  addStar?: Maybe<AddStarPayload>;\n  /** Add an upvote to a discussion or discussion comment. */\n  addUpvote?: Maybe<AddUpvotePayload>;\n  /** Adds a verifiable domain to an owning account. */\n  addVerifiableDomain?: Maybe<AddVerifiableDomainPayload>;\n  /** Approve all pending deployments under one or more environments */\n  approveDeployments?: Maybe<ApproveDeploymentsPayload>;\n  /** Approve a verifiable domain for notification delivery. */\n  approveVerifiableDomain?: Maybe<ApproveVerifiableDomainPayload>;\n  /** Archives a ProjectV2Item */\n  archiveProjectV2Item?: Maybe<ArchiveProjectV2ItemPayload>;\n  /** Marks a repository as archived. */\n  archiveRepository?: Maybe<ArchiveRepositoryPayload>;\n  /** Cancels a pending invitation for an administrator to join an enterprise. */\n  cancelEnterpriseAdminInvitation?: Maybe<CancelEnterpriseAdminInvitationPayload>;\n  /** Cancel an active sponsorship. */\n  cancelSponsorship?: Maybe<CancelSponsorshipPayload>;\n  /** Update your status on GitHub. */\n  changeUserStatus?: Maybe<ChangeUserStatusPayload>;\n  /** Clears all labels from a labelable object. */\n  clearLabelsFromLabelable?: Maybe<ClearLabelsFromLabelablePayload>;\n  /** This mutation clears the value of a field for an item in a Project. Currently only text, number, date, assignees, labels, single-select, iteration and milestone fields are supported. */\n  clearProjectV2ItemFieldValue?: Maybe<ClearProjectV2ItemFieldValuePayload>;\n  /** Creates a new project by cloning configuration from an existing project. */\n  cloneProject?: Maybe<CloneProjectPayload>;\n  /** Create a new repository with the same files and directory structure as a template repository. */\n  cloneTemplateRepository?: Maybe<CloneTemplateRepositoryPayload>;\n  /** Close an issue. */\n  closeIssue?: Maybe<CloseIssuePayload>;\n  /** Close a pull request. */\n  closePullRequest?: Maybe<ClosePullRequestPayload>;\n  /** Convert a project note card to one associated with a newly created issue. */\n  convertProjectCardNoteToIssue?: Maybe<ConvertProjectCardNoteToIssuePayload>;\n  /** Converts a pull request to draft */\n  convertPullRequestToDraft?: Maybe<ConvertPullRequestToDraftPayload>;\n  /** Invites a user to claim reattributable data */\n  createAttributionInvitation?: Maybe<CreateAttributionInvitationPayload>;\n  /** Create a new branch protection rule */\n  createBranchProtectionRule?: Maybe<CreateBranchProtectionRulePayload>;\n  /** Create a check run. */\n  createCheckRun?: Maybe<CreateCheckRunPayload>;\n  /** Create a check suite */\n  createCheckSuite?: Maybe<CreateCheckSuitePayload>;\n  /**\n   * Appends a commit to the given branch as the authenticated user.\n   *\n   * This mutation creates a commit whose parent is the HEAD of the provided\n   * branch and also updates that branch to point to the new commit.\n   * It can be thought of as similar to `git commit`.\n   *\n   * ### Locating a Branch\n   *\n   * Commits are appended to a `branch` of type `Ref`.\n   * This must refer to a git branch (i.e.  the fully qualified path must\n   * begin with `refs/heads/`, although including this prefix is optional.\n   *\n   * Callers may specify the `branch` to commit to either by its global node\n   * ID or by passing both of `repositoryNameWithOwner` and `refName`.  For\n   * more details see the documentation for `CommittableBranch`.\n   *\n   * ### Describing Changes\n   *\n   * `fileChanges` are specified as a `FilesChanges` object describing\n   * `FileAdditions` and `FileDeletions`.\n   *\n   * Please see the documentation for `FileChanges` for more information on\n   * how to use this argument to describe any set of file changes.\n   *\n   * ### Authorship\n   *\n   * Similar to the web commit interface, this mutation does not support\n   * specifying the author or committer of the commit and will not add\n   * support for this in the future.\n   *\n   * A commit created by a successful execution of this mutation will be\n   * authored by the owner of the credential which authenticates the API\n   * request.  The committer will be identical to that of commits authored\n   * using the web interface.\n   *\n   * If you need full control over author and committer information, please\n   * use the Git Database REST API instead.\n   *\n   * ### Commit Signing\n   *\n   * Commits made using this mutation are automatically signed by GitHub if\n   * supported and will be marked as verified in the user interface.\n   *\n   */\n  createCommitOnBranch?: Maybe<CreateCommitOnBranchPayload>;\n  /** Create a discussion. */\n  createDiscussion?: Maybe<CreateDiscussionPayload>;\n  /** Creates an organization as part of an enterprise account. */\n  createEnterpriseOrganization?: Maybe<CreateEnterpriseOrganizationPayload>;\n  /** Creates an environment or simply returns it if already exists. */\n  createEnvironment?: Maybe<CreateEnvironmentPayload>;\n  /** Creates a new IP allow list entry. */\n  createIpAllowListEntry?: Maybe<CreateIpAllowListEntryPayload>;\n  /** Creates a new issue. */\n  createIssue?: Maybe<CreateIssuePayload>;\n  /** Create a branch linked to an issue. */\n  createLinkedBranch?: Maybe<CreateLinkedBranchPayload>;\n  /** Creates a GitHub Enterprise Importer (GEI) migration source. */\n  createMigrationSource?: Maybe<CreateMigrationSourcePayload>;\n  /** Creates a new project. */\n  createProject?: Maybe<CreateProjectPayload>;\n  /** Creates a new project. */\n  createProjectV2?: Maybe<CreateProjectV2Payload>;\n  /** Create a new pull request */\n  createPullRequest?: Maybe<CreatePullRequestPayload>;\n  /** Create a new Git Ref. */\n  createRef?: Maybe<CreateRefPayload>;\n  /** Create a new repository. */\n  createRepository?: Maybe<CreateRepositoryPayload>;\n  /** Create a GitHub Sponsors profile to allow others to sponsor you or your organization. */\n  createSponsorsListing?: Maybe<CreateSponsorsListingPayload>;\n  /** Create a new payment tier for your GitHub Sponsors profile. */\n  createSponsorsTier?: Maybe<CreateSponsorsTierPayload>;\n  /** Start a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship. */\n  createSponsorship?: Maybe<CreateSponsorshipPayload>;\n  /** Creates a new team discussion. */\n  createTeamDiscussion?: Maybe<CreateTeamDiscussionPayload>;\n  /** Creates a new team discussion comment. */\n  createTeamDiscussionComment?: Maybe<CreateTeamDiscussionCommentPayload>;\n  /** Rejects a suggested topic for the repository. */\n  declineTopicSuggestion?: Maybe<DeclineTopicSuggestionPayload>;\n  /** Delete a branch protection rule */\n  deleteBranchProtectionRule?: Maybe<DeleteBranchProtectionRulePayload>;\n  /** Deletes a deployment. */\n  deleteDeployment?: Maybe<DeleteDeploymentPayload>;\n  /** Delete a discussion and all of its replies. */\n  deleteDiscussion?: Maybe<DeleteDiscussionPayload>;\n  /** Delete a discussion comment. If it has replies, wipe it instead. */\n  deleteDiscussionComment?: Maybe<DeleteDiscussionCommentPayload>;\n  /** Deletes an environment */\n  deleteEnvironment?: Maybe<DeleteEnvironmentPayload>;\n  /** Deletes an IP allow list entry. */\n  deleteIpAllowListEntry?: Maybe<DeleteIpAllowListEntryPayload>;\n  /** Deletes an Issue object. */\n  deleteIssue?: Maybe<DeleteIssuePayload>;\n  /** Deletes an IssueComment object. */\n  deleteIssueComment?: Maybe<DeleteIssueCommentPayload>;\n  /** Unlink a branch from an issue. */\n  deleteLinkedBranch?: Maybe<DeleteLinkedBranchPayload>;\n  /** Deletes a project. */\n  deleteProject?: Maybe<DeleteProjectPayload>;\n  /** Deletes a project card. */\n  deleteProjectCard?: Maybe<DeleteProjectCardPayload>;\n  /** Deletes a project column. */\n  deleteProjectColumn?: Maybe<DeleteProjectColumnPayload>;\n  /** Deletes an item from a Project. */\n  deleteProjectV2Item?: Maybe<DeleteProjectV2ItemPayload>;\n  /** Deletes a pull request review. */\n  deletePullRequestReview?: Maybe<DeletePullRequestReviewPayload>;\n  /** Deletes a pull request review comment. */\n  deletePullRequestReviewComment?: Maybe<DeletePullRequestReviewCommentPayload>;\n  /** Delete a Git Ref. */\n  deleteRef?: Maybe<DeleteRefPayload>;\n  /** Deletes a team discussion. */\n  deleteTeamDiscussion?: Maybe<DeleteTeamDiscussionPayload>;\n  /** Deletes a team discussion comment. */\n  deleteTeamDiscussionComment?: Maybe<DeleteTeamDiscussionCommentPayload>;\n  /** Deletes a verifiable domain. */\n  deleteVerifiableDomain?: Maybe<DeleteVerifiableDomainPayload>;\n  /** Disable auto merge on the given pull request */\n  disablePullRequestAutoMerge?: Maybe<DisablePullRequestAutoMergePayload>;\n  /** Dismisses an approved or rejected pull request review. */\n  dismissPullRequestReview?: Maybe<DismissPullRequestReviewPayload>;\n  /** Dismisses the Dependabot alert. */\n  dismissRepositoryVulnerabilityAlert?: Maybe<DismissRepositoryVulnerabilityAlertPayload>;\n  /** Enable the default auto-merge on a pull request. */\n  enablePullRequestAutoMerge?: Maybe<EnablePullRequestAutoMergePayload>;\n  /** Follow an organization. */\n  followOrganization?: Maybe<FollowOrganizationPayload>;\n  /** Follow a user. */\n  followUser?: Maybe<FollowUserPayload>;\n  /** Grant the migrator role to a user for all organizations under an enterprise account. */\n  grantEnterpriseOrganizationsMigratorRole?: Maybe<GrantEnterpriseOrganizationsMigratorRolePayload>;\n  /** Grant the migrator role to a user or a team. */\n  grantMigratorRole?: Maybe<GrantMigratorRolePayload>;\n  /** Invite someone to become an administrator of the enterprise. */\n  inviteEnterpriseAdmin?: Maybe<InviteEnterpriseAdminPayload>;\n  /** Links a project to a repository. */\n  linkProjectV2ToRepository?: Maybe<LinkProjectV2ToRepositoryPayload>;\n  /** Links a project to a team. */\n  linkProjectV2ToTeam?: Maybe<LinkProjectV2ToTeamPayload>;\n  /** Creates a repository link for a project. */\n  linkRepositoryToProject?: Maybe<LinkRepositoryToProjectPayload>;\n  /** Lock a lockable object */\n  lockLockable?: Maybe<LockLockablePayload>;\n  /** Mark a discussion comment as the chosen answer for discussions in an answerable category. */\n  markDiscussionCommentAsAnswer?: Maybe<MarkDiscussionCommentAsAnswerPayload>;\n  /** Mark a pull request file as viewed */\n  markFileAsViewed?: Maybe<MarkFileAsViewedPayload>;\n  /** Marks a pull request ready for review. */\n  markPullRequestReadyForReview?: Maybe<MarkPullRequestReadyForReviewPayload>;\n  /** Merge a head into a branch. */\n  mergeBranch?: Maybe<MergeBranchPayload>;\n  /** Merge a pull request. */\n  mergePullRequest?: Maybe<MergePullRequestPayload>;\n  /** Minimizes a comment on an Issue, Commit, Pull Request, or Gist */\n  minimizeComment?: Maybe<MinimizeCommentPayload>;\n  /** Moves a project card to another place. */\n  moveProjectCard?: Maybe<MoveProjectCardPayload>;\n  /** Moves a project column to another place. */\n  moveProjectColumn?: Maybe<MoveProjectColumnPayload>;\n  /** Pin an issue to a repository */\n  pinIssue?: Maybe<PinIssuePayload>;\n  /** Publish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile. */\n  publishSponsorsTier?: Maybe<PublishSponsorsTierPayload>;\n  /** Regenerates the identity provider recovery codes for an enterprise */\n  regenerateEnterpriseIdentityProviderRecoveryCodes?: Maybe<RegenerateEnterpriseIdentityProviderRecoveryCodesPayload>;\n  /** Regenerates a verifiable domain's verification token. */\n  regenerateVerifiableDomainToken?: Maybe<RegenerateVerifiableDomainTokenPayload>;\n  /** Reject all pending deployments under one or more environments */\n  rejectDeployments?: Maybe<RejectDeploymentsPayload>;\n  /** Removes assignees from an assignable object. */\n  removeAssigneesFromAssignable?: Maybe<RemoveAssigneesFromAssignablePayload>;\n  /** Removes an administrator from the enterprise. */\n  removeEnterpriseAdmin?: Maybe<RemoveEnterpriseAdminPayload>;\n  /** Removes the identity provider from an enterprise */\n  removeEnterpriseIdentityProvider?: Maybe<RemoveEnterpriseIdentityProviderPayload>;\n  /** Removes an organization from the enterprise */\n  removeEnterpriseOrganization?: Maybe<RemoveEnterpriseOrganizationPayload>;\n  /** Removes a support entitlement from an enterprise member. */\n  removeEnterpriseSupportEntitlement?: Maybe<RemoveEnterpriseSupportEntitlementPayload>;\n  /** Removes labels from a Labelable object. */\n  removeLabelsFromLabelable?: Maybe<RemoveLabelsFromLabelablePayload>;\n  /** Removes outside collaborator from all repositories in an organization. */\n  removeOutsideCollaborator?: Maybe<RemoveOutsideCollaboratorPayload>;\n  /** Removes a reaction from a subject. */\n  removeReaction?: Maybe<RemoveReactionPayload>;\n  /** Removes a star from a Starrable. */\n  removeStar?: Maybe<RemoveStarPayload>;\n  /** Remove an upvote to a discussion or discussion comment. */\n  removeUpvote?: Maybe<RemoveUpvotePayload>;\n  /** Reopen a issue. */\n  reopenIssue?: Maybe<ReopenIssuePayload>;\n  /** Reopen a pull request. */\n  reopenPullRequest?: Maybe<ReopenPullRequestPayload>;\n  /** Set review requests on a pull request. */\n  requestReviews?: Maybe<RequestReviewsPayload>;\n  /** Rerequests an existing check suite. */\n  rerequestCheckSuite?: Maybe<RerequestCheckSuitePayload>;\n  /** Marks a review thread as resolved. */\n  resolveReviewThread?: Maybe<ResolveReviewThreadPayload>;\n  /** Retire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships. */\n  retireSponsorsTier?: Maybe<RetireSponsorsTierPayload>;\n  /** Revoke the migrator role to a user for all organizations under an enterprise account. */\n  revokeEnterpriseOrganizationsMigratorRole?: Maybe<RevokeEnterpriseOrganizationsMigratorRolePayload>;\n  /** Revoke the migrator role from a user or a team. */\n  revokeMigratorRole?: Maybe<RevokeMigratorRolePayload>;\n  /** Creates or updates the identity provider for an enterprise. */\n  setEnterpriseIdentityProvider?: Maybe<SetEnterpriseIdentityProviderPayload>;\n  /** Set an organization level interaction limit for an organization's public repositories. */\n  setOrganizationInteractionLimit?: Maybe<SetOrganizationInteractionLimitPayload>;\n  /** Sets an interaction limit setting for a repository. */\n  setRepositoryInteractionLimit?: Maybe<SetRepositoryInteractionLimitPayload>;\n  /** Set a user level interaction limit for an user's public repositories. */\n  setUserInteractionLimit?: Maybe<SetUserInteractionLimitPayload>;\n  /** Starts a GitHub Enterprise Importer organization migration. */\n  startOrganizationMigration?: Maybe<StartOrganizationMigrationPayload>;\n  /** Starts a GitHub Enterprise Importer (GEI) repository migration. */\n  startRepositoryMigration?: Maybe<StartRepositoryMigrationPayload>;\n  /** Submits a pending pull request review. */\n  submitPullRequestReview?: Maybe<SubmitPullRequestReviewPayload>;\n  /** Transfer an organization from one enterprise to another enterprise. */\n  transferEnterpriseOrganization?: Maybe<TransferEnterpriseOrganizationPayload>;\n  /** Transfer an issue to a different repository */\n  transferIssue?: Maybe<TransferIssuePayload>;\n  /** Unarchives a ProjectV2Item */\n  unarchiveProjectV2Item?: Maybe<UnarchiveProjectV2ItemPayload>;\n  /** Unarchives a repository. */\n  unarchiveRepository?: Maybe<UnarchiveRepositoryPayload>;\n  /** Unfollow an organization. */\n  unfollowOrganization?: Maybe<UnfollowOrganizationPayload>;\n  /** Unfollow a user. */\n  unfollowUser?: Maybe<UnfollowUserPayload>;\n  /** Unlinks a project from a repository. */\n  unlinkProjectV2FromRepository?: Maybe<UnlinkProjectV2FromRepositoryPayload>;\n  /** Unlinks a project to a team. */\n  unlinkProjectV2FromTeam?: Maybe<UnlinkProjectV2FromTeamPayload>;\n  /** Deletes a repository link from a project. */\n  unlinkRepositoryFromProject?: Maybe<UnlinkRepositoryFromProjectPayload>;\n  /** Unlock a lockable object */\n  unlockLockable?: Maybe<UnlockLockablePayload>;\n  /** Unmark a discussion comment as the chosen answer for discussions in an answerable category. */\n  unmarkDiscussionCommentAsAnswer?: Maybe<UnmarkDiscussionCommentAsAnswerPayload>;\n  /** Unmark a pull request file as viewed */\n  unmarkFileAsViewed?: Maybe<UnmarkFileAsViewedPayload>;\n  /** Unmark an issue as a duplicate of another issue. */\n  unmarkIssueAsDuplicate?: Maybe<UnmarkIssueAsDuplicatePayload>;\n  /** Unminimizes a comment on an Issue, Commit, Pull Request, or Gist */\n  unminimizeComment?: Maybe<UnminimizeCommentPayload>;\n  /** Unpin a pinned issue from a repository */\n  unpinIssue?: Maybe<UnpinIssuePayload>;\n  /** Marks a review thread as unresolved. */\n  unresolveReviewThread?: Maybe<UnresolveReviewThreadPayload>;\n  /** Update a branch protection rule */\n  updateBranchProtectionRule?: Maybe<UpdateBranchProtectionRulePayload>;\n  /** Update a check run */\n  updateCheckRun?: Maybe<UpdateCheckRunPayload>;\n  /** Modifies the settings of an existing check suite */\n  updateCheckSuitePreferences?: Maybe<UpdateCheckSuitePreferencesPayload>;\n  /** Update a discussion */\n  updateDiscussion?: Maybe<UpdateDiscussionPayload>;\n  /** Update the contents of a comment on a Discussion */\n  updateDiscussionComment?: Maybe<UpdateDiscussionCommentPayload>;\n  /** Updates the role of an enterprise administrator. */\n  updateEnterpriseAdministratorRole?: Maybe<UpdateEnterpriseAdministratorRolePayload>;\n  /** Sets whether private repository forks are enabled for an enterprise. */\n  updateEnterpriseAllowPrivateRepositoryForkingSetting?: Maybe<UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload>;\n  /** Sets the base repository permission for organizations in an enterprise. */\n  updateEnterpriseDefaultRepositoryPermissionSetting?: Maybe<UpdateEnterpriseDefaultRepositoryPermissionSettingPayload>;\n  /** Sets whether organization members with admin permissions on a repository can change repository visibility. */\n  updateEnterpriseMembersCanChangeRepositoryVisibilitySetting?: Maybe<UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload>;\n  /** Sets the members can create repositories setting for an enterprise. */\n  updateEnterpriseMembersCanCreateRepositoriesSetting?: Maybe<UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload>;\n  /** Sets the members can delete issues setting for an enterprise. */\n  updateEnterpriseMembersCanDeleteIssuesSetting?: Maybe<UpdateEnterpriseMembersCanDeleteIssuesSettingPayload>;\n  /** Sets the members can delete repositories setting for an enterprise. */\n  updateEnterpriseMembersCanDeleteRepositoriesSetting?: Maybe<UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload>;\n  /** Sets whether members can invite collaborators are enabled for an enterprise. */\n  updateEnterpriseMembersCanInviteCollaboratorsSetting?: Maybe<UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload>;\n  /** Sets whether or not an organization admin can make purchases. */\n  updateEnterpriseMembersCanMakePurchasesSetting?: Maybe<UpdateEnterpriseMembersCanMakePurchasesSettingPayload>;\n  /** Sets the members can update protected branches setting for an enterprise. */\n  updateEnterpriseMembersCanUpdateProtectedBranchesSetting?: Maybe<UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload>;\n  /** Sets the members can view dependency insights for an enterprise. */\n  updateEnterpriseMembersCanViewDependencyInsightsSetting?: Maybe<UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload>;\n  /** Sets whether organization projects are enabled for an enterprise. */\n  updateEnterpriseOrganizationProjectsSetting?: Maybe<UpdateEnterpriseOrganizationProjectsSettingPayload>;\n  /** Updates the role of an enterprise owner with an organization. */\n  updateEnterpriseOwnerOrganizationRole?: Maybe<UpdateEnterpriseOwnerOrganizationRolePayload>;\n  /** Updates an enterprise's profile. */\n  updateEnterpriseProfile?: Maybe<UpdateEnterpriseProfilePayload>;\n  /** Sets whether repository projects are enabled for a enterprise. */\n  updateEnterpriseRepositoryProjectsSetting?: Maybe<UpdateEnterpriseRepositoryProjectsSettingPayload>;\n  /** Sets whether team discussions are enabled for an enterprise. */\n  updateEnterpriseTeamDiscussionsSetting?: Maybe<UpdateEnterpriseTeamDiscussionsSettingPayload>;\n  /** Sets whether two factor authentication is required for all users in an enterprise. */\n  updateEnterpriseTwoFactorAuthenticationRequiredSetting?: Maybe<UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload>;\n  /** Updates an environment. */\n  updateEnvironment?: Maybe<UpdateEnvironmentPayload>;\n  /** Sets whether an IP allow list is enabled on an owner. */\n  updateIpAllowListEnabledSetting?: Maybe<UpdateIpAllowListEnabledSettingPayload>;\n  /** Updates an IP allow list entry. */\n  updateIpAllowListEntry?: Maybe<UpdateIpAllowListEntryPayload>;\n  /** Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner. */\n  updateIpAllowListForInstalledAppsEnabledSetting?: Maybe<UpdateIpAllowListForInstalledAppsEnabledSettingPayload>;\n  /** Updates an Issue. */\n  updateIssue?: Maybe<UpdateIssuePayload>;\n  /** Updates an IssueComment object. */\n  updateIssueComment?: Maybe<UpdateIssueCommentPayload>;\n  /** Update the setting to restrict notifications to only verified or approved domains available to an owner. */\n  updateNotificationRestrictionSetting?: Maybe<UpdateNotificationRestrictionSettingPayload>;\n  /** Sets whether private repository forks are enabled for an organization. */\n  updateOrganizationAllowPrivateRepositoryForkingSetting?: Maybe<UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload>;\n  /** Sets whether contributors are required to sign off on web-based commits for repositories in an organization. */\n  updateOrganizationWebCommitSignoffSetting?: Maybe<UpdateOrganizationWebCommitSignoffSettingPayload>;\n  /** Updates an existing project. */\n  updateProject?: Maybe<UpdateProjectPayload>;\n  /** Updates an existing project card. */\n  updateProjectCard?: Maybe<UpdateProjectCardPayload>;\n  /** Updates an existing project column. */\n  updateProjectColumn?: Maybe<UpdateProjectColumnPayload>;\n  /** Updates an existing project (beta). */\n  updateProjectV2?: Maybe<UpdateProjectV2Payload>;\n  /** Updates a draft issue within a Project. */\n  updateProjectV2DraftIssue?: Maybe<UpdateProjectV2DraftIssuePayload>;\n  /** This mutation updates the value of a field for an item in a Project. Currently only single-select, text, number, date, and iteration fields are supported. */\n  updateProjectV2ItemFieldValue?: Maybe<UpdateProjectV2ItemFieldValuePayload>;\n  /** This mutation updates the position of the item in the project, where the position represents the priority of an item. */\n  updateProjectV2ItemPosition?: Maybe<UpdateProjectV2ItemPositionPayload>;\n  /** Update a pull request */\n  updatePullRequest?: Maybe<UpdatePullRequestPayload>;\n  /** Merge or Rebase HEAD from upstream branch into pull request branch */\n  updatePullRequestBranch?: Maybe<UpdatePullRequestBranchPayload>;\n  /** Updates the body of a pull request review. */\n  updatePullRequestReview?: Maybe<UpdatePullRequestReviewPayload>;\n  /** Updates a pull request review comment. */\n  updatePullRequestReviewComment?: Maybe<UpdatePullRequestReviewCommentPayload>;\n  /** Update a Git Ref. */\n  updateRef?: Maybe<UpdateRefPayload>;\n  /** Update information about a repository. */\n  updateRepository?: Maybe<UpdateRepositoryPayload>;\n  /** Sets whether contributors are required to sign off on web-based commits for a repository. */\n  updateRepositoryWebCommitSignoffSetting?: Maybe<UpdateRepositoryWebCommitSignoffSettingPayload>;\n  /** Change visibility of your sponsorship and opt in or out of email updates from the maintainer. */\n  updateSponsorshipPreferences?: Maybe<UpdateSponsorshipPreferencesPayload>;\n  /** Updates the state for subscribable subjects. */\n  updateSubscription?: Maybe<UpdateSubscriptionPayload>;\n  /** Updates a team discussion. */\n  updateTeamDiscussion?: Maybe<UpdateTeamDiscussionPayload>;\n  /** Updates a discussion comment. */\n  updateTeamDiscussionComment?: Maybe<UpdateTeamDiscussionCommentPayload>;\n  /** Update team repository. */\n  updateTeamsRepository?: Maybe<UpdateTeamsRepositoryPayload>;\n  /** Replaces the repository's topics with the given topics. */\n  updateTopics?: Maybe<UpdateTopicsPayload>;\n  /** Verify that a verifiable domain has the expected DNS record. */\n  verifyVerifiableDomain?: Maybe<VerifyVerifiableDomainPayload>;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAbortQueuedMigrationsArgs = {\n  input: AbortQueuedMigrationsInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAcceptEnterpriseAdministratorInvitationArgs = {\n  input: AcceptEnterpriseAdministratorInvitationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAcceptTopicSuggestionArgs = {\n  input: AcceptTopicSuggestionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddAssigneesToAssignableArgs = {\n  input: AddAssigneesToAssignableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddCommentArgs = {\n  input: AddCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddDiscussionCommentArgs = {\n  input: AddDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddDiscussionPollVoteArgs = {\n  input: AddDiscussionPollVoteInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddEnterpriseOrganizationMemberArgs = {\n  input: AddEnterpriseOrganizationMemberInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddEnterpriseSupportEntitlementArgs = {\n  input: AddEnterpriseSupportEntitlementInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddLabelsToLabelableArgs = {\n  input: AddLabelsToLabelableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectCardArgs = {\n  input: AddProjectCardInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectColumnArgs = {\n  input: AddProjectColumnInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectV2DraftIssueArgs = {\n  input: AddProjectV2DraftIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectV2ItemByIdArgs = {\n  input: AddProjectV2ItemByIdInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewArgs = {\n  input: AddPullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewCommentArgs = {\n  input: AddPullRequestReviewCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewThreadArgs = {\n  input: AddPullRequestReviewThreadInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddReactionArgs = {\n  input: AddReactionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddStarArgs = {\n  input: AddStarInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddUpvoteArgs = {\n  input: AddUpvoteInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddVerifiableDomainArgs = {\n  input: AddVerifiableDomainInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationApproveDeploymentsArgs = {\n  input: ApproveDeploymentsInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationApproveVerifiableDomainArgs = {\n  input: ApproveVerifiableDomainInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationArchiveProjectV2ItemArgs = {\n  input: ArchiveProjectV2ItemInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationArchiveRepositoryArgs = {\n  input: ArchiveRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCancelEnterpriseAdminInvitationArgs = {\n  input: CancelEnterpriseAdminInvitationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCancelSponsorshipArgs = {\n  input: CancelSponsorshipInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationChangeUserStatusArgs = {\n  input: ChangeUserStatusInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationClearLabelsFromLabelableArgs = {\n  input: ClearLabelsFromLabelableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationClearProjectV2ItemFieldValueArgs = {\n  input: ClearProjectV2ItemFieldValueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloneProjectArgs = {\n  input: CloneProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloneTemplateRepositoryArgs = {\n  input: CloneTemplateRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloseIssueArgs = {\n  input: CloseIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationClosePullRequestArgs = {\n  input: ClosePullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationConvertProjectCardNoteToIssueArgs = {\n  input: ConvertProjectCardNoteToIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationConvertPullRequestToDraftArgs = {\n  input: ConvertPullRequestToDraftInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateAttributionInvitationArgs = {\n  input: CreateAttributionInvitationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateBranchProtectionRuleArgs = {\n  input: CreateBranchProtectionRuleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateCheckRunArgs = {\n  input: CreateCheckRunInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateCheckSuiteArgs = {\n  input: CreateCheckSuiteInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateCommitOnBranchArgs = {\n  input: CreateCommitOnBranchInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateDiscussionArgs = {\n  input: CreateDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateEnterpriseOrganizationArgs = {\n  input: CreateEnterpriseOrganizationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateEnvironmentArgs = {\n  input: CreateEnvironmentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateIpAllowListEntryArgs = {\n  input: CreateIpAllowListEntryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateIssueArgs = {\n  input: CreateIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateLinkedBranchArgs = {\n  input: CreateLinkedBranchInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateMigrationSourceArgs = {\n  input: CreateMigrationSourceInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateProjectArgs = {\n  input: CreateProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateProjectV2Args = {\n  input: CreateProjectV2Input;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreatePullRequestArgs = {\n  input: CreatePullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateRefArgs = {\n  input: CreateRefInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateRepositoryArgs = {\n  input: CreateRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateSponsorsListingArgs = {\n  input: CreateSponsorsListingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateSponsorsTierArgs = {\n  input: CreateSponsorsTierInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateSponsorshipArgs = {\n  input: CreateSponsorshipInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateTeamDiscussionArgs = {\n  input: CreateTeamDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateTeamDiscussionCommentArgs = {\n  input: CreateTeamDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeclineTopicSuggestionArgs = {\n  input: DeclineTopicSuggestionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteBranchProtectionRuleArgs = {\n  input: DeleteBranchProtectionRuleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteDeploymentArgs = {\n  input: DeleteDeploymentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteDiscussionArgs = {\n  input: DeleteDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteDiscussionCommentArgs = {\n  input: DeleteDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteEnvironmentArgs = {\n  input: DeleteEnvironmentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIpAllowListEntryArgs = {\n  input: DeleteIpAllowListEntryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIssueArgs = {\n  input: DeleteIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIssueCommentArgs = {\n  input: DeleteIssueCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteLinkedBranchArgs = {\n  input: DeleteLinkedBranchInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectArgs = {\n  input: DeleteProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectCardArgs = {\n  input: DeleteProjectCardInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectColumnArgs = {\n  input: DeleteProjectColumnInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectV2ItemArgs = {\n  input: DeleteProjectV2ItemInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeletePullRequestReviewArgs = {\n  input: DeletePullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeletePullRequestReviewCommentArgs = {\n  input: DeletePullRequestReviewCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteRefArgs = {\n  input: DeleteRefInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteTeamDiscussionArgs = {\n  input: DeleteTeamDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteTeamDiscussionCommentArgs = {\n  input: DeleteTeamDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteVerifiableDomainArgs = {\n  input: DeleteVerifiableDomainInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDisablePullRequestAutoMergeArgs = {\n  input: DisablePullRequestAutoMergeInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDismissPullRequestReviewArgs = {\n  input: DismissPullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDismissRepositoryVulnerabilityAlertArgs = {\n  input: DismissRepositoryVulnerabilityAlertInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationEnablePullRequestAutoMergeArgs = {\n  input: EnablePullRequestAutoMergeInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationFollowOrganizationArgs = {\n  input: FollowOrganizationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationFollowUserArgs = {\n  input: FollowUserInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationGrantEnterpriseOrganizationsMigratorRoleArgs = {\n  input: GrantEnterpriseOrganizationsMigratorRoleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationGrantMigratorRoleArgs = {\n  input: GrantMigratorRoleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationInviteEnterpriseAdminArgs = {\n  input: InviteEnterpriseAdminInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLinkProjectV2ToRepositoryArgs = {\n  input: LinkProjectV2ToRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLinkProjectV2ToTeamArgs = {\n  input: LinkProjectV2ToTeamInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLinkRepositoryToProjectArgs = {\n  input: LinkRepositoryToProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLockLockableArgs = {\n  input: LockLockableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMarkDiscussionCommentAsAnswerArgs = {\n  input: MarkDiscussionCommentAsAnswerInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMarkFileAsViewedArgs = {\n  input: MarkFileAsViewedInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMarkPullRequestReadyForReviewArgs = {\n  input: MarkPullRequestReadyForReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMergeBranchArgs = {\n  input: MergeBranchInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMergePullRequestArgs = {\n  input: MergePullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMinimizeCommentArgs = {\n  input: MinimizeCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMoveProjectCardArgs = {\n  input: MoveProjectCardInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMoveProjectColumnArgs = {\n  input: MoveProjectColumnInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationPinIssueArgs = {\n  input: PinIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationPublishSponsorsTierArgs = {\n  input: PublishSponsorsTierInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRegenerateEnterpriseIdentityProviderRecoveryCodesArgs = {\n  input: RegenerateEnterpriseIdentityProviderRecoveryCodesInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRegenerateVerifiableDomainTokenArgs = {\n  input: RegenerateVerifiableDomainTokenInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRejectDeploymentsArgs = {\n  input: RejectDeploymentsInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveAssigneesFromAssignableArgs = {\n  input: RemoveAssigneesFromAssignableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseAdminArgs = {\n  input: RemoveEnterpriseAdminInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseIdentityProviderArgs = {\n  input: RemoveEnterpriseIdentityProviderInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseOrganizationArgs = {\n  input: RemoveEnterpriseOrganizationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseSupportEntitlementArgs = {\n  input: RemoveEnterpriseSupportEntitlementInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveLabelsFromLabelableArgs = {\n  input: RemoveLabelsFromLabelableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveOutsideCollaboratorArgs = {\n  input: RemoveOutsideCollaboratorInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveReactionArgs = {\n  input: RemoveReactionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveStarArgs = {\n  input: RemoveStarInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveUpvoteArgs = {\n  input: RemoveUpvoteInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationReopenIssueArgs = {\n  input: ReopenIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationReopenPullRequestArgs = {\n  input: ReopenPullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRequestReviewsArgs = {\n  input: RequestReviewsInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRerequestCheckSuiteArgs = {\n  input: RerequestCheckSuiteInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationResolveReviewThreadArgs = {\n  input: ResolveReviewThreadInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRetireSponsorsTierArgs = {\n  input: RetireSponsorsTierInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRevokeEnterpriseOrganizationsMigratorRoleArgs = {\n  input: RevokeEnterpriseOrganizationsMigratorRoleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRevokeMigratorRoleArgs = {\n  input: RevokeMigratorRoleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetEnterpriseIdentityProviderArgs = {\n  input: SetEnterpriseIdentityProviderInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetOrganizationInteractionLimitArgs = {\n  input: SetOrganizationInteractionLimitInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetRepositoryInteractionLimitArgs = {\n  input: SetRepositoryInteractionLimitInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetUserInteractionLimitArgs = {\n  input: SetUserInteractionLimitInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationStartOrganizationMigrationArgs = {\n  input: StartOrganizationMigrationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationStartRepositoryMigrationArgs = {\n  input: StartRepositoryMigrationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSubmitPullRequestReviewArgs = {\n  input: SubmitPullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationTransferEnterpriseOrganizationArgs = {\n  input: TransferEnterpriseOrganizationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationTransferIssueArgs = {\n  input: TransferIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnarchiveProjectV2ItemArgs = {\n  input: UnarchiveProjectV2ItemInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnarchiveRepositoryArgs = {\n  input: UnarchiveRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnfollowOrganizationArgs = {\n  input: UnfollowOrganizationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnfollowUserArgs = {\n  input: UnfollowUserInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlinkProjectV2FromRepositoryArgs = {\n  input: UnlinkProjectV2FromRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlinkProjectV2FromTeamArgs = {\n  input: UnlinkProjectV2FromTeamInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlinkRepositoryFromProjectArgs = {\n  input: UnlinkRepositoryFromProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlockLockableArgs = {\n  input: UnlockLockableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnmarkDiscussionCommentAsAnswerArgs = {\n  input: UnmarkDiscussionCommentAsAnswerInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnmarkFileAsViewedArgs = {\n  input: UnmarkFileAsViewedInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnmarkIssueAsDuplicateArgs = {\n  input: UnmarkIssueAsDuplicateInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnminimizeCommentArgs = {\n  input: UnminimizeCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnpinIssueArgs = {\n  input: UnpinIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnresolveReviewThreadArgs = {\n  input: UnresolveReviewThreadInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateBranchProtectionRuleArgs = {\n  input: UpdateBranchProtectionRuleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateCheckRunArgs = {\n  input: UpdateCheckRunInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateCheckSuitePreferencesArgs = {\n  input: UpdateCheckSuitePreferencesInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateDiscussionArgs = {\n  input: UpdateDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateDiscussionCommentArgs = {\n  input: UpdateDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseAdministratorRoleArgs = {\n  input: UpdateEnterpriseAdministratorRoleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseAllowPrivateRepositoryForkingSettingArgs = {\n  input: UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseDefaultRepositoryPermissionSettingArgs = {\n  input: UpdateEnterpriseDefaultRepositoryPermissionSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingArgs = {\n  input: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanCreateRepositoriesSettingArgs = {\n  input: UpdateEnterpriseMembersCanCreateRepositoriesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanDeleteIssuesSettingArgs = {\n  input: UpdateEnterpriseMembersCanDeleteIssuesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanDeleteRepositoriesSettingArgs = {\n  input: UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanInviteCollaboratorsSettingArgs = {\n  input: UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanMakePurchasesSettingArgs = {\n  input: UpdateEnterpriseMembersCanMakePurchasesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingArgs = {\n  input: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanViewDependencyInsightsSettingArgs = {\n  input: UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseOrganizationProjectsSettingArgs = {\n  input: UpdateEnterpriseOrganizationProjectsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseOwnerOrganizationRoleArgs = {\n  input: UpdateEnterpriseOwnerOrganizationRoleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseProfileArgs = {\n  input: UpdateEnterpriseProfileInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseRepositoryProjectsSettingArgs = {\n  input: UpdateEnterpriseRepositoryProjectsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseTeamDiscussionsSettingArgs = {\n  input: UpdateEnterpriseTeamDiscussionsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseTwoFactorAuthenticationRequiredSettingArgs = {\n  input: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnvironmentArgs = {\n  input: UpdateEnvironmentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIpAllowListEnabledSettingArgs = {\n  input: UpdateIpAllowListEnabledSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIpAllowListEntryArgs = {\n  input: UpdateIpAllowListEntryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIpAllowListForInstalledAppsEnabledSettingArgs = {\n  input: UpdateIpAllowListForInstalledAppsEnabledSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIssueArgs = {\n  input: UpdateIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIssueCommentArgs = {\n  input: UpdateIssueCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateNotificationRestrictionSettingArgs = {\n  input: UpdateNotificationRestrictionSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateOrganizationAllowPrivateRepositoryForkingSettingArgs = {\n  input: UpdateOrganizationAllowPrivateRepositoryForkingSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateOrganizationWebCommitSignoffSettingArgs = {\n  input: UpdateOrganizationWebCommitSignoffSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectArgs = {\n  input: UpdateProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectCardArgs = {\n  input: UpdateProjectCardInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectColumnArgs = {\n  input: UpdateProjectColumnInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2Args = {\n  input: UpdateProjectV2Input;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2DraftIssueArgs = {\n  input: UpdateProjectV2DraftIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2ItemFieldValueArgs = {\n  input: UpdateProjectV2ItemFieldValueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2ItemPositionArgs = {\n  input: UpdateProjectV2ItemPositionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestArgs = {\n  input: UpdatePullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestBranchArgs = {\n  input: UpdatePullRequestBranchInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestReviewArgs = {\n  input: UpdatePullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestReviewCommentArgs = {\n  input: UpdatePullRequestReviewCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRefArgs = {\n  input: UpdateRefInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRepositoryArgs = {\n  input: UpdateRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRepositoryWebCommitSignoffSettingArgs = {\n  input: UpdateRepositoryWebCommitSignoffSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateSponsorshipPreferencesArgs = {\n  input: UpdateSponsorshipPreferencesInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateSubscriptionArgs = {\n  input: UpdateSubscriptionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamDiscussionArgs = {\n  input: UpdateTeamDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamDiscussionCommentArgs = {\n  input: UpdateTeamDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamsRepositoryArgs = {\n  input: UpdateTeamsRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTopicsArgs = {\n  input: UpdateTopicsInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationVerifyVerifiableDomainArgs = {\n  input: VerifyVerifiableDomainInput;\n};\n\n/** An object with an ID. */\nexport type Node = {\n  /** ID of the object. */\n  id: Scalars[\"ID\"];\n};\n\n/** The possible values for the notification restriction setting. */\nexport enum NotificationRestrictionSettingValue {\n  /** The setting is disabled for the owner. */\n  Disabled = \"DISABLED\",\n  /** The setting is enabled for the owner. */\n  Enabled = \"ENABLED\",\n}\n\n/** An OIDC identity provider configured to provision identities for an enterprise. */\nexport type OidcProvider = Node & {\n  __typename?: \"OIDCProvider\";\n  /** The enterprise this identity provider belongs to. */\n  enterprise?: Maybe<Enterprise>;\n  /** ExternalIdentities provisioned by this identity provider. */\n  externalIdentities: ExternalIdentityConnection;\n  id: Scalars[\"ID\"];\n  /** The OIDC identity provider type */\n  providerType: OidcProviderType;\n  /** The id of the tenant this provider is attached to */\n  tenantId: Scalars[\"String\"];\n};\n\n/** An OIDC identity provider configured to provision identities for an enterprise. */\nexport type OidcProviderExternalIdentitiesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  login?: InputMaybe<Scalars[\"String\"]>;\n  membersOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  userName?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** The OIDC identity provider type */\nexport enum OidcProviderType {\n  /** Azure Active Directory */\n  Aad = \"AAD\",\n}\n\n/** Metadata for an audit entry with action oauth_application.* */\nexport type OauthApplicationAuditEntryData = {\n  /** The name of the OAuth Application. */\n  oauthApplicationName?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for the OAuth Application */\n  oauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for the OAuth Application */\n  oauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Audit log entry for a oauth_application.create event. */\nexport type OauthApplicationCreateAuditEntry = AuditEntry &\n  Node &\n  OauthApplicationAuditEntryData &\n  OrganizationAuditEntryData & {\n    __typename?: \"OauthApplicationCreateAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The application URL of the OAuth Application. */\n    applicationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The callback URL of the OAuth Application. */\n    callbackUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The name of the OAuth Application. */\n    oauthApplicationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the OAuth Application */\n    oauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the OAuth Application */\n    oauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The rate limit of the OAuth Application. */\n    rateLimit?: Maybe<Scalars[\"Int\"]>;\n    /** The state of the OAuth Application. */\n    state?: Maybe<OauthApplicationCreateAuditEntryState>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The state of an OAuth Application when it was created. */\nexport enum OauthApplicationCreateAuditEntryState {\n  /** The OAuth Application was active and allowed to have OAuth Accesses. */\n  Active = \"ACTIVE\",\n  /** The OAuth Application was in the process of being deleted. */\n  PendingDeletion = \"PENDING_DELETION\",\n  /** The OAuth Application was suspended from generating OAuth Accesses due to abuse or security concerns. */\n  Suspended = \"SUSPENDED\",\n}\n\n/** The corresponding operation type for the action */\nexport enum OperationType {\n  /** An existing resource was accessed */\n  Access = \"ACCESS\",\n  /** A resource performed an authentication event */\n  Authentication = \"AUTHENTICATION\",\n  /** A new resource was created */\n  Create = \"CREATE\",\n  /** An existing resource was modified */\n  Modify = \"MODIFY\",\n  /** An existing resource was removed */\n  Remove = \"REMOVE\",\n  /** An existing resource was restored */\n  Restore = \"RESTORE\",\n  /** An existing resource was transferred between multiple resources */\n  Transfer = \"TRANSFER\",\n}\n\n/** Possible directions in which to order a list of items when provided an `orderBy` argument. */\nexport enum OrderDirection {\n  /** Specifies an ascending order for a given `orderBy` argument. */\n  Asc = \"ASC\",\n  /** Specifies a descending order for a given `orderBy` argument. */\n  Desc = \"DESC\",\n}\n\n/** Audit log entry for a org.add_billing_manager */\nexport type OrgAddBillingManagerAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgAddBillingManagerAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The email address used to invite a billing manager for the organization. */\n    invitationEmail?: Maybe<Scalars[\"String\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.add_member */\nexport type OrgAddMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgAddMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The permission level of the member added to the organization. */\n    permission?: Maybe<OrgAddMemberAuditEntryPermission>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The permissions available to members on an Organization. */\nexport enum OrgAddMemberAuditEntryPermission {\n  /** Can read, clone, push, and add collaborators to repositories. */\n  Admin = \"ADMIN\",\n  /** Can read and clone repositories. */\n  Read = \"READ\",\n}\n\n/** Audit log entry for a org.block_user */\nexport type OrgBlockUserAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgBlockUserAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The blocked user. */\n    blockedUser?: Maybe<User>;\n    /** The username of the blocked user. */\n    blockedUserName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the blocked user. */\n    blockedUserResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the blocked user. */\n    blockedUserUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.config.disable_collaborators_only event. */\nexport type OrgConfigDisableCollaboratorsOnlyAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgConfigDisableCollaboratorsOnlyAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.config.enable_collaborators_only event. */\nexport type OrgConfigEnableCollaboratorsOnlyAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgConfigEnableCollaboratorsOnlyAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.create event. */\nexport type OrgCreateAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgCreateAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The billing plan for the Organization. */\n    billingPlan?: Maybe<OrgCreateAuditEntryBillingPlan>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The billing plans available for organizations. */\nexport enum OrgCreateAuditEntryBillingPlan {\n  /** Team Plan */\n  Business = \"BUSINESS\",\n  /** Enterprise Cloud Plan */\n  BusinessPlus = \"BUSINESS_PLUS\",\n  /** Free Plan */\n  Free = \"FREE\",\n  /** Tiered Per Seat Plan */\n  TieredPerSeat = \"TIERED_PER_SEAT\",\n  /** Legacy Unlimited Plan */\n  Unlimited = \"UNLIMITED\",\n}\n\n/** Audit log entry for a org.disable_oauth_app_restrictions event. */\nexport type OrgDisableOauthAppRestrictionsAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgDisableOauthAppRestrictionsAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.disable_saml event. */\nexport type OrgDisableSamlAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgDisableSamlAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The SAML provider's digest algorithm URL. */\n    digestMethodUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The SAML provider's issuer URL. */\n    issuerUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The SAML provider's signature algorithm URL. */\n    signatureMethodUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The SAML provider's single sign-on URL. */\n    singleSignOnUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.disable_two_factor_requirement event. */\nexport type OrgDisableTwoFactorRequirementAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgDisableTwoFactorRequirementAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.enable_oauth_app_restrictions event. */\nexport type OrgEnableOauthAppRestrictionsAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgEnableOauthAppRestrictionsAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.enable_saml event. */\nexport type OrgEnableSamlAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgEnableSamlAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The SAML provider's digest algorithm URL. */\n    digestMethodUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The SAML provider's issuer URL. */\n    issuerUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The SAML provider's signature algorithm URL. */\n    signatureMethodUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The SAML provider's single sign-on URL. */\n    singleSignOnUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.enable_two_factor_requirement event. */\nexport type OrgEnableTwoFactorRequirementAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgEnableTwoFactorRequirementAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Ordering options for an organization's enterprise owner connections. */\nexport type OrgEnterpriseOwnerOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order enterprise owners by. */\n  field: OrgEnterpriseOwnerOrderField;\n};\n\n/** Properties by which enterprise owners can be ordered. */\nexport enum OrgEnterpriseOwnerOrderField {\n  /** Order enterprise owners by login. */\n  Login = \"LOGIN\",\n}\n\n/** Audit log entry for a org.invite_member event. */\nexport type OrgInviteMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgInviteMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The email address of the organization invitation. */\n    email?: Maybe<Scalars[\"String\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The organization invitation. */\n    organizationInvitation?: Maybe<OrganizationInvitation>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.invite_to_business event. */\nexport type OrgInviteToBusinessAuditEntry = AuditEntry &\n  EnterpriseAuditEntryData &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgInviteToBusinessAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The HTTP path for this enterprise. */\n    enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The slug of the enterprise. */\n    enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this enterprise. */\n    enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.oauth_app_access_approved event. */\nexport type OrgOauthAppAccessApprovedAuditEntry = AuditEntry &\n  Node &\n  OauthApplicationAuditEntryData &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgOauthAppAccessApprovedAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The name of the OAuth Application. */\n    oauthApplicationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the OAuth Application */\n    oauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the OAuth Application */\n    oauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.oauth_app_access_denied event. */\nexport type OrgOauthAppAccessDeniedAuditEntry = AuditEntry &\n  Node &\n  OauthApplicationAuditEntryData &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgOauthAppAccessDeniedAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The name of the OAuth Application. */\n    oauthApplicationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the OAuth Application */\n    oauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the OAuth Application */\n    oauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.oauth_app_access_requested event. */\nexport type OrgOauthAppAccessRequestedAuditEntry = AuditEntry &\n  Node &\n  OauthApplicationAuditEntryData &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgOauthAppAccessRequestedAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The name of the OAuth Application. */\n    oauthApplicationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the OAuth Application */\n    oauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the OAuth Application */\n    oauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.remove_billing_manager event. */\nexport type OrgRemoveBillingManagerAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgRemoveBillingManagerAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The reason for the billing manager being removed. */\n    reason?: Maybe<OrgRemoveBillingManagerAuditEntryReason>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The reason a billing manager was removed from an Organization. */\nexport enum OrgRemoveBillingManagerAuditEntryReason {\n  /** SAML external identity missing */\n  SamlExternalIdentityMissing = \"SAML_EXTERNAL_IDENTITY_MISSING\",\n  /** SAML SSO enforcement requires an external identity */\n  SamlSsoEnforcementRequiresExternalIdentity = \"SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY\",\n  /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n  TwoFactorRequirementNonCompliance = \"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE\",\n}\n\n/** Audit log entry for a org.remove_member event. */\nexport type OrgRemoveMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgRemoveMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The types of membership the member has with the organization. */\n    membershipTypes?: Maybe<Array<OrgRemoveMemberAuditEntryMembershipType>>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The reason for the member being removed. */\n    reason?: Maybe<OrgRemoveMemberAuditEntryReason>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The type of membership a user has with an Organization. */\nexport enum OrgRemoveMemberAuditEntryMembershipType {\n  /** Organization administrators have full access and can change several settings, including the names of repositories that belong to the Organization and Owners team membership. In addition, organization admins can delete the organization and all of its repositories. */\n  Admin = \"ADMIN\",\n  /** A billing manager is a user who manages the billing settings for the Organization, such as updating payment information. */\n  BillingManager = \"BILLING_MANAGER\",\n  /** A direct member is a user that is a member of the Organization. */\n  DirectMember = \"DIRECT_MEMBER\",\n  /** An outside collaborator is a person who isn't explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization. */\n  OutsideCollaborator = \"OUTSIDE_COLLABORATOR\",\n  /** A suspended member. */\n  Suspended = \"SUSPENDED\",\n  /** An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the Organization. */\n  Unaffiliated = \"UNAFFILIATED\",\n}\n\n/** The reason a member was removed from an Organization. */\nexport enum OrgRemoveMemberAuditEntryReason {\n  /** SAML external identity missing */\n  SamlExternalIdentityMissing = \"SAML_EXTERNAL_IDENTITY_MISSING\",\n  /** SAML SSO enforcement requires an external identity */\n  SamlSsoEnforcementRequiresExternalIdentity = \"SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY\",\n  /** User was removed from organization during account recovery */\n  TwoFactorAccountRecovery = \"TWO_FACTOR_ACCOUNT_RECOVERY\",\n  /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n  TwoFactorRequirementNonCompliance = \"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE\",\n  /** User account has been deleted */\n  UserAccountDeleted = \"USER_ACCOUNT_DELETED\",\n}\n\n/** Audit log entry for a org.remove_outside_collaborator event. */\nexport type OrgRemoveOutsideCollaboratorAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgRemoveOutsideCollaboratorAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The types of membership the outside collaborator has with the organization. */\n    membershipTypes?: Maybe<Array<OrgRemoveOutsideCollaboratorAuditEntryMembershipType>>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The reason for the outside collaborator being removed from the Organization. */\n    reason?: Maybe<OrgRemoveOutsideCollaboratorAuditEntryReason>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The type of membership a user has with an Organization. */\nexport enum OrgRemoveOutsideCollaboratorAuditEntryMembershipType {\n  /** A billing manager is a user who manages the billing settings for the Organization, such as updating payment information. */\n  BillingManager = \"BILLING_MANAGER\",\n  /** An outside collaborator is a person who isn't explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization. */\n  OutsideCollaborator = \"OUTSIDE_COLLABORATOR\",\n  /** An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the organization. */\n  Unaffiliated = \"UNAFFILIATED\",\n}\n\n/** The reason an outside collaborator was removed from an Organization. */\nexport enum OrgRemoveOutsideCollaboratorAuditEntryReason {\n  /** SAML external identity missing */\n  SamlExternalIdentityMissing = \"SAML_EXTERNAL_IDENTITY_MISSING\",\n  /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n  TwoFactorRequirementNonCompliance = \"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE\",\n}\n\n/** Audit log entry for a org.restore_member event. */\nexport type OrgRestoreMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgRestoreMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The number of custom email routings for the restored member. */\n    restoredCustomEmailRoutingsCount?: Maybe<Scalars[\"Int\"]>;\n    /** The number of issue assignments for the restored member. */\n    restoredIssueAssignmentsCount?: Maybe<Scalars[\"Int\"]>;\n    /** Restored organization membership objects. */\n    restoredMemberships?: Maybe<Array<OrgRestoreMemberAuditEntryMembership>>;\n    /** The number of restored memberships. */\n    restoredMembershipsCount?: Maybe<Scalars[\"Int\"]>;\n    /** The number of repositories of the restored member. */\n    restoredRepositoriesCount?: Maybe<Scalars[\"Int\"]>;\n    /** The number of starred repositories for the restored member. */\n    restoredRepositoryStarsCount?: Maybe<Scalars[\"Int\"]>;\n    /** The number of watched repositories for the restored member. */\n    restoredRepositoryWatchesCount?: Maybe<Scalars[\"Int\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Types of memberships that can be restored for an Organization member. */\nexport type OrgRestoreMemberAuditEntryMembership =\n  | OrgRestoreMemberMembershipOrganizationAuditEntryData\n  | OrgRestoreMemberMembershipRepositoryAuditEntryData\n  | OrgRestoreMemberMembershipTeamAuditEntryData;\n\n/** Metadata for an organization membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipOrganizationAuditEntryData = OrganizationAuditEntryData & {\n  __typename?: \"OrgRestoreMemberMembershipOrganizationAuditEntryData\";\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Metadata for a repository membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipRepositoryAuditEntryData = RepositoryAuditEntryData & {\n  __typename?: \"OrgRestoreMemberMembershipRepositoryAuditEntryData\";\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Metadata for a team membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipTeamAuditEntryData = TeamAuditEntryData & {\n  __typename?: \"OrgRestoreMemberMembershipTeamAuditEntryData\";\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Audit log entry for a org.unblock_user */\nexport type OrgUnblockUserAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgUnblockUserAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user being unblocked by the organization. */\n    blockedUser?: Maybe<User>;\n    /** The username of the blocked user. */\n    blockedUserName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the blocked user. */\n    blockedUserResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the blocked user. */\n    blockedUserUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a org.update_default_repository_permission */\nexport type OrgUpdateDefaultRepositoryPermissionAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgUpdateDefaultRepositoryPermissionAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The new base repository permission level for the organization. */\n    permission?: Maybe<OrgUpdateDefaultRepositoryPermissionAuditEntryPermission>;\n    /** The former base repository permission level for the organization. */\n    permissionWas?: Maybe<OrgUpdateDefaultRepositoryPermissionAuditEntryPermission>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The default permission a repository can have in an Organization. */\nexport enum OrgUpdateDefaultRepositoryPermissionAuditEntryPermission {\n  /** Can read, clone, push, and add collaborators to repositories. */\n  Admin = \"ADMIN\",\n  /** No default permission value. */\n  None = \"NONE\",\n  /** Can read and clone repositories. */\n  Read = \"READ\",\n  /** Can read, clone and push to repositories. */\n  Write = \"WRITE\",\n}\n\n/** Audit log entry for a org.update_member event. */\nexport type OrgUpdateMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgUpdateMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The new member permission level for the organization. */\n    permission?: Maybe<OrgUpdateMemberAuditEntryPermission>;\n    /** The former member permission level for the organization. */\n    permissionWas?: Maybe<OrgUpdateMemberAuditEntryPermission>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The permissions available to members on an Organization. */\nexport enum OrgUpdateMemberAuditEntryPermission {\n  /** Can read, clone, push, and add collaborators to repositories. */\n  Admin = \"ADMIN\",\n  /** Can read and clone repositories. */\n  Read = \"READ\",\n}\n\n/** Audit log entry for a org.update_member_repository_creation_permission event. */\nexport type OrgUpdateMemberRepositoryCreationPermissionAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** Can members create repositories in the organization. */\n    canCreateRepositories?: Maybe<Scalars[\"Boolean\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The permission for visibility level of repositories for this organization. */\n    visibility?: Maybe<OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility>;\n  };\n\n/** The permissions available for repository creation on an Organization. */\nexport enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility {\n  /** All organization members are restricted from creating any repositories. */\n  All = \"ALL\",\n  /** All organization members are restricted from creating internal repositories. */\n  Internal = \"INTERNAL\",\n  /** All organization members are allowed to create any repositories. */\n  None = \"NONE\",\n  /** All organization members are restricted from creating private repositories. */\n  Private = \"PRIVATE\",\n  /** All organization members are restricted from creating private or internal repositories. */\n  PrivateInternal = \"PRIVATE_INTERNAL\",\n  /** All organization members are restricted from creating public repositories. */\n  Public = \"PUBLIC\",\n  /** All organization members are restricted from creating public or internal repositories. */\n  PublicInternal = \"PUBLIC_INTERNAL\",\n  /** All organization members are restricted from creating public or private repositories. */\n  PublicPrivate = \"PUBLIC_PRIVATE\",\n}\n\n/** Audit log entry for a org.update_member_repository_invitation_permission event. */\nexport type OrgUpdateMemberRepositoryInvitationPermissionAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** Can outside collaborators be invited to repositories in the organization. */\n    canInviteOutsideCollaboratorsToRepositories?: Maybe<Scalars[\"Boolean\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type Organization = Actor &\n  MemberStatusable &\n  Node &\n  PackageOwner &\n  ProfileOwner &\n  ProjectOwner &\n  ProjectV2Owner &\n  ProjectV2Recent &\n  RepositoryDiscussionAuthor &\n  RepositoryDiscussionCommentAuthor &\n  RepositoryOwner &\n  Sponsorable &\n  UniformResourceLocatable & {\n    __typename?: \"Organization\";\n    /** Determine if this repository owner has any items that can be pinned to their profile. */\n    anyPinnableItems: Scalars[\"Boolean\"];\n    /** Audit log entries of the organization */\n    auditLog: OrganizationAuditEntryConnection;\n    /** A URL pointing to the organization's public avatar. */\n    avatarUrl: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The organization's public profile description. */\n    description?: Maybe<Scalars[\"String\"]>;\n    /** The organization's public profile description rendered to HTML. */\n    descriptionHTML?: Maybe<Scalars[\"String\"]>;\n    /** A list of domains owned by the organization. */\n    domains?: Maybe<VerifiableDomainConnection>;\n    /** The organization's public email. */\n    email?: Maybe<Scalars[\"String\"]>;\n    /** A list of owners of the organization's enterprise account. */\n    enterpriseOwners: OrganizationEnterpriseOwnerConnection;\n    /** The estimated next GitHub Sponsors payout for this user/organization in cents (USD). */\n    estimatedNextSponsorsPayoutInCents: Scalars[\"Int\"];\n    /** True if this user/organization has a GitHub Sponsors listing. */\n    hasSponsorsListing: Scalars[\"Boolean\"];\n    id: Scalars[\"ID\"];\n    /** The interaction ability settings for this organization. */\n    interactionAbility?: Maybe<RepositoryInteractionAbility>;\n    /** The setting value for whether the organization has an IP allow list enabled. */\n    ipAllowListEnabledSetting: IpAllowListEnabledSettingValue;\n    /** The IP addresses that are allowed to access resources owned by the organization. */\n    ipAllowListEntries: IpAllowListEntryConnection;\n    /** The setting value for whether the organization has IP allow list configuration for installed GitHub Apps enabled. */\n    ipAllowListForInstalledAppsEnabledSetting: IpAllowListForInstalledAppsEnabledSettingValue;\n    /** Whether the given account is sponsoring this user/organization. */\n    isSponsoredBy: Scalars[\"Boolean\"];\n    /** True if the viewer is sponsored by this user/organization. */\n    isSponsoringViewer: Scalars[\"Boolean\"];\n    /** Whether the organization has verified its profile email and website. */\n    isVerified: Scalars[\"Boolean\"];\n    /** Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity. */\n    itemShowcase: ProfileItemShowcase;\n    /** The organization's public profile location. */\n    location?: Maybe<Scalars[\"String\"]>;\n    /** The organization's login name. */\n    login: Scalars[\"String\"];\n    /** A list of all mannequins for this organization. */\n    mannequins: MannequinConnection;\n    /** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n    memberStatuses: UserStatusConnection;\n    /** Members can fork private repositories in this organization */\n    membersCanForkPrivateRepositories: Scalars[\"Boolean\"];\n    /** A list of users who are members of this organization. */\n    membersWithRole: OrganizationMemberConnection;\n    /** The estimated monthly GitHub Sponsors income for this user/organization in cents (USD). */\n    monthlyEstimatedSponsorsIncomeInCents: Scalars[\"Int\"];\n    /** The organization's public profile name. */\n    name?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path creating a new team */\n    newTeamResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL creating a new team */\n    newTeamUrl: Scalars[\"URI\"];\n    /** Indicates if email notification delivery for this organization is restricted to verified or approved domains. */\n    notificationDeliveryRestrictionEnabledSetting: NotificationRestrictionSettingValue;\n    /** The billing email for the organization. */\n    organizationBillingEmail?: Maybe<Scalars[\"String\"]>;\n    /** A list of packages under the owner. */\n    packages: PackageConnection;\n    /** A list of users who have been invited to join this organization. */\n    pendingMembers: UserConnection;\n    /** A list of repositories and gists this profile owner can pin to their profile. */\n    pinnableItems: PinnableItemConnection;\n    /** A list of repositories and gists this profile owner has pinned to their profile */\n    pinnedItems: PinnableItemConnection;\n    /** Returns how many more items this profile owner can pin to their profile. */\n    pinnedItemsRemaining: Scalars[\"Int\"];\n    /** Find project by number. */\n    project?: Maybe<Project>;\n    /** Find a project by number. */\n    projectV2?: Maybe<ProjectV2>;\n    /** A list of projects under the owner. */\n    projects: ProjectConnection;\n    /** The HTTP path listing organization's projects */\n    projectsResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL listing organization's projects */\n    projectsUrl: Scalars[\"URI\"];\n    /** A list of projects under the owner. */\n    projectsV2: ProjectV2Connection;\n    /** Recent projects that this user has modified in the context of the owner. */\n    recentProjects: ProjectV2Connection;\n    /** A list of repositories that the user owns. */\n    repositories: RepositoryConnection;\n    /** Find Repository. */\n    repository?: Maybe<Repository>;\n    /** Discussion comments this user has authored. */\n    repositoryDiscussionComments: DiscussionCommentConnection;\n    /** Discussions this user has started. */\n    repositoryDiscussions: DiscussionConnection;\n    /** A list of all repository migrations for this organization. */\n    repositoryMigrations: RepositoryMigrationConnection;\n    /** When true the organization requires all members, billing managers, and outside collaborators to enable two-factor authentication. */\n    requiresTwoFactorAuthentication?: Maybe<Scalars[\"Boolean\"]>;\n    /** The HTTP path for this organization. */\n    resourcePath: Scalars[\"URI\"];\n    /** The Organization's SAML identity providers */\n    samlIdentityProvider?: Maybe<OrganizationIdentityProvider>;\n    /** List of users and organizations this entity is sponsoring. */\n    sponsoring: SponsorConnection;\n    /** List of sponsors for this user or organization. */\n    sponsors: SponsorConnection;\n    /** Events involving this sponsorable, such as new sponsorships. */\n    sponsorsActivities: SponsorsActivityConnection;\n    /** The GitHub Sponsors listing for this user or organization. */\n    sponsorsListing?: Maybe<SponsorsListing>;\n    /** The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor. */\n    sponsorshipForViewerAsSponsor?: Maybe<Sponsorship>;\n    /** The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving. */\n    sponsorshipForViewerAsSponsorable?: Maybe<Sponsorship>;\n    /** List of sponsorship updates sent from this sponsorable to sponsors. */\n    sponsorshipNewsletters: SponsorshipNewsletterConnection;\n    /** The sponsorships where this user or organization is the maintainer receiving the funds. */\n    sponsorshipsAsMaintainer: SponsorshipConnection;\n    /** The sponsorships where this user or organization is the funder. */\n    sponsorshipsAsSponsor: SponsorshipConnection;\n    /** Find an organization's team by its slug. */\n    team?: Maybe<Team>;\n    /** A list of teams in this organization. */\n    teams: TeamConnection;\n    /** The HTTP path listing organization's teams */\n    teamsResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL listing organization's teams */\n    teamsUrl: Scalars[\"URI\"];\n    /** The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization. */\n    totalSponsorshipAmountAsSponsorInCents?: Maybe<Scalars[\"Int\"]>;\n    /** The organization's Twitter username. */\n    twitterUsername?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this organization. */\n    url: Scalars[\"URI\"];\n    /** Organization is adminable by the viewer. */\n    viewerCanAdminister: Scalars[\"Boolean\"];\n    /** Can the viewer pin repositories and gists to the profile? */\n    viewerCanChangePinnedItems: Scalars[\"Boolean\"];\n    /** Can the current viewer create new projects on this owner. */\n    viewerCanCreateProjects: Scalars[\"Boolean\"];\n    /** Viewer can create repositories on this organization */\n    viewerCanCreateRepositories: Scalars[\"Boolean\"];\n    /** Viewer can create teams on this organization. */\n    viewerCanCreateTeams: Scalars[\"Boolean\"];\n    /** Whether or not the viewer is able to sponsor this user/organization. */\n    viewerCanSponsor: Scalars[\"Boolean\"];\n    /** Viewer is an active member of this organization. */\n    viewerIsAMember: Scalars[\"Boolean\"];\n    /** Whether or not this Organization is followed by the viewer. */\n    viewerIsFollowing: Scalars[\"Boolean\"];\n    /** True if the viewer is sponsoring this user/organization. */\n    viewerIsSponsoring: Scalars[\"Boolean\"];\n    /** Whether contributors are required to sign off on web-based commits for repositories in this organization. */\n    webCommitSignoffRequired: Scalars[\"Boolean\"];\n    /** The organization's public profile URL. */\n    websiteUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAnyPinnableItemsArgs = {\n  type?: InputMaybe<PinnableItemType>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAuditLogArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<AuditLogOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationDomainsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isApproved?: InputMaybe<Scalars[\"Boolean\"]>;\n  isVerified?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<VerifiableDomainOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationEnterpriseOwnersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrgEnterpriseOwnerOrder>;\n  organizationRole?: InputMaybe<RoleInOrganization>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationIpAllowListEntriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IpAllowListEntryOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationIsSponsoredByArgs = {\n  accountLogin: Scalars[\"String\"];\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationMannequinsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<MannequinOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationMemberStatusesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<UserStatusOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationMembersWithRoleArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPackagesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  names?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>;\n  orderBy?: InputMaybe<PackageOrder>;\n  packageType?: InputMaybe<PackageType>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPendingMembersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPinnableItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPinnedItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectV2Args = {\n  number: Scalars[\"Int\"];\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectOrder>;\n  search?: InputMaybe<Scalars[\"String\"]>;\n  states?: InputMaybe<Array<ProjectState>>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectsV2Args = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRecentProjectsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoriesArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isFork?: InputMaybe<Scalars[\"Boolean\"]>;\n  isLocked?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryArgs = {\n  followRenames?: InputMaybe<Scalars[\"Boolean\"]>;\n  name: Scalars[\"String\"];\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryDiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  onlyAnswers?: InputMaybe<Scalars[\"Boolean\"]>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryDiscussionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  answered?: InputMaybe<Scalars[\"Boolean\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<DiscussionOrder>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryMigrationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryMigrationOrder>;\n  repositoryName?: InputMaybe<Scalars[\"String\"]>;\n  state?: InputMaybe<MigrationState>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsoringArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorOrder>;\n  tierId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorsActivitiesArgs = {\n  actions?: InputMaybe<Array<SponsorsActivityAction>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includeAsSponsor?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorsActivityOrder>;\n  period?: InputMaybe<SponsorsActivityPeriod>;\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  until?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipForViewerAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipForViewerAsSponsorableArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipNewslettersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorshipNewsletterOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipsAsMaintainerArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includePrivate?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipsAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  maintainerLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationTeamArgs = {\n  slug: Scalars[\"String\"];\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationTeamsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  ldapMapped?: InputMaybe<Scalars[\"Boolean\"]>;\n  orderBy?: InputMaybe<TeamOrder>;\n  privacy?: InputMaybe<TeamPrivacy>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  role?: InputMaybe<TeamRole>;\n  rootTeamsOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  userLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationTotalSponsorshipAmountAsSponsorInCentsArgs = {\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  sponsorableLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  until?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** An audit entry in an organization audit log. */\nexport type OrganizationAuditEntry =\n  | MembersCanDeleteReposClearAuditEntry\n  | MembersCanDeleteReposDisableAuditEntry\n  | MembersCanDeleteReposEnableAuditEntry\n  | OauthApplicationCreateAuditEntry\n  | OrgAddBillingManagerAuditEntry\n  | OrgAddMemberAuditEntry\n  | OrgBlockUserAuditEntry\n  | OrgConfigDisableCollaboratorsOnlyAuditEntry\n  | OrgConfigEnableCollaboratorsOnlyAuditEntry\n  | OrgCreateAuditEntry\n  | OrgDisableOauthAppRestrictionsAuditEntry\n  | OrgDisableSamlAuditEntry\n  | OrgDisableTwoFactorRequirementAuditEntry\n  | OrgEnableOauthAppRestrictionsAuditEntry\n  | OrgEnableSamlAuditEntry\n  | OrgEnableTwoFactorRequirementAuditEntry\n  | OrgInviteMemberAuditEntry\n  | OrgInviteToBusinessAuditEntry\n  | OrgOauthAppAccessApprovedAuditEntry\n  | OrgOauthAppAccessDeniedAuditEntry\n  | OrgOauthAppAccessRequestedAuditEntry\n  | OrgRemoveBillingManagerAuditEntry\n  | OrgRemoveMemberAuditEntry\n  | OrgRemoveOutsideCollaboratorAuditEntry\n  | OrgRestoreMemberAuditEntry\n  | OrgUnblockUserAuditEntry\n  | OrgUpdateDefaultRepositoryPermissionAuditEntry\n  | OrgUpdateMemberAuditEntry\n  | OrgUpdateMemberRepositoryCreationPermissionAuditEntry\n  | OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\n  | PrivateRepositoryForkingDisableAuditEntry\n  | PrivateRepositoryForkingEnableAuditEntry\n  | RepoAccessAuditEntry\n  | RepoAddMemberAuditEntry\n  | RepoAddTopicAuditEntry\n  | RepoArchivedAuditEntry\n  | RepoChangeMergeSettingAuditEntry\n  | RepoConfigDisableAnonymousGitAccessAuditEntry\n  | RepoConfigDisableCollaboratorsOnlyAuditEntry\n  | RepoConfigDisableContributorsOnlyAuditEntry\n  | RepoConfigDisableSockpuppetDisallowedAuditEntry\n  | RepoConfigEnableAnonymousGitAccessAuditEntry\n  | RepoConfigEnableCollaboratorsOnlyAuditEntry\n  | RepoConfigEnableContributorsOnlyAuditEntry\n  | RepoConfigEnableSockpuppetDisallowedAuditEntry\n  | RepoConfigLockAnonymousGitAccessAuditEntry\n  | RepoConfigUnlockAnonymousGitAccessAuditEntry\n  | RepoCreateAuditEntry\n  | RepoDestroyAuditEntry\n  | RepoRemoveMemberAuditEntry\n  | RepoRemoveTopicAuditEntry\n  | RepositoryVisibilityChangeDisableAuditEntry\n  | RepositoryVisibilityChangeEnableAuditEntry\n  | TeamAddMemberAuditEntry\n  | TeamAddRepositoryAuditEntry\n  | TeamChangeParentTeamAuditEntry\n  | TeamRemoveMemberAuditEntry\n  | TeamRemoveRepositoryAuditEntry;\n\n/** The connection type for OrganizationAuditEntry. */\nexport type OrganizationAuditEntryConnection = {\n  __typename?: \"OrganizationAuditEntryConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationAuditEntryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<OrganizationAuditEntry>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Metadata for an audit entry with action org.* */\nexport type OrganizationAuditEntryData = {\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** An edge in a connection. */\nexport type OrganizationAuditEntryEdge = {\n  __typename?: \"OrganizationAuditEntryEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<OrganizationAuditEntry>;\n};\n\n/** A list of organizations managed by an enterprise. */\nexport type OrganizationConnection = {\n  __typename?: \"OrganizationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Organization>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type OrganizationEdge = {\n  __typename?: \"OrganizationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Organization>;\n};\n\n/** The connection type for User. */\nexport type OrganizationEnterpriseOwnerConnection = {\n  __typename?: \"OrganizationEnterpriseOwnerConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationEnterpriseOwnerEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An enterprise owner in the context of an organization that is part of the enterprise. */\nexport type OrganizationEnterpriseOwnerEdge = {\n  __typename?: \"OrganizationEnterpriseOwnerEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n  /** The role of the owner with respect to the organization. */\n  organizationRole: RoleInOrganization;\n};\n\n/** An Identity Provider configured to provision SAML and SCIM identities for Organizations */\nexport type OrganizationIdentityProvider = Node & {\n  __typename?: \"OrganizationIdentityProvider\";\n  /** The digest algorithm used to sign SAML requests for the Identity Provider. */\n  digestMethod?: Maybe<Scalars[\"URI\"]>;\n  /** External Identities provisioned by this Identity Provider */\n  externalIdentities: ExternalIdentityConnection;\n  id: Scalars[\"ID\"];\n  /** The x509 certificate used by the Identity Provider to sign assertions and responses. */\n  idpCertificate?: Maybe<Scalars[\"X509Certificate\"]>;\n  /** The Issuer Entity ID for the SAML Identity Provider */\n  issuer?: Maybe<Scalars[\"String\"]>;\n  /** Organization this Identity Provider belongs to */\n  organization?: Maybe<Organization>;\n  /** The signature algorithm used to sign SAML requests for the Identity Provider. */\n  signatureMethod?: Maybe<Scalars[\"URI\"]>;\n  /** The URL endpoint for the Identity Provider's SAML SSO. */\n  ssoUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** An Identity Provider configured to provision SAML and SCIM identities for Organizations */\nexport type OrganizationIdentityProviderExternalIdentitiesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  login?: InputMaybe<Scalars[\"String\"]>;\n  membersOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  userName?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** An Invitation for a user to an organization. */\nexport type OrganizationInvitation = Node & {\n  __typename?: \"OrganizationInvitation\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The email address of the user invited to the organization. */\n  email?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The type of invitation that was sent (e.g. email, user). */\n  invitationType: OrganizationInvitationType;\n  /** The user who was invited to the organization. */\n  invitee?: Maybe<User>;\n  /** The user who created the invitation. */\n  inviter: User;\n  /** The organization the invite is for */\n  organization: Organization;\n  /** The user's pending role in the organization (e.g. member, owner). */\n  role: OrganizationInvitationRole;\n};\n\n/** The connection type for OrganizationInvitation. */\nexport type OrganizationInvitationConnection = {\n  __typename?: \"OrganizationInvitationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<OrganizationInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type OrganizationInvitationEdge = {\n  __typename?: \"OrganizationInvitationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<OrganizationInvitation>;\n};\n\n/** The possible organization invitation roles. */\nexport enum OrganizationInvitationRole {\n  /** The user is invited to be an admin of the organization. */\n  Admin = \"ADMIN\",\n  /** The user is invited to be a billing manager of the organization. */\n  BillingManager = \"BILLING_MANAGER\",\n  /** The user is invited to be a direct member of the organization. */\n  DirectMember = \"DIRECT_MEMBER\",\n  /** The user's previous role will be reinstated. */\n  Reinstate = \"REINSTATE\",\n}\n\n/** The possible organization invitation types. */\nexport enum OrganizationInvitationType {\n  /** The invitation was to an email address. */\n  Email = \"EMAIL\",\n  /** The invitation was to an existing user. */\n  User = \"USER\",\n}\n\n/** The connection type for User. */\nexport type OrganizationMemberConnection = {\n  __typename?: \"OrganizationMemberConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationMemberEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user within an organization. */\nexport type OrganizationMemberEdge = {\n  __typename?: \"OrganizationMemberEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer. */\n  hasTwoFactorEnabled?: Maybe<Scalars[\"Boolean\"]>;\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n  /** The role this user has in the organization. */\n  role?: Maybe<OrganizationMemberRole>;\n};\n\n/** The possible roles within an organization for its members. */\nexport enum OrganizationMemberRole {\n  /** The user is an administrator of the organization. */\n  Admin = \"ADMIN\",\n  /** The user is a member of the organization. */\n  Member = \"MEMBER\",\n}\n\n/** The possible values for the members can create repositories setting on an organization. */\nexport enum OrganizationMembersCanCreateRepositoriesSettingValue {\n  /** Members will be able to create public and private repositories. */\n  All = \"ALL\",\n  /** Members will not be able to create public or private repositories. */\n  Disabled = \"DISABLED\",\n  /** Members will be able to create only internal repositories. */\n  Internal = \"INTERNAL\",\n  /** Members will be able to create only private repositories. */\n  Private = \"PRIVATE\",\n}\n\n/** A GitHub Enterprise Importer (GEI) organization migration. */\nexport type OrganizationMigration = Node & {\n  __typename?: \"OrganizationMigration\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"String\"]>;\n  /** The reason the organization migration failed. */\n  failureReason?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The remaining amount of repos to be migrated. */\n  remainingRepositoriesCount?: Maybe<Scalars[\"Int\"]>;\n  /** The name of the source organization to be migrated. */\n  sourceOrgName: Scalars[\"String\"];\n  /** The URL of the source organization to migrate. */\n  sourceOrgUrl: Scalars[\"URI\"];\n  /** The migration state. */\n  state: OrganizationMigrationState;\n  /** The name of the target organization. */\n  targetOrgName: Scalars[\"String\"];\n  /** The total amount of repositories to be migrated. */\n  totalRepositoriesCount?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The Octoshift Organization migration state. */\nexport enum OrganizationMigrationState {\n  /** The Octoshift migration has failed. */\n  Failed = \"FAILED\",\n  /** The Octoshift migration is in progress. */\n  InProgress = \"IN_PROGRESS\",\n  /** The Octoshift migration has not started. */\n  NotStarted = \"NOT_STARTED\",\n  /** The Octoshift migration is performing post repository migrations. */\n  PostRepoMigration = \"POST_REPO_MIGRATION\",\n  /** The Octoshift migration is performing pre repository migrations. */\n  PreRepoMigration = \"PRE_REPO_MIGRATION\",\n  /** The Octoshift migration has been queued. */\n  Queued = \"QUEUED\",\n  /** The Octoshift org migration is performing repository migrations. */\n  RepoMigration = \"REPO_MIGRATION\",\n  /** The Octoshift migration has succeeded. */\n  Succeeded = \"SUCCEEDED\",\n}\n\n/** Used for argument of CreateProjectV2 mutation. */\nexport type OrganizationOrUser = Organization | User;\n\n/** Ordering options for organization connections. */\nexport type OrganizationOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order organizations by. */\n  field: OrganizationOrderField;\n};\n\n/** Properties by which organization connections can be ordered. */\nexport enum OrganizationOrderField {\n  /** Order organizations by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order organizations by login */\n  Login = \"LOGIN\",\n}\n\n/** An organization teams hovercard context */\nexport type OrganizationTeamsHovercardContext = HovercardContext & {\n  __typename?: \"OrganizationTeamsHovercardContext\";\n  /** A string describing this context */\n  message: Scalars[\"String\"];\n  /** An octicon to accompany this context */\n  octicon: Scalars[\"String\"];\n  /** Teams in this organization the user is a member of that are relevant */\n  relevantTeams: TeamConnection;\n  /** The path for the full team list for this user */\n  teamsResourcePath: Scalars[\"URI\"];\n  /** The URL for the full team list for this user */\n  teamsUrl: Scalars[\"URI\"];\n  /** The total number of teams the user is on in the organization */\n  totalTeamCount: Scalars[\"Int\"];\n};\n\n/** An organization teams hovercard context */\nexport type OrganizationTeamsHovercardContextRelevantTeamsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** An organization list hovercard context */\nexport type OrganizationsHovercardContext = HovercardContext & {\n  __typename?: \"OrganizationsHovercardContext\";\n  /** A string describing this context */\n  message: Scalars[\"String\"];\n  /** An octicon to accompany this context */\n  octicon: Scalars[\"String\"];\n  /** Organizations this user is a member of that are relevant */\n  relevantOrganizations: OrganizationConnection;\n  /** The total number of organizations this user is in */\n  totalOrganizationCount: Scalars[\"Int\"];\n};\n\n/** An organization list hovercard context */\nexport type OrganizationsHovercardContextRelevantOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n};\n\n/** Information for an uploaded package. */\nexport type Package = Node & {\n  __typename?: \"Package\";\n  id: Scalars[\"ID\"];\n  /** Find the latest version for the package. */\n  latestVersion?: Maybe<PackageVersion>;\n  /** Identifies the name of the package. */\n  name: Scalars[\"String\"];\n  /** Identifies the type of the package. */\n  packageType: PackageType;\n  /** The repository this package belongs to. */\n  repository?: Maybe<Repository>;\n  /** Statistics about package activity. */\n  statistics?: Maybe<PackageStatistics>;\n  /** Find package version by version string. */\n  version?: Maybe<PackageVersion>;\n  /** list of versions for this package */\n  versions: PackageVersionConnection;\n};\n\n/** Information for an uploaded package. */\nexport type PackageVersionArgs = {\n  version: Scalars[\"String\"];\n};\n\n/** Information for an uploaded package. */\nexport type PackageVersionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<PackageVersionOrder>;\n};\n\n/** The connection type for Package. */\nexport type PackageConnection = {\n  __typename?: \"PackageConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PackageEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Package>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PackageEdge = {\n  __typename?: \"PackageEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Package>;\n};\n\n/** A file in a package version. */\nexport type PackageFile = Node & {\n  __typename?: \"PackageFile\";\n  id: Scalars[\"ID\"];\n  /** MD5 hash of the file. */\n  md5?: Maybe<Scalars[\"String\"]>;\n  /** Name of the file. */\n  name: Scalars[\"String\"];\n  /** The package version this file belongs to. */\n  packageVersion?: Maybe<PackageVersion>;\n  /** SHA1 hash of the file. */\n  sha1?: Maybe<Scalars[\"String\"]>;\n  /** SHA256 hash of the file. */\n  sha256?: Maybe<Scalars[\"String\"]>;\n  /** Size of the file in bytes. */\n  size?: Maybe<Scalars[\"Int\"]>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** URL to download the asset. */\n  url?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** The connection type for PackageFile. */\nexport type PackageFileConnection = {\n  __typename?: \"PackageFileConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PackageFileEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PackageFile>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PackageFileEdge = {\n  __typename?: \"PackageFileEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PackageFile>;\n};\n\n/** Ways in which lists of package files can be ordered upon return. */\nexport type PackageFileOrder = {\n  /** The direction in which to order package files by the specified field. */\n  direction?: InputMaybe<OrderDirection>;\n  /** The field in which to order package files by. */\n  field?: InputMaybe<PackageFileOrderField>;\n};\n\n/** Properties by which package file connections can be ordered. */\nexport enum PackageFileOrderField {\n  /** Order package files by creation time */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** Ways in which lists of packages can be ordered upon return. */\nexport type PackageOrder = {\n  /** The direction in which to order packages by the specified field. */\n  direction?: InputMaybe<OrderDirection>;\n  /** The field in which to order packages by. */\n  field?: InputMaybe<PackageOrderField>;\n};\n\n/** Properties by which package connections can be ordered. */\nexport enum PackageOrderField {\n  /** Order packages by creation time */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** Represents an owner of a package. */\nexport type PackageOwner = {\n  id: Scalars[\"ID\"];\n  /** A list of packages under the owner. */\n  packages: PackageConnection;\n};\n\n/** Represents an owner of a package. */\nexport type PackageOwnerPackagesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  names?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>;\n  orderBy?: InputMaybe<PackageOrder>;\n  packageType?: InputMaybe<PackageType>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Represents a object that contains package activity statistics such as downloads. */\nexport type PackageStatistics = {\n  __typename?: \"PackageStatistics\";\n  /** Number of times the package was downloaded since it was created. */\n  downloadsTotalCount: Scalars[\"Int\"];\n};\n\n/** A version tag contains the mapping between a tag name and a version. */\nexport type PackageTag = Node & {\n  __typename?: \"PackageTag\";\n  id: Scalars[\"ID\"];\n  /** Identifies the tag name of the version. */\n  name: Scalars[\"String\"];\n  /** Version that the tag is associated with. */\n  version?: Maybe<PackageVersion>;\n};\n\n/** The possible types of a package. */\nexport enum PackageType {\n  /** A debian package. */\n  Debian = \"DEBIAN\",\n  /**\n   * A docker image.\n   * @deprecated DOCKER will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2021-06-21 UTC.\n   */\n  Docker = \"DOCKER\",\n  /**\n   * A maven package.\n   * @deprecated MAVEN will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2023-02-10 UTC.\n   */\n  Maven = \"MAVEN\",\n  /**\n   * An npm package.\n   * @deprecated NPM will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-11-21 UTC.\n   */\n  Npm = \"NPM\",\n  /**\n   * A nuget package.\n   * @deprecated NUGET will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-11-21 UTC.\n   */\n  Nuget = \"NUGET\",\n  /** A python package. */\n  Pypi = \"PYPI\",\n  /**\n   * A rubygems package.\n   * @deprecated RUBYGEMS will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-12-28 UTC.\n   */\n  Rubygems = \"RUBYGEMS\",\n}\n\n/** Information about a specific package version. */\nexport type PackageVersion = Node & {\n  __typename?: \"PackageVersion\";\n  /** List of files associated with this package version */\n  files: PackageFileConnection;\n  id: Scalars[\"ID\"];\n  /** The package associated with this version. */\n  package?: Maybe<Package>;\n  /** The platform this version was built for. */\n  platform?: Maybe<Scalars[\"String\"]>;\n  /** Whether or not this version is a pre-release. */\n  preRelease: Scalars[\"Boolean\"];\n  /** The README of this package version. */\n  readme?: Maybe<Scalars[\"String\"]>;\n  /** The release associated with this package version. */\n  release?: Maybe<Release>;\n  /** Statistics about package activity. */\n  statistics?: Maybe<PackageVersionStatistics>;\n  /** The package version summary. */\n  summary?: Maybe<Scalars[\"String\"]>;\n  /** The version string. */\n  version: Scalars[\"String\"];\n};\n\n/** Information about a specific package version. */\nexport type PackageVersionFilesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<PackageFileOrder>;\n};\n\n/** The connection type for PackageVersion. */\nexport type PackageVersionConnection = {\n  __typename?: \"PackageVersionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PackageVersionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PackageVersion>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PackageVersionEdge = {\n  __typename?: \"PackageVersionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PackageVersion>;\n};\n\n/** Ways in which lists of package versions can be ordered upon return. */\nexport type PackageVersionOrder = {\n  /** The direction in which to order package versions by the specified field. */\n  direction?: InputMaybe<OrderDirection>;\n  /** The field in which to order package versions by. */\n  field?: InputMaybe<PackageVersionOrderField>;\n};\n\n/** Properties by which package version connections can be ordered. */\nexport enum PackageVersionOrderField {\n  /** Order package versions by creation time */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** Represents a object that contains package version activity statistics such as downloads. */\nexport type PackageVersionStatistics = {\n  __typename?: \"PackageVersionStatistics\";\n  /** Number of times the package was downloaded since it was created. */\n  downloadsTotalCount: Scalars[\"Int\"];\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: \"PageInfo\";\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars[\"String\"]>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars[\"Boolean\"];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars[\"Boolean\"];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars[\"String\"]>;\n};\n\n/** The possible types of patch statuses. */\nexport enum PatchStatus {\n  /** The file was added. Git status 'A'. */\n  Added = \"ADDED\",\n  /** The file's type was changed. Git status 'T'. */\n  Changed = \"CHANGED\",\n  /** The file was copied. Git status 'C'. */\n  Copied = \"COPIED\",\n  /** The file was deleted. Git status 'D'. */\n  Deleted = \"DELETED\",\n  /** The file's contents were changed. Git status 'M'. */\n  Modified = \"MODIFIED\",\n  /** The file was renamed. Git status 'R'. */\n  Renamed = \"RENAMED\",\n}\n\n/** Types that can grant permissions on a repository to a user */\nexport type PermissionGranter = Organization | Repository | Team;\n\n/** A level of permission and source for a user's access to a repository. */\nexport type PermissionSource = {\n  __typename?: \"PermissionSource\";\n  /** The organization the repository belongs to. */\n  organization: Organization;\n  /** The level of access this source has granted to the user. */\n  permission: DefaultRepositoryPermissionField;\n  /** The source of this permission. */\n  source: PermissionGranter;\n};\n\n/** Autogenerated input type of PinIssue */\nexport type PinIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the issue to be pinned */\n  issueId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of PinIssue */\nexport type PinIssuePayload = {\n  __typename?: \"PinIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The issue that was pinned */\n  issue?: Maybe<Issue>;\n};\n\n/** Types that can be pinned to a profile page. */\nexport type PinnableItem = Gist | Repository;\n\n/** The connection type for PinnableItem. */\nexport type PinnableItemConnection = {\n  __typename?: \"PinnableItemConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PinnableItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PinnableItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PinnableItemEdge = {\n  __typename?: \"PinnableItemEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PinnableItem>;\n};\n\n/** Represents items that can be pinned to a profile page or dashboard. */\nexport enum PinnableItemType {\n  /** A gist. */\n  Gist = \"GIST\",\n  /** An issue. */\n  Issue = \"ISSUE\",\n  /** An organization. */\n  Organization = \"ORGANIZATION\",\n  /** A project. */\n  Project = \"PROJECT\",\n  /** A pull request. */\n  PullRequest = \"PULL_REQUEST\",\n  /** A repository. */\n  Repository = \"REPOSITORY\",\n  /** A team. */\n  Team = \"TEAM\",\n  /** A user. */\n  User = \"USER\",\n}\n\n/** A Pinned Discussion is a discussion pinned to a repository's index page. */\nexport type PinnedDiscussion = Node &\n  RepositoryNode & {\n    __typename?: \"PinnedDiscussion\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The discussion that was pinned. */\n    discussion: Discussion;\n    /** Color stops of the chosen gradient */\n    gradientStopColors: Array<Scalars[\"String\"]>;\n    id: Scalars[\"ID\"];\n    /** Background texture pattern */\n    pattern: PinnedDiscussionPattern;\n    /** The actor that pinned this discussion. */\n    pinnedBy: Actor;\n    /** Preconfigured background gradient option */\n    preconfiguredGradient?: Maybe<PinnedDiscussionGradient>;\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** The connection type for PinnedDiscussion. */\nexport type PinnedDiscussionConnection = {\n  __typename?: \"PinnedDiscussionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PinnedDiscussionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PinnedDiscussion>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PinnedDiscussionEdge = {\n  __typename?: \"PinnedDiscussionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PinnedDiscussion>;\n};\n\n/** Preconfigured gradients that may be used to style discussions pinned within a repository. */\nexport enum PinnedDiscussionGradient {\n  /** A gradient of blue to mint */\n  BlueMint = \"BLUE_MINT\",\n  /** A gradient of blue to purple */\n  BluePurple = \"BLUE_PURPLE\",\n  /** A gradient of pink to blue */\n  PinkBlue = \"PINK_BLUE\",\n  /** A gradient of purple to coral */\n  PurpleCoral = \"PURPLE_CORAL\",\n  /** A gradient of red to orange */\n  RedOrange = \"RED_ORANGE\",\n}\n\n/** Preconfigured background patterns that may be used to style discussions pinned within a repository. */\nexport enum PinnedDiscussionPattern {\n  /** An upward-facing chevron pattern */\n  ChevronUp = \"CHEVRON_UP\",\n  /** A hollow dot pattern */\n  Dot = \"DOT\",\n  /** A solid dot pattern */\n  DotFill = \"DOT_FILL\",\n  /** A heart pattern */\n  HeartFill = \"HEART_FILL\",\n  /** A plus sign pattern */\n  Plus = \"PLUS\",\n  /** A lightning bolt pattern */\n  Zap = \"ZAP\",\n}\n\n/** Represents a 'pinned' event on a given issue or pull request. */\nexport type PinnedEvent = Node & {\n  __typename?: \"PinnedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Identifies the issue associated with the event. */\n  issue: Issue;\n};\n\n/** A Pinned Issue is a issue pinned to a repository's index page. */\nexport type PinnedIssue = Node & {\n  __typename?: \"PinnedIssue\";\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** The issue that was pinned. */\n  issue: Issue;\n  /** The actor that pinned this issue. */\n  pinnedBy: Actor;\n  /** The repository that this issue was pinned to. */\n  repository: Repository;\n};\n\n/** The connection type for PinnedIssue. */\nexport type PinnedIssueConnection = {\n  __typename?: \"PinnedIssueConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PinnedIssueEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PinnedIssue>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PinnedIssueEdge = {\n  __typename?: \"PinnedIssueEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PinnedIssue>;\n};\n\n/** Audit log entry for a private_repository_forking.disable event. */\nexport type PrivateRepositoryForkingDisableAuditEntry = AuditEntry &\n  EnterpriseAuditEntryData &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"PrivateRepositoryForkingDisableAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The HTTP path for this enterprise. */\n    enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The slug of the enterprise. */\n    enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this enterprise. */\n    enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a private_repository_forking.enable event. */\nexport type PrivateRepositoryForkingEnableAuditEntry = AuditEntry &\n  EnterpriseAuditEntryData &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"PrivateRepositoryForkingEnableAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The HTTP path for this enterprise. */\n    enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The slug of the enterprise. */\n    enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this enterprise. */\n    enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own. */\nexport type ProfileItemShowcase = {\n  __typename?: \"ProfileItemShowcase\";\n  /** Whether or not the owner has pinned any repositories or gists. */\n  hasPinnedItems: Scalars[\"Boolean\"];\n  /** The repositories and gists in the showcase. If the profile owner has any pinned items, those will be returned. Otherwise, the profile owner's popular repositories will be returned. */\n  items: PinnableItemConnection;\n};\n\n/** A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own. */\nexport type ProfileItemShowcaseItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwner = {\n  /** Determine if this repository owner has any items that can be pinned to their profile. */\n  anyPinnableItems: Scalars[\"Boolean\"];\n  /** The public profile email. */\n  email?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity. */\n  itemShowcase: ProfileItemShowcase;\n  /** The public profile location. */\n  location?: Maybe<Scalars[\"String\"]>;\n  /** The username used to login. */\n  login: Scalars[\"String\"];\n  /** The public profile name. */\n  name?: Maybe<Scalars[\"String\"]>;\n  /** A list of repositories and gists this profile owner can pin to their profile. */\n  pinnableItems: PinnableItemConnection;\n  /** A list of repositories and gists this profile owner has pinned to their profile */\n  pinnedItems: PinnableItemConnection;\n  /** Returns how many more items this profile owner can pin to their profile. */\n  pinnedItemsRemaining: Scalars[\"Int\"];\n  /** Can the viewer pin repositories and gists to the profile? */\n  viewerCanChangePinnedItems: Scalars[\"Boolean\"];\n  /** The public profile website URL. */\n  websiteUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerAnyPinnableItemsArgs = {\n  type?: InputMaybe<PinnableItemType>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerPinnableItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerPinnedItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type Project = Closable &\n  Node &\n  Updatable & {\n    __typename?: \"Project\";\n    /** The project's description body. */\n    body?: Maybe<Scalars[\"String\"]>;\n    /** The projects description body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** `true` if the object is closed (definition of closed may depend on type) */\n    closed: Scalars[\"Boolean\"];\n    /** Identifies the date and time when the object was closed. */\n    closedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** List of columns in the project */\n    columns: ProjectColumnConnection;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The actor who originally created the project. */\n    creator?: Maybe<Actor>;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    id: Scalars[\"ID\"];\n    /** The project's name. */\n    name: Scalars[\"String\"];\n    /** The project's number. */\n    number: Scalars[\"Int\"];\n    /** The project's owner. Currently limited to repositories, organizations, and users. */\n    owner: ProjectOwner;\n    /** List of pending cards in this project */\n    pendingCards: ProjectCardConnection;\n    /** Project progress details. */\n    progress: ProjectProgress;\n    /** The HTTP path for this project */\n    resourcePath: Scalars[\"URI\"];\n    /** Whether the project is open or closed. */\n    state: ProjectState;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this project */\n    url: Scalars[\"URI\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n  };\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type ProjectColumnsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type ProjectPendingCardsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  archivedStates?: InputMaybe<Array<InputMaybe<ProjectCardArchivedState>>>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A card in a project. */\nexport type ProjectCard = Node & {\n  __typename?: \"ProjectCard\";\n  /**\n   * The project column this card is associated under. A card may only belong to one\n   * project column at a time. The column field will be null if the card is created\n   * in a pending state and has yet to be associated with a column. Once cards are\n   * associated with a column, they will not become pending in the future.\n   *\n   */\n  column?: Maybe<ProjectColumn>;\n  /** The card content item */\n  content?: Maybe<ProjectCardItem>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The actor who created this card */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** Whether the card is archived */\n  isArchived: Scalars[\"Boolean\"];\n  /** The card note */\n  note?: Maybe<Scalars[\"String\"]>;\n  /** The project that contains this card. */\n  project: Project;\n  /** The HTTP path for this card */\n  resourcePath: Scalars[\"URI\"];\n  /** The state of ProjectCard */\n  state?: Maybe<ProjectCardState>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The HTTP URL for this card */\n  url: Scalars[\"URI\"];\n};\n\n/** The possible archived states of a project card. */\nexport enum ProjectCardArchivedState {\n  /** A project card that is archived */\n  Archived = \"ARCHIVED\",\n  /** A project card that is not archived */\n  NotArchived = \"NOT_ARCHIVED\",\n}\n\n/** The connection type for ProjectCard. */\nexport type ProjectCardConnection = {\n  __typename?: \"ProjectCardConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectCardEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectCard>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectCardEdge = {\n  __typename?: \"ProjectCardEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectCard>;\n};\n\n/** Types that can be inside Project Cards. */\nexport type ProjectCardItem = Issue | PullRequest;\n\n/** Various content states of a ProjectCard */\nexport enum ProjectCardState {\n  /** The card has content only. */\n  ContentOnly = \"CONTENT_ONLY\",\n  /** The card has a note only. */\n  NoteOnly = \"NOTE_ONLY\",\n  /** The card is redacted. */\n  Redacted = \"REDACTED\",\n}\n\n/** A column inside a project. */\nexport type ProjectColumn = Node & {\n  __typename?: \"ProjectColumn\";\n  /** List of cards in the column */\n  cards: ProjectCardConnection;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** The project column's name. */\n  name: Scalars[\"String\"];\n  /** The project that contains this column. */\n  project: Project;\n  /** The semantic purpose of the column */\n  purpose?: Maybe<ProjectColumnPurpose>;\n  /** The HTTP path for this project column */\n  resourcePath: Scalars[\"URI\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The HTTP URL for this project column */\n  url: Scalars[\"URI\"];\n};\n\n/** A column inside a project. */\nexport type ProjectColumnCardsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  archivedStates?: InputMaybe<Array<InputMaybe<ProjectCardArchivedState>>>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for ProjectColumn. */\nexport type ProjectColumnConnection = {\n  __typename?: \"ProjectColumnConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectColumnEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectColumn>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectColumnEdge = {\n  __typename?: \"ProjectColumnEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectColumn>;\n};\n\n/** The semantic purpose of the column - todo, in progress, or done. */\nexport enum ProjectColumnPurpose {\n  /** The column contains cards which are complete */\n  Done = \"DONE\",\n  /** The column contains cards which are currently being worked on */\n  InProgress = \"IN_PROGRESS\",\n  /** The column contains cards still to be worked on */\n  Todo = \"TODO\",\n}\n\n/** A list of projects associated with the owner. */\nexport type ProjectConnection = {\n  __typename?: \"ProjectConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Project>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectEdge = {\n  __typename?: \"ProjectEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Project>;\n};\n\n/** Ways in which lists of projects can be ordered upon return. */\nexport type ProjectOrder = {\n  /** The direction in which to order projects by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order projects by. */\n  field: ProjectOrderField;\n};\n\n/** Properties by which project connections can be ordered. */\nexport enum ProjectOrderField {\n  /** Order projects by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order projects by name */\n  Name = \"NAME\",\n  /** Order projects by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** Represents an owner of a Project. */\nexport type ProjectOwner = {\n  id: Scalars[\"ID\"];\n  /** Find project by number. */\n  project?: Maybe<Project>;\n  /** A list of projects under the owner. */\n  projects: ProjectConnection;\n  /** The HTTP path listing owners projects */\n  projectsResourcePath: Scalars[\"URI\"];\n  /** The HTTP URL listing owners projects */\n  projectsUrl: Scalars[\"URI\"];\n  /** Can the current viewer create new projects on this owner. */\n  viewerCanCreateProjects: Scalars[\"Boolean\"];\n};\n\n/** Represents an owner of a Project. */\nexport type ProjectOwnerProjectArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** Represents an owner of a Project. */\nexport type ProjectOwnerProjectsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectOrder>;\n  search?: InputMaybe<Scalars[\"String\"]>;\n  states?: InputMaybe<Array<ProjectState>>;\n};\n\n/** Project progress stats. */\nexport type ProjectProgress = {\n  __typename?: \"ProjectProgress\";\n  /** The number of done cards. */\n  doneCount: Scalars[\"Int\"];\n  /** The percentage of done cards. */\n  donePercentage: Scalars[\"Float\"];\n  /** Whether progress tracking is enabled and cards with purpose exist for this project */\n  enabled: Scalars[\"Boolean\"];\n  /** The number of in-progress cards. */\n  inProgressCount: Scalars[\"Int\"];\n  /** The percentage of in-progress cards. */\n  inProgressPercentage: Scalars[\"Float\"];\n  /** The number of to do cards. */\n  todoCount: Scalars[\"Int\"];\n  /** The percentage of to do cards. */\n  todoPercentage: Scalars[\"Float\"];\n};\n\n/** State of the project; either 'open' or 'closed' */\nexport enum ProjectState {\n  /** The project is closed. */\n  Closed = \"CLOSED\",\n  /** The project is open. */\n  Open = \"OPEN\",\n}\n\n/** GitHub-provided templates for Projects */\nexport enum ProjectTemplate {\n  /** Create a board with v2 triggers to automatically move cards across To do, In progress and Done columns. */\n  AutomatedKanbanV2 = \"AUTOMATED_KANBAN_V2\",\n  /** Create a board with triggers to automatically move cards across columns with review automation. */\n  AutomatedReviewsKanban = \"AUTOMATED_REVIEWS_KANBAN\",\n  /** Create a board with columns for To do, In progress and Done. */\n  BasicKanban = \"BASIC_KANBAN\",\n  /** Create a board to triage and prioritize bugs with To do, priority, and Done columns. */\n  BugTriage = \"BUG_TRIAGE\",\n}\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2 = Closable &\n  Node &\n  Updatable & {\n    __typename?: \"ProjectV2\";\n    /** Returns true if the project is closed. */\n    closed: Scalars[\"Boolean\"];\n    /** Identifies the date and time when the object was closed. */\n    closedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The actor who originally created the project. */\n    creator?: Maybe<Actor>;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** A field of the project */\n    field?: Maybe<ProjectV2FieldConfiguration>;\n    /** List of fields and their constraints in the project */\n    fields: ProjectV2FieldConfigurationConnection;\n    id: Scalars[\"ID\"];\n    /** List of items in the project */\n    items: ProjectV2ItemConnection;\n    /** The project's number. */\n    number: Scalars[\"Int\"];\n    /** The project's owner. Currently limited to organizations and users. */\n    owner: ProjectV2Owner;\n    /** Returns true if the project is public. */\n    public: Scalars[\"Boolean\"];\n    /** The project's readme. */\n    readme?: Maybe<Scalars[\"String\"]>;\n    /** The repositories the project is linked to. */\n    repositories: RepositoryConnection;\n    /** The HTTP path for this project */\n    resourcePath: Scalars[\"URI\"];\n    /** The project's short description. */\n    shortDescription?: Maybe<Scalars[\"String\"]>;\n    /** The teams the project is linked to. */\n    teams: TeamConnection;\n    /** The project's name. */\n    title: Scalars[\"String\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this project */\n    url: Scalars[\"URI\"];\n    /** A view of the project */\n    view?: Maybe<ProjectV2View>;\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** List of views in the project */\n    views: ProjectV2ViewConnection;\n  };\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2FieldArgs = {\n  name: Scalars[\"String\"];\n};\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2FieldsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2ItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2ItemOrder>;\n};\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2RepositoriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n};\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2TeamsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<TeamOrder>;\n};\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2ViewArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2ViewsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2ViewOrder>;\n};\n\n/** The connection type for ProjectV2. */\nexport type ProjectV2Connection = {\n  __typename?: \"ProjectV2Connection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2Edge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2Edge = {\n  __typename?: \"ProjectV2Edge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2>;\n};\n\n/** A field inside a project. */\nexport type ProjectV2Field = Node &\n  ProjectV2FieldCommon & {\n    __typename?: \"ProjectV2Field\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The field's type. */\n    dataType: ProjectV2FieldType;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    id: Scalars[\"ID\"];\n    /** The project field's name. */\n    name: Scalars[\"String\"];\n    /** The project that contains this field. */\n    project: ProjectV2;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** Common fields across different project field types */\nexport type ProjectV2FieldCommon = {\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The field's type. */\n  dataType: ProjectV2FieldType;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** The project field's name. */\n  name: Scalars[\"String\"];\n  /** The project that contains this field. */\n  project: ProjectV2;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** Configurations for project fields. */\nexport type ProjectV2FieldConfiguration = ProjectV2Field | ProjectV2IterationField | ProjectV2SingleSelectField;\n\n/** The connection type for ProjectV2FieldConfiguration. */\nexport type ProjectV2FieldConfigurationConnection = {\n  __typename?: \"ProjectV2FieldConfigurationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2FieldConfigurationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2FieldConfiguration>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2FieldConfigurationEdge = {\n  __typename?: \"ProjectV2FieldConfigurationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2FieldConfiguration>;\n};\n\n/** The connection type for ProjectV2Field. */\nexport type ProjectV2FieldConnection = {\n  __typename?: \"ProjectV2FieldConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2FieldEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2Field>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2FieldEdge = {\n  __typename?: \"ProjectV2FieldEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2Field>;\n};\n\n/** Ordering options for project v2 field connections */\nexport type ProjectV2FieldOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 fields by. */\n  field: ProjectV2FieldOrderField;\n};\n\n/** Properties by which project v2 field connections can be ordered. */\nexport enum ProjectV2FieldOrderField {\n  /** Order project v2 fields by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order project v2 fields by name */\n  Name = \"NAME\",\n  /** Order project v2 fields by position */\n  Position = \"POSITION\",\n}\n\n/** The type of a project field. */\nexport enum ProjectV2FieldType {\n  /** Assignees */\n  Assignees = \"ASSIGNEES\",\n  /** Date */\n  Date = \"DATE\",\n  /** Iteration */\n  Iteration = \"ITERATION\",\n  /** Labels */\n  Labels = \"LABELS\",\n  /** Linked Pull Requests */\n  LinkedPullRequests = \"LINKED_PULL_REQUESTS\",\n  /** Milestone */\n  Milestone = \"MILESTONE\",\n  /** Number */\n  Number = \"NUMBER\",\n  /** Repository */\n  Repository = \"REPOSITORY\",\n  /** Reviewers */\n  Reviewers = \"REVIEWERS\",\n  /** Single Select */\n  SingleSelect = \"SINGLE_SELECT\",\n  /** Text */\n  Text = \"TEXT\",\n  /** Title */\n  Title = \"TITLE\",\n  /** Tracked by */\n  TrackedBy = \"TRACKED_BY\",\n  /** Tracks */\n  Tracks = \"TRACKS\",\n}\n\n/** The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time. */\nexport type ProjectV2FieldValue = {\n  /** The ISO 8601 date to set on the field. */\n  date?: InputMaybe<Scalars[\"Date\"]>;\n  /** The id of the iteration to set on the field. */\n  iterationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The number to set on the field. */\n  number?: InputMaybe<Scalars[\"Float\"]>;\n  /** The id of the single select option to set on the field. */\n  singleSelectOptionId?: InputMaybe<Scalars[\"String\"]>;\n  /** The text to set on the field. */\n  text?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Ways in which to filter lists of projects. */\nexport type ProjectV2Filters = {\n  /** List project v2 filtered by the state given. */\n  state?: InputMaybe<ProjectV2State>;\n};\n\n/** An item within a Project. */\nexport type ProjectV2Item = Node & {\n  __typename?: \"ProjectV2Item\";\n  /** The content of the referenced draft issue, issue, or pull request */\n  content?: Maybe<ProjectV2ItemContent>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** A specific field value given a field name */\n  fieldValueByName?: Maybe<ProjectV2ItemFieldValue>;\n  /** List of field values */\n  fieldValues: ProjectV2ItemFieldValueConnection;\n  id: Scalars[\"ID\"];\n  /** Whether the item is archived. */\n  isArchived: Scalars[\"Boolean\"];\n  /** The project that contains this item. */\n  project: ProjectV2;\n  /** The type of the item. */\n  type: ProjectV2ItemType;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** An item within a Project. */\nexport type ProjectV2ItemFieldValueByNameArgs = {\n  name: Scalars[\"String\"];\n};\n\n/** An item within a Project. */\nexport type ProjectV2ItemFieldValuesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2ItemFieldValueOrder>;\n};\n\n/** The connection type for ProjectV2Item. */\nexport type ProjectV2ItemConnection = {\n  __typename?: \"ProjectV2ItemConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2ItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2Item>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Types that can be inside Project Items. */\nexport type ProjectV2ItemContent = DraftIssue | Issue | PullRequest;\n\n/** An edge in a connection. */\nexport type ProjectV2ItemEdge = {\n  __typename?: \"ProjectV2ItemEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2Item>;\n};\n\n/** The value of a date field in a Project item. */\nexport type ProjectV2ItemFieldDateValue = Node &\n  ProjectV2ItemFieldValueCommon & {\n    __typename?: \"ProjectV2ItemFieldDateValue\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The actor who created the item. */\n    creator?: Maybe<Actor>;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** Date value for the field */\n    date?: Maybe<Scalars[\"Date\"]>;\n    /** The project field that contains this value. */\n    field: ProjectV2FieldConfiguration;\n    id: Scalars[\"ID\"];\n    /** The project item that contains this value. */\n    item: ProjectV2Item;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** The value of an iteration field in a Project item. */\nexport type ProjectV2ItemFieldIterationValue = Node &\n  ProjectV2ItemFieldValueCommon & {\n    __typename?: \"ProjectV2ItemFieldIterationValue\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The actor who created the item. */\n    creator?: Maybe<Actor>;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The duration of the iteration in days. */\n    duration: Scalars[\"Int\"];\n    /** The project field that contains this value. */\n    field: ProjectV2FieldConfiguration;\n    id: Scalars[\"ID\"];\n    /** The project item that contains this value. */\n    item: ProjectV2Item;\n    /** The ID of the iteration. */\n    iterationId: Scalars[\"String\"];\n    /** The start date of the iteration. */\n    startDate: Scalars[\"Date\"];\n    /** The title of the iteration. */\n    title: Scalars[\"String\"];\n    /** The title of the iteration, with HTML. */\n    titleHTML: Scalars[\"String\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** The value of the labels field in a Project item. */\nexport type ProjectV2ItemFieldLabelValue = {\n  __typename?: \"ProjectV2ItemFieldLabelValue\";\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** Labels value of a field */\n  labels?: Maybe<LabelConnection>;\n};\n\n/** The value of the labels field in a Project item. */\nexport type ProjectV2ItemFieldLabelValueLabelsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The value of a milestone field in a Project item. */\nexport type ProjectV2ItemFieldMilestoneValue = {\n  __typename?: \"ProjectV2ItemFieldMilestoneValue\";\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** Milestone value of a field */\n  milestone?: Maybe<Milestone>;\n};\n\n/** The value of a number field in a Project item. */\nexport type ProjectV2ItemFieldNumberValue = Node &\n  ProjectV2ItemFieldValueCommon & {\n    __typename?: \"ProjectV2ItemFieldNumberValue\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The actor who created the item. */\n    creator?: Maybe<Actor>;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The project field that contains this value. */\n    field: ProjectV2FieldConfiguration;\n    id: Scalars[\"ID\"];\n    /** The project item that contains this value. */\n    item: ProjectV2Item;\n    /** Number as a float(8) */\n    number?: Maybe<Scalars[\"Float\"]>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** The value of a pull request field in a Project item. */\nexport type ProjectV2ItemFieldPullRequestValue = {\n  __typename?: \"ProjectV2ItemFieldPullRequestValue\";\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** The pull requests for this field */\n  pullRequests?: Maybe<PullRequestConnection>;\n};\n\n/** The value of a pull request field in a Project item. */\nexport type ProjectV2ItemFieldPullRequestValuePullRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<PullRequestOrder>;\n};\n\n/** The value of a repository field in a Project item. */\nexport type ProjectV2ItemFieldRepositoryValue = {\n  __typename?: \"ProjectV2ItemFieldRepositoryValue\";\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** The repository for this field. */\n  repository?: Maybe<Repository>;\n};\n\n/** The value of a reviewers field in a Project item. */\nexport type ProjectV2ItemFieldReviewerValue = {\n  __typename?: \"ProjectV2ItemFieldReviewerValue\";\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** The reviewers for this field. */\n  reviewers?: Maybe<RequestedReviewerConnection>;\n};\n\n/** The value of a reviewers field in a Project item. */\nexport type ProjectV2ItemFieldReviewerValueReviewersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The value of a single select field in a Project item. */\nexport type ProjectV2ItemFieldSingleSelectValue = Node &\n  ProjectV2ItemFieldValueCommon & {\n    __typename?: \"ProjectV2ItemFieldSingleSelectValue\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The actor who created the item. */\n    creator?: Maybe<Actor>;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The project field that contains this value. */\n    field: ProjectV2FieldConfiguration;\n    id: Scalars[\"ID\"];\n    /** The project item that contains this value. */\n    item: ProjectV2Item;\n    /** The name of the selected single select option. */\n    name?: Maybe<Scalars[\"String\"]>;\n    /** The html name of the selected single select option. */\n    nameHTML?: Maybe<Scalars[\"String\"]>;\n    /** The id of the selected single select option. */\n    optionId?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** The value of a text field in a Project item. */\nexport type ProjectV2ItemFieldTextValue = Node &\n  ProjectV2ItemFieldValueCommon & {\n    __typename?: \"ProjectV2ItemFieldTextValue\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The actor who created the item. */\n    creator?: Maybe<Actor>;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The project field that contains this value. */\n    field: ProjectV2FieldConfiguration;\n    id: Scalars[\"ID\"];\n    /** The project item that contains this value. */\n    item: ProjectV2Item;\n    /** Text value of a field */\n    text?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** The value of a user field in a Project item. */\nexport type ProjectV2ItemFieldUserValue = {\n  __typename?: \"ProjectV2ItemFieldUserValue\";\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** The users for this field */\n  users?: Maybe<UserConnection>;\n};\n\n/** The value of a user field in a Project item. */\nexport type ProjectV2ItemFieldUserValueUsersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Project field values */\nexport type ProjectV2ItemFieldValue =\n  | ProjectV2ItemFieldDateValue\n  | ProjectV2ItemFieldIterationValue\n  | ProjectV2ItemFieldLabelValue\n  | ProjectV2ItemFieldMilestoneValue\n  | ProjectV2ItemFieldNumberValue\n  | ProjectV2ItemFieldPullRequestValue\n  | ProjectV2ItemFieldRepositoryValue\n  | ProjectV2ItemFieldReviewerValue\n  | ProjectV2ItemFieldSingleSelectValue\n  | ProjectV2ItemFieldTextValue\n  | ProjectV2ItemFieldUserValue;\n\n/** Common fields across different project field value types */\nexport type ProjectV2ItemFieldValueCommon = {\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The project field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  id: Scalars[\"ID\"];\n  /** The project item that contains this value. */\n  item: ProjectV2Item;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** The connection type for ProjectV2ItemFieldValue. */\nexport type ProjectV2ItemFieldValueConnection = {\n  __typename?: \"ProjectV2ItemFieldValueConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2ItemFieldValueEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2ItemFieldValue>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2ItemFieldValueEdge = {\n  __typename?: \"ProjectV2ItemFieldValueEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2ItemFieldValue>;\n};\n\n/** Ordering options for project v2 item field value connections */\nexport type ProjectV2ItemFieldValueOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 item field values by. */\n  field: ProjectV2ItemFieldValueOrderField;\n};\n\n/** Properties by which project v2 item field value connections can be ordered. */\nexport enum ProjectV2ItemFieldValueOrderField {\n  /** Order project v2 item field values by the their position in the project */\n  Position = \"POSITION\",\n}\n\n/** Ordering options for project v2 item connections */\nexport type ProjectV2ItemOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 items by. */\n  field: ProjectV2ItemOrderField;\n};\n\n/** Properties by which project v2 item connections can be ordered. */\nexport enum ProjectV2ItemOrderField {\n  /** Order project v2 items by the their position in the project */\n  Position = \"POSITION\",\n}\n\n/** The type of a project item. */\nexport enum ProjectV2ItemType {\n  /** Draft Issue */\n  DraftIssue = \"DRAFT_ISSUE\",\n  /** Issue */\n  Issue = \"ISSUE\",\n  /** Pull Request */\n  PullRequest = \"PULL_REQUEST\",\n  /** Redacted Item */\n  Redacted = \"REDACTED\",\n}\n\n/** An iteration field inside a project. */\nexport type ProjectV2IterationField = Node &\n  ProjectV2FieldCommon & {\n    __typename?: \"ProjectV2IterationField\";\n    /** Iteration configuration settings */\n    configuration: ProjectV2IterationFieldConfiguration;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The field's type. */\n    dataType: ProjectV2FieldType;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    id: Scalars[\"ID\"];\n    /** The project field's name. */\n    name: Scalars[\"String\"];\n    /** The project that contains this field. */\n    project: ProjectV2;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** Iteration field configuration for a project. */\nexport type ProjectV2IterationFieldConfiguration = {\n  __typename?: \"ProjectV2IterationFieldConfiguration\";\n  /** The iteration's completed iterations */\n  completedIterations: Array<ProjectV2IterationFieldIteration>;\n  /** The iteration's duration in days */\n  duration: Scalars[\"Int\"];\n  /** The iteration's iterations */\n  iterations: Array<ProjectV2IterationFieldIteration>;\n  /** The iteration's start day of the week */\n  startDay: Scalars[\"Int\"];\n};\n\n/** Iteration field iteration settings for a project. */\nexport type ProjectV2IterationFieldIteration = {\n  __typename?: \"ProjectV2IterationFieldIteration\";\n  /** The iteration's duration in days */\n  duration: Scalars[\"Int\"];\n  /** The iteration's ID. */\n  id: Scalars[\"String\"];\n  /** The iteration's start date */\n  startDate: Scalars[\"Date\"];\n  /** The iteration's title. */\n  title: Scalars[\"String\"];\n  /** The iteration's html title. */\n  titleHTML: Scalars[\"String\"];\n};\n\n/** Ways in which lists of projects can be ordered upon return. */\nexport type ProjectV2Order = {\n  /** The direction in which to order projects by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order projects by. */\n  field: ProjectV2OrderField;\n};\n\n/** Properties by which projects can be ordered. */\nexport enum ProjectV2OrderField {\n  /** The project's date and time of creation */\n  CreatedAt = \"CREATED_AT\",\n  /** The project's number */\n  Number = \"NUMBER\",\n  /** The project's title */\n  Title = \"TITLE\",\n  /** The project's date and time of update */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** Represents an owner of a project (beta). */\nexport type ProjectV2Owner = {\n  id: Scalars[\"ID\"];\n  /** Find a project by number. */\n  projectV2?: Maybe<ProjectV2>;\n  /** A list of projects under the owner. */\n  projectsV2: ProjectV2Connection;\n};\n\n/** Represents an owner of a project (beta). */\nexport type ProjectV2OwnerProjectV2Args = {\n  number: Scalars[\"Int\"];\n};\n\n/** Represents an owner of a project (beta). */\nexport type ProjectV2OwnerProjectsV2Args = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Recent projects for the owner. */\nexport type ProjectV2Recent = {\n  /** Recent projects that this user has modified in the context of the owner. */\n  recentProjects: ProjectV2Connection;\n};\n\n/** Recent projects for the owner. */\nexport type ProjectV2RecentRecentProjectsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A single select field inside a project. */\nexport type ProjectV2SingleSelectField = Node &\n  ProjectV2FieldCommon & {\n    __typename?: \"ProjectV2SingleSelectField\";\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The field's type. */\n    dataType: ProjectV2FieldType;\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    id: Scalars[\"ID\"];\n    /** The project field's name. */\n    name: Scalars[\"String\"];\n    /** Options for the single select field */\n    options: Array<ProjectV2SingleSelectFieldOption>;\n    /** The project that contains this field. */\n    project: ProjectV2;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n  };\n\n/** Single select field option for a configuration for a project. */\nexport type ProjectV2SingleSelectFieldOption = {\n  __typename?: \"ProjectV2SingleSelectFieldOption\";\n  /** The option's ID. */\n  id: Scalars[\"String\"];\n  /** The option's name. */\n  name: Scalars[\"String\"];\n  /** The option's html name. */\n  nameHTML: Scalars[\"String\"];\n};\n\n/** Represents a sort by field and direction. */\nexport type ProjectV2SortBy = {\n  __typename?: \"ProjectV2SortBy\";\n  /** The direction of the sorting. Possible values are ASC and DESC. */\n  direction: OrderDirection;\n  /** The field by which items are sorted. */\n  field: ProjectV2Field;\n};\n\n/** The connection type for ProjectV2SortBy. */\nexport type ProjectV2SortByConnection = {\n  __typename?: \"ProjectV2SortByConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2SortByEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2SortBy>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2SortByEdge = {\n  __typename?: \"ProjectV2SortByEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2SortBy>;\n};\n\n/** Represents a sort by field and direction. */\nexport type ProjectV2SortByField = {\n  __typename?: \"ProjectV2SortByField\";\n  /** The direction of the sorting. Possible values are ASC and DESC. */\n  direction: OrderDirection;\n  /** The field by which items are sorted. */\n  field: ProjectV2FieldConfiguration;\n};\n\n/** The connection type for ProjectV2SortByField. */\nexport type ProjectV2SortByFieldConnection = {\n  __typename?: \"ProjectV2SortByFieldConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2SortByFieldEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2SortByField>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2SortByFieldEdge = {\n  __typename?: \"ProjectV2SortByFieldEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2SortByField>;\n};\n\n/** The possible states of a project v2. */\nexport enum ProjectV2State {\n  /** A project v2 that has been closed */\n  Closed = \"CLOSED\",\n  /** A project v2 that is still open */\n  Open = \"OPEN\",\n}\n\n/** A view within a ProjectV2. */\nexport type ProjectV2View = Node & {\n  __typename?: \"ProjectV2View\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The view's visible fields. */\n  fields?: Maybe<ProjectV2FieldConfigurationConnection>;\n  /** The project view's filter. */\n  filter?: Maybe<Scalars[\"String\"]>;\n  /**\n   * The view's group-by field.\n   * @deprecated The `ProjectV2View#order_by` API is deprecated in favour of the more capable `ProjectV2View#group_by_field` API. Check out the `ProjectV2View#group_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC.\n   */\n  groupBy?: Maybe<ProjectV2FieldConnection>;\n  /** The view's group-by field. */\n  groupByFields?: Maybe<ProjectV2FieldConfigurationConnection>;\n  id: Scalars[\"ID\"];\n  /** The project view's layout. */\n  layout: ProjectV2ViewLayout;\n  /** The project view's name. */\n  name: Scalars[\"String\"];\n  /** The project view's number. */\n  number: Scalars[\"Int\"];\n  /** The project that contains this view. */\n  project: ProjectV2;\n  /**\n   * The view's sort-by config.\n   * @deprecated The `ProjectV2View#sort_by` API is deprecated in favour of the more capable `ProjectV2View#sort_by_fields` API. Check out the `ProjectV2View#sort_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC.\n   */\n  sortBy?: Maybe<ProjectV2SortByConnection>;\n  /** The view's sort-by config. */\n  sortByFields?: Maybe<ProjectV2SortByFieldConnection>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /**\n   * The view's vertical-group-by field.\n   * @deprecated The `ProjectV2View#vertical_group_by` API is deprecated in favour of the more capable `ProjectV2View#vertical_group_by_fields` API. Check out the `ProjectV2View#vertical_group_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC.\n   */\n  verticalGroupBy?: Maybe<ProjectV2FieldConnection>;\n  /** The view's vertical-group-by field. */\n  verticalGroupByFields?: Maybe<ProjectV2FieldConfigurationConnection>;\n  /**\n   * The view's visible fields.\n   * @deprecated The `ProjectV2View#visibleFields` API is deprecated in favour of the more capable `ProjectV2View#fields` API. Check out the `ProjectV2View#fields` API as an example for the more capable alternative. Removal on 2023-01-01 UTC.\n   */\n  visibleFields?: Maybe<ProjectV2FieldConnection>;\n};\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewFieldsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewGroupByArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewGroupByFieldsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewSortByArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewSortByFieldsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewVerticalGroupByArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewVerticalGroupByFieldsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewVisibleFieldsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n/** The connection type for ProjectV2View. */\nexport type ProjectV2ViewConnection = {\n  __typename?: \"ProjectV2ViewConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2ViewEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2View>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2ViewEdge = {\n  __typename?: \"ProjectV2ViewEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2View>;\n};\n\n/** The layout of a project v2 view. */\nexport enum ProjectV2ViewLayout {\n  /** Board layout */\n  BoardLayout = \"BOARD_LAYOUT\",\n  /** Table layout */\n  TableLayout = \"TABLE_LAYOUT\",\n}\n\n/** Ordering options for project v2 view connections */\nexport type ProjectV2ViewOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 views by. */\n  field: ProjectV2ViewOrderField;\n};\n\n/** Properties by which project v2 view connections can be ordered. */\nexport enum ProjectV2ViewOrderField {\n  /** Order project v2 views by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order project v2 views by name */\n  Name = \"NAME\",\n  /** Order project v2 views by position */\n  Position = \"POSITION\",\n}\n\n/** A user's public key. */\nexport type PublicKey = Node & {\n  __typename?: \"PublicKey\";\n  /** The last time this authorization was used to perform an action. Values will be null for keys not owned by the user. */\n  accessedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Identifies the date and time when the key was created. Keys created before March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user. */\n  createdAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** The fingerprint for this PublicKey. */\n  fingerprint: Scalars[\"String\"];\n  id: Scalars[\"ID\"];\n  /** Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user. */\n  isReadOnly?: Maybe<Scalars[\"Boolean\"]>;\n  /** The public key string. */\n  key: Scalars[\"String\"];\n  /** Identifies the date and time when the key was updated. Keys created before March 5th, 2014 may have inaccurate values. Values will be null for keys not owned by the user. */\n  updatedAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** The connection type for PublicKey. */\nexport type PublicKeyConnection = {\n  __typename?: \"PublicKeyConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PublicKeyEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PublicKey>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PublicKeyEdge = {\n  __typename?: \"PublicKeyEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PublicKey>;\n};\n\n/** Autogenerated input type of PublishSponsorsTier */\nexport type PublishSponsorsTierInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the draft tier to publish. */\n  tierId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of PublishSponsorsTier */\nexport type PublishSponsorsTierPayload = {\n  __typename?: \"PublishSponsorsTierPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The tier that was published. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n};\n\n/** A repository pull request. */\nexport type PullRequest = Assignable &\n  Closable &\n  Comment &\n  Labelable &\n  Lockable &\n  Node &\n  ProjectV2Owner &\n  Reactable &\n  RepositoryNode &\n  Subscribable &\n  UniformResourceLocatable &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"PullRequest\";\n    /** Reason that the conversation was locked. */\n    activeLockReason?: Maybe<LockReason>;\n    /** The number of additions in this pull request. */\n    additions: Scalars[\"Int\"];\n    /** A list of Users assigned to this object. */\n    assignees: UserConnection;\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the subject of the comment. */\n    authorAssociation: CommentAuthorAssociation;\n    /** Returns the auto-merge request object if one exists for this pull request. */\n    autoMergeRequest?: Maybe<AutoMergeRequest>;\n    /** Identifies the base Ref associated with the pull request. */\n    baseRef?: Maybe<Ref>;\n    /** Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted. */\n    baseRefName: Scalars[\"String\"];\n    /** Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted. */\n    baseRefOid: Scalars[\"GitObjectID\"];\n    /** The repository associated with this pull request's base Ref. */\n    baseRepository?: Maybe<Repository>;\n    /** The body as Markdown. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** The number of changed files in this pull request. */\n    changedFiles: Scalars[\"Int\"];\n    /** The HTTP path for the checks of this pull request. */\n    checksResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for the checks of this pull request. */\n    checksUrl: Scalars[\"URI\"];\n    /** `true` if the pull request is closed */\n    closed: Scalars[\"Boolean\"];\n    /** Identifies the date and time when the object was closed. */\n    closedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** List of issues that were may be closed by this pull request */\n    closingIssuesReferences?: Maybe<IssueConnection>;\n    /** A list of comments associated with the pull request. */\n    comments: IssueCommentConnection;\n    /** A list of commits present in this pull request's head branch not present in the base branch. */\n    commits: PullRequestCommitConnection;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The number of deletions in this pull request. */\n    deletions: Scalars[\"Int\"];\n    /** The actor who edited this pull request's body. */\n    editor?: Maybe<Actor>;\n    /** Lists the files changed within this pull request. */\n    files?: Maybe<PullRequestChangedFileConnection>;\n    /** Identifies the head Ref associated with the pull request. */\n    headRef?: Maybe<Ref>;\n    /** Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted. */\n    headRefName: Scalars[\"String\"];\n    /** Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted. */\n    headRefOid: Scalars[\"GitObjectID\"];\n    /** The repository associated with this pull request's head Ref. */\n    headRepository?: Maybe<Repository>;\n    /** The owner of the repository associated with this pull request's head Ref. */\n    headRepositoryOwner?: Maybe<RepositoryOwner>;\n    /** The hovercard information for this issue */\n    hovercard: Hovercard;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** The head and base repositories are different. */\n    isCrossRepository: Scalars[\"Boolean\"];\n    /** Identifies if the pull request is a draft. */\n    isDraft: Scalars[\"Boolean\"];\n    /** Is this pull request read by the viewer */\n    isReadByViewer?: Maybe<Scalars[\"Boolean\"]>;\n    /** A list of labels associated with the object. */\n    labels?: Maybe<LabelConnection>;\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of latest reviews per user associated with the pull request. */\n    latestOpinionatedReviews?: Maybe<PullRequestReviewConnection>;\n    /** A list of latest reviews per user associated with the pull request that are not also pending review. */\n    latestReviews?: Maybe<PullRequestReviewConnection>;\n    /** `true` if the pull request is locked */\n    locked: Scalars[\"Boolean\"];\n    /** Indicates whether maintainers can modify the pull request. */\n    maintainerCanModify: Scalars[\"Boolean\"];\n    /** The commit that was created when this pull request was merged. */\n    mergeCommit?: Maybe<Commit>;\n    /** Whether or not the pull request can be merged based on the existence of merge conflicts. */\n    mergeable: MergeableState;\n    /** Whether or not the pull request was merged. */\n    merged: Scalars[\"Boolean\"];\n    /** The date and time that the pull request was merged. */\n    mergedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** The actor who merged the pull request. */\n    mergedBy?: Maybe<Actor>;\n    /** Identifies the milestone associated with the pull request. */\n    milestone?: Maybe<Milestone>;\n    /** Identifies the pull request number. */\n    number: Scalars[\"Int\"];\n    /** A list of Users that are participating in the Pull Request conversation. */\n    participants: UserConnection;\n    /** The permalink to the pull request. */\n    permalink: Scalars[\"URI\"];\n    /** The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the `mergeable` field for more details on the mergeability of the pull request. */\n    potentialMergeCommit?: Maybe<Commit>;\n    /** List of project cards associated with this pull request. */\n    projectCards: ProjectCardConnection;\n    /** List of project items associated with this pull request. */\n    projectItems: ProjectV2ItemConnection;\n    /** Find a project by number. */\n    projectV2?: Maybe<ProjectV2>;\n    /** A list of projects under the owner. */\n    projectsV2: ProjectV2Connection;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** The HTTP path for this pull request. */\n    resourcePath: Scalars[\"URI\"];\n    /** The HTTP path for reverting this pull request. */\n    revertResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for reverting this pull request. */\n    revertUrl: Scalars[\"URI\"];\n    /** The current status of this pull request with respect to code review. */\n    reviewDecision?: Maybe<PullRequestReviewDecision>;\n    /** A list of review requests associated with the pull request. */\n    reviewRequests?: Maybe<ReviewRequestConnection>;\n    /** The list of all review threads for this pull request. */\n    reviewThreads: PullRequestReviewThreadConnection;\n    /** A list of reviews associated with the pull request. */\n    reviews?: Maybe<PullRequestReviewConnection>;\n    /** Identifies the state of the pull request. */\n    state: PullRequestState;\n    /** A list of reviewer suggestions based on commit history and past review comments. */\n    suggestedReviewers: Array<Maybe<SuggestedReviewer>>;\n    /**\n     * A list of events, comments, commits, etc. associated with the pull request.\n     * @deprecated `timeline` will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC.\n     */\n    timeline: PullRequestTimelineConnection;\n    /** A list of events, comments, commits, etc. associated with the pull request. */\n    timelineItems: PullRequestTimelineItemsConnection;\n    /** Identifies the pull request title. */\n    title: Scalars[\"String\"];\n    /** Identifies the pull request title rendered to HTML. */\n    titleHTML: Scalars[\"HTML\"];\n    /** Returns a count of how many comments this pull request has received. */\n    totalCommentsCount?: Maybe<Scalars[\"Int\"]>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this pull request. */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Whether or not the viewer can apply suggestion. */\n    viewerCanApplySuggestion: Scalars[\"Boolean\"];\n    /** Check if the viewer can restore the deleted head ref. */\n    viewerCanDeleteHeadRef: Scalars[\"Boolean\"];\n    /** Whether or not the viewer can disable auto-merge */\n    viewerCanDisableAutoMerge: Scalars[\"Boolean\"];\n    /** Can the viewer edit files within this pull request. */\n    viewerCanEditFiles: Scalars[\"Boolean\"];\n    /** Whether or not the viewer can enable auto-merge */\n    viewerCanEnableAutoMerge: Scalars[\"Boolean\"];\n    /** Indicates whether the viewer can bypass branch protections and merge the pull request immediately */\n    viewerCanMergeAsAdmin: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the viewer is able to change their subscription status for the repository. */\n    viewerCanSubscribe: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n    /** The latest review given from the viewer. */\n    viewerLatestReview?: Maybe<PullRequestReview>;\n    /** The person who has requested the viewer for review on this pull request. */\n    viewerLatestReviewRequest?: Maybe<ReviewRequest>;\n    /** The merge body text for the viewer and method. */\n    viewerMergeBodyText: Scalars[\"String\"];\n    /** The merge headline text for the viewer and method. */\n    viewerMergeHeadlineText: Scalars[\"String\"];\n    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n    viewerSubscription?: Maybe<SubscriptionState>;\n  };\n\n/** A repository pull request. */\nexport type PullRequestAssigneesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestClosingIssuesReferencesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  userLinkedOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueCommentOrder>;\n};\n\n/** A repository pull request. */\nexport type PullRequestCommitsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestFilesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestHovercardArgs = {\n  includeNotificationContexts?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestLabelsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n/** A repository pull request. */\nexport type PullRequestLatestOpinionatedReviewsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  writersOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestLatestReviewsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestParticipantsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestProjectCardsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  archivedStates?: InputMaybe<Array<InputMaybe<ProjectCardArchivedState>>>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestProjectItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includeArchived?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestProjectV2Args = {\n  number: Scalars[\"Int\"];\n};\n\n/** A repository pull request. */\nexport type PullRequestProjectsV2Args = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** A repository pull request. */\nexport type PullRequestReviewRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestReviewThreadsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestReviewsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  author?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  states?: InputMaybe<Array<PullRequestReviewState>>;\n};\n\n/** A repository pull request. */\nexport type PullRequestTimelineArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestTimelineItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  itemTypes?: InputMaybe<Array<PullRequestTimelineItemsItemType>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  skip?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestViewerMergeBodyTextArgs = {\n  mergeType?: InputMaybe<PullRequestMergeMethod>;\n};\n\n/** A repository pull request. */\nexport type PullRequestViewerMergeHeadlineTextArgs = {\n  mergeType?: InputMaybe<PullRequestMergeMethod>;\n};\n\n/** A file changed in a pull request. */\nexport type PullRequestChangedFile = {\n  __typename?: \"PullRequestChangedFile\";\n  /** The number of additions to the file. */\n  additions: Scalars[\"Int\"];\n  /** How the file was changed in this PullRequest */\n  changeType: PatchStatus;\n  /** The number of deletions to the file. */\n  deletions: Scalars[\"Int\"];\n  /** The path of the file. */\n  path: Scalars[\"String\"];\n  /** The state of the file for the viewer. */\n  viewerViewedState: FileViewedState;\n};\n\n/** The connection type for PullRequestChangedFile. */\nexport type PullRequestChangedFileConnection = {\n  __typename?: \"PullRequestChangedFileConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestChangedFileEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestChangedFile>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestChangedFileEdge = {\n  __typename?: \"PullRequestChangedFileEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestChangedFile>;\n};\n\n/** Represents a Git commit part of a pull request. */\nexport type PullRequestCommit = Node &\n  UniformResourceLocatable & {\n    __typename?: \"PullRequestCommit\";\n    /** The Git commit object */\n    commit: Commit;\n    id: Scalars[\"ID\"];\n    /** The pull request this commit belongs to */\n    pullRequest: PullRequest;\n    /** The HTTP path for this pull request commit */\n    resourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this pull request commit */\n    url: Scalars[\"URI\"];\n  };\n\n/** Represents a commit comment thread part of a pull request. */\nexport type PullRequestCommitCommentThread = Node &\n  RepositoryNode & {\n    __typename?: \"PullRequestCommitCommentThread\";\n    /** The comments that exist in this thread. */\n    comments: CommitCommentConnection;\n    /** The commit the comments were made on. */\n    commit: Commit;\n    id: Scalars[\"ID\"];\n    /** The file the comments were made on. */\n    path?: Maybe<Scalars[\"String\"]>;\n    /** The position in the diff for the commit that the comment was made on. */\n    position?: Maybe<Scalars[\"Int\"]>;\n    /** The pull request this commit comment thread belongs to */\n    pullRequest: PullRequest;\n    /** The repository associated with this node. */\n    repository: Repository;\n  };\n\n/** Represents a commit comment thread part of a pull request. */\nexport type PullRequestCommitCommentThreadCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for PullRequestCommit. */\nexport type PullRequestCommitConnection = {\n  __typename?: \"PullRequestCommitConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestCommitEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestCommit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestCommitEdge = {\n  __typename?: \"PullRequestCommitEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestCommit>;\n};\n\n/** The connection type for PullRequest. */\nexport type PullRequestConnection = {\n  __typename?: \"PullRequestConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequest>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** This aggregates pull requests opened by a user within one repository. */\nexport type PullRequestContributionsByRepository = {\n  __typename?: \"PullRequestContributionsByRepository\";\n  /** The pull request contributions. */\n  contributions: CreatedPullRequestContributionConnection;\n  /** The repository in which the pull requests were opened. */\n  repository: Repository;\n};\n\n/** This aggregates pull requests opened by a user within one repository. */\nexport type PullRequestContributionsByRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type PullRequestEdge = {\n  __typename?: \"PullRequestEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequest>;\n};\n\n/** Represents available types of methods to use when merging a pull request. */\nexport enum PullRequestMergeMethod {\n  /** Add all commits from the head branch to the base branch with a merge commit. */\n  Merge = \"MERGE\",\n  /** Add all commits from the head branch onto the base branch individually. */\n  Rebase = \"REBASE\",\n  /** Combine all commits from the head branch into a single commit in the base branch. */\n  Squash = \"SQUASH\",\n}\n\n/** Ways in which lists of issues can be ordered upon return. */\nexport type PullRequestOrder = {\n  /** The direction in which to order pull requests by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order pull requests by. */\n  field: PullRequestOrderField;\n};\n\n/** Properties by which pull_requests connections can be ordered. */\nexport enum PullRequestOrderField {\n  /** Order pull_requests by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order pull_requests by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** A review object for a given pull request. */\nexport type PullRequestReview = Comment &\n  Deletable &\n  Node &\n  Reactable &\n  RepositoryNode &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"PullRequestReview\";\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the subject of the comment. */\n    authorAssociation: CommentAuthorAssociation;\n    /** Indicates whether the author of this review has push access to the repository. */\n    authorCanPushToRepository: Scalars[\"Boolean\"];\n    /** Identifies the pull request review body. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body of this review rendered as plain text. */\n    bodyText: Scalars[\"String\"];\n    /** A list of review comments for the current pull request review. */\n    comments: PullRequestReviewCommentConnection;\n    /** Identifies the commit associated with this pull request review. */\n    commit?: Maybe<Commit>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of teams that this review was made on behalf of. */\n    onBehalfOf: TeamConnection;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Identifies the pull request associated with this pull request review. */\n    pullRequest: PullRequest;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** The HTTP path permalink for this PullRequestReview. */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the current state of the pull request review. */\n    state: PullRequestReviewState;\n    /** Identifies when the Pull Request Review was submitted */\n    submittedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL permalink for this PullRequestReview. */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n  };\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewOnBehalfOfArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewComment = Comment &\n  Deletable &\n  Minimizable &\n  Node &\n  Reactable &\n  RepositoryNode &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"PullRequestReviewComment\";\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the subject of the comment. */\n    authorAssociation: CommentAuthorAssociation;\n    /** The comment body of this review comment. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The comment body of this review comment rendered as plain text. */\n    bodyText: Scalars[\"String\"];\n    /** Identifies the commit associated with the comment. */\n    commit?: Maybe<Commit>;\n    /** Identifies when the comment was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The diff hunk to which the comment applies. */\n    diffHunk: Scalars[\"String\"];\n    /** Identifies when the comment was created in a draft state. */\n    draftedAt: Scalars[\"DateTime\"];\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** Returns whether or not a comment has been minimized. */\n    isMinimized: Scalars[\"Boolean\"];\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation. */\n    minimizedReason?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the original commit associated with the comment. */\n    originalCommit?: Maybe<Commit>;\n    /** The original line index in the diff to which the comment applies. */\n    originalPosition: Scalars[\"Int\"];\n    /** Identifies when the comment body is outdated */\n    outdated: Scalars[\"Boolean\"];\n    /** The path to which the comment applies. */\n    path: Scalars[\"String\"];\n    /** The line index in the diff to which the comment applies. */\n    position?: Maybe<Scalars[\"Int\"]>;\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** The pull request associated with this review comment. */\n    pullRequest: PullRequest;\n    /** The pull request review associated with this review comment. */\n    pullRequestReview?: Maybe<PullRequestReview>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The comment this is a reply to. */\n    replyTo?: Maybe<PullRequestReviewComment>;\n    /** The repository associated with this node. */\n    repository: Repository;\n    /** The HTTP path permalink for this review comment. */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the state of the comment. */\n    state: PullRequestReviewCommentState;\n    /** Identifies when the comment was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL permalink for this review comment. */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Check if the current viewer can minimize this object. */\n    viewerCanMinimize: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n  };\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewCommentReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for PullRequestReviewComment. */\nexport type PullRequestReviewCommentConnection = {\n  __typename?: \"PullRequestReviewCommentConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestReviewCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestReviewComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestReviewCommentEdge = {\n  __typename?: \"PullRequestReviewCommentEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestReviewComment>;\n};\n\n/** The possible states of a pull request review comment. */\nexport enum PullRequestReviewCommentState {\n  /** A comment that is part of a pending review */\n  Pending = \"PENDING\",\n  /** A comment that is part of a submitted review */\n  Submitted = \"SUBMITTED\",\n}\n\n/** The connection type for PullRequestReview. */\nexport type PullRequestReviewConnection = {\n  __typename?: \"PullRequestReviewConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestReviewEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestReview>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** This aggregates pull request reviews made by a user within one repository. */\nexport type PullRequestReviewContributionsByRepository = {\n  __typename?: \"PullRequestReviewContributionsByRepository\";\n  /** The pull request review contributions. */\n  contributions: CreatedPullRequestReviewContributionConnection;\n  /** The repository in which the pull request reviews were made. */\n  repository: Repository;\n};\n\n/** This aggregates pull request reviews made by a user within one repository. */\nexport type PullRequestReviewContributionsByRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** The review status of a pull request. */\nexport enum PullRequestReviewDecision {\n  /** The pull request has received an approving review. */\n  Approved = \"APPROVED\",\n  /** Changes have been requested on the pull request. */\n  ChangesRequested = \"CHANGES_REQUESTED\",\n  /** A review is required before the pull request can be merged. */\n  ReviewRequired = \"REVIEW_REQUIRED\",\n}\n\n/** An edge in a connection. */\nexport type PullRequestReviewEdge = {\n  __typename?: \"PullRequestReviewEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestReview>;\n};\n\n/** The possible events to perform on a pull request review. */\nexport enum PullRequestReviewEvent {\n  /** Submit feedback and approve merging these changes. */\n  Approve = \"APPROVE\",\n  /** Submit general feedback without explicit approval. */\n  Comment = \"COMMENT\",\n  /** Dismiss review so it now longer effects merging. */\n  Dismiss = \"DISMISS\",\n  /** Submit feedback that must be addressed before merging. */\n  RequestChanges = \"REQUEST_CHANGES\",\n}\n\n/** The possible states of a pull request review. */\nexport enum PullRequestReviewState {\n  /** A review allowing the pull request to merge. */\n  Approved = \"APPROVED\",\n  /** A review blocking the pull request from merging. */\n  ChangesRequested = \"CHANGES_REQUESTED\",\n  /** An informational review. */\n  Commented = \"COMMENTED\",\n  /** A review that has been dismissed. */\n  Dismissed = \"DISMISSED\",\n  /** A review that has not yet been submitted. */\n  Pending = \"PENDING\",\n}\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestReviewThread = Node & {\n  __typename?: \"PullRequestReviewThread\";\n  /** A list of pull request comments associated with the thread. */\n  comments: PullRequestReviewCommentConnection;\n  /** The side of the diff on which this thread was placed. */\n  diffSide: DiffSide;\n  id: Scalars[\"ID\"];\n  /** Whether or not the thread has been collapsed (resolved) */\n  isCollapsed: Scalars[\"Boolean\"];\n  /** Indicates whether this thread was outdated by newer changes. */\n  isOutdated: Scalars[\"Boolean\"];\n  /** Whether this thread has been resolved */\n  isResolved: Scalars[\"Boolean\"];\n  /** The line in the file to which this thread refers */\n  line?: Maybe<Scalars[\"Int\"]>;\n  /** The original line in the file to which this thread refers. */\n  originalLine?: Maybe<Scalars[\"Int\"]>;\n  /** The original start line in the file to which this thread refers (multi-line only). */\n  originalStartLine?: Maybe<Scalars[\"Int\"]>;\n  /** Identifies the file path of this thread. */\n  path: Scalars[\"String\"];\n  /** Identifies the pull request associated with this thread. */\n  pullRequest: PullRequest;\n  /** Identifies the repository associated with this thread. */\n  repository: Repository;\n  /** The user who resolved this thread */\n  resolvedBy?: Maybe<User>;\n  /** The side of the diff that the first line of the thread starts on (multi-line only) */\n  startDiffSide?: Maybe<DiffSide>;\n  /** The start line in the file to which this thread refers (multi-line only) */\n  startLine?: Maybe<Scalars[\"Int\"]>;\n  /** Indicates whether the current viewer can reply to this thread. */\n  viewerCanReply: Scalars[\"Boolean\"];\n  /** Whether or not the viewer can resolve this thread */\n  viewerCanResolve: Scalars[\"Boolean\"];\n  /** Whether or not the viewer can unresolve this thread */\n  viewerCanUnresolve: Scalars[\"Boolean\"];\n};\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestReviewThreadCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  skip?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Review comment threads for a pull request review. */\nexport type PullRequestReviewThreadConnection = {\n  __typename?: \"PullRequestReviewThreadConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestReviewThreadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestReviewThread>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestReviewThreadEdge = {\n  __typename?: \"PullRequestReviewThreadEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestReviewThread>;\n};\n\n/** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */\nexport type PullRequestRevisionMarker = {\n  __typename?: \"PullRequestRevisionMarker\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The last commit the viewer has seen. */\n  lastSeenCommit: Commit;\n  /** The pull request to which the marker belongs. */\n  pullRequest: PullRequest;\n};\n\n/** The possible states of a pull request. */\nexport enum PullRequestState {\n  /** A pull request that has been closed without being merged. */\n  Closed = \"CLOSED\",\n  /** A pull request that has been closed by being merged. */\n  Merged = \"MERGED\",\n  /** A pull request that is still open. */\n  Open = \"OPEN\",\n}\n\n/** A repository pull request template. */\nexport type PullRequestTemplate = {\n  __typename?: \"PullRequestTemplate\";\n  /** The body of the template */\n  body?: Maybe<Scalars[\"String\"]>;\n  /** The filename of the template */\n  filename?: Maybe<Scalars[\"String\"]>;\n  /** The repository the template belongs to */\n  repository: Repository;\n};\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestThread = Node & {\n  __typename?: \"PullRequestThread\";\n  /** A list of pull request comments associated with the thread. */\n  comments: PullRequestReviewCommentConnection;\n  /** The side of the diff on which this thread was placed. */\n  diffSide: DiffSide;\n  id: Scalars[\"ID\"];\n  /** Whether or not the thread has been collapsed (resolved) */\n  isCollapsed: Scalars[\"Boolean\"];\n  /** Indicates whether this thread was outdated by newer changes. */\n  isOutdated: Scalars[\"Boolean\"];\n  /** Whether this thread has been resolved */\n  isResolved: Scalars[\"Boolean\"];\n  /** The line in the file to which this thread refers */\n  line?: Maybe<Scalars[\"Int\"]>;\n  /** Identifies the pull request associated with this thread. */\n  pullRequest: PullRequest;\n  /** Identifies the repository associated with this thread. */\n  repository: Repository;\n  /** The user who resolved this thread */\n  resolvedBy?: Maybe<User>;\n  /** The side of the diff that the first line of the thread starts on (multi-line only) */\n  startDiffSide?: Maybe<DiffSide>;\n  /** The line of the first file diff in the thread. */\n  startLine?: Maybe<Scalars[\"Int\"]>;\n  /** Indicates whether the current viewer can reply to this thread. */\n  viewerCanReply: Scalars[\"Boolean\"];\n  /** Whether or not the viewer can resolve this thread */\n  viewerCanResolve: Scalars[\"Boolean\"];\n  /** Whether or not the viewer can unresolve this thread */\n  viewerCanUnresolve: Scalars[\"Boolean\"];\n};\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestThreadCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  skip?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for PullRequestTimelineItem. */\nexport type PullRequestTimelineConnection = {\n  __typename?: \"PullRequestTimelineConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestTimelineItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestTimelineItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An item in a pull request timeline */\nexport type PullRequestTimelineItem =\n  | AssignedEvent\n  | BaseRefDeletedEvent\n  | BaseRefForcePushedEvent\n  | ClosedEvent\n  | Commit\n  | CommitCommentThread\n  | CrossReferencedEvent\n  | DemilestonedEvent\n  | DeployedEvent\n  | DeploymentEnvironmentChangedEvent\n  | HeadRefDeletedEvent\n  | HeadRefForcePushedEvent\n  | HeadRefRestoredEvent\n  | IssueComment\n  | LabeledEvent\n  | LockedEvent\n  | MergedEvent\n  | MilestonedEvent\n  | PullRequestReview\n  | PullRequestReviewComment\n  | PullRequestReviewThread\n  | ReferencedEvent\n  | RenamedTitleEvent\n  | ReopenedEvent\n  | ReviewDismissedEvent\n  | ReviewRequestRemovedEvent\n  | ReviewRequestedEvent\n  | SubscribedEvent\n  | UnassignedEvent\n  | UnlabeledEvent\n  | UnlockedEvent\n  | UnsubscribedEvent\n  | UserBlockedEvent;\n\n/** An edge in a connection. */\nexport type PullRequestTimelineItemEdge = {\n  __typename?: \"PullRequestTimelineItemEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestTimelineItem>;\n};\n\n/** An item in a pull request timeline */\nexport type PullRequestTimelineItems =\n  | AddedToProjectEvent\n  | AssignedEvent\n  | AutoMergeDisabledEvent\n  | AutoMergeEnabledEvent\n  | AutoRebaseEnabledEvent\n  | AutoSquashEnabledEvent\n  | AutomaticBaseChangeFailedEvent\n  | AutomaticBaseChangeSucceededEvent\n  | BaseRefChangedEvent\n  | BaseRefDeletedEvent\n  | BaseRefForcePushedEvent\n  | ClosedEvent\n  | CommentDeletedEvent\n  | ConnectedEvent\n  | ConvertToDraftEvent\n  | ConvertedNoteToIssueEvent\n  | ConvertedToDiscussionEvent\n  | CrossReferencedEvent\n  | DemilestonedEvent\n  | DeployedEvent\n  | DeploymentEnvironmentChangedEvent\n  | DisconnectedEvent\n  | HeadRefDeletedEvent\n  | HeadRefForcePushedEvent\n  | HeadRefRestoredEvent\n  | IssueComment\n  | LabeledEvent\n  | LockedEvent\n  | MarkedAsDuplicateEvent\n  | MentionedEvent\n  | MergedEvent\n  | MilestonedEvent\n  | MovedColumnsInProjectEvent\n  | PinnedEvent\n  | PullRequestCommit\n  | PullRequestCommitCommentThread\n  | PullRequestReview\n  | PullRequestReviewThread\n  | PullRequestRevisionMarker\n  | ReadyForReviewEvent\n  | ReferencedEvent\n  | RemovedFromProjectEvent\n  | RenamedTitleEvent\n  | ReopenedEvent\n  | ReviewDismissedEvent\n  | ReviewRequestRemovedEvent\n  | ReviewRequestedEvent\n  | SubscribedEvent\n  | TransferredEvent\n  | UnassignedEvent\n  | UnlabeledEvent\n  | UnlockedEvent\n  | UnmarkedAsDuplicateEvent\n  | UnpinnedEvent\n  | UnsubscribedEvent\n  | UserBlockedEvent;\n\n/** The connection type for PullRequestTimelineItems. */\nexport type PullRequestTimelineItemsConnection = {\n  __typename?: \"PullRequestTimelineItemsConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestTimelineItemsEdge>>>;\n  /** Identifies the count of items after applying `before` and `after` filters. */\n  filteredCount: Scalars[\"Int\"];\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestTimelineItems>>>;\n  /** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */\n  pageCount: Scalars[\"Int\"];\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n  /** Identifies the date and time when the timeline was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestTimelineItemsEdge = {\n  __typename?: \"PullRequestTimelineItemsEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestTimelineItems>;\n};\n\n/** The possible item types found in a timeline. */\nexport enum PullRequestTimelineItemsItemType {\n  /** Represents an 'added_to_merge_queue' event on a given pull request. */\n  AddedToMergeQueueEvent = \"ADDED_TO_MERGE_QUEUE_EVENT\",\n  /** Represents a 'added_to_project' event on a given issue or pull request. */\n  AddedToProjectEvent = \"ADDED_TO_PROJECT_EVENT\",\n  /** Represents an 'assigned' event on any assignable object. */\n  AssignedEvent = \"ASSIGNED_EVENT\",\n  /** Represents a 'automatic_base_change_failed' event on a given pull request. */\n  AutomaticBaseChangeFailedEvent = \"AUTOMATIC_BASE_CHANGE_FAILED_EVENT\",\n  /** Represents a 'automatic_base_change_succeeded' event on a given pull request. */\n  AutomaticBaseChangeSucceededEvent = \"AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT\",\n  /** Represents a 'auto_merge_disabled' event on a given pull request. */\n  AutoMergeDisabledEvent = \"AUTO_MERGE_DISABLED_EVENT\",\n  /** Represents a 'auto_merge_enabled' event on a given pull request. */\n  AutoMergeEnabledEvent = \"AUTO_MERGE_ENABLED_EVENT\",\n  /** Represents a 'auto_rebase_enabled' event on a given pull request. */\n  AutoRebaseEnabledEvent = \"AUTO_REBASE_ENABLED_EVENT\",\n  /** Represents a 'auto_squash_enabled' event on a given pull request. */\n  AutoSquashEnabledEvent = \"AUTO_SQUASH_ENABLED_EVENT\",\n  /** Represents a 'base_ref_changed' event on a given issue or pull request. */\n  BaseRefChangedEvent = \"BASE_REF_CHANGED_EVENT\",\n  /** Represents a 'base_ref_deleted' event on a given pull request. */\n  BaseRefDeletedEvent = \"BASE_REF_DELETED_EVENT\",\n  /** Represents a 'base_ref_force_pushed' event on a given pull request. */\n  BaseRefForcePushedEvent = \"BASE_REF_FORCE_PUSHED_EVENT\",\n  /** Represents a 'closed' event on any `Closable`. */\n  ClosedEvent = \"CLOSED_EVENT\",\n  /** Represents a 'comment_deleted' event on a given issue or pull request. */\n  CommentDeletedEvent = \"COMMENT_DELETED_EVENT\",\n  /** Represents a 'connected' event on a given issue or pull request. */\n  ConnectedEvent = \"CONNECTED_EVENT\",\n  /** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\n  ConvertedNoteToIssueEvent = \"CONVERTED_NOTE_TO_ISSUE_EVENT\",\n  /** Represents a 'converted_to_discussion' event on a given issue. */\n  ConvertedToDiscussionEvent = \"CONVERTED_TO_DISCUSSION_EVENT\",\n  /** Represents a 'convert_to_draft' event on a given pull request. */\n  ConvertToDraftEvent = \"CONVERT_TO_DRAFT_EVENT\",\n  /** Represents a mention made by one issue or pull request to another. */\n  CrossReferencedEvent = \"CROSS_REFERENCED_EVENT\",\n  /** Represents a 'demilestoned' event on a given issue or pull request. */\n  DemilestonedEvent = \"DEMILESTONED_EVENT\",\n  /** Represents a 'deployed' event on a given pull request. */\n  DeployedEvent = \"DEPLOYED_EVENT\",\n  /** Represents a 'deployment_environment_changed' event on a given pull request. */\n  DeploymentEnvironmentChangedEvent = \"DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT\",\n  /** Represents a 'disconnected' event on a given issue or pull request. */\n  DisconnectedEvent = \"DISCONNECTED_EVENT\",\n  /** Represents a 'head_ref_deleted' event on a given pull request. */\n  HeadRefDeletedEvent = \"HEAD_REF_DELETED_EVENT\",\n  /** Represents a 'head_ref_force_pushed' event on a given pull request. */\n  HeadRefForcePushedEvent = \"HEAD_REF_FORCE_PUSHED_EVENT\",\n  /** Represents a 'head_ref_restored' event on a given pull request. */\n  HeadRefRestoredEvent = \"HEAD_REF_RESTORED_EVENT\",\n  /** Represents a comment on an Issue. */\n  IssueComment = \"ISSUE_COMMENT\",\n  /** Represents a 'labeled' event on a given issue or pull request. */\n  LabeledEvent = \"LABELED_EVENT\",\n  /** Represents a 'locked' event on a given issue or pull request. */\n  LockedEvent = \"LOCKED_EVENT\",\n  /** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\n  MarkedAsDuplicateEvent = \"MARKED_AS_DUPLICATE_EVENT\",\n  /** Represents a 'mentioned' event on a given issue or pull request. */\n  MentionedEvent = \"MENTIONED_EVENT\",\n  /** Represents a 'merged' event on a given pull request. */\n  MergedEvent = \"MERGED_EVENT\",\n  /** Represents a 'milestoned' event on a given issue or pull request. */\n  MilestonedEvent = \"MILESTONED_EVENT\",\n  /** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\n  MovedColumnsInProjectEvent = \"MOVED_COLUMNS_IN_PROJECT_EVENT\",\n  /** Represents a 'pinned' event on a given issue or pull request. */\n  PinnedEvent = \"PINNED_EVENT\",\n  /** Represents a Git commit part of a pull request. */\n  PullRequestCommit = \"PULL_REQUEST_COMMIT\",\n  /** Represents a commit comment thread part of a pull request. */\n  PullRequestCommitCommentThread = \"PULL_REQUEST_COMMIT_COMMENT_THREAD\",\n  /** A review object for a given pull request. */\n  PullRequestReview = \"PULL_REQUEST_REVIEW\",\n  /** A threaded list of comments for a given pull request. */\n  PullRequestReviewThread = \"PULL_REQUEST_REVIEW_THREAD\",\n  /** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */\n  PullRequestRevisionMarker = \"PULL_REQUEST_REVISION_MARKER\",\n  /** Represents a 'ready_for_review' event on a given pull request. */\n  ReadyForReviewEvent = \"READY_FOR_REVIEW_EVENT\",\n  /** Represents a 'referenced' event on a given `ReferencedSubject`. */\n  ReferencedEvent = \"REFERENCED_EVENT\",\n  /** Represents a 'removed_from_merge_queue' event on a given pull request. */\n  RemovedFromMergeQueueEvent = \"REMOVED_FROM_MERGE_QUEUE_EVENT\",\n  /** Represents a 'removed_from_project' event on a given issue or pull request. */\n  RemovedFromProjectEvent = \"REMOVED_FROM_PROJECT_EVENT\",\n  /** Represents a 'renamed' event on a given issue or pull request */\n  RenamedTitleEvent = \"RENAMED_TITLE_EVENT\",\n  /** Represents a 'reopened' event on any `Closable`. */\n  ReopenedEvent = \"REOPENED_EVENT\",\n  /** Represents a 'review_dismissed' event on a given issue or pull request. */\n  ReviewDismissedEvent = \"REVIEW_DISMISSED_EVENT\",\n  /** Represents an 'review_requested' event on a given pull request. */\n  ReviewRequestedEvent = \"REVIEW_REQUESTED_EVENT\",\n  /** Represents an 'review_request_removed' event on a given pull request. */\n  ReviewRequestRemovedEvent = \"REVIEW_REQUEST_REMOVED_EVENT\",\n  /** Represents a 'subscribed' event on a given `Subscribable`. */\n  SubscribedEvent = \"SUBSCRIBED_EVENT\",\n  /** Represents a 'transferred' event on a given issue or pull request. */\n  TransferredEvent = \"TRANSFERRED_EVENT\",\n  /** Represents an 'unassigned' event on any assignable object. */\n  UnassignedEvent = \"UNASSIGNED_EVENT\",\n  /** Represents an 'unlabeled' event on a given issue or pull request. */\n  UnlabeledEvent = \"UNLABELED_EVENT\",\n  /** Represents an 'unlocked' event on a given issue or pull request. */\n  UnlockedEvent = \"UNLOCKED_EVENT\",\n  /** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\n  UnmarkedAsDuplicateEvent = \"UNMARKED_AS_DUPLICATE_EVENT\",\n  /** Represents an 'unpinned' event on a given issue or pull request. */\n  UnpinnedEvent = \"UNPINNED_EVENT\",\n  /** Represents an 'unsubscribed' event on a given `Subscribable`. */\n  UnsubscribedEvent = \"UNSUBSCRIBED_EVENT\",\n  /** Represents a 'user_blocked' event on a given user. */\n  UserBlockedEvent = \"USER_BLOCKED_EVENT\",\n}\n\n/** The possible target states when updating a pull request. */\nexport enum PullRequestUpdateState {\n  /** A pull request that has been closed without being merged. */\n  Closed = \"CLOSED\",\n  /** A pull request that is still open. */\n  Open = \"OPEN\",\n}\n\n/** A Git push. */\nexport type Push = Node & {\n  __typename?: \"Push\";\n  id: Scalars[\"ID\"];\n  /** The SHA after the push */\n  nextSha?: Maybe<Scalars[\"GitObjectID\"]>;\n  /** The permalink for this push. */\n  permalink: Scalars[\"URI\"];\n  /** The SHA before the push */\n  previousSha?: Maybe<Scalars[\"GitObjectID\"]>;\n  /** The actor who pushed */\n  pusher: Actor;\n  /** The repository that was pushed to */\n  repository: Repository;\n};\n\n/** A team, user, or app who has the ability to push to a protected branch. */\nexport type PushAllowance = Node & {\n  __typename?: \"PushAllowance\";\n  /** The actor that can push. */\n  actor?: Maybe<PushAllowanceActor>;\n  /** Identifies the branch protection rule associated with the allowed user, team, or app. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  id: Scalars[\"ID\"];\n};\n\n/** Types that can be an actor. */\nexport type PushAllowanceActor = App | Team | User;\n\n/** The connection type for PushAllowance. */\nexport type PushAllowanceConnection = {\n  __typename?: \"PushAllowanceConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PushAllowanceEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PushAllowance>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PushAllowanceEdge = {\n  __typename?: \"PushAllowanceEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<PushAllowance>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type Query = {\n  __typename?: \"Query\";\n  /** Look up a code of conduct by its key */\n  codeOfConduct?: Maybe<CodeOfConduct>;\n  /** Look up a code of conduct by its key */\n  codesOfConduct?: Maybe<Array<Maybe<CodeOfConduct>>>;\n  /** Look up an enterprise by URL slug. */\n  enterprise?: Maybe<Enterprise>;\n  /** Look up a pending enterprise administrator invitation by invitee, enterprise and role. */\n  enterpriseAdministratorInvitation?: Maybe<EnterpriseAdministratorInvitation>;\n  /** Look up a pending enterprise administrator invitation by invitation token. */\n  enterpriseAdministratorInvitationByToken?: Maybe<EnterpriseAdministratorInvitation>;\n  /** Look up an open source license by its key */\n  license?: Maybe<License>;\n  /** Return a list of known open source licenses */\n  licenses: Array<Maybe<License>>;\n  /** Get alphabetically sorted list of Marketplace categories */\n  marketplaceCategories: Array<MarketplaceCategory>;\n  /** Look up a Marketplace category by its slug. */\n  marketplaceCategory?: Maybe<MarketplaceCategory>;\n  /** Look up a single Marketplace listing */\n  marketplaceListing?: Maybe<MarketplaceListing>;\n  /** Look up Marketplace listings */\n  marketplaceListings: MarketplaceListingConnection;\n  /** Return information about the GitHub instance */\n  meta: GitHubMetadata;\n  /** Fetches an object given its ID. */\n  node?: Maybe<Node>;\n  /** Lookup nodes by a list of IDs. */\n  nodes: Array<Maybe<Node>>;\n  /** Lookup a organization by login. */\n  organization?: Maybe<Organization>;\n  /** The client's rate limit information. */\n  rateLimit?: Maybe<RateLimit>;\n  /** Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object */\n  relay: Query;\n  /** Lookup a given repository by the owner and repository name. */\n  repository?: Maybe<Repository>;\n  /** Lookup a repository owner (ie. either a User or an Organization) by login. */\n  repositoryOwner?: Maybe<RepositoryOwner>;\n  /** Lookup resource by a URL. */\n  resource?: Maybe<UniformResourceLocatable>;\n  /** Perform a search across resources, returning a maximum of 1,000 results. */\n  search: SearchResultItemConnection;\n  /** GitHub Security Advisories */\n  securityAdvisories: SecurityAdvisoryConnection;\n  /** Fetch a Security Advisory by its GHSA ID */\n  securityAdvisory?: Maybe<SecurityAdvisory>;\n  /** Software Vulnerabilities documented by GitHub Security Advisories */\n  securityVulnerabilities: SecurityVulnerabilityConnection;\n  /** Users and organizations who can be sponsored via GitHub Sponsors. */\n  sponsorables: SponsorableItemConnection;\n  /** Look up a topic by name. */\n  topic?: Maybe<Topic>;\n  /** Lookup a user by login. */\n  user?: Maybe<User>;\n  /** The currently authenticated user. */\n  viewer: User;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryCodeOfConductArgs = {\n  key: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseArgs = {\n  invitationToken?: InputMaybe<Scalars[\"String\"]>;\n  slug: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseAdministratorInvitationArgs = {\n  enterpriseSlug: Scalars[\"String\"];\n  role: EnterpriseAdministratorRole;\n  userLogin: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseAdministratorInvitationByTokenArgs = {\n  invitationToken: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryLicenseArgs = {\n  key: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceCategoriesArgs = {\n  excludeEmpty?: InputMaybe<Scalars[\"Boolean\"]>;\n  excludeSubcategories?: InputMaybe<Scalars[\"Boolean\"]>;\n  includeCategories?: InputMaybe<Array<Scalars[\"String\"]>>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceCategoryArgs = {\n  slug: Scalars[\"String\"];\n  useTopicAliases?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceListingArgs = {\n  slug: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceListingsArgs = {\n  adminId?: InputMaybe<Scalars[\"ID\"]>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  allStates?: InputMaybe<Scalars[\"Boolean\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  categorySlug?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  organizationId?: InputMaybe<Scalars[\"ID\"]>;\n  primaryCategoryOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  slugs?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>;\n  useTopicAliases?: InputMaybe<Scalars[\"Boolean\"]>;\n  viewerCanAdmin?: InputMaybe<Scalars[\"Boolean\"]>;\n  withFreeTrialsOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryNodeArgs = {\n  id: Scalars[\"ID\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryNodesArgs = {\n  ids: Array<Scalars[\"ID\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryOrganizationArgs = {\n  login: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRateLimitArgs = {\n  dryRun?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRepositoryArgs = {\n  followRenames?: InputMaybe<Scalars[\"Boolean\"]>;\n  name: Scalars[\"String\"];\n  owner: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRepositoryOwnerArgs = {\n  login: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryResourceArgs = {\n  url: Scalars[\"URI\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySearchArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  query: Scalars[\"String\"];\n  type: SearchType;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityAdvisoriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  classifications?: InputMaybe<Array<SecurityAdvisoryClassification>>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  identifier?: InputMaybe<SecurityAdvisoryIdentifierFilter>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SecurityAdvisoryOrder>;\n  publishedSince?: InputMaybe<Scalars[\"DateTime\"]>;\n  updatedSince?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityAdvisoryArgs = {\n  ghsaId: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityVulnerabilitiesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  classifications?: InputMaybe<Array<SecurityAdvisoryClassification>>;\n  ecosystem?: InputMaybe<SecurityAdvisoryEcosystem>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SecurityVulnerabilityOrder>;\n  package?: InputMaybe<Scalars[\"String\"]>;\n  severities?: InputMaybe<Array<SecurityAdvisorySeverity>>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySponsorablesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  dependencyEcosystem?: InputMaybe<SecurityAdvisoryEcosystem>;\n  ecosystem?: InputMaybe<DependencyGraphEcosystem>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  onlyDependencies?: InputMaybe<Scalars[\"Boolean\"]>;\n  orderBy?: InputMaybe<SponsorableOrder>;\n  orgLoginForDependencies?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryTopicArgs = {\n  name: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryUserArgs = {\n  login: Scalars[\"String\"];\n};\n\n/** Represents the client's rate limit. */\nexport type RateLimit = {\n  __typename?: \"RateLimit\";\n  /** The point cost for the current query counting against the rate limit. */\n  cost: Scalars[\"Int\"];\n  /** The maximum number of points the client is permitted to consume in a 60 minute window. */\n  limit: Scalars[\"Int\"];\n  /** The maximum number of nodes this query may return */\n  nodeCount: Scalars[\"Int\"];\n  /** The number of points remaining in the current rate limit window. */\n  remaining: Scalars[\"Int\"];\n  /** The time at which the current rate limit window resets in UTC epoch seconds. */\n  resetAt: Scalars[\"DateTime\"];\n  /** The number of points used in the current rate limit window. */\n  used: Scalars[\"Int\"];\n};\n\n/** Represents a subject that can be reacted on. */\nexport type Reactable = {\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** Can user react to this subject */\n  viewerCanReact: Scalars[\"Boolean\"];\n};\n\n/** Represents a subject that can be reacted on. */\nexport type ReactableReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** The connection type for User. */\nexport type ReactingUserConnection = {\n  __typename?: \"ReactingUserConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReactingUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user that's made a reaction. */\nexport type ReactingUserEdge = {\n  __typename?: \"ReactingUserEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  node: User;\n  /** The moment when the user made the reaction. */\n  reactedAt: Scalars[\"DateTime\"];\n};\n\n/** An emoji reaction to a particular piece of content. */\nexport type Reaction = Node & {\n  __typename?: \"Reaction\";\n  /** Identifies the emoji reaction. */\n  content: ReactionContent;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** The reactable piece of content */\n  reactable: Reactable;\n  /** Identifies the user who created this reaction. */\n  user?: Maybe<User>;\n};\n\n/** A list of reactions that have been left on the subject. */\nexport type ReactionConnection = {\n  __typename?: \"ReactionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReactionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Reaction>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n  /** Whether or not the authenticated user has left a reaction on the subject. */\n  viewerHasReacted: Scalars[\"Boolean\"];\n};\n\n/** Emojis that can be attached to Issues, Pull Requests and Comments. */\nexport enum ReactionContent {\n  /** Represents the `:confused:` emoji. */\n  Confused = \"CONFUSED\",\n  /** Represents the `:eyes:` emoji. */\n  Eyes = \"EYES\",\n  /** Represents the `:heart:` emoji. */\n  Heart = \"HEART\",\n  /** Represents the `:hooray:` emoji. */\n  Hooray = \"HOORAY\",\n  /** Represents the `:laugh:` emoji. */\n  Laugh = \"LAUGH\",\n  /** Represents the `:rocket:` emoji. */\n  Rocket = \"ROCKET\",\n  /** Represents the `:-1:` emoji. */\n  ThumbsDown = \"THUMBS_DOWN\",\n  /** Represents the `:+1:` emoji. */\n  ThumbsUp = \"THUMBS_UP\",\n}\n\n/** An edge in a connection. */\nexport type ReactionEdge = {\n  __typename?: \"ReactionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Reaction>;\n};\n\n/** A group of emoji reactions to a particular piece of content. */\nexport type ReactionGroup = {\n  __typename?: \"ReactionGroup\";\n  /** Identifies the emoji reaction. */\n  content: ReactionContent;\n  /** Identifies when the reaction was created. */\n  createdAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Reactors to the reaction subject with the emotion represented by this reaction group. */\n  reactors: ReactorConnection;\n  /** The subject that was reacted to. */\n  subject: Reactable;\n  /**\n   * Users who have reacted to the reaction subject with the emotion represented by this reaction group\n   * @deprecated Reactors can now be mannequins, bots, and organizations. Use the `reactors` field instead. Removal on 2021-10-01 UTC.\n   */\n  users: ReactingUserConnection;\n  /** Whether or not the authenticated user has left a reaction on the subject. */\n  viewerHasReacted: Scalars[\"Boolean\"];\n};\n\n/** A group of emoji reactions to a particular piece of content. */\nexport type ReactionGroupReactorsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A group of emoji reactions to a particular piece of content. */\nexport type ReactionGroupUsersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Ways in which lists of reactions can be ordered upon return. */\nexport type ReactionOrder = {\n  /** The direction in which to order reactions by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order reactions by. */\n  field: ReactionOrderField;\n};\n\n/** A list of fields that reactions can be ordered by. */\nexport enum ReactionOrderField {\n  /** Allows ordering a list of reactions by when they were created. */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** Types that can be assigned to reactions. */\nexport type Reactor = Bot | Mannequin | Organization | User;\n\n/** The connection type for Reactor. */\nexport type ReactorConnection = {\n  __typename?: \"ReactorConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReactorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Reactor>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents an author of a reaction. */\nexport type ReactorEdge = {\n  __typename?: \"ReactorEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The author of the reaction. */\n  node: Reactor;\n  /** The moment when the user made the reaction. */\n  reactedAt: Scalars[\"DateTime\"];\n};\n\n/** Represents a 'ready_for_review' event on a given pull request. */\nexport type ReadyForReviewEvent = Node &\n  UniformResourceLocatable & {\n    __typename?: \"ReadyForReviewEvent\";\n    /** Identifies the actor who performed the event. */\n    actor?: Maybe<Actor>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    id: Scalars[\"ID\"];\n    /** PullRequest referenced by event. */\n    pullRequest: PullRequest;\n    /** The HTTP path for this ready for review event. */\n    resourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this ready for review event. */\n    url: Scalars[\"URI\"];\n  };\n\n/** Represents a Git reference. */\nexport type Ref = Node & {\n  __typename?: \"Ref\";\n  /** A list of pull requests with this ref as the head ref. */\n  associatedPullRequests: PullRequestConnection;\n  /** Branch protection rules for this ref */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** Compares the current ref as a base ref to another head ref, if the comparison can be made. */\n  compare?: Maybe<Comparison>;\n  id: Scalars[\"ID\"];\n  /** The ref name. */\n  name: Scalars[\"String\"];\n  /** The ref's prefix, such as `refs/heads/` or `refs/tags/`. */\n  prefix: Scalars[\"String\"];\n  /** Branch protection rules that are viewable by non-admins */\n  refUpdateRule?: Maybe<RefUpdateRule>;\n  /** The repository the ref belongs to. */\n  repository: Repository;\n  /** The object the ref points to. Returns null when object does not exist. */\n  target?: Maybe<GitObject>;\n};\n\n/** Represents a Git reference. */\nexport type RefAssociatedPullRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  baseRefName?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  headRefName?: InputMaybe<Scalars[\"String\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** Represents a Git reference. */\nexport type RefCompareArgs = {\n  headRef: Scalars[\"String\"];\n};\n\n/** The connection type for Ref. */\nexport type RefConnection = {\n  __typename?: \"RefConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RefEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Ref>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type RefEdge = {\n  __typename?: \"RefEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Ref>;\n};\n\n/** Ways in which lists of git refs can be ordered upon return. */\nexport type RefOrder = {\n  /** The direction in which to order refs by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order refs by. */\n  field: RefOrderField;\n};\n\n/** Properties by which ref connections can be ordered. */\nexport enum RefOrderField {\n  /** Order refs by their alphanumeric name */\n  Alphabetical = \"ALPHABETICAL\",\n  /** Order refs by underlying commit date if the ref prefix is refs/tags/ */\n  TagCommitDate = \"TAG_COMMIT_DATE\",\n}\n\n/** A ref update rules for a viewer. */\nexport type RefUpdateRule = {\n  __typename?: \"RefUpdateRule\";\n  /** Can this branch be deleted. */\n  allowsDeletions: Scalars[\"Boolean\"];\n  /** Are force pushes allowed on this branch. */\n  allowsForcePushes: Scalars[\"Boolean\"];\n  /** Can matching branches be created. */\n  blocksCreations: Scalars[\"Boolean\"];\n  /** Identifies the protection rule pattern. */\n  pattern: Scalars[\"String\"];\n  /** Number of approving reviews required to update matching branches. */\n  requiredApprovingReviewCount?: Maybe<Scalars[\"Int\"]>;\n  /** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n  requiredStatusCheckContexts?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n  /** Are reviews from code owners required to update matching branches. */\n  requiresCodeOwnerReviews: Scalars[\"Boolean\"];\n  /** Are conversations required to be resolved before merging. */\n  requiresConversationResolution: Scalars[\"Boolean\"];\n  /** Are merge commits prohibited from being pushed to this branch. */\n  requiresLinearHistory: Scalars[\"Boolean\"];\n  /** Are commits required to be signed. */\n  requiresSignatures: Scalars[\"Boolean\"];\n  /** Is the viewer allowed to dismiss reviews. */\n  viewerAllowedToDismissReviews: Scalars[\"Boolean\"];\n  /** Can the viewer push to the branch */\n  viewerCanPush: Scalars[\"Boolean\"];\n};\n\n/** Represents a 'referenced' event on a given `ReferencedSubject`. */\nexport type ReferencedEvent = Node & {\n  __typename?: \"ReferencedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the commit associated with the 'referenced' event. */\n  commit?: Maybe<Commit>;\n  /** Identifies the repository associated with the 'referenced' event. */\n  commitRepository: Repository;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Reference originated in a different repository. */\n  isCrossRepository: Scalars[\"Boolean\"];\n  /** Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference. */\n  isDirectReference: Scalars[\"Boolean\"];\n  /** Object referenced by event. */\n  subject: ReferencedSubject;\n};\n\n/** Any referencable object */\nexport type ReferencedSubject = Issue | PullRequest;\n\n/** Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes */\nexport type RegenerateEnterpriseIdentityProviderRecoveryCodesInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set an identity provider. */\n  enterpriseId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes */\nexport type RegenerateEnterpriseIdentityProviderRecoveryCodesPayload = {\n  __typename?: \"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The identity provider for the enterprise. */\n  identityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** Autogenerated input type of RegenerateVerifiableDomainToken */\nexport type RegenerateVerifiableDomainTokenInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the verifiable domain to regenerate the verification token of. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RegenerateVerifiableDomainToken */\nexport type RegenerateVerifiableDomainTokenPayload = {\n  __typename?: \"RegenerateVerifiableDomainTokenPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The verification token that was generated. */\n  verificationToken?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of RejectDeployments */\nexport type RejectDeploymentsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Optional comment for rejecting deployments */\n  comment?: InputMaybe<Scalars[\"String\"]>;\n  /** The ids of environments to reject deployments */\n  environmentIds: Array<Scalars[\"ID\"]>;\n  /** The node ID of the workflow run containing the pending deployments. */\n  workflowRunId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RejectDeployments */\nexport type RejectDeploymentsPayload = {\n  __typename?: \"RejectDeploymentsPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The affected deployments. */\n  deployments?: Maybe<Array<Deployment>>;\n};\n\n/** A release contains the content for a release. */\nexport type Release = Node &\n  Reactable &\n  UniformResourceLocatable & {\n    __typename?: \"Release\";\n    /** The author of the release */\n    author?: Maybe<User>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The description of the release. */\n    description?: Maybe<Scalars[\"String\"]>;\n    /** The description of this release rendered to HTML. */\n    descriptionHTML?: Maybe<Scalars[\"HTML\"]>;\n    id: Scalars[\"ID\"];\n    /** Whether or not the release is a draft */\n    isDraft: Scalars[\"Boolean\"];\n    /** Whether or not the release is the latest releast */\n    isLatest: Scalars[\"Boolean\"];\n    /** Whether or not the release is a prerelease */\n    isPrerelease: Scalars[\"Boolean\"];\n    /** A list of users mentioned in the release description */\n    mentions?: Maybe<UserConnection>;\n    /** The title of the release. */\n    name?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the date and time when the release was created. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** List of releases assets which are dependent on this release. */\n    releaseAssets: ReleaseAssetConnection;\n    /** The repository that the release belongs to. */\n    repository: Repository;\n    /** The HTTP path for this issue */\n    resourcePath: Scalars[\"URI\"];\n    /** A description of the release, rendered to HTML without any links in it. */\n    shortDescriptionHTML?: Maybe<Scalars[\"HTML\"]>;\n    /** The Git tag the release points to */\n    tag?: Maybe<Ref>;\n    /** The tag commit for this release. */\n    tagCommit?: Maybe<Commit>;\n    /** The name of the release's Git tag */\n    tagName: Scalars[\"String\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this issue */\n    url: Scalars[\"URI\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n  };\n\n/** A release contains the content for a release. */\nexport type ReleaseMentionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A release contains the content for a release. */\nexport type ReleaseReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** A release contains the content for a release. */\nexport type ReleaseReleaseAssetsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  name?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A release contains the content for a release. */\nexport type ReleaseShortDescriptionHtmlArgs = {\n  limit?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A release asset contains the content for a release asset. */\nexport type ReleaseAsset = Node & {\n  __typename?: \"ReleaseAsset\";\n  /** The asset's content-type */\n  contentType: Scalars[\"String\"];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The number of times this asset was downloaded */\n  downloadCount: Scalars[\"Int\"];\n  /** Identifies the URL where you can download the release asset via the browser. */\n  downloadUrl: Scalars[\"URI\"];\n  id: Scalars[\"ID\"];\n  /** Identifies the title of the release asset. */\n  name: Scalars[\"String\"];\n  /** Release that the asset is associated with */\n  release?: Maybe<Release>;\n  /** The size (in bytes) of the asset */\n  size: Scalars[\"Int\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The user that performed the upload */\n  uploadedBy: User;\n  /** Identifies the URL of the release asset. */\n  url: Scalars[\"URI\"];\n};\n\n/** The connection type for ReleaseAsset. */\nexport type ReleaseAssetConnection = {\n  __typename?: \"ReleaseAssetConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReleaseAssetEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ReleaseAsset>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ReleaseAssetEdge = {\n  __typename?: \"ReleaseAssetEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ReleaseAsset>;\n};\n\n/** The connection type for Release. */\nexport type ReleaseConnection = {\n  __typename?: \"ReleaseConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReleaseEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Release>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ReleaseEdge = {\n  __typename?: \"ReleaseEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Release>;\n};\n\n/** Ways in which lists of releases can be ordered upon return. */\nexport type ReleaseOrder = {\n  /** The direction in which to order releases by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order releases by. */\n  field: ReleaseOrderField;\n};\n\n/** Properties by which release connections can be ordered. */\nexport enum ReleaseOrderField {\n  /** Order releases by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order releases alphabetically by name */\n  Name = \"NAME\",\n}\n\n/** Autogenerated input type of RemoveAssigneesFromAssignable */\nexport type RemoveAssigneesFromAssignableInput = {\n  /** The id of the assignable object to remove assignees from. */\n  assignableId: Scalars[\"ID\"];\n  /** The id of users to remove as assignees. */\n  assigneeIds: Array<Scalars[\"ID\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveAssigneesFromAssignable */\nexport type RemoveAssigneesFromAssignablePayload = {\n  __typename?: \"RemoveAssigneesFromAssignablePayload\";\n  /** The item that was unassigned. */\n  assignable?: Maybe<Assignable>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseAdmin */\nexport type RemoveEnterpriseAdminInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Enterprise ID from which to remove the administrator. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The login of the user to remove as an administrator. */\n  login: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of RemoveEnterpriseAdmin */\nexport type RemoveEnterpriseAdminPayload = {\n  __typename?: \"RemoveEnterpriseAdminPayload\";\n  /** The user who was removed as an administrator. */\n  admin?: Maybe<User>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated enterprise. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of removing an administrator. */\n  message?: Maybe<Scalars[\"String\"]>;\n  /** The viewer performing the mutation. */\n  viewer?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseIdentityProvider */\nexport type RemoveEnterpriseIdentityProviderInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise from which to remove the identity provider. */\n  enterpriseId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RemoveEnterpriseIdentityProvider */\nexport type RemoveEnterpriseIdentityProviderPayload = {\n  __typename?: \"RemoveEnterpriseIdentityProviderPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The identity provider that was removed from the enterprise. */\n  identityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseOrganization */\nexport type RemoveEnterpriseOrganizationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise from which the organization should be removed. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The ID of the organization to remove from the enterprise. */\n  organizationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RemoveEnterpriseOrganization */\nexport type RemoveEnterpriseOrganizationPayload = {\n  __typename?: \"RemoveEnterpriseOrganizationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated enterprise. */\n  enterprise?: Maybe<Enterprise>;\n  /** The organization that was removed from the enterprise. */\n  organization?: Maybe<Organization>;\n  /** The viewer performing the mutation. */\n  viewer?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseSupportEntitlement */\nexport type RemoveEnterpriseSupportEntitlementInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the Enterprise which the admin belongs to. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The login of a member who will lose the support entitlement. */\n  login: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of RemoveEnterpriseSupportEntitlement */\nexport type RemoveEnterpriseSupportEntitlementPayload = {\n  __typename?: \"RemoveEnterpriseSupportEntitlementPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** A message confirming the result of removing the support entitlement. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of RemoveLabelsFromLabelable */\nexport type RemoveLabelsFromLabelableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ids of labels to remove. */\n  labelIds: Array<Scalars[\"ID\"]>;\n  /** The id of the Labelable to remove labels from. */\n  labelableId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RemoveLabelsFromLabelable */\nexport type RemoveLabelsFromLabelablePayload = {\n  __typename?: \"RemoveLabelsFromLabelablePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The Labelable the labels were removed from. */\n  labelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of RemoveOutsideCollaborator */\nexport type RemoveOutsideCollaboratorInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the organization to remove the outside collaborator from. */\n  organizationId: Scalars[\"ID\"];\n  /** The ID of the outside collaborator to remove. */\n  userId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RemoveOutsideCollaborator */\nexport type RemoveOutsideCollaboratorPayload = {\n  __typename?: \"RemoveOutsideCollaboratorPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The user that was removed as an outside collaborator. */\n  removedUser?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveReaction */\nexport type RemoveReactionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the emoji reaction to remove. */\n  content: ReactionContent;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RemoveReaction */\nexport type RemoveReactionPayload = {\n  __typename?: \"RemoveReactionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The reaction object. */\n  reaction?: Maybe<Reaction>;\n  /** The reaction groups for the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** The reactable subject. */\n  subject?: Maybe<Reactable>;\n};\n\n/** Autogenerated input type of RemoveStar */\nexport type RemoveStarInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Starrable ID to unstar. */\n  starrableId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RemoveStar */\nexport type RemoveStarPayload = {\n  __typename?: \"RemoveStarPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The starrable. */\n  starrable?: Maybe<Starrable>;\n};\n\n/** Autogenerated input type of RemoveUpvote */\nexport type RemoveUpvoteInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion or comment to remove upvote. */\n  subjectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RemoveUpvote */\nexport type RemoveUpvotePayload = {\n  __typename?: \"RemoveUpvotePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The votable subject. */\n  subject?: Maybe<Votable>;\n};\n\n/** Represents a 'removed_from_project' event on a given issue or pull request. */\nexport type RemovedFromProjectEvent = Node & {\n  __typename?: \"RemovedFromProjectEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n};\n\n/** Represents a 'renamed' event on a given issue or pull request */\nexport type RenamedTitleEvent = Node & {\n  __typename?: \"RenamedTitleEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the current title of the issue or pull request. */\n  currentTitle: Scalars[\"String\"];\n  id: Scalars[\"ID\"];\n  /** Identifies the previous title of the issue or pull request. */\n  previousTitle: Scalars[\"String\"];\n  /** Subject that was renamed. */\n  subject: RenamedTitleSubject;\n};\n\n/** An object which has a renamable title */\nexport type RenamedTitleSubject = Issue | PullRequest;\n\n/** Autogenerated input type of ReopenIssue */\nexport type ReopenIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the issue to be opened. */\n  issueId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ReopenIssue */\nexport type ReopenIssuePayload = {\n  __typename?: \"ReopenIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The issue that was opened. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of ReopenPullRequest */\nexport type ReopenPullRequestInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the pull request to be reopened. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ReopenPullRequest */\nexport type ReopenPullRequestPayload = {\n  __typename?: \"ReopenPullRequestPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request that was reopened. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'reopened' event on any `Closable`. */\nexport type ReopenedEvent = Node & {\n  __typename?: \"ReopenedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Object that was reopened. */\n  closable: Closable;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** The reason the issue state was changed to open. */\n  stateReason?: Maybe<IssueStateReason>;\n};\n\n/** Audit log entry for a repo.access event. */\nexport type RepoAccessAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoAccessAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The visibility of the repository */\n    visibility?: Maybe<RepoAccessAuditEntryVisibility>;\n  };\n\n/** The privacy of a repository */\nexport enum RepoAccessAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = \"INTERNAL\",\n  /** The repository is visible only to those with explicit access. */\n  Private = \"PRIVATE\",\n  /** The repository is visible to everyone. */\n  Public = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.add_member event. */\nexport type RepoAddMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoAddMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The visibility of the repository */\n    visibility?: Maybe<RepoAddMemberAuditEntryVisibility>;\n  };\n\n/** The privacy of a repository */\nexport enum RepoAddMemberAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = \"INTERNAL\",\n  /** The repository is visible only to those with explicit access. */\n  Private = \"PRIVATE\",\n  /** The repository is visible to everyone. */\n  Public = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.add_topic event. */\nexport type RepoAddTopicAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData &\n  TopicAuditEntryData & {\n    __typename?: \"RepoAddTopicAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The name of the topic added to the repository */\n    topic?: Maybe<Topic>;\n    /** The name of the topic added to the repository */\n    topicName?: Maybe<Scalars[\"String\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.archived event. */\nexport type RepoArchivedAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoArchivedAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The visibility of the repository */\n    visibility?: Maybe<RepoArchivedAuditEntryVisibility>;\n  };\n\n/** The privacy of a repository */\nexport enum RepoArchivedAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = \"INTERNAL\",\n  /** The repository is visible only to those with explicit access. */\n  Private = \"PRIVATE\",\n  /** The repository is visible to everyone. */\n  Public = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.change_merge_setting event. */\nexport type RepoChangeMergeSettingAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoChangeMergeSettingAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** Whether the change was to enable (true) or disable (false) the merge type */\n    isEnabled?: Maybe<Scalars[\"Boolean\"]>;\n    /** The merge method affected by the change */\n    mergeType?: Maybe<RepoChangeMergeSettingAuditEntryMergeType>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The merge options available for pull requests to this repository. */\nexport enum RepoChangeMergeSettingAuditEntryMergeType {\n  /** The pull request is added to the base branch in a merge commit. */\n  Merge = \"MERGE\",\n  /** Commits from the pull request are added onto the base branch individually without a merge commit. */\n  Rebase = \"REBASE\",\n  /** The pull request's commits are squashed into a single commit before they are merged to the base branch. */\n  Squash = \"SQUASH\",\n}\n\n/** Audit log entry for a repo.config.disable_anonymous_git_access event. */\nexport type RepoConfigDisableAnonymousGitAccessAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigDisableAnonymousGitAccessAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.disable_collaborators_only event. */\nexport type RepoConfigDisableCollaboratorsOnlyAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigDisableCollaboratorsOnlyAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.disable_contributors_only event. */\nexport type RepoConfigDisableContributorsOnlyAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigDisableContributorsOnlyAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.disable_sockpuppet_disallowed event. */\nexport type RepoConfigDisableSockpuppetDisallowedAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigDisableSockpuppetDisallowedAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.enable_anonymous_git_access event. */\nexport type RepoConfigEnableAnonymousGitAccessAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigEnableAnonymousGitAccessAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.enable_collaborators_only event. */\nexport type RepoConfigEnableCollaboratorsOnlyAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigEnableCollaboratorsOnlyAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.enable_contributors_only event. */\nexport type RepoConfigEnableContributorsOnlyAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigEnableContributorsOnlyAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.enable_sockpuppet_disallowed event. */\nexport type RepoConfigEnableSockpuppetDisallowedAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigEnableSockpuppetDisallowedAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.lock_anonymous_git_access event. */\nexport type RepoConfigLockAnonymousGitAccessAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigLockAnonymousGitAccessAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.config.unlock_anonymous_git_access event. */\nexport type RepoConfigUnlockAnonymousGitAccessAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoConfigUnlockAnonymousGitAccessAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repo.create event. */\nexport type RepoCreateAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoCreateAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The name of the parent repository for this forked repository. */\n    forkParentName?: Maybe<Scalars[\"String\"]>;\n    /** The name of the root repository for this network. */\n    forkSourceName?: Maybe<Scalars[\"String\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The visibility of the repository */\n    visibility?: Maybe<RepoCreateAuditEntryVisibility>;\n  };\n\n/** The privacy of a repository */\nexport enum RepoCreateAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = \"INTERNAL\",\n  /** The repository is visible only to those with explicit access. */\n  Private = \"PRIVATE\",\n  /** The repository is visible to everyone. */\n  Public = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.destroy event. */\nexport type RepoDestroyAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoDestroyAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The visibility of the repository */\n    visibility?: Maybe<RepoDestroyAuditEntryVisibility>;\n  };\n\n/** The privacy of a repository */\nexport enum RepoDestroyAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = \"INTERNAL\",\n  /** The repository is visible only to those with explicit access. */\n  Private = \"PRIVATE\",\n  /** The repository is visible to everyone. */\n  Public = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.remove_member event. */\nexport type RepoRemoveMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData & {\n    __typename?: \"RepoRemoveMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The visibility of the repository */\n    visibility?: Maybe<RepoRemoveMemberAuditEntryVisibility>;\n  };\n\n/** The privacy of a repository */\nexport enum RepoRemoveMemberAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = \"INTERNAL\",\n  /** The repository is visible only to those with explicit access. */\n  Private = \"PRIVATE\",\n  /** The repository is visible to everyone. */\n  Public = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.remove_topic event. */\nexport type RepoRemoveTopicAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData &\n  TopicAuditEntryData & {\n    __typename?: \"RepoRemoveTopicAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The name of the topic added to the repository */\n    topic?: Maybe<Topic>;\n    /** The name of the topic added to the repository */\n    topicName?: Maybe<Scalars[\"String\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The reasons a piece of content can be reported or minimized. */\nexport enum ReportedContentClassifiers {\n  /** An abusive or harassing piece of content */\n  Abuse = \"ABUSE\",\n  /** A duplicated piece of content */\n  Duplicate = \"DUPLICATE\",\n  /** An irrelevant piece of content */\n  OffTopic = \"OFF_TOPIC\",\n  /** An outdated piece of content */\n  Outdated = \"OUTDATED\",\n  /** The content has been resolved */\n  Resolved = \"RESOLVED\",\n  /** A spammy piece of content */\n  Spam = \"SPAM\",\n}\n\n/** A repository contains the content for a project. */\nexport type Repository = Node &\n  PackageOwner &\n  ProjectOwner &\n  ProjectV2Recent &\n  RepositoryInfo &\n  Starrable &\n  Subscribable &\n  UniformResourceLocatable & {\n    __typename?: \"Repository\";\n    /** Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging. */\n    allowUpdateBranch: Scalars[\"Boolean\"];\n    /** A list of users that can be assigned to issues in this repository. */\n    assignableUsers: UserConnection;\n    /** Whether or not Auto-merge can be enabled on pull requests in this repository. */\n    autoMergeAllowed: Scalars[\"Boolean\"];\n    /** A list of branch protection rules for this repository. */\n    branchProtectionRules: BranchProtectionRuleConnection;\n    /** Returns the code of conduct for this repository */\n    codeOfConduct?: Maybe<CodeOfConduct>;\n    /** Information extracted from the repository's `CODEOWNERS` file. */\n    codeowners?: Maybe<RepositoryCodeowners>;\n    /** A list of collaborators associated with the repository. */\n    collaborators?: Maybe<RepositoryCollaboratorConnection>;\n    /** A list of commit comments associated with the repository. */\n    commitComments: CommitCommentConnection;\n    /** Returns a list of contact links associated to the repository */\n    contactLinks?: Maybe<Array<RepositoryContactLink>>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The Ref associated with the repository's default branch. */\n    defaultBranchRef?: Maybe<Ref>;\n    /** Whether or not branches are automatically deleted when merged in this repository. */\n    deleteBranchOnMerge: Scalars[\"Boolean\"];\n    /** A list of deploy keys that are on this repository. */\n    deployKeys: DeployKeyConnection;\n    /** Deployments associated with the repository */\n    deployments: DeploymentConnection;\n    /** The description of the repository. */\n    description?: Maybe<Scalars[\"String\"]>;\n    /** The description of the repository rendered to HTML. */\n    descriptionHTML: Scalars[\"HTML\"];\n    /** Returns a single discussion from the current repository by number. */\n    discussion?: Maybe<Discussion>;\n    /** A list of discussion categories that are available in the repository. */\n    discussionCategories: DiscussionCategoryConnection;\n    /** A discussion category by slug. */\n    discussionCategory?: Maybe<DiscussionCategory>;\n    /** A list of discussions that have been opened in the repository. */\n    discussions: DiscussionConnection;\n    /** The number of kilobytes this repository occupies on disk. */\n    diskUsage?: Maybe<Scalars[\"Int\"]>;\n    /** Returns a single active environment from the current repository by name. */\n    environment?: Maybe<Environment>;\n    /** A list of environments that are in this repository. */\n    environments: EnvironmentConnection;\n    /** Returns how many forks there are of this repository in the whole network. */\n    forkCount: Scalars[\"Int\"];\n    /** Whether this repository allows forks. */\n    forkingAllowed: Scalars[\"Boolean\"];\n    /** A list of direct forked repositories. */\n    forks: RepositoryConnection;\n    /** The funding links for this repository */\n    fundingLinks: Array<FundingLink>;\n    /** Indicates if the repository has the Discussions feature enabled. */\n    hasDiscussionsEnabled: Scalars[\"Boolean\"];\n    /** Indicates if the repository has issues feature enabled. */\n    hasIssuesEnabled: Scalars[\"Boolean\"];\n    /** Indicates if the repository has the Projects feature enabled. */\n    hasProjectsEnabled: Scalars[\"Boolean\"];\n    /** Whether vulnerability alerts are enabled for the repository. */\n    hasVulnerabilityAlertsEnabled: Scalars[\"Boolean\"];\n    /** Indicates if the repository has wiki feature enabled. */\n    hasWikiEnabled: Scalars[\"Boolean\"];\n    /** The repository's URL. */\n    homepageUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The interaction ability settings for this repository. */\n    interactionAbility?: Maybe<RepositoryInteractionAbility>;\n    /** Indicates if the repository is unmaintained. */\n    isArchived: Scalars[\"Boolean\"];\n    /** Returns true if blank issue creation is allowed */\n    isBlankIssuesEnabled: Scalars[\"Boolean\"];\n    /** Returns whether or not this repository disabled. */\n    isDisabled: Scalars[\"Boolean\"];\n    /** Returns whether or not this repository is empty. */\n    isEmpty: Scalars[\"Boolean\"];\n    /** Identifies if the repository is a fork. */\n    isFork: Scalars[\"Boolean\"];\n    /** Indicates if a repository is either owned by an organization, or is a private fork of an organization repository. */\n    isInOrganization: Scalars[\"Boolean\"];\n    /** Indicates if the repository has been locked or not. */\n    isLocked: Scalars[\"Boolean\"];\n    /** Identifies if the repository is a mirror. */\n    isMirror: Scalars[\"Boolean\"];\n    /** Identifies if the repository is private or internal. */\n    isPrivate: Scalars[\"Boolean\"];\n    /** Returns true if this repository has a security policy */\n    isSecurityPolicyEnabled?: Maybe<Scalars[\"Boolean\"]>;\n    /** Identifies if the repository is a template that can be used to generate new repositories. */\n    isTemplate: Scalars[\"Boolean\"];\n    /** Is this repository a user configuration repository? */\n    isUserConfigurationRepository: Scalars[\"Boolean\"];\n    /** Returns a single issue from the current repository by number. */\n    issue?: Maybe<Issue>;\n    /** Returns a single issue-like object from the current repository by number. */\n    issueOrPullRequest?: Maybe<IssueOrPullRequest>;\n    /** Returns a list of issue templates associated to the repository */\n    issueTemplates?: Maybe<Array<IssueTemplate>>;\n    /** A list of issues that have been opened in the repository. */\n    issues: IssueConnection;\n    /** Returns a single label by name */\n    label?: Maybe<Label>;\n    /** A list of labels associated with the repository. */\n    labels?: Maybe<LabelConnection>;\n    /** A list containing a breakdown of the language composition of the repository. */\n    languages?: Maybe<LanguageConnection>;\n    /** Get the latest release for the repository if one exists. */\n    latestRelease?: Maybe<Release>;\n    /** The license associated with the repository */\n    licenseInfo?: Maybe<License>;\n    /** The reason the repository has been locked. */\n    lockReason?: Maybe<RepositoryLockReason>;\n    /** A list of Users that can be mentioned in the context of the repository. */\n    mentionableUsers: UserConnection;\n    /** Whether or not PRs are merged with a merge commit on this repository. */\n    mergeCommitAllowed: Scalars[\"Boolean\"];\n    /** How the default commit message will be generated when merging a pull request. */\n    mergeCommitMessage: MergeCommitMessage;\n    /** How the default commit title will be generated when merging a pull request. */\n    mergeCommitTitle: MergeCommitTitle;\n    /** Returns a single milestone from the current repository by number. */\n    milestone?: Maybe<Milestone>;\n    /** A list of milestones associated with the repository. */\n    milestones?: Maybe<MilestoneConnection>;\n    /** The repository's original mirror URL. */\n    mirrorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The name of the repository. */\n    name: Scalars[\"String\"];\n    /** The repository's name with owner. */\n    nameWithOwner: Scalars[\"String\"];\n    /** A Git object in the repository */\n    object?: Maybe<GitObject>;\n    /** The image used to represent this repository in Open Graph data. */\n    openGraphImageUrl: Scalars[\"URI\"];\n    /** The User owner of the repository. */\n    owner: RepositoryOwner;\n    /** A list of packages under the owner. */\n    packages: PackageConnection;\n    /** The repository parent, if this is a fork. */\n    parent?: Maybe<Repository>;\n    /** A list of discussions that have been pinned in this repository. */\n    pinnedDiscussions: PinnedDiscussionConnection;\n    /** A list of pinned issues for this repository. */\n    pinnedIssues?: Maybe<PinnedIssueConnection>;\n    /** The primary language of the repository's code. */\n    primaryLanguage?: Maybe<Language>;\n    /** Find project by number. */\n    project?: Maybe<Project>;\n    /** Finds and returns the Project according to the provided Project number. */\n    projectV2?: Maybe<ProjectV2>;\n    /** A list of projects under the owner. */\n    projects: ProjectConnection;\n    /** The HTTP path listing the repository's projects */\n    projectsResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL listing the repository's projects */\n    projectsUrl: Scalars[\"URI\"];\n    /** List of projects linked to this repository. */\n    projectsV2: ProjectV2Connection;\n    /** Returns a single pull request from the current repository by number. */\n    pullRequest?: Maybe<PullRequest>;\n    /** Returns a list of pull request templates associated to the repository */\n    pullRequestTemplates?: Maybe<Array<PullRequestTemplate>>;\n    /** A list of pull requests that have been opened in the repository. */\n    pullRequests: PullRequestConnection;\n    /** Identifies when the repository was last pushed to. */\n    pushedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Whether or not rebase-merging is enabled on this repository. */\n    rebaseMergeAllowed: Scalars[\"Boolean\"];\n    /** Recent projects that this user has modified in the context of the owner. */\n    recentProjects: ProjectV2Connection;\n    /** Fetch a given ref from the repository */\n    ref?: Maybe<Ref>;\n    /** Fetch a list of refs from the repository */\n    refs?: Maybe<RefConnection>;\n    /** Lookup a single release given various criteria. */\n    release?: Maybe<Release>;\n    /** List of releases which are dependent on this repository. */\n    releases: ReleaseConnection;\n    /** A list of applied repository-topic associations for this repository. */\n    repositoryTopics: RepositoryTopicConnection;\n    /** The HTTP path for this repository */\n    resourcePath: Scalars[\"URI\"];\n    /** The security policy URL. */\n    securityPolicyUrl?: Maybe<Scalars[\"URI\"]>;\n    /** A description of the repository, rendered to HTML without any links in it. */\n    shortDescriptionHTML: Scalars[\"HTML\"];\n    /** Whether or not squash-merging is enabled on this repository. */\n    squashMergeAllowed: Scalars[\"Boolean\"];\n    /** How the default commit message will be generated when squash merging a pull request. */\n    squashMergeCommitMessage: SquashMergeCommitMessage;\n    /** How the default commit title will be generated when squash merging a pull request. */\n    squashMergeCommitTitle: SquashMergeCommitTitle;\n    /**\n     * Whether a squash merge commit can use the pull request title as default.\n     * @deprecated `squashPrTitleUsedAsDefault` will be removed. Use `Repository.squashMergeCommitTitle` instead. Removal on 2023-04-01 UTC.\n     */\n    squashPrTitleUsedAsDefault: Scalars[\"Boolean\"];\n    /** The SSH URL to clone this repository */\n    sshUrl: Scalars[\"GitSSHRemote\"];\n    /**\n     * Returns a count of how many stargazers there are on this object\n     *\n     */\n    stargazerCount: Scalars[\"Int\"];\n    /** A list of users who have starred this starrable. */\n    stargazers: StargazerConnection;\n    /** Returns a list of all submodules in this repository parsed from the .gitmodules file as of the default branch's HEAD commit. */\n    submodules: SubmoduleConnection;\n    /** Temporary authentication token for cloning this repository. */\n    tempCloneToken?: Maybe<Scalars[\"String\"]>;\n    /** The repository from which this repository was generated, if any. */\n    templateRepository?: Maybe<Repository>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this repository */\n    url: Scalars[\"URI\"];\n    /** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */\n    usesCustomOpenGraphImage: Scalars[\"Boolean\"];\n    /** Indicates whether the viewer has admin permissions on this repository. */\n    viewerCanAdminister: Scalars[\"Boolean\"];\n    /** Can the current viewer create new projects on this owner. */\n    viewerCanCreateProjects: Scalars[\"Boolean\"];\n    /** Check if the viewer is able to change their subscription status for the repository. */\n    viewerCanSubscribe: Scalars[\"Boolean\"];\n    /** Indicates whether the viewer can update the topics of this repository. */\n    viewerCanUpdateTopics: Scalars[\"Boolean\"];\n    /** The last commit email for the viewer. */\n    viewerDefaultCommitEmail?: Maybe<Scalars[\"String\"]>;\n    /** The last used merge method by the viewer or the default for the repository. */\n    viewerDefaultMergeMethod: PullRequestMergeMethod;\n    /** Returns a boolean indicating whether the viewing user has starred this starrable. */\n    viewerHasStarred: Scalars[\"Boolean\"];\n    /** The users permission level on the repository. Will return null if authenticated as an GitHub App. */\n    viewerPermission?: Maybe<RepositoryPermission>;\n    /** A list of emails this viewer can commit with. */\n    viewerPossibleCommitEmails?: Maybe<Array<Scalars[\"String\"]>>;\n    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n    viewerSubscription?: Maybe<SubscriptionState>;\n    /** Indicates the repository's visibility level. */\n    visibility: RepositoryVisibility;\n    /** A list of vulnerability alerts that are on this repository. */\n    vulnerabilityAlerts?: Maybe<RepositoryVulnerabilityAlertConnection>;\n    /** A list of users watching the repository. */\n    watchers: UserConnection;\n    /** Whether contributors are required to sign off on web-based commits in this repository. */\n    webCommitSignoffRequired: Scalars[\"Boolean\"];\n  };\n\n/** A repository contains the content for a project. */\nexport type RepositoryAssignableUsersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryBranchProtectionRulesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryCodeownersArgs = {\n  refName?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryCollaboratorsArgs = {\n  affiliation?: InputMaybe<CollaboratorAffiliation>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryCommitCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryDeployKeysArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryDeploymentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  environments?: InputMaybe<Array<Scalars[\"String\"]>>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<DeploymentOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryDiscussionArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryDiscussionCategoriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  filterByAssignable?: InputMaybe<Scalars[\"Boolean\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryDiscussionCategoryArgs = {\n  slug: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryDiscussionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  categoryId?: InputMaybe<Scalars[\"ID\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<DiscussionOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryEnvironmentArgs = {\n  name: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryEnvironmentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryForksArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isLocked?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssueArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssueOrPullRequestArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssuesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  filterBy?: InputMaybe<IssueFilters>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<IssueState>>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryLabelArgs = {\n  name: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryLabelsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<LabelOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryLanguagesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<LanguageOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryMentionableUsersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryMilestoneArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryMilestonesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<MilestoneOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  states?: InputMaybe<Array<MilestoneState>>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryObjectArgs = {\n  expression?: InputMaybe<Scalars[\"String\"]>;\n  oid?: InputMaybe<Scalars[\"GitObjectID\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryPackagesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  names?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>;\n  orderBy?: InputMaybe<PackageOrder>;\n  packageType?: InputMaybe<PackageType>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryPinnedDiscussionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryPinnedIssuesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectV2Args = {\n  number: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectOrder>;\n  search?: InputMaybe<Scalars[\"String\"]>;\n  states?: InputMaybe<Array<ProjectState>>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectsV2Args = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryPullRequestArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryPullRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  baseRefName?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  headRefName?: InputMaybe<Scalars[\"String\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryRecentProjectsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryRefArgs = {\n  qualifiedName: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryRefsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  direction?: InputMaybe<OrderDirection>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RefOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  refPrefix: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryReleaseArgs = {\n  tagName: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryReleasesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReleaseOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryRepositoryTopicsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryShortDescriptionHtmlArgs = {\n  limit?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryStargazersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<StarOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositorySubmodulesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryVulnerabilityAlertsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  dependencyScopes?: InputMaybe<Array<RepositoryVulnerabilityAlertDependencyScope>>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  states?: InputMaybe<Array<RepositoryVulnerabilityAlertState>>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryWatchersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The affiliation of a user to a repository */\nexport enum RepositoryAffiliation {\n  /** Repositories that the user has been added to as a collaborator. */\n  Collaborator = \"COLLABORATOR\",\n  /** Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on. */\n  OrganizationMember = \"ORGANIZATION_MEMBER\",\n  /** Repositories that are owned by the authenticated user. */\n  Owner = \"OWNER\",\n}\n\n/** Metadata for an audit entry with action repo.* */\nexport type RepositoryAuditEntryData = {\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Information extracted from a repository's `CODEOWNERS` file. */\nexport type RepositoryCodeowners = {\n  __typename?: \"RepositoryCodeowners\";\n  /** Any problems that were encountered while parsing the `CODEOWNERS` file. */\n  errors: Array<RepositoryCodeownersError>;\n};\n\n/** An error in a `CODEOWNERS` file. */\nexport type RepositoryCodeownersError = {\n  __typename?: \"RepositoryCodeownersError\";\n  /** The column number where the error occurs. */\n  column: Scalars[\"Int\"];\n  /** A short string describing the type of error. */\n  kind: Scalars[\"String\"];\n  /** The line number where the error occurs. */\n  line: Scalars[\"Int\"];\n  /** A complete description of the error, combining information from other fields. */\n  message: Scalars[\"String\"];\n  /** The path to the file when the error occurs. */\n  path: Scalars[\"String\"];\n  /** The content of the line where the error occurs. */\n  source: Scalars[\"String\"];\n  /** A suggestion of how to fix the error. */\n  suggestion?: Maybe<Scalars[\"String\"]>;\n};\n\n/** The connection type for User. */\nexport type RepositoryCollaboratorConnection = {\n  __typename?: \"RepositoryCollaboratorConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryCollaboratorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user who is a collaborator of a repository. */\nexport type RepositoryCollaboratorEdge = {\n  __typename?: \"RepositoryCollaboratorEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  node: User;\n  /** The permission the user has on the repository. */\n  permission: RepositoryPermission;\n  /** A list of sources for the user's access to the repository. */\n  permissionSources?: Maybe<Array<PermissionSource>>;\n};\n\n/** A list of repositories owned by the subject. */\nexport type RepositoryConnection = {\n  __typename?: \"RepositoryConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Repository>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n  /** The total size in kilobytes of all repositories in the connection. */\n  totalDiskUsage: Scalars[\"Int\"];\n};\n\n/** A repository contact link. */\nexport type RepositoryContactLink = {\n  __typename?: \"RepositoryContactLink\";\n  /** The contact link purpose. */\n  about: Scalars[\"String\"];\n  /** The contact link name. */\n  name: Scalars[\"String\"];\n  /** The contact link URL. */\n  url: Scalars[\"URI\"];\n};\n\n/** The reason a repository is listed as 'contributed'. */\nexport enum RepositoryContributionType {\n  /** Created a commit */\n  Commit = \"COMMIT\",\n  /** Created an issue */\n  Issue = \"ISSUE\",\n  /** Created a pull request */\n  PullRequest = \"PULL_REQUEST\",\n  /** Reviewed a pull request */\n  PullRequestReview = \"PULL_REQUEST_REVIEW\",\n  /** Created the repository */\n  Repository = \"REPOSITORY\",\n}\n\n/** Represents an author of discussions in repositories. */\nexport type RepositoryDiscussionAuthor = {\n  /** Discussions this user has started. */\n  repositoryDiscussions: DiscussionConnection;\n};\n\n/** Represents an author of discussions in repositories. */\nexport type RepositoryDiscussionAuthorRepositoryDiscussionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  answered?: InputMaybe<Scalars[\"Boolean\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<DiscussionOrder>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Represents an author of discussion comments in repositories. */\nexport type RepositoryDiscussionCommentAuthor = {\n  /** Discussion comments this user has authored. */\n  repositoryDiscussionComments: DiscussionCommentConnection;\n};\n\n/** Represents an author of discussion comments in repositories. */\nexport type RepositoryDiscussionCommentAuthorRepositoryDiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  onlyAnswers?: InputMaybe<Scalars[\"Boolean\"]>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** An edge in a connection. */\nexport type RepositoryEdge = {\n  __typename?: \"RepositoryEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Repository>;\n};\n\n/** A subset of repository info. */\nexport type RepositoryInfo = {\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The description of the repository. */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** The description of the repository rendered to HTML. */\n  descriptionHTML: Scalars[\"HTML\"];\n  /** Returns how many forks there are of this repository in the whole network. */\n  forkCount: Scalars[\"Int\"];\n  /** Indicates if the repository has the Discussions feature enabled. */\n  hasDiscussionsEnabled: Scalars[\"Boolean\"];\n  /** Indicates if the repository has issues feature enabled. */\n  hasIssuesEnabled: Scalars[\"Boolean\"];\n  /** Indicates if the repository has the Projects feature enabled. */\n  hasProjectsEnabled: Scalars[\"Boolean\"];\n  /** Indicates if the repository has wiki feature enabled. */\n  hasWikiEnabled: Scalars[\"Boolean\"];\n  /** The repository's URL. */\n  homepageUrl?: Maybe<Scalars[\"URI\"]>;\n  /** Indicates if the repository is unmaintained. */\n  isArchived: Scalars[\"Boolean\"];\n  /** Identifies if the repository is a fork. */\n  isFork: Scalars[\"Boolean\"];\n  /** Indicates if a repository is either owned by an organization, or is a private fork of an organization repository. */\n  isInOrganization: Scalars[\"Boolean\"];\n  /** Indicates if the repository has been locked or not. */\n  isLocked: Scalars[\"Boolean\"];\n  /** Identifies if the repository is a mirror. */\n  isMirror: Scalars[\"Boolean\"];\n  /** Identifies if the repository is private or internal. */\n  isPrivate: Scalars[\"Boolean\"];\n  /** Identifies if the repository is a template that can be used to generate new repositories. */\n  isTemplate: Scalars[\"Boolean\"];\n  /** The license associated with the repository */\n  licenseInfo?: Maybe<License>;\n  /** The reason the repository has been locked. */\n  lockReason?: Maybe<RepositoryLockReason>;\n  /** The repository's original mirror URL. */\n  mirrorUrl?: Maybe<Scalars[\"URI\"]>;\n  /** The name of the repository. */\n  name: Scalars[\"String\"];\n  /** The repository's name with owner. */\n  nameWithOwner: Scalars[\"String\"];\n  /** The image used to represent this repository in Open Graph data. */\n  openGraphImageUrl: Scalars[\"URI\"];\n  /** The User owner of the repository. */\n  owner: RepositoryOwner;\n  /** Identifies when the repository was last pushed to. */\n  pushedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** The HTTP path for this repository */\n  resourcePath: Scalars[\"URI\"];\n  /** A description of the repository, rendered to HTML without any links in it. */\n  shortDescriptionHTML: Scalars[\"HTML\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The HTTP URL for this repository */\n  url: Scalars[\"URI\"];\n  /** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */\n  usesCustomOpenGraphImage: Scalars[\"Boolean\"];\n  /** Indicates the repository's visibility level. */\n  visibility: RepositoryVisibility;\n};\n\n/** A subset of repository info. */\nexport type RepositoryInfoShortDescriptionHtmlArgs = {\n  limit?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Repository interaction limit that applies to this object. */\nexport type RepositoryInteractionAbility = {\n  __typename?: \"RepositoryInteractionAbility\";\n  /** The time the currently active limit expires. */\n  expiresAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** The current limit that is enabled on this object. */\n  limit: RepositoryInteractionLimit;\n  /** The origin of the currently active interaction limit. */\n  origin: RepositoryInteractionLimitOrigin;\n};\n\n/** A repository interaction limit. */\nexport enum RepositoryInteractionLimit {\n  /** Users that are not collaborators will not be able to interact with the repository. */\n  CollaboratorsOnly = \"COLLABORATORS_ONLY\",\n  /** Users that have not previously committed to a repository\u2019s default branch will be unable to interact with the repository. */\n  ContributorsOnly = \"CONTRIBUTORS_ONLY\",\n  /** Users that have recently created their account will be unable to interact with the repository. */\n  ExistingUsers = \"EXISTING_USERS\",\n  /** No interaction limits are enabled. */\n  NoLimit = \"NO_LIMIT\",\n}\n\n/** The length for a repository interaction limit to be enabled for. */\nexport enum RepositoryInteractionLimitExpiry {\n  /** The interaction limit will expire after 1 day. */\n  OneDay = \"ONE_DAY\",\n  /** The interaction limit will expire after 1 month. */\n  OneMonth = \"ONE_MONTH\",\n  /** The interaction limit will expire after 1 week. */\n  OneWeek = \"ONE_WEEK\",\n  /** The interaction limit will expire after 6 months. */\n  SixMonths = \"SIX_MONTHS\",\n  /** The interaction limit will expire after 3 days. */\n  ThreeDays = \"THREE_DAYS\",\n}\n\n/** Indicates where an interaction limit is configured. */\nexport enum RepositoryInteractionLimitOrigin {\n  /** A limit that is configured at the organization level. */\n  Organization = \"ORGANIZATION\",\n  /** A limit that is configured at the repository level. */\n  Repository = \"REPOSITORY\",\n  /** A limit that is configured at the user-wide level. */\n  User = \"USER\",\n}\n\n/** An invitation for a user to be added to a repository. */\nexport type RepositoryInvitation = Node & {\n  __typename?: \"RepositoryInvitation\";\n  /** The email address that received the invitation. */\n  email?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"ID\"];\n  /** The user who received the invitation. */\n  invitee?: Maybe<User>;\n  /** The user who created the invitation. */\n  inviter: User;\n  /** The permalink for this repository invitation. */\n  permalink: Scalars[\"URI\"];\n  /** The permission granted on this repository by this invitation. */\n  permission: RepositoryPermission;\n  /** The Repository the user is invited to. */\n  repository?: Maybe<RepositoryInfo>;\n};\n\n/** A list of repository invitations. */\nexport type RepositoryInvitationConnection = {\n  __typename?: \"RepositoryInvitationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type RepositoryInvitationEdge = {\n  __typename?: \"RepositoryInvitationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryInvitation>;\n};\n\n/** Ordering options for repository invitation connections. */\nexport type RepositoryInvitationOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order repository invitations by. */\n  field: RepositoryInvitationOrderField;\n};\n\n/** Properties by which repository invitation connections can be ordered. */\nexport enum RepositoryInvitationOrderField {\n  /** Order repository invitations by creation time */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** The possible reasons a given repository could be in a locked state. */\nexport enum RepositoryLockReason {\n  /** The repository is locked due to a billing related reason. */\n  Billing = \"BILLING\",\n  /** The repository is locked due to a migration. */\n  Migrating = \"MIGRATING\",\n  /** The repository is locked due to a move. */\n  Moving = \"MOVING\",\n  /** The repository is locked due to a rename. */\n  Rename = \"RENAME\",\n  /** The repository is locked due to a trade controls related reason. */\n  TradeRestriction = \"TRADE_RESTRICTION\",\n}\n\n/** A GitHub Enterprise Importer (GEI) repository migration. */\nexport type RepositoryMigration = Migration &\n  Node & {\n    __typename?: \"RepositoryMigration\";\n    /** The migration flag to continue on error. */\n    continueOnError: Scalars[\"Boolean\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"String\"]>;\n    /** The reason the migration failed. */\n    failureReason?: Maybe<Scalars[\"String\"]>;\n    id: Scalars[\"ID\"];\n    /** The URL for the migration log (expires 1 day after migration completes). */\n    migrationLogUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The migration source. */\n    migrationSource: MigrationSource;\n    /** The target repository name. */\n    repositoryName: Scalars[\"String\"];\n    /** The migration source URL. */\n    sourceUrl: Scalars[\"URI\"];\n    /** The migration state. */\n    state: MigrationState;\n  };\n\n/** The connection type for RepositoryMigration. */\nexport type RepositoryMigrationConnection = {\n  __typename?: \"RepositoryMigrationConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryMigrationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryMigration>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a repository migration. */\nexport type RepositoryMigrationEdge = {\n  __typename?: \"RepositoryMigrationEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryMigration>;\n};\n\n/** Ordering options for repository migrations. */\nexport type RepositoryMigrationOrder = {\n  /** The ordering direction. */\n  direction: RepositoryMigrationOrderDirection;\n  /** The field to order repository migrations by. */\n  field: RepositoryMigrationOrderField;\n};\n\n/** Possible directions in which to order a list of repository migrations when provided an `orderBy` argument. */\nexport enum RepositoryMigrationOrderDirection {\n  /** Specifies an ascending order for a given `orderBy` argument. */\n  Asc = \"ASC\",\n  /** Specifies a descending order for a given `orderBy` argument. */\n  Desc = \"DESC\",\n}\n\n/** Properties by which repository migrations can be ordered. */\nexport enum RepositoryMigrationOrderField {\n  /** Order mannequins why when they were created. */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** Represents a object that belongs to a repository. */\nexport type RepositoryNode = {\n  /** The repository associated with this node. */\n  repository: Repository;\n};\n\n/** Ordering options for repository connections */\nexport type RepositoryOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order repositories by. */\n  field: RepositoryOrderField;\n};\n\n/** Properties by which repository connections can be ordered. */\nexport enum RepositoryOrderField {\n  /** Order repositories by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order repositories by name */\n  Name = \"NAME\",\n  /** Order repositories by push time */\n  PushedAt = \"PUSHED_AT\",\n  /** Order repositories by number of stargazers */\n  Stargazers = \"STARGAZERS\",\n  /** Order repositories by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwner = {\n  /** A URL pointing to the owner's public avatar. */\n  avatarUrl: Scalars[\"URI\"];\n  id: Scalars[\"ID\"];\n  /** The username used to login. */\n  login: Scalars[\"String\"];\n  /** A list of repositories that the user owns. */\n  repositories: RepositoryConnection;\n  /** Find Repository. */\n  repository?: Maybe<Repository>;\n  /** The HTTP URL for the owner. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for the owner. */\n  url: Scalars[\"URI\"];\n};\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerRepositoriesArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isFork?: InputMaybe<Scalars[\"Boolean\"]>;\n  isLocked?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerRepositoryArgs = {\n  followRenames?: InputMaybe<Scalars[\"Boolean\"]>;\n  name: Scalars[\"String\"];\n};\n\n/** The access level to a repository */\nexport enum RepositoryPermission {\n  /** Can read, clone, and push to this repository. Can also manage issues, pull requests, and repository settings, including adding collaborators */\n  Admin = \"ADMIN\",\n  /** Can read, clone, and push to this repository. They can also manage issues, pull requests, and some repository settings */\n  Maintain = \"MAINTAIN\",\n  /** Can read and clone this repository. Can also open and comment on issues and pull requests */\n  Read = \"READ\",\n  /** Can read and clone this repository. Can also manage issues and pull requests */\n  Triage = \"TRIAGE\",\n  /** Can read, clone, and push to this repository. Can also manage issues and pull requests */\n  Write = \"WRITE\",\n}\n\n/** The privacy of a repository */\nexport enum RepositoryPrivacy {\n  /** Private */\n  Private = \"PRIVATE\",\n  /** Public */\n  Public = \"PUBLIC\",\n}\n\n/** A repository-topic connects a repository to a topic. */\nexport type RepositoryTopic = Node &\n  UniformResourceLocatable & {\n    __typename?: \"RepositoryTopic\";\n    id: Scalars[\"ID\"];\n    /** The HTTP path for this repository-topic. */\n    resourcePath: Scalars[\"URI\"];\n    /** The topic. */\n    topic: Topic;\n    /** The HTTP URL for this repository-topic. */\n    url: Scalars[\"URI\"];\n  };\n\n/** The connection type for RepositoryTopic. */\nexport type RepositoryTopicConnection = {\n  __typename?: \"RepositoryTopicConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryTopicEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryTopic>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type RepositoryTopicEdge = {\n  __typename?: \"RepositoryTopicEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryTopic>;\n};\n\n/** The repository's visibility level. */\nexport enum RepositoryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = \"INTERNAL\",\n  /** The repository is visible only to those with explicit access. */\n  Private = \"PRIVATE\",\n  /** The repository is visible to everyone. */\n  Public = \"PUBLIC\",\n}\n\n/** Audit log entry for a repository_visibility_change.disable event. */\nexport type RepositoryVisibilityChangeDisableAuditEntry = AuditEntry &\n  EnterpriseAuditEntryData &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"RepositoryVisibilityChangeDisableAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The HTTP path for this enterprise. */\n    enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The slug of the enterprise. */\n    enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this enterprise. */\n    enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a repository_visibility_change.enable event. */\nexport type RepositoryVisibilityChangeEnableAuditEntry = AuditEntry &\n  EnterpriseAuditEntryData &\n  Node &\n  OrganizationAuditEntryData & {\n    __typename?: \"RepositoryVisibilityChangeEnableAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    /** The HTTP path for this enterprise. */\n    enterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The slug of the enterprise. */\n    enterpriseSlug?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP URL for this enterprise. */\n    enterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n    id: Scalars[\"ID\"];\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** A Dependabot alert for a repository with a dependency affected by a security vulnerability. */\nexport type RepositoryVulnerabilityAlert = Node &\n  RepositoryNode & {\n    __typename?: \"RepositoryVulnerabilityAlert\";\n    /** When was the alert created? */\n    createdAt: Scalars[\"DateTime\"];\n    /** The associated Dependabot update */\n    dependabotUpdate?: Maybe<DependabotUpdate>;\n    /** The scope of an alert's dependency */\n    dependencyScope?: Maybe<RepositoryVulnerabilityAlertDependencyScope>;\n    /** Comment explaining the reason the alert was dismissed */\n    dismissComment?: Maybe<Scalars[\"String\"]>;\n    /** The reason the alert was dismissed */\n    dismissReason?: Maybe<Scalars[\"String\"]>;\n    /** When was the alert dismissed? */\n    dismissedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** The user who dismissed the alert */\n    dismisser?: Maybe<User>;\n    /**\n     * The reason the alert was marked as fixed.\n     * @deprecated The `fixReason` field is being removed. You can still use `fixedAt` and `dismissReason`. Removal on 2023-04-01 UTC.\n     */\n    fixReason?: Maybe<Scalars[\"String\"]>;\n    /** When was the alert fixed? */\n    fixedAt?: Maybe<Scalars[\"DateTime\"]>;\n    id: Scalars[\"ID\"];\n    /** Identifies the alert number. */\n    number: Scalars[\"Int\"];\n    /** The associated repository */\n    repository: Repository;\n    /** The associated security advisory */\n    securityAdvisory?: Maybe<SecurityAdvisory>;\n    /** The associated security vulnerability */\n    securityVulnerability?: Maybe<SecurityVulnerability>;\n    /** Identifies the state of the alert. */\n    state: RepositoryVulnerabilityAlertState;\n    /** The vulnerable manifest filename */\n    vulnerableManifestFilename: Scalars[\"String\"];\n    /** The vulnerable manifest path */\n    vulnerableManifestPath: Scalars[\"String\"];\n    /** The vulnerable requirements */\n    vulnerableRequirements?: Maybe<Scalars[\"String\"]>;\n  };\n\n/** The connection type for RepositoryVulnerabilityAlert. */\nexport type RepositoryVulnerabilityAlertConnection = {\n  __typename?: \"RepositoryVulnerabilityAlertConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryVulnerabilityAlertEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryVulnerabilityAlert>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** The possible scopes of an alert's dependency. */\nexport enum RepositoryVulnerabilityAlertDependencyScope {\n  /** A dependency that is only used in development */\n  Development = \"DEVELOPMENT\",\n  /** A dependency that is leveraged during application runtime */\n  Runtime = \"RUNTIME\",\n}\n\n/** An edge in a connection. */\nexport type RepositoryVulnerabilityAlertEdge = {\n  __typename?: \"RepositoryVulnerabilityAlertEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryVulnerabilityAlert>;\n};\n\n/** The possible states of an alert */\nexport enum RepositoryVulnerabilityAlertState {\n  /** An alert that has been manually closed by a user. */\n  Dismissed = \"DISMISSED\",\n  /** An alert that has been resolved by a code change. */\n  Fixed = \"FIXED\",\n  /** An alert that is still open. */\n  Open = \"OPEN\",\n}\n\n/** Autogenerated input type of RequestReviews */\nexport type RequestReviewsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the pull request to modify. */\n  pullRequestId: Scalars[\"ID\"];\n  /** The Node IDs of the team to request. */\n  teamIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** Add users to the set rather than replace. */\n  union?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The Node IDs of the user to request. */\n  userIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n};\n\n/** Autogenerated return type of RequestReviews */\nexport type RequestReviewsPayload = {\n  __typename?: \"RequestReviewsPayload\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The pull request that is getting requests. */\n  pullRequest?: Maybe<PullRequest>;\n  /** The edge from the pull request to the requested reviewers. */\n  requestedReviewersEdge?: Maybe<UserEdge>;\n};\n\n/** The possible states that can be requested when creating a check run. */\nexport enum RequestableCheckStatusState {\n  /** The check suite or run has been completed. */\n  Completed = \"COMPLETED\",\n  /** The check suite or run is in progress. */\n  InProgress = \"IN_PROGRESS\",\n  /** The check suite or run is in pending state. */\n  Pending = \"PENDING\",\n  /** The check suite or run has been queued. */\n  Queued = \"QUEUED\",\n  /** The check suite or run is in waiting state. */\n  Waiting = \"WAITING\",\n}\n\n/** Types that can be requested reviewers. */\nexport type RequestedReviewer = Mannequin | Team | User;\n\n/** The connection type for RequestedReviewer. */\nexport type RequestedReviewerConnection = {\n  __typename?: \"RequestedReviewerConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RequestedReviewerEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RequestedReviewer>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type RequestedReviewerEdge = {\n  __typename?: \"RequestedReviewerEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<RequestedReviewer>;\n};\n\n/** Represents a type that can be required by a pull request for merging. */\nexport type RequirableByPullRequest = {\n  /** Whether this is required to pass before merging for a specific pull request. */\n  isRequired: Scalars[\"Boolean\"];\n};\n\n/** Represents a type that can be required by a pull request for merging. */\nexport type RequirableByPullRequestIsRequiredArgs = {\n  pullRequestId?: InputMaybe<Scalars[\"ID\"]>;\n  pullRequestNumber?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a required status check for a protected branch, but not any specific run of that check. */\nexport type RequiredStatusCheckDescription = {\n  __typename?: \"RequiredStatusCheckDescription\";\n  /** The App that must provide this status in order for it to be accepted. */\n  app?: Maybe<App>;\n  /** The name of this status. */\n  context: Scalars[\"String\"];\n};\n\n/** Specifies the attributes for a new or updated required status check. */\nexport type RequiredStatusCheckInput = {\n  /** The ID of the App that must set the status in order for it to be accepted. Omit this value to use whichever app has recently been setting this status, or use \"any\" to allow any app to set the status. */\n  appId?: InputMaybe<Scalars[\"ID\"]>;\n  /** Status check context that must pass for commits to be accepted to the matching branch. */\n  context: Scalars[\"String\"];\n};\n\n/** Autogenerated input type of RerequestCheckSuite */\nexport type RerequestCheckSuiteInput = {\n  /** The Node ID of the check suite. */\n  checkSuiteId: Scalars[\"ID\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RerequestCheckSuite */\nexport type RerequestCheckSuitePayload = {\n  __typename?: \"RerequestCheckSuitePayload\";\n  /** The requested check suite. */\n  checkSuite?: Maybe<CheckSuite>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of ResolveReviewThread */\nexport type ResolveReviewThreadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the thread to resolve */\n  threadId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of ResolveReviewThread */\nexport type ResolveReviewThreadPayload = {\n  __typename?: \"ResolveReviewThreadPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The thread to resolve. */\n  thread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Represents a private contribution a user made on GitHub. */\nexport type RestrictedContribution = Contribution & {\n  __typename?: \"RestrictedContribution\";\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   *\n   */\n  isRestricted: Scalars[\"Boolean\"];\n  /** When this contribution was made. */\n  occurredAt: Scalars[\"DateTime\"];\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for this contribution. */\n  url: Scalars[\"URI\"];\n  /**\n   * The user who made this contribution.\n   *\n   */\n  user: User;\n};\n\n/** Autogenerated input type of RetireSponsorsTier */\nexport type RetireSponsorsTierInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the published tier to retire. */\n  tierId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RetireSponsorsTier */\nexport type RetireSponsorsTierPayload = {\n  __typename?: \"RetireSponsorsTierPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The tier that was retired. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n};\n\n/** A user, team, or app who has the ability to dismiss a review on a protected branch. */\nexport type ReviewDismissalAllowance = Node & {\n  __typename?: \"ReviewDismissalAllowance\";\n  /** The actor that can dismiss. */\n  actor?: Maybe<ReviewDismissalAllowanceActor>;\n  /** Identifies the branch protection rule associated with the allowed user, team, or app. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  id: Scalars[\"ID\"];\n};\n\n/** Types that can be an actor. */\nexport type ReviewDismissalAllowanceActor = App | Team | User;\n\n/** The connection type for ReviewDismissalAllowance. */\nexport type ReviewDismissalAllowanceConnection = {\n  __typename?: \"ReviewDismissalAllowanceConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReviewDismissalAllowanceEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ReviewDismissalAllowance>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ReviewDismissalAllowanceEdge = {\n  __typename?: \"ReviewDismissalAllowanceEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ReviewDismissalAllowance>;\n};\n\n/** Represents a 'review_dismissed' event on a given issue or pull request. */\nexport type ReviewDismissedEvent = Node &\n  UniformResourceLocatable & {\n    __typename?: \"ReviewDismissedEvent\";\n    /** Identifies the actor who performed the event. */\n    actor?: Maybe<Actor>;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** Identifies the optional message associated with the 'review_dismissed' event. */\n    dismissalMessage?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the optional message associated with the event, rendered to HTML. */\n    dismissalMessageHTML?: Maybe<Scalars[\"String\"]>;\n    id: Scalars[\"ID\"];\n    /** Identifies the previous state of the review with the 'review_dismissed' event. */\n    previousReviewState: PullRequestReviewState;\n    /** PullRequest referenced by event. */\n    pullRequest: PullRequest;\n    /** Identifies the commit which caused the review to become stale. */\n    pullRequestCommit?: Maybe<PullRequestCommit>;\n    /** The HTTP path for this review dismissed event. */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the review associated with the 'review_dismissed' event. */\n    review?: Maybe<PullRequestReview>;\n    /** The HTTP URL for this review dismissed event. */\n    url: Scalars[\"URI\"];\n  };\n\n/** A request for a user to review a pull request. */\nexport type ReviewRequest = Node & {\n  __typename?: \"ReviewRequest\";\n  /** Whether this request was created for a code owner */\n  asCodeOwner: Scalars[\"Boolean\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** Identifies the pull request associated with this review request. */\n  pullRequest: PullRequest;\n  /** The reviewer that is requested. */\n  requestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/** The connection type for ReviewRequest. */\nexport type ReviewRequestConnection = {\n  __typename?: \"ReviewRequestConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReviewRequestEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ReviewRequest>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ReviewRequestEdge = {\n  __typename?: \"ReviewRequestEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<ReviewRequest>;\n};\n\n/** Represents an 'review_request_removed' event on a given pull request. */\nexport type ReviewRequestRemovedEvent = Node & {\n  __typename?: \"ReviewRequestRemovedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the reviewer whose review request was removed. */\n  requestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/** Represents an 'review_requested' event on a given pull request. */\nexport type ReviewRequestedEvent = Node & {\n  __typename?: \"ReviewRequestedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the reviewer whose review was requested. */\n  requestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/**\n * A hovercard context with a message describing the current code review state of the pull\n * request.\n *\n */\nexport type ReviewStatusHovercardContext = HovercardContext & {\n  __typename?: \"ReviewStatusHovercardContext\";\n  /** A string describing this context */\n  message: Scalars[\"String\"];\n  /** An octicon to accompany this context */\n  octicon: Scalars[\"String\"];\n  /** The current status of the pull request with respect to code review. */\n  reviewDecision?: Maybe<PullRequestReviewDecision>;\n};\n\n/** Autogenerated input type of RevokeEnterpriseOrganizationsMigratorRole */\nexport type RevokeEnterpriseOrganizationsMigratorRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise to which all organizations managed by it will be granted the migrator role. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The login of the user to revoke the migrator role */\n  login: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole */\nexport type RevokeEnterpriseOrganizationsMigratorRolePayload = {\n  __typename?: \"RevokeEnterpriseOrganizationsMigratorRolePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The organizations that had the migrator role revoked for the given user. */\n  organizations?: Maybe<OrganizationConnection>;\n};\n\n/** Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole */\nexport type RevokeEnterpriseOrganizationsMigratorRolePayloadOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Autogenerated input type of RevokeMigratorRole */\nexport type RevokeMigratorRoleInput = {\n  /** The user login or Team slug to revoke the migrator role from. */\n  actor: Scalars[\"String\"];\n  /** Specifies the type of the actor, can be either USER or TEAM. */\n  actorType: ActorType;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the organization that the user/team belongs to. */\n  organizationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of RevokeMigratorRole */\nexport type RevokeMigratorRolePayload = {\n  __typename?: \"RevokeMigratorRolePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** Did the operation succeed? */\n  success?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Possible roles a user may have in relation to an organization. */\nexport enum RoleInOrganization {\n  /** A user who is a direct member of the organization. */\n  DirectMember = \"DIRECT_MEMBER\",\n  /** A user with full administrative access to the organization. */\n  Owner = \"OWNER\",\n  /** A user who is unaffiliated with the organization. */\n  Unaffiliated = \"UNAFFILIATED\",\n}\n\n/** The possible digest algorithms used to sign SAML requests for an identity provider. */\nexport enum SamlDigestAlgorithm {\n  /** SHA1 */\n  Sha1 = \"SHA1\",\n  /** SHA256 */\n  Sha256 = \"SHA256\",\n  /** SHA384 */\n  Sha384 = \"SHA384\",\n  /** SHA512 */\n  Sha512 = \"SHA512\",\n}\n\n/** The possible signature algorithms used to sign SAML requests for a Identity Provider. */\nexport enum SamlSignatureAlgorithm {\n  /** RSA-SHA1 */\n  RsaSha1 = \"RSA_SHA1\",\n  /** RSA-SHA256 */\n  RsaSha256 = \"RSA_SHA256\",\n  /** RSA-SHA384 */\n  RsaSha384 = \"RSA_SHA384\",\n  /** RSA-SHA512 */\n  RsaSha512 = \"RSA_SHA512\",\n}\n\n/** A Saved Reply is text a user can use to reply quickly. */\nexport type SavedReply = Node & {\n  __typename?: \"SavedReply\";\n  /** The body of the saved reply. */\n  body: Scalars[\"String\"];\n  /** The saved reply body rendered to HTML. */\n  bodyHTML: Scalars[\"HTML\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** The title of the saved reply. */\n  title: Scalars[\"String\"];\n  /** The user that saved this reply. */\n  user?: Maybe<Actor>;\n};\n\n/** The connection type for SavedReply. */\nexport type SavedReplyConnection = {\n  __typename?: \"SavedReplyConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SavedReplyEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SavedReply>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SavedReplyEdge = {\n  __typename?: \"SavedReplyEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<SavedReply>;\n};\n\n/** Ordering options for saved reply connections. */\nexport type SavedReplyOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order saved replies by. */\n  field: SavedReplyOrderField;\n};\n\n/** Properties by which saved reply connections can be ordered. */\nexport enum SavedReplyOrderField {\n  /** Order saved reply by when they were updated. */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** The results of a search. */\nexport type SearchResultItem =\n  | App\n  | Discussion\n  | Issue\n  | MarketplaceListing\n  | Organization\n  | PullRequest\n  | Repository\n  | User;\n\n/** A list of results that matched against a search query. Regardless of the number of matches, a maximum of 1,000 results will be available across all types, potentially split across many pages. */\nexport type SearchResultItemConnection = {\n  __typename?: \"SearchResultItemConnection\";\n  /** The total number of pieces of code that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types. */\n  codeCount: Scalars[\"Int\"];\n  /** The total number of discussions that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types. */\n  discussionCount: Scalars[\"Int\"];\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SearchResultItemEdge>>>;\n  /** The total number of issues that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types. */\n  issueCount: Scalars[\"Int\"];\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SearchResultItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The total number of repositories that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types. */\n  repositoryCount: Scalars[\"Int\"];\n  /** The total number of users that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types. */\n  userCount: Scalars[\"Int\"];\n  /** The total number of wiki pages that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types. */\n  wikiCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SearchResultItemEdge = {\n  __typename?: \"SearchResultItemEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<SearchResultItem>;\n  /** Text matches on the result found. */\n  textMatches?: Maybe<Array<Maybe<TextMatch>>>;\n};\n\n/** Represents the individual results of a search. */\nexport enum SearchType {\n  /** Returns matching discussions in repositories. */\n  Discussion = \"DISCUSSION\",\n  /** Returns results matching issues in repositories. */\n  Issue = \"ISSUE\",\n  /** Returns results matching repositories. */\n  Repository = \"REPOSITORY\",\n  /** Returns results matching users and organizations on GitHub. */\n  User = \"USER\",\n}\n\n/** A GitHub Security Advisory */\nexport type SecurityAdvisory = Node & {\n  __typename?: \"SecurityAdvisory\";\n  /** The classification of the advisory */\n  classification: SecurityAdvisoryClassification;\n  /** The CVSS associated with this advisory */\n  cvss: Cvss;\n  /** CWEs associated with this Advisory */\n  cwes: CweConnection;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** This is a long plaintext description of the advisory */\n  description: Scalars[\"String\"];\n  /** The GitHub Security Advisory ID */\n  ghsaId: Scalars[\"String\"];\n  id: Scalars[\"ID\"];\n  /** A list of identifiers for this advisory */\n  identifiers: Array<SecurityAdvisoryIdentifier>;\n  /** The permalink for the advisory's dependabot alerts page */\n  notificationsPermalink?: Maybe<Scalars[\"URI\"]>;\n  /** The organization that originated the advisory */\n  origin: Scalars[\"String\"];\n  /** The permalink for the advisory */\n  permalink?: Maybe<Scalars[\"URI\"]>;\n  /** When the advisory was published */\n  publishedAt: Scalars[\"DateTime\"];\n  /** A list of references for this advisory */\n  references: Array<SecurityAdvisoryReference>;\n  /** The severity of the advisory */\n  severity: SecurityAdvisorySeverity;\n  /** A short plaintext summary of the advisory */\n  summary: Scalars[\"String\"];\n  /** When the advisory was last updated */\n  updatedAt: Scalars[\"DateTime\"];\n  /** Vulnerabilities associated with this Advisory */\n  vulnerabilities: SecurityVulnerabilityConnection;\n  /** When the advisory was withdrawn, if it has been withdrawn */\n  withdrawnAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** A GitHub Security Advisory */\nexport type SecurityAdvisoryCwesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A GitHub Security Advisory */\nexport type SecurityAdvisoryVulnerabilitiesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  classifications?: InputMaybe<Array<SecurityAdvisoryClassification>>;\n  ecosystem?: InputMaybe<SecurityAdvisoryEcosystem>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SecurityVulnerabilityOrder>;\n  package?: InputMaybe<Scalars[\"String\"]>;\n  severities?: InputMaybe<Array<SecurityAdvisorySeverity>>;\n};\n\n/** Classification of the advisory. */\nexport enum SecurityAdvisoryClassification {\n  /** Classification of general advisories. */\n  General = \"GENERAL\",\n  /** Classification of malware advisories. */\n  Malware = \"MALWARE\",\n}\n\n/** The connection type for SecurityAdvisory. */\nexport type SecurityAdvisoryConnection = {\n  __typename?: \"SecurityAdvisoryConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SecurityAdvisoryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SecurityAdvisory>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** The possible ecosystems of a security vulnerability's package. */\nexport enum SecurityAdvisoryEcosystem {\n  /** GitHub Actions */\n  Actions = \"ACTIONS\",\n  /** PHP packages hosted at packagist.org */\n  Composer = \"COMPOSER\",\n  /** Erlang/Elixir packages hosted at hex.pm */\n  Erlang = \"ERLANG\",\n  /** Go modules */\n  Go = \"GO\",\n  /** Java artifacts hosted at the Maven central repository */\n  Maven = \"MAVEN\",\n  /** JavaScript packages hosted at npmjs.com */\n  Npm = \"NPM\",\n  /** .NET packages hosted at the NuGet Gallery */\n  Nuget = \"NUGET\",\n  /** Python packages hosted at PyPI.org */\n  Pip = \"PIP\",\n  /** Dart packages hosted at pub.dev */\n  Pub = \"PUB\",\n  /** Ruby gems hosted at RubyGems.org */\n  Rubygems = \"RUBYGEMS\",\n  /** Rust crates */\n  Rust = \"RUST\",\n}\n\n/** An edge in a connection. */\nexport type SecurityAdvisoryEdge = {\n  __typename?: \"SecurityAdvisoryEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<SecurityAdvisory>;\n};\n\n/** A GitHub Security Advisory Identifier */\nexport type SecurityAdvisoryIdentifier = {\n  __typename?: \"SecurityAdvisoryIdentifier\";\n  /** The identifier type, e.g. GHSA, CVE */\n  type: Scalars[\"String\"];\n  /** The identifier */\n  value: Scalars[\"String\"];\n};\n\n/** An advisory identifier to filter results on. */\nexport type SecurityAdvisoryIdentifierFilter = {\n  /** The identifier type. */\n  type: SecurityAdvisoryIdentifierType;\n  /** The identifier string. Supports exact or partial matching. */\n  value: Scalars[\"String\"];\n};\n\n/** Identifier formats available for advisories. */\nexport enum SecurityAdvisoryIdentifierType {\n  /** Common Vulnerabilities and Exposures Identifier. */\n  Cve = \"CVE\",\n  /** GitHub Security Advisory ID. */\n  Ghsa = \"GHSA\",\n}\n\n/** Ordering options for security advisory connections */\nexport type SecurityAdvisoryOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order security advisories by. */\n  field: SecurityAdvisoryOrderField;\n};\n\n/** Properties by which security advisory connections can be ordered. */\nexport enum SecurityAdvisoryOrderField {\n  /** Order advisories by publication time */\n  PublishedAt = \"PUBLISHED_AT\",\n  /** Order advisories by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** An individual package */\nexport type SecurityAdvisoryPackage = {\n  __typename?: \"SecurityAdvisoryPackage\";\n  /** The ecosystem the package belongs to, e.g. RUBYGEMS, NPM */\n  ecosystem: SecurityAdvisoryEcosystem;\n  /** The package name */\n  name: Scalars[\"String\"];\n};\n\n/** An individual package version */\nexport type SecurityAdvisoryPackageVersion = {\n  __typename?: \"SecurityAdvisoryPackageVersion\";\n  /** The package name or version */\n  identifier: Scalars[\"String\"];\n};\n\n/** A GitHub Security Advisory Reference */\nexport type SecurityAdvisoryReference = {\n  __typename?: \"SecurityAdvisoryReference\";\n  /** A publicly accessible reference */\n  url: Scalars[\"URI\"];\n};\n\n/** Severity of the vulnerability. */\nexport enum SecurityAdvisorySeverity {\n  /** Critical. */\n  Critical = \"CRITICAL\",\n  /** High. */\n  High = \"HIGH\",\n  /** Low. */\n  Low = \"LOW\",\n  /** Moderate. */\n  Moderate = \"MODERATE\",\n}\n\n/** An individual vulnerability within an Advisory */\nexport type SecurityVulnerability = {\n  __typename?: \"SecurityVulnerability\";\n  /** The Advisory associated with this Vulnerability */\n  advisory: SecurityAdvisory;\n  /** The first version containing a fix for the vulnerability */\n  firstPatchedVersion?: Maybe<SecurityAdvisoryPackageVersion>;\n  /** A description of the vulnerable package */\n  package: SecurityAdvisoryPackage;\n  /** The severity of the vulnerability within this package */\n  severity: SecurityAdvisorySeverity;\n  /** When the vulnerability was last updated */\n  updatedAt: Scalars[\"DateTime\"];\n  /**\n   * A string that describes the vulnerable package versions.\n   * This string follows a basic syntax with a few forms.\n   * + `= 0.2.0` denotes a single vulnerable version.\n   * + `<= 1.0.8` denotes a version range up to and including the specified version\n   * + `< 0.1.11` denotes a version range up to, but excluding, the specified version\n   * + `>= 4.3.0, < 4.3.5` denotes a version range with a known minimum and maximum version.\n   * + `>= 0.0.1` denotes a version range with a known minimum, but no known maximum\n   *\n   */\n  vulnerableVersionRange: Scalars[\"String\"];\n};\n\n/** The connection type for SecurityVulnerability. */\nexport type SecurityVulnerabilityConnection = {\n  __typename?: \"SecurityVulnerabilityConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SecurityVulnerabilityEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SecurityVulnerability>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SecurityVulnerabilityEdge = {\n  __typename?: \"SecurityVulnerabilityEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<SecurityVulnerability>;\n};\n\n/** Ordering options for security vulnerability connections */\nexport type SecurityVulnerabilityOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order security vulnerabilities by. */\n  field: SecurityVulnerabilityOrderField;\n};\n\n/** Properties by which security vulnerability connections can be ordered. */\nexport enum SecurityVulnerabilityOrderField {\n  /** Order vulnerability by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** Autogenerated input type of SetEnterpriseIdentityProvider */\nexport type SetEnterpriseIdentityProviderInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The digest algorithm used to sign SAML requests for the identity provider. */\n  digestMethod: SamlDigestAlgorithm;\n  /** The ID of the enterprise on which to set an identity provider. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The x509 certificate used by the identity provider to sign assertions and responses. */\n  idpCertificate: Scalars[\"String\"];\n  /** The Issuer Entity ID for the SAML identity provider */\n  issuer?: InputMaybe<Scalars[\"String\"]>;\n  /** The signature algorithm used to sign SAML requests for the identity provider. */\n  signatureMethod: SamlSignatureAlgorithm;\n  /** The URL endpoint for the identity provider's SAML SSO. */\n  ssoUrl: Scalars[\"URI\"];\n};\n\n/** Autogenerated return type of SetEnterpriseIdentityProvider */\nexport type SetEnterpriseIdentityProviderPayload = {\n  __typename?: \"SetEnterpriseIdentityProviderPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The identity provider for the enterprise. */\n  identityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** Autogenerated input type of SetOrganizationInteractionLimit */\nexport type SetOrganizationInteractionLimitInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** When this limit should expire. */\n  expiry?: InputMaybe<RepositoryInteractionLimitExpiry>;\n  /** The limit to set. */\n  limit: RepositoryInteractionLimit;\n  /** The ID of the organization to set a limit for. */\n  organizationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of SetOrganizationInteractionLimit */\nexport type SetOrganizationInteractionLimitPayload = {\n  __typename?: \"SetOrganizationInteractionLimitPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The organization that the interaction limit was set for. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of SetRepositoryInteractionLimit */\nexport type SetRepositoryInteractionLimitInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** When this limit should expire. */\n  expiry?: InputMaybe<RepositoryInteractionLimitExpiry>;\n  /** The limit to set. */\n  limit: RepositoryInteractionLimit;\n  /** The ID of the repository to set a limit for. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of SetRepositoryInteractionLimit */\nexport type SetRepositoryInteractionLimitPayload = {\n  __typename?: \"SetRepositoryInteractionLimitPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The repository that the interaction limit was set for. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of SetUserInteractionLimit */\nexport type SetUserInteractionLimitInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** When this limit should expire. */\n  expiry?: InputMaybe<RepositoryInteractionLimitExpiry>;\n  /** The limit to set. */\n  limit: RepositoryInteractionLimit;\n  /** The ID of the user to set a limit for. */\n  userId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of SetUserInteractionLimit */\nexport type SetUserInteractionLimitPayload = {\n  __typename?: \"SetUserInteractionLimitPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The user that the interaction limit was set for. */\n  user?: Maybe<User>;\n};\n\n/** Represents an S/MIME signature on a Commit or Tag. */\nexport type SmimeSignature = GitSignature & {\n  __typename?: \"SmimeSignature\";\n  /** Email used to sign this object. */\n  email: Scalars[\"String\"];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars[\"Boolean\"];\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars[\"String\"];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars[\"String\"];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** Entities that can sponsor others via GitHub Sponsors */\nexport type Sponsor = Organization | User;\n\n/** The connection type for Sponsor. */\nexport type SponsorConnection = {\n  __typename?: \"SponsorConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Sponsor>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user or organization who is sponsoring someone in GitHub Sponsors. */\nexport type SponsorEdge = {\n  __typename?: \"SponsorEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Sponsor>;\n};\n\n/** Ordering options for connections to get sponsor entities for GitHub Sponsors. */\nexport type SponsorOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order sponsor entities by. */\n  field: SponsorOrderField;\n};\n\n/** Properties by which sponsor connections can be ordered. */\nexport enum SponsorOrderField {\n  /** Order sponsorable entities by login (username). */\n  Login = \"LOGIN\",\n  /** Order sponsors by their relevance to the viewer. */\n  Relevance = \"RELEVANCE\",\n}\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type Sponsorable = {\n  /** The estimated next GitHub Sponsors payout for this user/organization in cents (USD). */\n  estimatedNextSponsorsPayoutInCents: Scalars[\"Int\"];\n  /** True if this user/organization has a GitHub Sponsors listing. */\n  hasSponsorsListing: Scalars[\"Boolean\"];\n  /** Whether the given account is sponsoring this user/organization. */\n  isSponsoredBy: Scalars[\"Boolean\"];\n  /** True if the viewer is sponsored by this user/organization. */\n  isSponsoringViewer: Scalars[\"Boolean\"];\n  /** The estimated monthly GitHub Sponsors income for this user/organization in cents (USD). */\n  monthlyEstimatedSponsorsIncomeInCents: Scalars[\"Int\"];\n  /** List of users and organizations this entity is sponsoring. */\n  sponsoring: SponsorConnection;\n  /** List of sponsors for this user or organization. */\n  sponsors: SponsorConnection;\n  /** Events involving this sponsorable, such as new sponsorships. */\n  sponsorsActivities: SponsorsActivityConnection;\n  /** The GitHub Sponsors listing for this user or organization. */\n  sponsorsListing?: Maybe<SponsorsListing>;\n  /** The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor. */\n  sponsorshipForViewerAsSponsor?: Maybe<Sponsorship>;\n  /** The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving. */\n  sponsorshipForViewerAsSponsorable?: Maybe<Sponsorship>;\n  /** List of sponsorship updates sent from this sponsorable to sponsors. */\n  sponsorshipNewsletters: SponsorshipNewsletterConnection;\n  /** The sponsorships where this user or organization is the maintainer receiving the funds. */\n  sponsorshipsAsMaintainer: SponsorshipConnection;\n  /** The sponsorships where this user or organization is the funder. */\n  sponsorshipsAsSponsor: SponsorshipConnection;\n  /** The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization. */\n  totalSponsorshipAmountAsSponsorInCents?: Maybe<Scalars[\"Int\"]>;\n  /** Whether or not the viewer is able to sponsor this user/organization. */\n  viewerCanSponsor: Scalars[\"Boolean\"];\n  /** True if the viewer is sponsoring this user/organization. */\n  viewerIsSponsoring: Scalars[\"Boolean\"];\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableIsSponsoredByArgs = {\n  accountLogin: Scalars[\"String\"];\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsoringArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorOrder>;\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorOrder>;\n  tierId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorsActivitiesArgs = {\n  actions?: InputMaybe<Array<SponsorsActivityAction>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includeAsSponsor?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorsActivityOrder>;\n  period?: InputMaybe<SponsorsActivityPeriod>;\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  until?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipForViewerAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipForViewerAsSponsorableArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipNewslettersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorshipNewsletterOrder>;\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipsAsMaintainerArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includePrivate?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipsAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  maintainerLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableTotalSponsorshipAmountAsSponsorInCentsArgs = {\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  sponsorableLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  until?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** Entities that can be sponsored via GitHub Sponsors */\nexport type SponsorableItem = Organization | User;\n\n/** The connection type for SponsorableItem. */\nexport type SponsorableItemConnection = {\n  __typename?: \"SponsorableItemConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorableItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SponsorableItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SponsorableItemEdge = {\n  __typename?: \"SponsorableItemEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<SponsorableItem>;\n};\n\n/** Ordering options for connections to get sponsorable entities for GitHub Sponsors. */\nexport type SponsorableOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order sponsorable entities by. */\n  field: SponsorableOrderField;\n};\n\n/** Properties by which sponsorable connections can be ordered. */\nexport enum SponsorableOrderField {\n  /** Order sponsorable entities by login (username). */\n  Login = \"LOGIN\",\n}\n\n/** An event related to sponsorship activity. */\nexport type SponsorsActivity = Node & {\n  __typename?: \"SponsorsActivity\";\n  /** What action this activity indicates took place. */\n  action: SponsorsActivityAction;\n  id: Scalars[\"ID\"];\n  /** The tier that the sponsorship used to use, for tier change events. */\n  previousSponsorsTier?: Maybe<SponsorsTier>;\n  /** The user or organization who triggered this activity and was/is sponsoring the sponsorable. */\n  sponsor?: Maybe<Sponsor>;\n  /** The user or organization that is being sponsored, the maintainer. */\n  sponsorable: Sponsorable;\n  /** The associated sponsorship tier. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n  /** The timestamp of this event. */\n  timestamp?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** The possible actions that GitHub Sponsors activities can represent. */\nexport enum SponsorsActivityAction {\n  /** The activity was cancelling a sponsorship. */\n  CancelledSponsorship = \"CANCELLED_SPONSORSHIP\",\n  /** The activity was starting a sponsorship. */\n  NewSponsorship = \"NEW_SPONSORSHIP\",\n  /** The activity was scheduling a downgrade or cancellation. */\n  PendingChange = \"PENDING_CHANGE\",\n  /** The activity was funds being refunded to the sponsor or GitHub. */\n  Refund = \"REFUND\",\n  /** The activity was disabling matching for a previously matched sponsorship. */\n  SponsorMatchDisabled = \"SPONSOR_MATCH_DISABLED\",\n  /** The activity was changing the sponsorship tier, either directly by the sponsor or by a scheduled/pending change. */\n  TierChange = \"TIER_CHANGE\",\n}\n\n/** The connection type for SponsorsActivity. */\nexport type SponsorsActivityConnection = {\n  __typename?: \"SponsorsActivityConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorsActivityEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SponsorsActivity>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SponsorsActivityEdge = {\n  __typename?: \"SponsorsActivityEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<SponsorsActivity>;\n};\n\n/** Ordering options for GitHub Sponsors activity connections. */\nexport type SponsorsActivityOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order activity by. */\n  field: SponsorsActivityOrderField;\n};\n\n/** Properties by which GitHub Sponsors activity connections can be ordered. */\nexport enum SponsorsActivityOrderField {\n  /** Order activities by when they happened. */\n  Timestamp = \"TIMESTAMP\",\n}\n\n/** The possible time periods for which Sponsors activities can be requested. */\nexport enum SponsorsActivityPeriod {\n  /** Don't restrict the activity to any date range, include all activity. */\n  All = \"ALL\",\n  /** The previous calendar day. */\n  Day = \"DAY\",\n  /** The previous thirty days. */\n  Month = \"MONTH\",\n  /** The previous seven days. */\n  Week = \"WEEK\",\n}\n\n/** Represents countries or regions for billing and residence for a GitHub Sponsors profile. */\nexport enum SponsorsCountryOrRegionCode {\n  /** Andorra */\n  Ad = \"AD\",\n  /** United Arab Emirates */\n  Ae = \"AE\",\n  /** Afghanistan */\n  Af = \"AF\",\n  /** Antigua and Barbuda */\n  Ag = \"AG\",\n  /** Anguilla */\n  Ai = \"AI\",\n  /** Albania */\n  Al = \"AL\",\n  /** Armenia */\n  Am = \"AM\",\n  /** Angola */\n  Ao = \"AO\",\n  /** Antarctica */\n  Aq = \"AQ\",\n  /** Argentina */\n  Ar = \"AR\",\n  /** American Samoa */\n  As = \"AS\",\n  /** Austria */\n  At = \"AT\",\n  /** Australia */\n  Au = \"AU\",\n  /** Aruba */\n  Aw = \"AW\",\n  /** \u00C5land */\n  Ax = \"AX\",\n  /** Azerbaijan */\n  Az = \"AZ\",\n  /** Bosnia and Herzegovina */\n  Ba = \"BA\",\n  /** Barbados */\n  Bb = \"BB\",\n  /** Bangladesh */\n  Bd = \"BD\",\n  /** Belgium */\n  Be = \"BE\",\n  /** Burkina Faso */\n  Bf = \"BF\",\n  /** Bulgaria */\n  Bg = \"BG\",\n  /** Bahrain */\n  Bh = \"BH\",\n  /** Burundi */\n  Bi = \"BI\",\n  /** Benin */\n  Bj = \"BJ\",\n  /** Saint Barth\u00E9lemy */\n  Bl = \"BL\",\n  /** Bermuda */\n  Bm = \"BM\",\n  /** Brunei Darussalam */\n  Bn = \"BN\",\n  /** Bolivia */\n  Bo = \"BO\",\n  /** Bonaire, Sint Eustatius and Saba */\n  Bq = \"BQ\",\n  /** Brazil */\n  Br = \"BR\",\n  /** Bahamas */\n  Bs = \"BS\",\n  /** Bhutan */\n  Bt = \"BT\",\n  /** Bouvet Island */\n  Bv = \"BV\",\n  /** Botswana */\n  Bw = \"BW\",\n  /** Belarus */\n  By = \"BY\",\n  /** Belize */\n  Bz = \"BZ\",\n  /** Canada */\n  Ca = \"CA\",\n  /** Cocos (Keeling) Islands */\n  Cc = \"CC\",\n  /** Congo (Kinshasa) */\n  Cd = \"CD\",\n  /** Central African Republic */\n  Cf = \"CF\",\n  /** Congo (Brazzaville) */\n  Cg = \"CG\",\n  /** Switzerland */\n  Ch = \"CH\",\n  /** C\u00F4te d'Ivoire */\n  Ci = \"CI\",\n  /** Cook Islands */\n  Ck = \"CK\",\n  /** Chile */\n  Cl = \"CL\",\n  /** Cameroon */\n  Cm = \"CM\",\n  /** China */\n  Cn = \"CN\",\n  /** Colombia */\n  Co = \"CO\",\n  /** Costa Rica */\n  Cr = \"CR\",\n  /** Cape Verde */\n  Cv = \"CV\",\n  /** Cura\u00E7ao */\n  Cw = \"CW\",\n  /** Christmas Island */\n  Cx = \"CX\",\n  /** Cyprus */\n  Cy = \"CY\",\n  /** Czech Republic */\n  Cz = \"CZ\",\n  /** Germany */\n  De = \"DE\",\n  /** Djibouti */\n  Dj = \"DJ\",\n  /** Denmark */\n  Dk = \"DK\",\n  /** Dominica */\n  Dm = \"DM\",\n  /** Dominican Republic */\n  Do = \"DO\",\n  /** Algeria */\n  Dz = \"DZ\",\n  /** Ecuador */\n  Ec = \"EC\",\n  /** Estonia */\n  Ee = \"EE\",\n  /** Egypt */\n  Eg = \"EG\",\n  /** Western Sahara */\n  Eh = \"EH\",\n  /** Eritrea */\n  Er = \"ER\",\n  /** Spain */\n  Es = \"ES\",\n  /** Ethiopia */\n  Et = \"ET\",\n  /** Finland */\n  Fi = \"FI\",\n  /** Fiji */\n  Fj = \"FJ\",\n  /** Falkland Islands */\n  Fk = \"FK\",\n  /** Micronesia */\n  Fm = \"FM\",\n  /** Faroe Islands */\n  Fo = \"FO\",\n  /** France */\n  Fr = \"FR\",\n  /** Gabon */\n  Ga = \"GA\",\n  /** United Kingdom */\n  Gb = \"GB\",\n  /** Grenada */\n  Gd = \"GD\",\n  /** Georgia */\n  Ge = \"GE\",\n  /** French Guiana */\n  Gf = \"GF\",\n  /** Guernsey */\n  Gg = \"GG\",\n  /** Ghana */\n  Gh = \"GH\",\n  /** Gibraltar */\n  Gi = \"GI\",\n  /** Greenland */\n  Gl = \"GL\",\n  /** Gambia */\n  Gm = \"GM\",\n  /** Guinea */\n  Gn = \"GN\",\n  /** Guadeloupe */\n  Gp = \"GP\",\n  /** Equatorial Guinea */\n  Gq = \"GQ\",\n  /** Greece */\n  Gr = \"GR\",\n  /** South Georgia and South Sandwich Islands */\n  Gs = \"GS\",\n  /** Guatemala */\n  Gt = \"GT\",\n  /** Guam */\n  Gu = \"GU\",\n  /** Guinea-Bissau */\n  Gw = \"GW\",\n  /** Guyana */\n  Gy = \"GY\",\n  /** Hong Kong */\n  Hk = \"HK\",\n  /** Heard and McDonald Islands */\n  Hm = \"HM\",\n  /** Honduras */\n  Hn = \"HN\",\n  /** Croatia */\n  Hr = \"HR\",\n  /** Haiti */\n  Ht = \"HT\",\n  /** Hungary */\n  Hu = \"HU\",\n  /** Indonesia */\n  Id = \"ID\",\n  /** Ireland */\n  Ie = \"IE\",\n  /** Israel */\n  Il = \"IL\",\n  /** Isle of Man */\n  Im = \"IM\",\n  /** India */\n  In = \"IN\",\n  /** British Indian Ocean Territory */\n  Io = \"IO\",\n  /** Iraq */\n  Iq = \"IQ\",\n  /** Iran */\n  Ir = \"IR\",\n  /** Iceland */\n  Is = \"IS\",\n  /** Italy */\n  It = \"IT\",\n  /** Jersey */\n  Je = \"JE\",\n  /** Jamaica */\n  Jm = \"JM\",\n  /** Jordan */\n  Jo = \"JO\",\n  /** Japan */\n  Jp = \"JP\",\n  /** Kenya */\n  Ke = \"KE\",\n  /** Kyrgyzstan */\n  Kg = \"KG\",\n  /** Cambodia */\n  Kh = \"KH\",\n  /** Kiribati */\n  Ki = \"KI\",\n  /** Comoros */\n  Km = \"KM\",\n  /** Saint Kitts and Nevis */\n  Kn = \"KN\",\n  /** Korea, South */\n  Kr = \"KR\",\n  /** Kuwait */\n  Kw = \"KW\",\n  /** Cayman Islands */\n  Ky = \"KY\",\n  /** Kazakhstan */\n  Kz = \"KZ\",\n  /** Laos */\n  La = \"LA\",\n  /** Lebanon */\n  Lb = \"LB\",\n  /** Saint Lucia */\n  Lc = \"LC\",\n  /** Liechtenstein */\n  Li = \"LI\",\n  /** Sri Lanka */\n  Lk = \"LK\",\n  /** Liberia */\n  Lr = \"LR\",\n  /** Lesotho */\n  Ls = \"LS\",\n  /** Lithuania */\n  Lt = \"LT\",\n  /** Luxembourg */\n  Lu = \"LU\",\n  /** Latvia */\n  Lv = \"LV\",\n  /** Libya */\n  Ly = \"LY\",\n  /** Morocco */\n  Ma = \"MA\",\n  /** Monaco */\n  Mc = \"MC\",\n  /** Moldova */\n  Md = \"MD\",\n  /** Montenegro */\n  Me = \"ME\",\n  /** Saint Martin (French part) */\n  Mf = \"MF\",\n  /** Madagascar */\n  Mg = \"MG\",\n  /** Marshall Islands */\n  Mh = \"MH\",\n  /** Macedonia */\n  Mk = \"MK\",\n  /** Mali */\n  Ml = \"ML\",\n  /** Myanmar */\n  Mm = \"MM\",\n  /** Mongolia */\n  Mn = \"MN\",\n  /** Macau */\n  Mo = \"MO\",\n  /** Northern Mariana Islands */\n  Mp = \"MP\",\n  /** Martinique */\n  Mq = \"MQ\",\n  /** Mauritania */\n  Mr = \"MR\",\n  /** Montserrat */\n  Ms = \"MS\",\n  /** Malta */\n  Mt = \"MT\",\n  /** Mauritius */\n  Mu = \"MU\",\n  /** Maldives */\n  Mv = \"MV\",\n  /** Malawi */\n  Mw = \"MW\",\n  /** Mexico */\n  Mx = \"MX\",\n  /** Malaysia */\n  My = \"MY\",\n  /** Mozambique */\n  Mz = \"MZ\",\n  /** Namibia */\n  Na = \"NA\",\n  /** New Caledonia */\n  Nc = \"NC\",\n  /** Niger */\n  Ne = \"NE\",\n  /** Norfolk Island */\n  Nf = \"NF\",\n  /** Nigeria */\n  Ng = \"NG\",\n  /** Nicaragua */\n  Ni = \"NI\",\n  /** Netherlands */\n  Nl = \"NL\",\n  /** Norway */\n  No = \"NO\",\n  /** Nepal */\n  Np = \"NP\",\n  /** Nauru */\n  Nr = \"NR\",\n  /** Niue */\n  Nu = \"NU\",\n  /** New Zealand */\n  Nz = \"NZ\",\n  /** Oman */\n  Om = \"OM\",\n  /** Panama */\n  Pa = \"PA\",\n  /** Peru */\n  Pe = \"PE\",\n  /** French Polynesia */\n  Pf = \"PF\",\n  /** Papua New Guinea */\n  Pg = \"PG\",\n  /** Philippines */\n  Ph = \"PH\",\n  /** Pakistan */\n  Pk = \"PK\",\n  /** Poland */\n  Pl = \"PL\",\n  /** Saint Pierre and Miquelon */\n  Pm = \"PM\",\n  /** Pitcairn */\n  Pn = \"PN\",\n  /** Puerto Rico */\n  Pr = \"PR\",\n  /** Palestine */\n  Ps = \"PS\",\n  /** Portugal */\n  Pt = \"PT\",\n  /** Palau */\n  Pw = \"PW\",\n  /** Paraguay */\n  Py = \"PY\",\n  /** Qatar */\n  Qa = \"QA\",\n  /** Reunion */\n  Re = \"RE\",\n  /** Romania */\n  Ro = \"RO\",\n  /** Serbia */\n  Rs = \"RS\",\n  /** Russian Federation */\n  Ru = \"RU\",\n  /** Rwanda */\n  Rw = \"RW\",\n  /** Saudi Arabia */\n  Sa = \"SA\",\n  /** Solomon Islands */\n  Sb = \"SB\",\n  /** Seychelles */\n  Sc = \"SC\",\n  /** Sudan */\n  Sd = \"SD\",\n  /** Sweden */\n  Se = \"SE\",\n  /** Singapore */\n  Sg = \"SG\",\n  /** Saint Helena */\n  Sh = \"SH\",\n  /** Slovenia */\n  Si = \"SI\",\n  /** Svalbard and Jan Mayen Islands */\n  Sj = \"SJ\",\n  /** Slovakia */\n  Sk = \"SK\",\n  /** Sierra Leone */\n  Sl = \"SL\",\n  /** San Marino */\n  Sm = \"SM\",\n  /** Senegal */\n  Sn = \"SN\",\n  /** Somalia */\n  So = \"SO\",\n  /** Suriname */\n  Sr = \"SR\",\n  /** South Sudan */\n  Ss = \"SS\",\n  /** Sao Tome and Principe */\n  St = \"ST\",\n  /** El Salvador */\n  Sv = \"SV\",\n  /** Sint Maarten (Dutch part) */\n  Sx = \"SX\",\n  /** Swaziland */\n  Sz = \"SZ\",\n  /** Turks and Caicos Islands */\n  Tc = \"TC\",\n  /** Chad */\n  Td = \"TD\",\n  /** French Southern Lands */\n  Tf = \"TF\",\n  /** Togo */\n  Tg = \"TG\",\n  /** Thailand */\n  Th = \"TH\",\n  /** Tajikistan */\n  Tj = \"TJ\",\n  /** Tokelau */\n  Tk = \"TK\",\n  /** Timor-Leste */\n  Tl = \"TL\",\n  /** Turkmenistan */\n  Tm = \"TM\",\n  /** Tunisia */\n  Tn = \"TN\",\n  /** Tonga */\n  To = \"TO\",\n  /** Turkey */\n  Tr = \"TR\",\n  /** Trinidad and Tobago */\n  Tt = \"TT\",\n  /** Tuvalu */\n  Tv = \"TV\",\n  /** Taiwan */\n  Tw = \"TW\",\n  /** Tanzania */\n  Tz = \"TZ\",\n  /** Ukraine */\n  Ua = \"UA\",\n  /** Uganda */\n  Ug = \"UG\",\n  /** United States Minor Outlying Islands */\n  Um = \"UM\",\n  /** United States of America */\n  Us = \"US\",\n  /** Uruguay */\n  Uy = \"UY\",\n  /** Uzbekistan */\n  Uz = \"UZ\",\n  /** Vatican City */\n  Va = \"VA\",\n  /** Saint Vincent and the Grenadines */\n  Vc = \"VC\",\n  /** Venezuela */\n  Ve = \"VE\",\n  /** Virgin Islands, British */\n  Vg = \"VG\",\n  /** Virgin Islands, U.S. */\n  Vi = \"VI\",\n  /** Vietnam */\n  Vn = \"VN\",\n  /** Vanuatu */\n  Vu = \"VU\",\n  /** Wallis and Futuna Islands */\n  Wf = \"WF\",\n  /** Samoa */\n  Ws = \"WS\",\n  /** Yemen */\n  Ye = \"YE\",\n  /** Mayotte */\n  Yt = \"YT\",\n  /** South Africa */\n  Za = \"ZA\",\n  /** Zambia */\n  Zm = \"ZM\",\n  /** Zimbabwe */\n  Zw = \"ZW\",\n}\n\n/** A goal associated with a GitHub Sponsors listing, representing a target the sponsored maintainer would like to attain. */\nexport type SponsorsGoal = {\n  __typename?: \"SponsorsGoal\";\n  /** A description of the goal from the maintainer. */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** What the objective of this goal is. */\n  kind: SponsorsGoalKind;\n  /** The percentage representing how complete this goal is, between 0-100. */\n  percentComplete: Scalars[\"Int\"];\n  /** What the goal amount is. Represents an amount in USD for monthly sponsorship amount goals. Represents a count of unique sponsors for total sponsors count goals. */\n  targetValue: Scalars[\"Int\"];\n  /** A brief summary of the kind and target value of this goal. */\n  title: Scalars[\"String\"];\n};\n\n/** The different kinds of goals a GitHub Sponsors member can have. */\nexport enum SponsorsGoalKind {\n  /** The goal is about getting a certain amount in USD from sponsorships each month. */\n  MonthlySponsorshipAmount = \"MONTHLY_SPONSORSHIP_AMOUNT\",\n  /** The goal is about reaching a certain number of sponsors. */\n  TotalSponsorsCount = \"TOTAL_SPONSORS_COUNT\",\n}\n\n/** A GitHub Sponsors listing. */\nexport type SponsorsListing = Node & {\n  __typename?: \"SponsorsListing\";\n  /** The current goal the maintainer is trying to reach with GitHub Sponsors, if any. */\n  activeGoal?: Maybe<SponsorsGoal>;\n  /** The Stripe Connect account currently in use for payouts for this Sponsors listing, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization. */\n  activeStripeConnectAccount?: Maybe<StripeConnectAccount>;\n  /** The name of the country or region with the maintainer's bank account or fiscal host. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization. */\n  billingCountryOrRegion?: Maybe<Scalars[\"String\"]>;\n  /** The email address used by GitHub to contact the sponsorable about their GitHub Sponsors profile. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization. */\n  contactEmailAddress?: Maybe<Scalars[\"String\"]>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The HTTP path for the Sponsors dashboard for this Sponsors listing. */\n  dashboardResourcePath: Scalars[\"URI\"];\n  /** The HTTP URL for the Sponsors dashboard for this Sponsors listing. */\n  dashboardUrl: Scalars[\"URI\"];\n  /** The records featured on the GitHub Sponsors profile. */\n  featuredItems: Array<SponsorsListingFeaturedItem>;\n  /** The fiscal host used for payments, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization. */\n  fiscalHost?: Maybe<Organization>;\n  /** The full description of the listing. */\n  fullDescription: Scalars[\"String\"];\n  /** The full description of the listing rendered to HTML. */\n  fullDescriptionHTML: Scalars[\"HTML\"];\n  id: Scalars[\"ID\"];\n  /** Whether this listing is publicly visible. */\n  isPublic: Scalars[\"Boolean\"];\n  /** The listing's full name. */\n  name: Scalars[\"String\"];\n  /** A future date on which this listing is eligible to receive a payout. */\n  nextPayoutDate?: Maybe<Scalars[\"Date\"]>;\n  /** The name of the country or region where the maintainer resides. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization. */\n  residenceCountryOrRegion?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for this Sponsors listing. */\n  resourcePath: Scalars[\"URI\"];\n  /** The short description of the listing. */\n  shortDescription: Scalars[\"String\"];\n  /** The short name of the listing. */\n  slug: Scalars[\"String\"];\n  /** The entity this listing represents who can be sponsored on GitHub Sponsors. */\n  sponsorable: Sponsorable;\n  /** The tiers for this GitHub Sponsors profile. */\n  tiers?: Maybe<SponsorsTierConnection>;\n  /** The HTTP URL for this Sponsors listing. */\n  url: Scalars[\"URI\"];\n};\n\n/** A GitHub Sponsors listing. */\nexport type SponsorsListingFeaturedItemsArgs = {\n  featureableTypes?: InputMaybe<Array<SponsorsListingFeaturedItemFeatureableType>>;\n};\n\n/** A GitHub Sponsors listing. */\nexport type SponsorsListingTiersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includeUnpublished?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorsTierOrder>;\n};\n\n/** A record that can be featured on a GitHub Sponsors profile. */\nexport type SponsorsListingFeatureableItem = Repository | User;\n\n/** A record that is promoted on a GitHub Sponsors profile. */\nexport type SponsorsListingFeaturedItem = Node & {\n  __typename?: \"SponsorsListingFeaturedItem\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Will either be a description from the sponsorable maintainer about why they featured this item, or the item's description itself, such as a user's bio from their GitHub profile page. */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** The record that is featured on the GitHub Sponsors profile. */\n  featureable: SponsorsListingFeatureableItem;\n  id: Scalars[\"ID\"];\n  /** The position of this featured item on the GitHub Sponsors profile with a lower position indicating higher precedence. Starts at 1. */\n  position: Scalars[\"Int\"];\n  /** The GitHub Sponsors profile that features this record. */\n  sponsorsListing: SponsorsListing;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** The different kinds of records that can be featured on a GitHub Sponsors profile page. */\nexport enum SponsorsListingFeaturedItemFeatureableType {\n  /** A repository owned by the user or organization with the GitHub Sponsors profile. */\n  Repository = \"REPOSITORY\",\n  /** A user who belongs to the organization with the GitHub Sponsors profile. */\n  User = \"USER\",\n}\n\n/** A GitHub Sponsors tier associated with a GitHub Sponsors listing. */\nexport type SponsorsTier = Node & {\n  __typename?: \"SponsorsTier\";\n  /** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\n  adminInfo?: Maybe<SponsorsTierAdminInfo>;\n  /** Get a different tier for this tier's maintainer that is at the same frequency as this tier but with an equal or lesser cost. Returns the published tier with the monthly price closest to this tier's without going over. */\n  closestLesserValueTier?: Maybe<SponsorsTier>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The description of the tier. */\n  description: Scalars[\"String\"];\n  /** The tier description rendered to HTML */\n  descriptionHTML: Scalars[\"HTML\"];\n  id: Scalars[\"ID\"];\n  /** Whether this tier was chosen at checkout time by the sponsor rather than defined ahead of time by the maintainer who manages the Sponsors listing. */\n  isCustomAmount: Scalars[\"Boolean\"];\n  /** Whether this tier is only for use with one-time sponsorships. */\n  isOneTime: Scalars[\"Boolean\"];\n  /** How much this tier costs per month in cents. */\n  monthlyPriceInCents: Scalars[\"Int\"];\n  /** How much this tier costs per month in USD. */\n  monthlyPriceInDollars: Scalars[\"Int\"];\n  /** The name of the tier. */\n  name: Scalars[\"String\"];\n  /** The sponsors listing that this tier belongs to. */\n  sponsorsListing: SponsorsListing;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\nexport type SponsorsTierAdminInfo = {\n  __typename?: \"SponsorsTierAdminInfo\";\n  /** Indicates whether this tier is still a work in progress by the sponsorable and not yet published to the associated GitHub Sponsors profile. Draft tiers cannot be used for new sponsorships and will not be in use on existing sponsorships. Draft tiers cannot be seen by anyone but the admins of the GitHub Sponsors profile. */\n  isDraft: Scalars[\"Boolean\"];\n  /** Indicates whether this tier is published to the associated GitHub Sponsors profile. Published tiers are visible to anyone who can see the GitHub Sponsors profile, and are available for use in sponsorships if the GitHub Sponsors profile is publicly visible. */\n  isPublished: Scalars[\"Boolean\"];\n  /** Indicates whether this tier has been retired from the associated GitHub Sponsors profile. Retired tiers are no longer shown on the GitHub Sponsors profile and cannot be chosen for new sponsorships. Existing sponsorships may still use retired tiers if the sponsor selected the tier before it was retired. */\n  isRetired: Scalars[\"Boolean\"];\n  /** The sponsorships using this tier. */\n  sponsorships: SponsorshipConnection;\n};\n\n/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\nexport type SponsorsTierAdminInfoSponsorshipsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includePrivate?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n/** The connection type for SponsorsTier. */\nexport type SponsorsTierConnection = {\n  __typename?: \"SponsorsTierConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorsTierEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SponsorsTier>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SponsorsTierEdge = {\n  __typename?: \"SponsorsTierEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<SponsorsTier>;\n};\n\n/** Ordering options for Sponsors tiers connections. */\nexport type SponsorsTierOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order tiers by. */\n  field: SponsorsTierOrderField;\n};\n\n/** Properties by which Sponsors tiers connections can be ordered. */\nexport enum SponsorsTierOrderField {\n  /** Order tiers by creation time. */\n  CreatedAt = \"CREATED_AT\",\n  /** Order tiers by their monthly price in cents */\n  MonthlyPriceInCents = \"MONTHLY_PRICE_IN_CENTS\",\n}\n\n/** A sponsorship relationship between a sponsor and a maintainer */\nexport type Sponsorship = Node & {\n  __typename?: \"Sponsorship\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Whether the sponsorship is active. False implies the sponsor is a past sponsor of the maintainer, while true implies they are a current sponsor. */\n  isActive: Scalars[\"Boolean\"];\n  /** Whether this sponsorship represents a one-time payment versus a recurring sponsorship. */\n  isOneTimePayment: Scalars[\"Boolean\"];\n  /** Whether the sponsor has chosen to receive sponsorship update emails sent from the sponsorable. Only returns a non-null value when the viewer has permission to know this. */\n  isSponsorOptedIntoEmail?: Maybe<Scalars[\"Boolean\"]>;\n  /**\n   * The entity that is being sponsored\n   * @deprecated `Sponsorship.maintainer` will be removed. Use `Sponsorship.sponsorable` instead. Removal on 2020-04-01 UTC.\n   */\n  maintainer: User;\n  /** The privacy level for this sponsorship. */\n  privacyLevel: SponsorshipPrivacy;\n  /**\n   * The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user.\n   * @deprecated `Sponsorship.sponsor` will be removed. Use `Sponsorship.sponsorEntity` instead. Removal on 2020-10-01 UTC.\n   */\n  sponsor?: Maybe<User>;\n  /** The user or organization that is sponsoring, if you have permission to view them. */\n  sponsorEntity?: Maybe<Sponsor>;\n  /** The entity that is being sponsored */\n  sponsorable: Sponsorable;\n  /** The associated sponsorship tier */\n  tier?: Maybe<SponsorsTier>;\n  /** Identifies the date and time when the current tier was chosen for this sponsorship. */\n  tierSelectedAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** The connection type for Sponsorship. */\nexport type SponsorshipConnection = {\n  __typename?: \"SponsorshipConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorshipEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Sponsorship>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n  /** The total amount in cents of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships. */\n  totalRecurringMonthlyPriceInCents: Scalars[\"Int\"];\n  /** The total amount in USD of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships. */\n  totalRecurringMonthlyPriceInDollars: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SponsorshipEdge = {\n  __typename?: \"SponsorshipEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Sponsorship>;\n};\n\n/** An update sent to sponsors of a user or organization on GitHub Sponsors. */\nexport type SponsorshipNewsletter = Node & {\n  __typename?: \"SponsorshipNewsletter\";\n  /** The author of the newsletter. */\n  author?: Maybe<User>;\n  /** The contents of the newsletter, the message the sponsorable wanted to give. */\n  body: Scalars[\"String\"];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Indicates if the newsletter has been made available to sponsors. */\n  isPublished: Scalars[\"Boolean\"];\n  /** The user or organization this newsletter is from. */\n  sponsorable: Sponsorable;\n  /** The subject of the newsletter, what it's about. */\n  subject: Scalars[\"String\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** The connection type for SponsorshipNewsletter. */\nexport type SponsorshipNewsletterConnection = {\n  __typename?: \"SponsorshipNewsletterConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorshipNewsletterEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SponsorshipNewsletter>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SponsorshipNewsletterEdge = {\n  __typename?: \"SponsorshipNewsletterEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<SponsorshipNewsletter>;\n};\n\n/** Ordering options for sponsorship newsletter connections. */\nexport type SponsorshipNewsletterOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order sponsorship newsletters by. */\n  field: SponsorshipNewsletterOrderField;\n};\n\n/** Properties by which sponsorship update connections can be ordered. */\nexport enum SponsorshipNewsletterOrderField {\n  /** Order sponsorship newsletters by when they were created. */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** Ordering options for sponsorship connections. */\nexport type SponsorshipOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order sponsorship by. */\n  field: SponsorshipOrderField;\n};\n\n/** Properties by which sponsorship connections can be ordered. */\nexport enum SponsorshipOrderField {\n  /** Order sponsorship by creation time. */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** The privacy of a sponsorship */\nexport enum SponsorshipPrivacy {\n  /** Private */\n  Private = \"PRIVATE\",\n  /** Public */\n  Public = \"PUBLIC\",\n}\n\n/** The possible default commit messages for squash merges. */\nexport enum SquashMergeCommitMessage {\n  /** Default to a blank commit message. */\n  Blank = \"BLANK\",\n  /** Default to the branch's commit messages. */\n  CommitMessages = \"COMMIT_MESSAGES\",\n  /** Default to the pull request's body. */\n  PrBody = \"PR_BODY\",\n}\n\n/** The possible default commit titles for squash merges. */\nexport enum SquashMergeCommitTitle {\n  /** Default to the commit's title (if only one commit) or the pull request's title (when more than one commit). */\n  CommitOrPrTitle = \"COMMIT_OR_PR_TITLE\",\n  /** Default to the pull request's title. */\n  PrTitle = \"PR_TITLE\",\n}\n\n/** Represents an SSH signature on a Commit or Tag. */\nexport type SshSignature = GitSignature & {\n  __typename?: \"SshSignature\";\n  /** Email used to sign this object. */\n  email: Scalars[\"String\"];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars[\"Boolean\"];\n  /** Hex-encoded fingerprint of the key that signed this object. */\n  keyFingerprint?: Maybe<Scalars[\"String\"]>;\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars[\"String\"];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars[\"String\"];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** Ways in which star connections can be ordered. */\nexport type StarOrder = {\n  /** The direction in which to order nodes. */\n  direction: OrderDirection;\n  /** The field in which to order nodes by. */\n  field: StarOrderField;\n};\n\n/** Properties by which star connections can be ordered. */\nexport enum StarOrderField {\n  /** Allows ordering a list of stars by when they were created. */\n  StarredAt = \"STARRED_AT\",\n}\n\n/** The connection type for User. */\nexport type StargazerConnection = {\n  __typename?: \"StargazerConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<StargazerEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user that's starred a repository. */\nexport type StargazerEdge = {\n  __typename?: \"StargazerEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  node: User;\n  /** Identifies when the item was starred. */\n  starredAt: Scalars[\"DateTime\"];\n};\n\n/** Things that can be starred. */\nexport type Starrable = {\n  id: Scalars[\"ID\"];\n  /**\n   * Returns a count of how many stargazers there are on this object\n   *\n   */\n  stargazerCount: Scalars[\"Int\"];\n  /** A list of users who have starred this starrable. */\n  stargazers: StargazerConnection;\n  /** Returns a boolean indicating whether the viewing user has starred this starrable. */\n  viewerHasStarred: Scalars[\"Boolean\"];\n};\n\n/** Things that can be starred. */\nexport type StarrableStargazersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<StarOrder>;\n};\n\n/** The connection type for Repository. */\nexport type StarredRepositoryConnection = {\n  __typename?: \"StarredRepositoryConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<StarredRepositoryEdge>>>;\n  /** Is the list of stars for this user truncated? This is true for users that have many stars. */\n  isOverLimit: Scalars[\"Boolean\"];\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Repository>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a starred repository. */\nexport type StarredRepositoryEdge = {\n  __typename?: \"StarredRepositoryEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  node: Repository;\n  /** Identifies when the item was starred. */\n  starredAt: Scalars[\"DateTime\"];\n};\n\n/** Autogenerated input type of StartOrganizationMigration */\nexport type StartOrganizationMigrationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The migration source access token. */\n  sourceAccessToken: Scalars[\"String\"];\n  /** The URL of the organization to migrate. */\n  sourceOrgUrl: Scalars[\"URI\"];\n  /** The ID of the enterprise the target organization belongs to. */\n  targetEnterpriseId: Scalars[\"ID\"];\n  /** The name of the target organization. */\n  targetOrgName: Scalars[\"String\"];\n};\n\n/** Autogenerated return type of StartOrganizationMigration */\nexport type StartOrganizationMigrationPayload = {\n  __typename?: \"StartOrganizationMigrationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new organization migration. */\n  orgMigration?: Maybe<OrganizationMigration>;\n};\n\n/** Autogenerated input type of StartRepositoryMigration */\nexport type StartRepositoryMigrationInput = {\n  /** The migration source access token. */\n  accessToken: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Whether to continue the migration on error. Defaults to `false`. */\n  continueOnError?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The signed URL to access the user-uploaded git archive. */\n  gitArchiveUrl?: InputMaybe<Scalars[\"String\"]>;\n  /** The GitHub personal access token of the user importing to the target repository. */\n  githubPat?: InputMaybe<Scalars[\"String\"]>;\n  /** Whether to lock the source repository. */\n  lockSource?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The signed URL to access the user-uploaded metadata archive. */\n  metadataArchiveUrl?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the organization that will own the imported repository. */\n  ownerId: Scalars[\"ID\"];\n  /** The name of the imported repository. */\n  repositoryName: Scalars[\"String\"];\n  /** Whether to skip migrating releases for the repository. */\n  skipReleases?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The ID of the migration source. */\n  sourceId: Scalars[\"ID\"];\n  /** The URL of the source repository. */\n  sourceRepositoryUrl: Scalars[\"URI\"];\n  /** The visibility of the imported repository. */\n  targetRepoVisibility?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of StartRepositoryMigration */\nexport type StartRepositoryMigrationPayload = {\n  __typename?: \"StartRepositoryMigrationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The new repository migration. */\n  repositoryMigration?: Maybe<RepositoryMigration>;\n};\n\n/** Represents a commit status. */\nexport type Status = Node & {\n  __typename?: \"Status\";\n  /** A list of status contexts and check runs for this commit. */\n  combinedContexts: StatusCheckRollupContextConnection;\n  /** The commit this status is attached to. */\n  commit?: Maybe<Commit>;\n  /** Looks up an individual status context by context name. */\n  context?: Maybe<StatusContext>;\n  /** The individual status contexts for this commit. */\n  contexts: Array<StatusContext>;\n  id: Scalars[\"ID\"];\n  /** The combined commit status. */\n  state: StatusState;\n};\n\n/** Represents a commit status. */\nexport type StatusCombinedContextsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a commit status. */\nexport type StatusContextArgs = {\n  name: Scalars[\"String\"];\n};\n\n/** Represents the rollup for both the check runs and status for a commit. */\nexport type StatusCheckRollup = Node & {\n  __typename?: \"StatusCheckRollup\";\n  /** The commit the status and check runs are attached to. */\n  commit?: Maybe<Commit>;\n  /** A list of status contexts and check runs for this commit. */\n  contexts: StatusCheckRollupContextConnection;\n  id: Scalars[\"ID\"];\n  /** The combined status for the commit. */\n  state: StatusState;\n};\n\n/** Represents the rollup for both the check runs and status for a commit. */\nexport type StatusCheckRollupContextsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Types that can be inside a StatusCheckRollup context. */\nexport type StatusCheckRollupContext = CheckRun | StatusContext;\n\n/** The connection type for StatusCheckRollupContext. */\nexport type StatusCheckRollupContextConnection = {\n  __typename?: \"StatusCheckRollupContextConnection\";\n  /** The number of check runs in this rollup. */\n  checkRunCount: Scalars[\"Int\"];\n  /** Counts of check runs by state. */\n  checkRunCountsByState?: Maybe<Array<CheckRunStateCount>>;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<StatusCheckRollupContextEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<StatusCheckRollupContext>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The number of status contexts in this rollup. */\n  statusContextCount: Scalars[\"Int\"];\n  /** Counts of status contexts by state. */\n  statusContextCountsByState?: Maybe<Array<StatusContextStateCount>>;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type StatusCheckRollupContextEdge = {\n  __typename?: \"StatusCheckRollupContextEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<StatusCheckRollupContext>;\n};\n\n/** Represents an individual commit status context */\nexport type StatusContext = Node &\n  RequirableByPullRequest & {\n    __typename?: \"StatusContext\";\n    /** The avatar of the OAuth application or the user that created the status */\n    avatarUrl?: Maybe<Scalars[\"URI\"]>;\n    /** This commit this status context is attached to. */\n    commit?: Maybe<Commit>;\n    /** The name of this status context. */\n    context: Scalars[\"String\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** The actor who created this status context. */\n    creator?: Maybe<Actor>;\n    /** The description for this status context. */\n    description?: Maybe<Scalars[\"String\"]>;\n    id: Scalars[\"ID\"];\n    /** Whether this is required to pass before merging for a specific pull request. */\n    isRequired: Scalars[\"Boolean\"];\n    /** The state of this status context. */\n    state: StatusState;\n    /** The URL for this status context. */\n    targetUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Represents an individual commit status context */\nexport type StatusContextAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents an individual commit status context */\nexport type StatusContextIsRequiredArgs = {\n  pullRequestId?: InputMaybe<Scalars[\"ID\"]>;\n  pullRequestNumber?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a count of the state of a status context. */\nexport type StatusContextStateCount = {\n  __typename?: \"StatusContextStateCount\";\n  /** The number of statuses with this state. */\n  count: Scalars[\"Int\"];\n  /** The state of a status context. */\n  state: StatusState;\n};\n\n/** The possible commit status states. */\nexport enum StatusState {\n  /** Status is errored. */\n  Error = \"ERROR\",\n  /** Status is expected. */\n  Expected = \"EXPECTED\",\n  /** Status is failing. */\n  Failure = \"FAILURE\",\n  /** Status is pending. */\n  Pending = \"PENDING\",\n  /** Status is successful. */\n  Success = \"SUCCESS\",\n}\n\n/** A Stripe Connect account for receiving sponsorship funds from GitHub Sponsors. */\nexport type StripeConnectAccount = {\n  __typename?: \"StripeConnectAccount\";\n  /** The account number used to identify this Stripe Connect account. */\n  accountId: Scalars[\"String\"];\n  /** The name of the country or region of an external account, such as a bank account, tied to the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization. */\n  billingCountryOrRegion?: Maybe<Scalars[\"String\"]>;\n  /** The name of the country or region of the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization. */\n  countryOrRegion?: Maybe<Scalars[\"String\"]>;\n  /** Whether this Stripe Connect account is currently in use for the associated GitHub Sponsors profile. */\n  isActive: Scalars[\"Boolean\"];\n  /** The GitHub Sponsors profile associated with this Stripe Connect account. */\n  sponsorsListing: SponsorsListing;\n  /** The URL to access this Stripe Connect account on Stripe's website. */\n  stripeDashboardUrl: Scalars[\"URI\"];\n};\n\n/** Autogenerated input type of SubmitPullRequestReview */\nexport type SubmitPullRequestReviewInput = {\n  /** The text field to set on the Pull Request Review. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The event to send to the Pull Request Review. */\n  event: PullRequestReviewEvent;\n  /** The Pull Request ID to submit any pending reviews. */\n  pullRequestId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The Pull Request Review ID to submit. */\n  pullRequestReviewId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated return type of SubmitPullRequestReview */\nexport type SubmitPullRequestReviewPayload = {\n  __typename?: \"SubmitPullRequestReviewPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The submitted pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** A pointer to a repository at a specific revision embedded inside another repository. */\nexport type Submodule = {\n  __typename?: \"Submodule\";\n  /** The branch of the upstream submodule for tracking updates */\n  branch?: Maybe<Scalars[\"String\"]>;\n  /** The git URL of the submodule repository */\n  gitUrl: Scalars[\"URI\"];\n  /** The name of the submodule in .gitmodules */\n  name: Scalars[\"String\"];\n  /** The name of the submodule in .gitmodules (Base64-encoded) */\n  nameRaw: Scalars[\"Base64String\"];\n  /** The path in the superproject that this submodule is located in */\n  path: Scalars[\"String\"];\n  /** The path in the superproject that this submodule is located in (Base64-encoded) */\n  pathRaw: Scalars[\"Base64String\"];\n  /** The commit revision of the subproject repository being tracked by the submodule */\n  subprojectCommitOid?: Maybe<Scalars[\"GitObjectID\"]>;\n};\n\n/** The connection type for Submodule. */\nexport type SubmoduleConnection = {\n  __typename?: \"SubmoduleConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SubmoduleEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Submodule>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SubmoduleEdge = {\n  __typename?: \"SubmoduleEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Submodule>;\n};\n\n/** Entities that can be subscribed to for web and email notifications. */\nexport type Subscribable = {\n  id: Scalars[\"ID\"];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars[\"Boolean\"];\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n};\n\n/** Represents a 'subscribed' event on a given `Subscribable`. */\nexport type SubscribedEvent = Node & {\n  __typename?: \"SubscribedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Object referenced by event. */\n  subscribable: Subscribable;\n};\n\n/** The possible states of a subscription. */\nexport enum SubscriptionState {\n  /** The User is never notified. */\n  Ignored = \"IGNORED\",\n  /** The User is notified of all conversations. */\n  Subscribed = \"SUBSCRIBED\",\n  /** The User is only notified when participating or @mentioned. */\n  Unsubscribed = \"UNSUBSCRIBED\",\n}\n\n/** A suggestion to review a pull request based on a user's commit history and review comments. */\nexport type SuggestedReviewer = {\n  __typename?: \"SuggestedReviewer\";\n  /** Is this suggestion based on past commits? */\n  isAuthor: Scalars[\"Boolean\"];\n  /** Is this suggestion based on past review comments? */\n  isCommenter: Scalars[\"Boolean\"];\n  /** Identifies the user suggested to review the pull request. */\n  reviewer: User;\n};\n\n/** Represents a Git tag. */\nexport type Tag = GitObject &\n  Node & {\n    __typename?: \"Tag\";\n    /** An abbreviated version of the Git object ID */\n    abbreviatedOid: Scalars[\"String\"];\n    /** The HTTP path for this Git object */\n    commitResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this Git object */\n    commitUrl: Scalars[\"URI\"];\n    id: Scalars[\"ID\"];\n    /** The Git tag message. */\n    message?: Maybe<Scalars[\"String\"]>;\n    /** The Git tag name. */\n    name: Scalars[\"String\"];\n    /** The Git object ID */\n    oid: Scalars[\"GitObjectID\"];\n    /** The Repository the Git object belongs to */\n    repository: Repository;\n    /** Details about the tag author. */\n    tagger?: Maybe<GitActor>;\n    /** The Git object the tag points to. */\n    target: GitObject;\n  };\n\n/** A team of users in an organization. */\nexport type Team = MemberStatusable &\n  Node &\n  Subscribable & {\n    __typename?: \"Team\";\n    /** A list of teams that are ancestors of this team. */\n    ancestors: TeamConnection;\n    /** A URL pointing to the team's avatar. */\n    avatarUrl?: Maybe<Scalars[\"URI\"]>;\n    /** List of child teams belonging to this team */\n    childTeams: TeamConnection;\n    /** The slug corresponding to the organization and team. */\n    combinedSlug: Scalars[\"String\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The description of the team. */\n    description?: Maybe<Scalars[\"String\"]>;\n    /** Find a team discussion by its number. */\n    discussion?: Maybe<TeamDiscussion>;\n    /** A list of team discussions. */\n    discussions: TeamDiscussionConnection;\n    /** The HTTP path for team discussions */\n    discussionsResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for team discussions */\n    discussionsUrl: Scalars[\"URI\"];\n    /** The HTTP path for editing this team */\n    editTeamResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for editing this team */\n    editTeamUrl: Scalars[\"URI\"];\n    id: Scalars[\"ID\"];\n    /** A list of pending invitations for users to this team */\n    invitations?: Maybe<OrganizationInvitationConnection>;\n    /** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n    memberStatuses: UserStatusConnection;\n    /** A list of users who are members of this team. */\n    members: TeamMemberConnection;\n    /** The HTTP path for the team' members */\n    membersResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for the team' members */\n    membersUrl: Scalars[\"URI\"];\n    /** The name of the team. */\n    name: Scalars[\"String\"];\n    /** The HTTP path creating a new team */\n    newTeamResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL creating a new team */\n    newTeamUrl: Scalars[\"URI\"];\n    /** The organization that owns this team. */\n    organization: Organization;\n    /** The parent team of the team. */\n    parentTeam?: Maybe<Team>;\n    /** The level of privacy the team has. */\n    privacy: TeamPrivacy;\n    /** Finds and returns the project according to the provided project number. */\n    projectV2?: Maybe<ProjectV2>;\n    /** List of projects this team has collaborator access to. */\n    projectsV2: ProjectV2Connection;\n    /** A list of repositories this team has access to. */\n    repositories: TeamRepositoryConnection;\n    /** The HTTP path for this team's repositories */\n    repositoriesResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this team's repositories */\n    repositoriesUrl: Scalars[\"URI\"];\n    /** The HTTP path for this team */\n    resourcePath: Scalars[\"URI\"];\n    /** The slug corresponding to the team. */\n    slug: Scalars[\"String\"];\n    /** The HTTP path for this team's teams */\n    teamsResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this team's teams */\n    teamsUrl: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this team */\n    url: Scalars[\"URI\"];\n    /** Team is adminable by the viewer. */\n    viewerCanAdminister: Scalars[\"Boolean\"];\n    /** Check if the viewer is able to change their subscription status for the repository. */\n    viewerCanSubscribe: Scalars[\"Boolean\"];\n    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n    viewerSubscription?: Maybe<SubscriptionState>;\n  };\n\n/** A team of users in an organization. */\nexport type TeamAncestorsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A team of users in an organization. */\nexport type TeamAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A team of users in an organization. */\nexport type TeamChildTeamsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  immediateOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<TeamOrder>;\n  userLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n};\n\n/** A team of users in an organization. */\nexport type TeamDiscussionArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** A team of users in an organization. */\nexport type TeamDiscussionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isPinned?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<TeamDiscussionOrder>;\n};\n\n/** A team of users in an organization. */\nexport type TeamInvitationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A team of users in an organization. */\nexport type TeamMemberStatusesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<UserStatusOrder>;\n};\n\n/** A team of users in an organization. */\nexport type TeamMembersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  membership?: InputMaybe<TeamMembershipType>;\n  orderBy?: InputMaybe<TeamMemberOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n  role?: InputMaybe<TeamMemberRole>;\n};\n\n/** A team of users in an organization. */\nexport type TeamProjectV2Args = {\n  number: Scalars[\"Int\"];\n};\n\n/** A team of users in an organization. */\nexport type TeamProjectsV2Args = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  filterBy?: InputMaybe<ProjectV2Filters>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A team of users in an organization. */\nexport type TeamRepositoriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<TeamRepositoryOrder>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Audit log entry for a team.add_member event. */\nexport type TeamAddMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  TeamAuditEntryData & {\n    __typename?: \"TeamAddMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** Whether the team was mapped to an LDAP Group. */\n    isLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The team associated with the action */\n    team?: Maybe<Team>;\n    /** The name of the team */\n    teamName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for this team */\n    teamResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for this team */\n    teamUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a team.add_repository event. */\nexport type TeamAddRepositoryAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData &\n  TeamAuditEntryData & {\n    __typename?: \"TeamAddRepositoryAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** Whether the team was mapped to an LDAP Group. */\n    isLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The team associated with the action */\n    team?: Maybe<Team>;\n    /** The name of the team */\n    teamName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for this team */\n    teamResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for this team */\n    teamUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Metadata for an audit entry with action team.* */\nexport type TeamAuditEntryData = {\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars[\"String\"]>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars[\"URI\"]>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Audit log entry for a team.change_parent_team event. */\nexport type TeamChangeParentTeamAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  TeamAuditEntryData & {\n    __typename?: \"TeamChangeParentTeamAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** Whether the team was mapped to an LDAP Group. */\n    isLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The new parent team. */\n    parentTeam?: Maybe<Team>;\n    /** The name of the new parent team */\n    parentTeamName?: Maybe<Scalars[\"String\"]>;\n    /** The name of the former parent team */\n    parentTeamNameWas?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the parent team */\n    parentTeamResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the parent team */\n    parentTeamUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The former parent team. */\n    parentTeamWas?: Maybe<Team>;\n    /** The HTTP path for the previous parent team */\n    parentTeamWasResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the previous parent team */\n    parentTeamWasUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The team associated with the action */\n    team?: Maybe<Team>;\n    /** The name of the team */\n    teamName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for this team */\n    teamResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for this team */\n    teamUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The connection type for Team. */\nexport type TeamConnection = {\n  __typename?: \"TeamConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Team>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** A team discussion. */\nexport type TeamDiscussion = Comment &\n  Deletable &\n  Node &\n  Reactable &\n  Subscribable &\n  UniformResourceLocatable &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"TeamDiscussion\";\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the discussion's team. */\n    authorAssociation: CommentAuthorAssociation;\n    /** The body as Markdown. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** Identifies the discussion body hash. */\n    bodyVersion: Scalars[\"String\"];\n    /** A list of comments on this discussion. */\n    comments: TeamDiscussionCommentConnection;\n    /** The HTTP path for discussion comments */\n    commentsResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for discussion comments */\n    commentsUrl: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** Whether or not the discussion is pinned. */\n    isPinned: Scalars[\"Boolean\"];\n    /** Whether or not the discussion is only visible to team members and org admins. */\n    isPrivate: Scalars[\"Boolean\"];\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Identifies the discussion within its team. */\n    number: Scalars[\"Int\"];\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The HTTP path for this discussion */\n    resourcePath: Scalars[\"URI\"];\n    /** The team that defines the context of this discussion. */\n    team: Team;\n    /** The title of the discussion */\n    title: Scalars[\"String\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this discussion */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Whether or not the current viewer can pin this discussion. */\n    viewerCanPin: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the viewer is able to change their subscription status for the repository. */\n    viewerCanSubscribe: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n    viewerSubscription?: Maybe<SubscriptionState>;\n  };\n\n/** A team discussion. */\nexport type TeamDiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  fromComment?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<TeamDiscussionCommentOrder>;\n};\n\n/** A team discussion. */\nexport type TeamDiscussionReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** A team discussion. */\nexport type TeamDiscussionUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionComment = Comment &\n  Deletable &\n  Node &\n  Reactable &\n  UniformResourceLocatable &\n  Updatable &\n  UpdatableComment & {\n    __typename?: \"TeamDiscussionComment\";\n    /** The actor who authored the comment. */\n    author?: Maybe<Actor>;\n    /** Author's association with the comment's team. */\n    authorAssociation: CommentAuthorAssociation;\n    /** The body as Markdown. */\n    body: Scalars[\"String\"];\n    /** The body rendered to HTML. */\n    bodyHTML: Scalars[\"HTML\"];\n    /** The body rendered to text. */\n    bodyText: Scalars[\"String\"];\n    /** The current version of the body content. */\n    bodyVersion: Scalars[\"String\"];\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Check if this comment was created via an email reply. */\n    createdViaEmail: Scalars[\"Boolean\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The discussion this comment is about. */\n    discussion: TeamDiscussion;\n    /** The actor who edited the comment. */\n    editor?: Maybe<Actor>;\n    id: Scalars[\"ID\"];\n    /** Check if this comment was edited and includes an edit with the creation data */\n    includesCreatedEdit: Scalars[\"Boolean\"];\n    /** The moment the editor made the last edit */\n    lastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** Identifies the comment number. */\n    number: Scalars[\"Int\"];\n    /** Identifies when the comment was published at. */\n    publishedAt?: Maybe<Scalars[\"DateTime\"]>;\n    /** A list of reactions grouped by content left on the subject. */\n    reactionGroups?: Maybe<Array<ReactionGroup>>;\n    /** A list of Reactions left on the Issue. */\n    reactions: ReactionConnection;\n    /** The HTTP path for this comment */\n    resourcePath: Scalars[\"URI\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this comment */\n    url: Scalars[\"URI\"];\n    /** A list of edits to this content. */\n    userContentEdits?: Maybe<UserContentEditConnection>;\n    /** Check if the current viewer can delete this object. */\n    viewerCanDelete: Scalars[\"Boolean\"];\n    /** Can user react to this subject */\n    viewerCanReact: Scalars[\"Boolean\"];\n    /** Check if the current viewer can update this object. */\n    viewerCanUpdate: Scalars[\"Boolean\"];\n    /** Reasons why the current viewer can not update this comment. */\n    viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n    /** Did the viewer author this comment. */\n    viewerDidAuthor: Scalars[\"Boolean\"];\n  };\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionCommentReactionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for TeamDiscussionComment. */\nexport type TeamDiscussionCommentConnection = {\n  __typename?: \"TeamDiscussionCommentConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamDiscussionCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<TeamDiscussionComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type TeamDiscussionCommentEdge = {\n  __typename?: \"TeamDiscussionCommentEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<TeamDiscussionComment>;\n};\n\n/** Ways in which team discussion comment connections can be ordered. */\nexport type TeamDiscussionCommentOrder = {\n  /** The direction in which to order nodes. */\n  direction: OrderDirection;\n  /** The field by which to order nodes. */\n  field: TeamDiscussionCommentOrderField;\n};\n\n/** Properties by which team discussion comment connections can be ordered. */\nexport enum TeamDiscussionCommentOrderField {\n  /** Allows sequential ordering of team discussion comments (which is equivalent to chronological ordering). */\n  Number = \"NUMBER\",\n}\n\n/** The connection type for TeamDiscussion. */\nexport type TeamDiscussionConnection = {\n  __typename?: \"TeamDiscussionConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamDiscussionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<TeamDiscussion>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type TeamDiscussionEdge = {\n  __typename?: \"TeamDiscussionEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<TeamDiscussion>;\n};\n\n/** Ways in which team discussion connections can be ordered. */\nexport type TeamDiscussionOrder = {\n  /** The direction in which to order nodes. */\n  direction: OrderDirection;\n  /** The field by which to order nodes. */\n  field: TeamDiscussionOrderField;\n};\n\n/** Properties by which team discussion connections can be ordered. */\nexport enum TeamDiscussionOrderField {\n  /** Allows chronological ordering of team discussions. */\n  CreatedAt = \"CREATED_AT\",\n}\n\n/** An edge in a connection. */\nexport type TeamEdge = {\n  __typename?: \"TeamEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<Team>;\n};\n\n/** The connection type for User. */\nexport type TeamMemberConnection = {\n  __typename?: \"TeamMemberConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamMemberEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user who is a member of a team. */\nexport type TeamMemberEdge = {\n  __typename?: \"TeamMemberEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The HTTP path to the organization's member access page. */\n  memberAccessResourcePath: Scalars[\"URI\"];\n  /** The HTTP URL to the organization's member access page. */\n  memberAccessUrl: Scalars[\"URI\"];\n  node: User;\n  /** The role the member has on the team. */\n  role: TeamMemberRole;\n};\n\n/** Ordering options for team member connections */\nexport type TeamMemberOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order team members by. */\n  field: TeamMemberOrderField;\n};\n\n/** Properties by which team member connections can be ordered. */\nexport enum TeamMemberOrderField {\n  /** Order team members by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order team members by login */\n  Login = \"LOGIN\",\n}\n\n/** The possible team member roles; either 'maintainer' or 'member'. */\nexport enum TeamMemberRole {\n  /** A team maintainer has permission to add and remove team members. */\n  Maintainer = \"MAINTAINER\",\n  /** A team member has no administrative permissions on the team. */\n  Member = \"MEMBER\",\n}\n\n/** Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL. */\nexport enum TeamMembershipType {\n  /** Includes immediate and child team members for the team. */\n  All = \"ALL\",\n  /** Includes only child team members for the team. */\n  ChildTeam = \"CHILD_TEAM\",\n  /** Includes only immediate members of the team. */\n  Immediate = \"IMMEDIATE\",\n}\n\n/** Ways in which team connections can be ordered. */\nexport type TeamOrder = {\n  /** The direction in which to order nodes. */\n  direction: OrderDirection;\n  /** The field in which to order nodes by. */\n  field: TeamOrderField;\n};\n\n/** Properties by which team connections can be ordered. */\nexport enum TeamOrderField {\n  /** Allows ordering a list of teams by name. */\n  Name = \"NAME\",\n}\n\n/** The possible team privacy values. */\nexport enum TeamPrivacy {\n  /** A secret team can only be seen by its members. */\n  Secret = \"SECRET\",\n  /** A visible team can be seen and @mentioned by every member of the organization. */\n  Visible = \"VISIBLE\",\n}\n\n/** Audit log entry for a team.remove_member event. */\nexport type TeamRemoveMemberAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  TeamAuditEntryData & {\n    __typename?: \"TeamRemoveMemberAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** Whether the team was mapped to an LDAP Group. */\n    isLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The team associated with the action */\n    team?: Maybe<Team>;\n    /** The name of the team */\n    teamName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for this team */\n    teamResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for this team */\n    teamUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** Audit log entry for a team.remove_repository event. */\nexport type TeamRemoveRepositoryAuditEntry = AuditEntry &\n  Node &\n  OrganizationAuditEntryData &\n  RepositoryAuditEntryData &\n  TeamAuditEntryData & {\n    __typename?: \"TeamRemoveRepositoryAuditEntry\";\n    /** The action name */\n    action: Scalars[\"String\"];\n    /** The user who initiated the action */\n    actor?: Maybe<AuditEntryActor>;\n    /** The IP address of the actor */\n    actorIp?: Maybe<Scalars[\"String\"]>;\n    /** A readable representation of the actor's location */\n    actorLocation?: Maybe<ActorLocation>;\n    /** The username of the user who initiated the action */\n    actorLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the actor. */\n    actorResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the actor. */\n    actorUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The time the action was initiated */\n    createdAt: Scalars[\"PreciseDateTime\"];\n    id: Scalars[\"ID\"];\n    /** Whether the team was mapped to an LDAP Group. */\n    isLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n    /** The corresponding operation type for the action */\n    operationType?: Maybe<OperationType>;\n    /** The Organization associated with the Audit Entry. */\n    organization?: Maybe<Organization>;\n    /** The name of the Organization. */\n    organizationName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the organization */\n    organizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the organization */\n    organizationUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The repository associated with the action */\n    repository?: Maybe<Repository>;\n    /** The name of the repository */\n    repositoryName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the repository */\n    repositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the repository */\n    repositoryUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The team associated with the action */\n    team?: Maybe<Team>;\n    /** The name of the team */\n    teamName?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for this team */\n    teamResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for this team */\n    teamUrl?: Maybe<Scalars[\"URI\"]>;\n    /** The user affected by the action */\n    user?: Maybe<User>;\n    /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n    userLogin?: Maybe<Scalars[\"String\"]>;\n    /** The HTTP path for the user. */\n    userResourcePath?: Maybe<Scalars[\"URI\"]>;\n    /** The HTTP URL for the user. */\n    userUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** The connection type for Repository. */\nexport type TeamRepositoryConnection = {\n  __typename?: \"TeamRepositoryConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamRepositoryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Repository>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** Represents a team repository. */\nexport type TeamRepositoryEdge = {\n  __typename?: \"TeamRepositoryEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  node: Repository;\n  /** The permission level the team has on the repository */\n  permission: RepositoryPermission;\n};\n\n/** Ordering options for team repository connections */\nexport type TeamRepositoryOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order repositories by. */\n  field: TeamRepositoryOrderField;\n};\n\n/** Properties by which team repository connections can be ordered. */\nexport enum TeamRepositoryOrderField {\n  /** Order repositories by creation time */\n  CreatedAt = \"CREATED_AT\",\n  /** Order repositories by name */\n  Name = \"NAME\",\n  /** Order repositories by permission */\n  Permission = \"PERMISSION\",\n  /** Order repositories by push time */\n  PushedAt = \"PUSHED_AT\",\n  /** Order repositories by number of stargazers */\n  Stargazers = \"STARGAZERS\",\n  /** Order repositories by update time */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** The role of a user on a team. */\nexport enum TeamRole {\n  /** User has admin rights on the team. */\n  Admin = \"ADMIN\",\n  /** User is a member of the team. */\n  Member = \"MEMBER\",\n}\n\n/** A text match within a search result. */\nexport type TextMatch = {\n  __typename?: \"TextMatch\";\n  /** The specific text fragment within the property matched on. */\n  fragment: Scalars[\"String\"];\n  /** Highlights within the matched fragment. */\n  highlights: Array<TextMatchHighlight>;\n  /** The property matched on. */\n  property: Scalars[\"String\"];\n};\n\n/** Represents a single highlight in a search result match. */\nexport type TextMatchHighlight = {\n  __typename?: \"TextMatchHighlight\";\n  /** The indice in the fragment where the matched text begins. */\n  beginIndice: Scalars[\"Int\"];\n  /** The indice in the fragment where the matched text ends. */\n  endIndice: Scalars[\"Int\"];\n  /** The text matched. */\n  text: Scalars[\"String\"];\n};\n\n/** A topic aggregates entities that are related to a subject. */\nexport type Topic = Node &\n  Starrable & {\n    __typename?: \"Topic\";\n    id: Scalars[\"ID\"];\n    /** The topic's name. */\n    name: Scalars[\"String\"];\n    /**\n     * A list of related topics, including aliases of this topic, sorted with the most relevant\n     * first. Returns up to 10 Topics.\n     *\n     */\n    relatedTopics: Array<Topic>;\n    /** A list of repositories. */\n    repositories: RepositoryConnection;\n    /**\n     * Returns a count of how many stargazers there are on this object\n     *\n     */\n    stargazerCount: Scalars[\"Int\"];\n    /** A list of users who have starred this starrable. */\n    stargazers: StargazerConnection;\n    /** Returns a boolean indicating whether the viewing user has starred this starrable. */\n    viewerHasStarred: Scalars[\"Boolean\"];\n  };\n\n/** A topic aggregates entities that are related to a subject. */\nexport type TopicRelatedTopicsArgs = {\n  first?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A topic aggregates entities that are related to a subject. */\nexport type TopicRepositoriesArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isLocked?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n  sponsorableOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A topic aggregates entities that are related to a subject. */\nexport type TopicStargazersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<StarOrder>;\n};\n\n/** Metadata for an audit entry with a topic. */\nexport type TopicAuditEntryData = {\n  /** The name of the topic added to the repository */\n  topic?: Maybe<Topic>;\n  /** The name of the topic added to the repository */\n  topicName?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Reason that the suggested topic is declined. */\nexport enum TopicSuggestionDeclineReason {\n  /** The suggested topic is not relevant to the repository. */\n  NotRelevant = \"NOT_RELEVANT\",\n  /** The viewer does not like the suggested topic. */\n  PersonalPreference = \"PERSONAL_PREFERENCE\",\n  /** The suggested topic is too general for the repository. */\n  TooGeneral = \"TOO_GENERAL\",\n  /** The suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1). */\n  TooSpecific = \"TOO_SPECIFIC\",\n}\n\n/** The possible states of a tracked issue. */\nexport enum TrackedIssueStates {\n  /** The tracked issue is closed */\n  Closed = \"CLOSED\",\n  /** The tracked issue is open */\n  Open = \"OPEN\",\n}\n\n/** Autogenerated input type of TransferEnterpriseOrganization */\nexport type TransferEnterpriseOrganizationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise where the organization should be transferred. */\n  destinationEnterpriseId: Scalars[\"ID\"];\n  /** The ID of the organization to transfer. */\n  organizationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of TransferEnterpriseOrganization */\nexport type TransferEnterpriseOrganizationPayload = {\n  __typename?: \"TransferEnterpriseOrganizationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The organization for which a transfer was initiated. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of TransferIssue */\nexport type TransferIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Whether to create labels if they don't exist in the target repository (matched by name) */\n  createLabelsIfMissing?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The Node ID of the issue to be transferred */\n  issueId: Scalars[\"ID\"];\n  /** The Node ID of the repository the issue should be transferred to */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of TransferIssue */\nexport type TransferIssuePayload = {\n  __typename?: \"TransferIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The issue that was transferred */\n  issue?: Maybe<Issue>;\n};\n\n/** Represents a 'transferred' event on a given issue or pull request. */\nexport type TransferredEvent = Node & {\n  __typename?: \"TransferredEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The repository this came from */\n  fromRepository?: Maybe<Repository>;\n  id: Scalars[\"ID\"];\n  /** Identifies the issue associated with the event. */\n  issue: Issue;\n};\n\n/** Represents a Git tree. */\nexport type Tree = GitObject &\n  Node & {\n    __typename?: \"Tree\";\n    /** An abbreviated version of the Git object ID */\n    abbreviatedOid: Scalars[\"String\"];\n    /** The HTTP path for this Git object */\n    commitResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL for this Git object */\n    commitUrl: Scalars[\"URI\"];\n    /** A list of tree entries. */\n    entries?: Maybe<Array<TreeEntry>>;\n    id: Scalars[\"ID\"];\n    /** The Git object ID */\n    oid: Scalars[\"GitObjectID\"];\n    /** The Repository the Git object belongs to */\n    repository: Repository;\n  };\n\n/** Represents a Git tree entry. */\nexport type TreeEntry = {\n  __typename?: \"TreeEntry\";\n  /** The extension of the file */\n  extension?: Maybe<Scalars[\"String\"]>;\n  /** Whether or not this tree entry is generated */\n  isGenerated: Scalars[\"Boolean\"];\n  /** The programming language this file is written in. */\n  language?: Maybe<Language>;\n  /** Number of lines in the file. */\n  lineCount?: Maybe<Scalars[\"Int\"]>;\n  /** Entry file mode. */\n  mode: Scalars[\"Int\"];\n  /** Entry file name. */\n  name: Scalars[\"String\"];\n  /** Entry file name. (Base64-encoded) */\n  nameRaw: Scalars[\"Base64String\"];\n  /** Entry file object. */\n  object?: Maybe<GitObject>;\n  /** Entry file Git object ID. */\n  oid: Scalars[\"GitObjectID\"];\n  /** The full path of the file. */\n  path?: Maybe<Scalars[\"String\"]>;\n  /** The full path of the file. (Base64-encoded) */\n  pathRaw?: Maybe<Scalars[\"Base64String\"]>;\n  /** The Repository the tree entry belongs to */\n  repository: Repository;\n  /** Entry byte size */\n  size: Scalars[\"Int\"];\n  /** If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule */\n  submodule?: Maybe<Submodule>;\n  /** Entry file type. */\n  type: Scalars[\"String\"];\n};\n\n/** Autogenerated input type of UnarchiveProjectV2Item */\nexport type UnarchiveProjectV2ItemInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the ProjectV2Item to unarchive. */\n  itemId: Scalars[\"ID\"];\n  /** The ID of the Project to archive the item from. */\n  projectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnarchiveProjectV2Item */\nexport type UnarchiveProjectV2ItemPayload = {\n  __typename?: \"UnarchiveProjectV2ItemPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The item unarchived from the project. */\n  item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of UnarchiveRepository */\nexport type UnarchiveRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the repository to unarchive. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnarchiveRepository */\nexport type UnarchiveRepositoryPayload = {\n  __typename?: \"UnarchiveRepositoryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The repository that was unarchived. */\n  repository?: Maybe<Repository>;\n};\n\n/** Represents an 'unassigned' event on any assignable object. */\nexport type UnassignedEvent = Node & {\n  __typename?: \"UnassignedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the assignable associated with the event. */\n  assignable: Assignable;\n  /** Identifies the user or mannequin that was unassigned. */\n  assignee?: Maybe<Assignee>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /**\n   * Identifies the subject (user) who was unassigned.\n   * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.\n   */\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of UnfollowOrganization */\nexport type UnfollowOrganizationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the organization to unfollow. */\n  organizationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnfollowOrganization */\nexport type UnfollowOrganizationPayload = {\n  __typename?: \"UnfollowOrganizationPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The organization that was unfollowed. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of UnfollowUser */\nexport type UnfollowUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the user to unfollow. */\n  userId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnfollowUser */\nexport type UnfollowUserPayload = {\n  __typename?: \"UnfollowUserPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The user that was unfollowed. */\n  user?: Maybe<User>;\n};\n\n/** Represents a type that can be retrieved by a URL. */\nexport type UniformResourceLocatable = {\n  /** The HTML path to this resource. */\n  resourcePath: Scalars[\"URI\"];\n  /** The URL to this resource. */\n  url: Scalars[\"URI\"];\n};\n\n/** Represents an unknown signature on a Commit or Tag. */\nexport type UnknownSignature = GitSignature & {\n  __typename?: \"UnknownSignature\";\n  /** Email used to sign this object. */\n  email: Scalars[\"String\"];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars[\"Boolean\"];\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars[\"String\"];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars[\"String\"];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** Represents an 'unlabeled' event on a given issue or pull request. */\nexport type UnlabeledEvent = Node & {\n  __typename?: \"UnlabeledEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Identifies the label associated with the 'unlabeled' event. */\n  label: Label;\n  /** Identifies the `Labelable` associated with the event. */\n  labelable: Labelable;\n};\n\n/** Autogenerated input type of UnlinkProjectV2FromRepository */\nexport type UnlinkProjectV2FromRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the project to unlink from the repository. */\n  projectId: Scalars[\"ID\"];\n  /** The ID of the repository to unlink from the project. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnlinkProjectV2FromRepository */\nexport type UnlinkProjectV2FromRepositoryPayload = {\n  __typename?: \"UnlinkProjectV2FromRepositoryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The repository the project is no longer linked to. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UnlinkProjectV2FromTeam */\nexport type UnlinkProjectV2FromTeamInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the project to unlink from the team. */\n  projectId: Scalars[\"ID\"];\n  /** The ID of the team to unlink from the project. */\n  teamId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnlinkProjectV2FromTeam */\nexport type UnlinkProjectV2FromTeamPayload = {\n  __typename?: \"UnlinkProjectV2FromTeamPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The team the project is unlinked from */\n  team?: Maybe<Team>;\n};\n\n/** Autogenerated input type of UnlinkRepositoryFromProject */\nexport type UnlinkRepositoryFromProjectInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the Project linked to the Repository. */\n  projectId: Scalars[\"ID\"];\n  /** The ID of the Repository linked to the Project. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnlinkRepositoryFromProject */\nexport type UnlinkRepositoryFromProjectPayload = {\n  __typename?: \"UnlinkRepositoryFromProjectPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The linked Project. */\n  project?: Maybe<Project>;\n  /** The linked Repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UnlockLockable */\nexport type UnlockLockableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the item to be unlocked. */\n  lockableId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnlockLockable */\nexport type UnlockLockablePayload = {\n  __typename?: \"UnlockLockablePayload\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The item that was unlocked. */\n  unlockedRecord?: Maybe<Lockable>;\n};\n\n/** Represents an 'unlocked' event on a given issue or pull request. */\nexport type UnlockedEvent = Node & {\n  __typename?: \"UnlockedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Object that was unlocked. */\n  lockable: Lockable;\n};\n\n/** Autogenerated input type of UnmarkDiscussionCommentAsAnswer */\nexport type UnmarkDiscussionCommentAsAnswerInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion comment to unmark as an answer. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnmarkDiscussionCommentAsAnswer */\nexport type UnmarkDiscussionCommentAsAnswerPayload = {\n  __typename?: \"UnmarkDiscussionCommentAsAnswerPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The discussion that includes the comment. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of UnmarkFileAsViewed */\nexport type UnmarkFileAsViewedInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The path of the file to mark as unviewed */\n  path: Scalars[\"String\"];\n  /** The Node ID of the pull request. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnmarkFileAsViewed */\nexport type UnmarkFileAsViewedPayload = {\n  __typename?: \"UnmarkFileAsViewedPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of UnmarkIssueAsDuplicate */\nexport type UnmarkIssueAsDuplicateInput = {\n  /** ID of the issue or pull request currently considered canonical/authoritative/original. */\n  canonicalId: Scalars[\"ID\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** ID of the issue or pull request currently marked as a duplicate. */\n  duplicateId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnmarkIssueAsDuplicate */\nexport type UnmarkIssueAsDuplicatePayload = {\n  __typename?: \"UnmarkIssueAsDuplicatePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The issue or pull request that was marked as a duplicate. */\n  duplicate?: Maybe<IssueOrPullRequest>;\n};\n\n/** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\nexport type UnmarkedAsDuplicateEvent = Node & {\n  __typename?: \"UnmarkedAsDuplicateEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** The authoritative issue or pull request which has been duplicated by another. */\n  canonical?: Maybe<IssueOrPullRequest>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** The issue or pull request which has been marked as a duplicate of another. */\n  duplicate?: Maybe<IssueOrPullRequest>;\n  id: Scalars[\"ID\"];\n  /** Canonical and duplicate belong to different repositories. */\n  isCrossRepository: Scalars[\"Boolean\"];\n};\n\n/** Autogenerated input type of UnminimizeComment */\nexport type UnminimizeCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnminimizeComment */\nexport type UnminimizeCommentPayload = {\n  __typename?: \"UnminimizeCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The comment that was unminimized. */\n  unminimizedComment?: Maybe<Minimizable>;\n};\n\n/** Autogenerated input type of UnpinIssue */\nexport type UnpinIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the issue to be unpinned */\n  issueId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnpinIssue */\nexport type UnpinIssuePayload = {\n  __typename?: \"UnpinIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The issue that was unpinned */\n  issue?: Maybe<Issue>;\n};\n\n/** Represents an 'unpinned' event on a given issue or pull request. */\nexport type UnpinnedEvent = Node & {\n  __typename?: \"UnpinnedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Identifies the issue associated with the event. */\n  issue: Issue;\n};\n\n/** Autogenerated input type of UnresolveReviewThread */\nexport type UnresolveReviewThreadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the thread to unresolve */\n  threadId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UnresolveReviewThread */\nexport type UnresolveReviewThreadPayload = {\n  __typename?: \"UnresolveReviewThreadPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The thread to resolve. */\n  thread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Represents an 'unsubscribed' event on a given `Subscribable`. */\nexport type UnsubscribedEvent = Node & {\n  __typename?: \"UnsubscribedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** Object referenced by event. */\n  subscribable: Subscribable;\n};\n\n/** Entities that can be updated. */\nexport type Updatable = {\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars[\"Boolean\"];\n};\n\n/** Comments that can be updated. */\nexport type UpdatableComment = {\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n};\n\n/** Autogenerated input type of UpdateBranchProtectionRule */\nexport type UpdateBranchProtectionRuleInput = {\n  /** Can this branch be deleted. */\n  allowsDeletions?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are force pushes allowed on this branch. */\n  allowsForcePushes?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Is branch creation a protected operation. */\n  blocksCreations?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The global relay id of the branch protection rule to be updated. */\n  branchProtectionRuleId: Scalars[\"ID\"];\n  /** A list of User, Team, or App IDs allowed to bypass force push targeting matching branches. */\n  bypassForcePushActorIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches. */\n  bypassPullRequestActorIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Will new commits pushed to matching branches dismiss pull request review approvals. */\n  dismissesStaleReviews?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Can admins overwrite branch protection. */\n  isAdminEnforced?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing. */\n  lockAllowsFetchAndMerge?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. */\n  lockBranch?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The glob-like pattern used to determine matching branches. */\n  pattern?: InputMaybe<Scalars[\"String\"]>;\n  /** A list of User, Team, or App IDs allowed to push to matching branches. */\n  pushActorIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** Whether the most recent push must be approved by someone other than the person who pushed it */\n  requireLastPushApproval?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Number of approving reviews required to update matching branches. */\n  requiredApprovingReviewCount?: InputMaybe<Scalars[\"Int\"]>;\n  /** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n  requiredStatusCheckContexts?: InputMaybe<Array<Scalars[\"String\"]>>;\n  /** The list of required status checks */\n  requiredStatusChecks?: InputMaybe<Array<RequiredStatusCheckInput>>;\n  /** Are approving reviews required to update matching branches. */\n  requiresApprovingReviews?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are reviews from code owners required to update matching branches. */\n  requiresCodeOwnerReviews?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are commits required to be signed. */\n  requiresCommitSignatures?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are conversations required to be resolved before merging. */\n  requiresConversationResolution?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are merge commits prohibited from being pushed to this branch. */\n  requiresLinearHistory?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are status checks required to update matching branches. */\n  requiresStatusChecks?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Are branches required to be up to date before merging. */\n  requiresStrictStatusChecks?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Is pushing to matching branches restricted. */\n  restrictsPushes?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Is dismissal of pull request reviews restricted. */\n  restrictsReviewDismissals?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches. */\n  reviewDismissalActorIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n};\n\n/** Autogenerated return type of UpdateBranchProtectionRule */\nexport type UpdateBranchProtectionRulePayload = {\n  __typename?: \"UpdateBranchProtectionRulePayload\";\n  /** The newly created BranchProtectionRule. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateCheckRun */\nexport type UpdateCheckRunInput = {\n  /** Possible further actions the integrator can perform, which a user may trigger. */\n  actions?: InputMaybe<Array<CheckRunAction>>;\n  /** The node of the check. */\n  checkRunId: Scalars[\"ID\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The time that the check run finished. */\n  completedAt?: InputMaybe<Scalars[\"DateTime\"]>;\n  /** The final conclusion of the check. */\n  conclusion?: InputMaybe<CheckConclusionState>;\n  /** The URL of the integrator's site that has the full details of the check. */\n  detailsUrl?: InputMaybe<Scalars[\"URI\"]>;\n  /** A reference for the run on the integrator's system. */\n  externalId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the check. */\n  name?: InputMaybe<Scalars[\"String\"]>;\n  /** Descriptive details about the run. */\n  output?: InputMaybe<CheckRunOutput>;\n  /** The node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n  /** The time that the check run began. */\n  startedAt?: InputMaybe<Scalars[\"DateTime\"]>;\n  /** The current status. */\n  status?: InputMaybe<RequestableCheckStatusState>;\n};\n\n/** Autogenerated return type of UpdateCheckRun */\nexport type UpdateCheckRunPayload = {\n  __typename?: \"UpdateCheckRunPayload\";\n  /** The updated check run. */\n  checkRun?: Maybe<CheckRun>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateCheckSuitePreferences */\nexport type UpdateCheckSuitePreferencesInput = {\n  /** The check suite preferences to modify. */\n  autoTriggerPreferences: Array<CheckSuiteAutoTriggerPreference>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateCheckSuitePreferences */\nexport type UpdateCheckSuitePreferencesPayload = {\n  __typename?: \"UpdateCheckSuitePreferencesPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UpdateDiscussionComment */\nexport type UpdateDiscussionCommentInput = {\n  /** The new contents of the comment body. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion comment to update. */\n  commentId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateDiscussionComment */\nexport type UpdateDiscussionCommentPayload = {\n  __typename?: \"UpdateDiscussionCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The modified discussion comment. */\n  comment?: Maybe<DiscussionComment>;\n};\n\n/** Autogenerated input type of UpdateDiscussion */\nexport type UpdateDiscussionInput = {\n  /** The new contents of the discussion body. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of a discussion category within the same repository to change this discussion to. */\n  categoryId?: InputMaybe<Scalars[\"ID\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion to update. */\n  discussionId: Scalars[\"ID\"];\n  /** The new discussion title. */\n  title?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateDiscussion */\nexport type UpdateDiscussionPayload = {\n  __typename?: \"UpdateDiscussionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The modified discussion. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseAdministratorRole */\nexport type UpdateEnterpriseAdministratorRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the Enterprise which the admin belongs to. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The login of a administrator whose role is being changed. */\n  login: Scalars[\"String\"];\n  /** The new role for the Enterprise administrator. */\n  role: EnterpriseAdministratorRole;\n};\n\n/** Autogenerated return type of UpdateEnterpriseAdministratorRole */\nexport type UpdateEnterpriseAdministratorRolePayload = {\n  __typename?: \"UpdateEnterpriseAdministratorRolePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** A message confirming the result of changing the administrator's role. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */\nexport type UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the allow private repository forking setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the allow private repository forking policy on the enterprise. */\n  policyValue?: InputMaybe<EnterpriseAllowPrivateRepositoryForkingPolicyValue>;\n  /** The value for the allow private repository forking setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */\nexport type UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload = {\n  __typename?: \"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated allow private repository forking setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the allow private repository forking setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting */\nexport type UpdateEnterpriseDefaultRepositoryPermissionSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the base repository permission setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the base repository permission setting on the enterprise. */\n  settingValue: EnterpriseDefaultRepositoryPermissionSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting */\nexport type UpdateEnterpriseDefaultRepositoryPermissionSettingPayload = {\n  __typename?: \"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated base repository permission setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the base repository permission setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */\nexport type UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the members can change repository visibility setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the members can change repository visibility setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */\nexport type UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload = {\n  __typename?: \"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated members can change repository visibility setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can change repository visibility setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanCreateRepositoriesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the members can create repositories setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** Allow members to create internal repositories. Defaults to current value. */\n  membersCanCreateInternalRepositories?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Allow members to create private repositories. Defaults to current value. */\n  membersCanCreatePrivateRepositories?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Allow members to create public repositories. Defaults to current value. */\n  membersCanCreatePublicRepositories?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** When false, allow member organizations to set their own repository creation member privileges. */\n  membersCanCreateRepositoriesPolicyEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Value for the members can create repositories setting on the enterprise. This or the granular public/private/internal allowed fields (but not both) must be provided. */\n  settingValue?: InputMaybe<EnterpriseMembersCanCreateRepositoriesSettingValue>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload = {\n  __typename?: \"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated members can create repositories setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can create repositories setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting */\nexport type UpdateEnterpriseMembersCanDeleteIssuesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the members can delete issues setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the members can delete issues setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting */\nexport type UpdateEnterpriseMembersCanDeleteIssuesSettingPayload = {\n  __typename?: \"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated members can delete issues setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can delete issues setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the members can delete repositories setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the members can delete repositories setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload = {\n  __typename?: \"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated members can delete repositories setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can delete repositories setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */\nexport type UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the members can invite collaborators setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the members can invite collaborators setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */\nexport type UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload = {\n  __typename?: \"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated members can invite collaborators setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can invite collaborators setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting */\nexport type UpdateEnterpriseMembersCanMakePurchasesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the members can make purchases setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the members can make purchases setting on the enterprise. */\n  settingValue: EnterpriseMembersCanMakePurchasesSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting */\nexport type UpdateEnterpriseMembersCanMakePurchasesSettingPayload = {\n  __typename?: \"UpdateEnterpriseMembersCanMakePurchasesSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated members can make purchases setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can make purchases setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */\nexport type UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the members can update protected branches setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the members can update protected branches setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */\nexport type UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload = {\n  __typename?: \"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated members can update protected branches setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can update protected branches setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */\nexport type UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the members can view dependency insights setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the members can view dependency insights setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */\nexport type UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload = {\n  __typename?: \"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated members can view dependency insights setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can view dependency insights setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting */\nexport type UpdateEnterpriseOrganizationProjectsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the organization projects setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the organization projects setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting */\nexport type UpdateEnterpriseOrganizationProjectsSettingPayload = {\n  __typename?: \"UpdateEnterpriseOrganizationProjectsSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated organization projects setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the organization projects setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole */\nexport type UpdateEnterpriseOwnerOrganizationRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the Enterprise which the owner belongs to. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The ID of the organization for membership change. */\n  organizationId: Scalars[\"ID\"];\n  /** The role to assume in the organization. */\n  organizationRole: RoleInOrganization;\n};\n\n/** Autogenerated return type of UpdateEnterpriseOwnerOrganizationRole */\nexport type UpdateEnterpriseOwnerOrganizationRolePayload = {\n  __typename?: \"UpdateEnterpriseOwnerOrganizationRolePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** A message confirming the result of changing the owner's organization role. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseProfile */\nexport type UpdateEnterpriseProfileInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The description of the enterprise. */\n  description?: InputMaybe<Scalars[\"String\"]>;\n  /** The Enterprise ID to update. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The location of the enterprise. */\n  location?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of the enterprise. */\n  name?: InputMaybe<Scalars[\"String\"]>;\n  /** The URL of the enterprise's website. */\n  websiteUrl?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseProfile */\nexport type UpdateEnterpriseProfilePayload = {\n  __typename?: \"UpdateEnterpriseProfilePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated enterprise. */\n  enterprise?: Maybe<Enterprise>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting */\nexport type UpdateEnterpriseRepositoryProjectsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the repository projects setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the repository projects setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting */\nexport type UpdateEnterpriseRepositoryProjectsSettingPayload = {\n  __typename?: \"UpdateEnterpriseRepositoryProjectsSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated repository projects setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the repository projects setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting */\nexport type UpdateEnterpriseTeamDiscussionsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the team discussions setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the team discussions setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting */\nexport type UpdateEnterpriseTeamDiscussionsSettingPayload = {\n  __typename?: \"UpdateEnterpriseTeamDiscussionsSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated team discussions setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the team discussions setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */\nexport type UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the enterprise on which to set the two factor authentication required setting. */\n  enterpriseId: Scalars[\"ID\"];\n  /** The value for the two factor authentication required setting on the enterprise. */\n  settingValue: EnterpriseEnabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */\nexport type UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload = {\n  __typename?: \"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The enterprise with the updated two factor authentication required setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the two factor authentication required setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnvironment */\nexport type UpdateEnvironmentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The node ID of the environment. */\n  environmentId: Scalars[\"ID\"];\n  /** The ids of users or teams that can approve deployments to this environment */\n  reviewers?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The wait timer in minutes. */\n  waitTimer?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Autogenerated return type of UpdateEnvironment */\nexport type UpdateEnvironmentPayload = {\n  __typename?: \"UpdateEnvironmentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated environment. */\n  environment?: Maybe<Environment>;\n};\n\n/** Autogenerated input type of UpdateIpAllowListEnabledSetting */\nexport type UpdateIpAllowListEnabledSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the owner on which to set the IP allow list enabled setting. */\n  ownerId: Scalars[\"ID\"];\n  /** The value for the IP allow list enabled setting. */\n  settingValue: IpAllowListEnabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateIpAllowListEnabledSetting */\nexport type UpdateIpAllowListEnabledSettingPayload = {\n  __typename?: \"UpdateIpAllowListEnabledSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The IP allow list owner on which the setting was updated. */\n  owner?: Maybe<IpAllowListOwner>;\n};\n\n/** Autogenerated input type of UpdateIpAllowListEntry */\nexport type UpdateIpAllowListEntryInput = {\n  /** An IP address or range of addresses in CIDR notation. */\n  allowListValue: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the IP allow list entry to update. */\n  ipAllowListEntryId: Scalars[\"ID\"];\n  /** Whether the IP allow list entry is active when an IP allow list is enabled. */\n  isActive: Scalars[\"Boolean\"];\n  /** An optional name for the IP allow list entry. */\n  name?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateIpAllowListEntry */\nexport type UpdateIpAllowListEntryPayload = {\n  __typename?: \"UpdateIpAllowListEntryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The IP allow list entry that was updated. */\n  ipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of UpdateIpAllowListForInstalledAppsEnabledSetting */\nexport type UpdateIpAllowListForInstalledAppsEnabledSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the owner. */\n  ownerId: Scalars[\"ID\"];\n  /** The value for the IP allow list configuration for installed GitHub Apps setting. */\n  settingValue: IpAllowListForInstalledAppsEnabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateIpAllowListForInstalledAppsEnabledSetting */\nexport type UpdateIpAllowListForInstalledAppsEnabledSettingPayload = {\n  __typename?: \"UpdateIpAllowListForInstalledAppsEnabledSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The IP allow list owner on which the setting was updated. */\n  owner?: Maybe<IpAllowListOwner>;\n};\n\n/** Autogenerated input type of UpdateIssueComment */\nexport type UpdateIssueCommentInput = {\n  /** The updated text of the comment. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the IssueComment to modify. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateIssueComment */\nexport type UpdateIssueCommentPayload = {\n  __typename?: \"UpdateIssueCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated comment. */\n  issueComment?: Maybe<IssueComment>;\n};\n\n/** Autogenerated input type of UpdateIssue */\nexport type UpdateIssueInput = {\n  /** An array of Node IDs of users for this issue. */\n  assigneeIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The body for the issue description. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the Issue to modify. */\n  id: Scalars[\"ID\"];\n  /** An array of Node IDs of labels for this issue. */\n  labelIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The Node ID of the milestone for this issue. */\n  milestoneId?: InputMaybe<Scalars[\"ID\"]>;\n  /** An array of Node IDs for projects associated with this issue. */\n  projectIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The desired issue state. */\n  state?: InputMaybe<IssueState>;\n  /** The title for the issue. */\n  title?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateIssue */\nexport type UpdateIssuePayload = {\n  __typename?: \"UpdateIssuePayload\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The issue. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of UpdateNotificationRestrictionSetting */\nexport type UpdateNotificationRestrictionSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the owner on which to set the restrict notifications setting. */\n  ownerId: Scalars[\"ID\"];\n  /** The value for the restrict notifications setting. */\n  settingValue: NotificationRestrictionSettingValue;\n};\n\n/** Autogenerated return type of UpdateNotificationRestrictionSetting */\nexport type UpdateNotificationRestrictionSettingPayload = {\n  __typename?: \"UpdateNotificationRestrictionSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The owner on which the setting was updated. */\n  owner?: Maybe<VerifiableDomainOwner>;\n};\n\n/** Autogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting */\nexport type UpdateOrganizationAllowPrivateRepositoryForkingSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Enable forking of private repositories in the organization? */\n  forkingEnabled: Scalars[\"Boolean\"];\n  /** The ID of the organization on which to set the allow private repository forking setting. */\n  organizationId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateOrganizationAllowPrivateRepositoryForkingSetting */\nexport type UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload = {\n  __typename?: \"UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** A message confirming the result of updating the allow private repository forking setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n  /** The organization with the updated allow private repository forking setting. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of UpdateOrganizationWebCommitSignoffSetting */\nexport type UpdateOrganizationWebCommitSignoffSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the organization on which to set the web commit signoff setting. */\n  organizationId: Scalars[\"ID\"];\n  /** Enable signoff on web-based commits for repositories in the organization? */\n  webCommitSignoffRequired: Scalars[\"Boolean\"];\n};\n\n/** Autogenerated return type of UpdateOrganizationWebCommitSignoffSetting */\nexport type UpdateOrganizationWebCommitSignoffSettingPayload = {\n  __typename?: \"UpdateOrganizationWebCommitSignoffSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** A message confirming the result of updating the web commit signoff setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n  /** The organization with the updated web commit signoff setting. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of UpdateProjectCard */\nexport type UpdateProjectCardInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Whether or not the ProjectCard should be archived */\n  isArchived?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The note of ProjectCard. */\n  note?: InputMaybe<Scalars[\"String\"]>;\n  /** The ProjectCard ID to update. */\n  projectCardId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateProjectCard */\nexport type UpdateProjectCardPayload = {\n  __typename?: \"UpdateProjectCardPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated ProjectCard. */\n  projectCard?: Maybe<ProjectCard>;\n};\n\n/** Autogenerated input type of UpdateProjectColumn */\nexport type UpdateProjectColumnInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of project column. */\n  name: Scalars[\"String\"];\n  /** The ProjectColumn ID to update. */\n  projectColumnId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateProjectColumn */\nexport type UpdateProjectColumnPayload = {\n  __typename?: \"UpdateProjectColumnPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated project column. */\n  projectColumn?: Maybe<ProjectColumn>;\n};\n\n/** Autogenerated input type of UpdateProject */\nexport type UpdateProjectInput = {\n  /** The description of project. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The name of project. */\n  name?: InputMaybe<Scalars[\"String\"]>;\n  /** The Project ID to update. */\n  projectId: Scalars[\"ID\"];\n  /** Whether the project is public or not. */\n  public?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Whether the project is open or closed. */\n  state?: InputMaybe<ProjectState>;\n};\n\n/** Autogenerated return type of UpdateProject */\nexport type UpdateProjectPayload = {\n  __typename?: \"UpdateProjectPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated project. */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of UpdateProjectV2DraftIssue */\nexport type UpdateProjectV2DraftIssueInput = {\n  /** The IDs of the assignees of the draft issue. */\n  assigneeIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The body of the draft issue. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the draft issue to update. */\n  draftIssueId: Scalars[\"ID\"];\n  /** The title of the draft issue. */\n  title?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateProjectV2DraftIssue */\nexport type UpdateProjectV2DraftIssuePayload = {\n  __typename?: \"UpdateProjectV2DraftIssuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The draft issue updated in the project. */\n  draftIssue?: Maybe<DraftIssue>;\n};\n\n/** Autogenerated input type of UpdateProjectV2 */\nexport type UpdateProjectV2Input = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Set the project to closed or open. */\n  closed?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The ID of the Project to update. */\n  projectId: Scalars[\"ID\"];\n  /** Set the project to public or private. */\n  public?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Set the readme description of the project. */\n  readme?: InputMaybe<Scalars[\"String\"]>;\n  /** Set the short description of the project. */\n  shortDescription?: InputMaybe<Scalars[\"String\"]>;\n  /** Set the title of the project. */\n  title?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateProjectV2ItemFieldValue */\nexport type UpdateProjectV2ItemFieldValueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the field to be updated. */\n  fieldId: Scalars[\"ID\"];\n  /** The ID of the item to be updated. */\n  itemId: Scalars[\"ID\"];\n  /** The ID of the Project. */\n  projectId: Scalars[\"ID\"];\n  /** The value which will be set on the field. */\n  value: ProjectV2FieldValue;\n};\n\n/** Autogenerated return type of UpdateProjectV2ItemFieldValue */\nexport type UpdateProjectV2ItemFieldValuePayload = {\n  __typename?: \"UpdateProjectV2ItemFieldValuePayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated item. */\n  projectV2Item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of UpdateProjectV2ItemPosition */\nexport type UpdateProjectV2ItemPositionInput = {\n  /** The ID of the item to position this item after. If omitted or set to null the item will be moved to top. */\n  afterId?: InputMaybe<Scalars[\"ID\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the item to be moved. */\n  itemId: Scalars[\"ID\"];\n  /** The ID of the Project. */\n  projectId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateProjectV2ItemPosition */\nexport type UpdateProjectV2ItemPositionPayload = {\n  __typename?: \"UpdateProjectV2ItemPositionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The items in the new order */\n  items?: Maybe<ProjectV2ItemConnection>;\n};\n\n/** Autogenerated return type of UpdateProjectV2ItemPosition */\nexport type UpdateProjectV2ItemPositionPayloadItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** Autogenerated return type of UpdateProjectV2 */\nexport type UpdateProjectV2Payload = {\n  __typename?: \"UpdateProjectV2Payload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated Project. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Autogenerated input type of UpdatePullRequestBranch */\nexport type UpdatePullRequestBranchInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The head ref oid for the upstream branch. */\n  expectedHeadOid?: InputMaybe<Scalars[\"GitObjectID\"]>;\n  /** The Node ID of the pull request. */\n  pullRequestId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdatePullRequestBranch */\nexport type UpdatePullRequestBranchPayload = {\n  __typename?: \"UpdatePullRequestBranchPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of UpdatePullRequest */\nexport type UpdatePullRequestInput = {\n  /** An array of Node IDs of users for this pull request. */\n  assigneeIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /**\n   * The name of the branch you want your changes pulled into. This should be an existing branch\n   * on the current repository.\n   *\n   */\n  baseRefName?: InputMaybe<Scalars[\"String\"]>;\n  /** The contents of the pull request. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** An array of Node IDs of labels for this pull request. */\n  labelIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** Indicates whether maintainers can modify the pull request. */\n  maintainerCanModify?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The Node ID of the milestone for this pull request. */\n  milestoneId?: InputMaybe<Scalars[\"ID\"]>;\n  /** An array of Node IDs for projects associated with this pull request. */\n  projectIds?: InputMaybe<Array<Scalars[\"ID\"]>>;\n  /** The Node ID of the pull request. */\n  pullRequestId: Scalars[\"ID\"];\n  /** The target state of the pull request. */\n  state?: InputMaybe<PullRequestUpdateState>;\n  /** The title of the pull request. */\n  title?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdatePullRequest */\nexport type UpdatePullRequestPayload = {\n  __typename?: \"UpdatePullRequestPayload\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of UpdatePullRequestReviewComment */\nexport type UpdatePullRequestReviewCommentInput = {\n  /** The text of the comment. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the comment to modify. */\n  pullRequestReviewCommentId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdatePullRequestReviewComment */\nexport type UpdatePullRequestReviewCommentPayload = {\n  __typename?: \"UpdatePullRequestReviewCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated comment. */\n  pullRequestReviewComment?: Maybe<PullRequestReviewComment>;\n};\n\n/** Autogenerated input type of UpdatePullRequestReview */\nexport type UpdatePullRequestReviewInput = {\n  /** The contents of the pull request review body. */\n  body: Scalars[\"String\"];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the pull request review to modify. */\n  pullRequestReviewId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdatePullRequestReview */\nexport type UpdatePullRequestReviewPayload = {\n  __typename?: \"UpdatePullRequestReviewPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** Autogenerated input type of UpdateRef */\nexport type UpdateRefInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Permit updates of branch Refs that are not fast-forwards? */\n  force?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The GitObjectID that the Ref shall be updated to target. */\n  oid: Scalars[\"GitObjectID\"];\n  /** The Node ID of the Ref to be updated. */\n  refId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateRef */\nexport type UpdateRefPayload = {\n  __typename?: \"UpdateRefPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated Ref. */\n  ref?: Maybe<Ref>;\n};\n\n/** Autogenerated input type of UpdateRepository */\nexport type UpdateRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** A new description for the repository. Pass an empty string to erase the existing description. */\n  description?: InputMaybe<Scalars[\"String\"]>;\n  /** Indicates if the repository should have the discussions feature enabled. */\n  hasDiscussionsEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Indicates if the repository should have the issues feature enabled. */\n  hasIssuesEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Indicates if the repository should have the project boards feature enabled. */\n  hasProjectsEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** Indicates if the repository should have the wiki feature enabled. */\n  hasWikiEnabled?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The URL for a web page about this repository. Pass an empty string to erase the existing URL. */\n  homepageUrl?: InputMaybe<Scalars[\"URI\"]>;\n  /** The new name of the repository. */\n  name?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the repository to update. */\n  repositoryId: Scalars[\"ID\"];\n  /** Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure. */\n  template?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** Autogenerated return type of UpdateRepository */\nexport type UpdateRepositoryPayload = {\n  __typename?: \"UpdateRepositoryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UpdateRepositoryWebCommitSignoffSetting */\nexport type UpdateRepositoryWebCommitSignoffSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the repository to update. */\n  repositoryId: Scalars[\"ID\"];\n  /** Indicates if the repository should require signoff on web-based commits. */\n  webCommitSignoffRequired: Scalars[\"Boolean\"];\n};\n\n/** Autogenerated return type of UpdateRepositoryWebCommitSignoffSetting */\nexport type UpdateRepositoryWebCommitSignoffSettingPayload = {\n  __typename?: \"UpdateRepositoryWebCommitSignoffSettingPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** A message confirming the result of updating the web commit signoff setting. */\n  message?: Maybe<Scalars[\"String\"]>;\n  /** The updated repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UpdateSponsorshipPreferences */\nexport type UpdateSponsorshipPreferencesInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Specify whether others should be able to see that the sponsor is sponsoring the sponsorable. Public visibility still does not reveal which tier is used. */\n  privacyLevel?: InputMaybe<SponsorshipPrivacy>;\n  /** Whether the sponsor should receive email updates from the sponsorable. */\n  receiveEmails?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given. */\n  sponsorId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given. */\n  sponsorLogin?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given. */\n  sponsorableId?: InputMaybe<Scalars[\"ID\"]>;\n  /** The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given. */\n  sponsorableLogin?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateSponsorshipPreferences */\nexport type UpdateSponsorshipPreferencesPayload = {\n  __typename?: \"UpdateSponsorshipPreferencesPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The sponsorship that was updated. */\n  sponsorship?: Maybe<Sponsorship>;\n};\n\n/** Autogenerated input type of UpdateSubscription */\nexport type UpdateSubscriptionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The new state of the subscription. */\n  state: SubscriptionState;\n  /** The Node ID of the subscribable object to modify. */\n  subscribableId: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateSubscription */\nexport type UpdateSubscriptionPayload = {\n  __typename?: \"UpdateSubscriptionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The input subscribable entity. */\n  subscribable?: Maybe<Subscribable>;\n};\n\n/** Autogenerated input type of UpdateTeamDiscussionComment */\nexport type UpdateTeamDiscussionCommentInput = {\n  /** The updated text of the comment. */\n  body: Scalars[\"String\"];\n  /** The current version of the body content. */\n  bodyVersion?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the comment to modify. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of UpdateTeamDiscussionComment */\nexport type UpdateTeamDiscussionCommentPayload = {\n  __typename?: \"UpdateTeamDiscussionCommentPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated comment. */\n  teamDiscussionComment?: Maybe<TeamDiscussionComment>;\n};\n\n/** Autogenerated input type of UpdateTeamDiscussion */\nexport type UpdateTeamDiscussionInput = {\n  /** The updated text of the discussion. */\n  body?: InputMaybe<Scalars[\"String\"]>;\n  /** The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server. */\n  bodyVersion?: InputMaybe<Scalars[\"String\"]>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the discussion to modify. */\n  id: Scalars[\"ID\"];\n  /** If provided, sets the pinned state of the updated discussion. */\n  pinned?: InputMaybe<Scalars[\"Boolean\"]>;\n  /** The updated title of the discussion. */\n  title?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateTeamDiscussion */\nexport type UpdateTeamDiscussionPayload = {\n  __typename?: \"UpdateTeamDiscussionPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The updated discussion. */\n  teamDiscussion?: Maybe<TeamDiscussion>;\n};\n\n/** Autogenerated input type of UpdateTeamsRepository */\nexport type UpdateTeamsRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** Permission that should be granted to the teams. */\n  permission: RepositoryPermission;\n  /** Repository ID being granted access to. */\n  repositoryId: Scalars[\"ID\"];\n  /** A list of teams being granted access. Limit: 10 */\n  teamIds: Array<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated return type of UpdateTeamsRepository */\nexport type UpdateTeamsRepositoryPayload = {\n  __typename?: \"UpdateTeamsRepositoryPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The repository that was updated. */\n  repository?: Maybe<Repository>;\n  /** The teams granted permission on the repository. */\n  teams?: Maybe<Array<Team>>;\n};\n\n/** Autogenerated input type of UpdateTopics */\nexport type UpdateTopicsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars[\"ID\"];\n  /** An array of topic names. */\n  topicNames: Array<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateTopics */\nexport type UpdateTopicsPayload = {\n  __typename?: \"UpdateTopicsPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** Names of the provided topics that are not valid. */\n  invalidTopicNames?: Maybe<Array<Scalars[\"String\"]>>;\n  /** The updated repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type User = Actor &\n  Node &\n  PackageOwner &\n  ProfileOwner &\n  ProjectOwner &\n  ProjectV2Owner &\n  ProjectV2Recent &\n  RepositoryDiscussionAuthor &\n  RepositoryDiscussionCommentAuthor &\n  RepositoryOwner &\n  Sponsorable &\n  UniformResourceLocatable & {\n    __typename?: \"User\";\n    /** Determine if this repository owner has any items that can be pinned to their profile. */\n    anyPinnableItems: Scalars[\"Boolean\"];\n    /** A URL pointing to the user's public avatar. */\n    avatarUrl: Scalars[\"URI\"];\n    /** The user's public profile bio. */\n    bio?: Maybe<Scalars[\"String\"]>;\n    /** The user's public profile bio as HTML. */\n    bioHTML: Scalars[\"HTML\"];\n    /** Could this user receive email notifications, if the organization had notification restrictions enabled? */\n    canReceiveOrganizationEmailsWhenNotificationsRestricted: Scalars[\"Boolean\"];\n    /** A list of commit comments made by this user. */\n    commitComments: CommitCommentConnection;\n    /** The user's public profile company. */\n    company?: Maybe<Scalars[\"String\"]>;\n    /** The user's public profile company as HTML. */\n    companyHTML: Scalars[\"HTML\"];\n    /** The collection of contributions this user has made to different repositories. */\n    contributionsCollection: ContributionsCollection;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The user's publicly visible profile email. */\n    email: Scalars[\"String\"];\n    /** The estimated next GitHub Sponsors payout for this user/organization in cents (USD). */\n    estimatedNextSponsorsPayoutInCents: Scalars[\"Int\"];\n    /** A list of users the given user is followed by. */\n    followers: FollowerConnection;\n    /** A list of users the given user is following. */\n    following: FollowingConnection;\n    /** Find gist by repo name. */\n    gist?: Maybe<Gist>;\n    /** A list of gist comments made by this user. */\n    gistComments: GistCommentConnection;\n    /** A list of the Gists the user has created. */\n    gists: GistConnection;\n    /** True if this user/organization has a GitHub Sponsors listing. */\n    hasSponsorsListing: Scalars[\"Boolean\"];\n    /** The hovercard information for this user in a given context */\n    hovercard: Hovercard;\n    id: Scalars[\"ID\"];\n    /** The interaction ability settings for this user. */\n    interactionAbility?: Maybe<RepositoryInteractionAbility>;\n    /** Whether or not this user is a participant in the GitHub Security Bug Bounty. */\n    isBountyHunter: Scalars[\"Boolean\"];\n    /** Whether or not this user is a participant in the GitHub Campus Experts Program. */\n    isCampusExpert: Scalars[\"Boolean\"];\n    /** Whether or not this user is a GitHub Developer Program member. */\n    isDeveloperProgramMember: Scalars[\"Boolean\"];\n    /** Whether or not this user is a GitHub employee. */\n    isEmployee: Scalars[\"Boolean\"];\n    /** Whether or not this user is following the viewer. Inverse of viewer_is_following */\n    isFollowingViewer: Scalars[\"Boolean\"];\n    /** Whether or not this user is a member of the GitHub Stars Program. */\n    isGitHubStar: Scalars[\"Boolean\"];\n    /** Whether or not the user has marked themselves as for hire. */\n    isHireable: Scalars[\"Boolean\"];\n    /** Whether or not this user is a site administrator. */\n    isSiteAdmin: Scalars[\"Boolean\"];\n    /** Whether the given account is sponsoring this user/organization. */\n    isSponsoredBy: Scalars[\"Boolean\"];\n    /** True if the viewer is sponsored by this user/organization. */\n    isSponsoringViewer: Scalars[\"Boolean\"];\n    /** Whether or not this user is the viewing user. */\n    isViewer: Scalars[\"Boolean\"];\n    /** A list of issue comments made by this user. */\n    issueComments: IssueCommentConnection;\n    /** A list of issues associated with this user. */\n    issues: IssueConnection;\n    /** Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity. */\n    itemShowcase: ProfileItemShowcase;\n    /** The user's public profile location. */\n    location?: Maybe<Scalars[\"String\"]>;\n    /** The username used to login. */\n    login: Scalars[\"String\"];\n    /** The estimated monthly GitHub Sponsors income for this user/organization in cents (USD). */\n    monthlyEstimatedSponsorsIncomeInCents: Scalars[\"Int\"];\n    /** The user's public profile name. */\n    name?: Maybe<Scalars[\"String\"]>;\n    /** Find an organization by its login that the user belongs to. */\n    organization?: Maybe<Organization>;\n    /** Verified email addresses that match verified domains for a specified organization the user is a member of. */\n    organizationVerifiedDomainEmails: Array<Scalars[\"String\"]>;\n    /** A list of organizations the user belongs to. */\n    organizations: OrganizationConnection;\n    /** A list of packages under the owner. */\n    packages: PackageConnection;\n    /** A list of repositories and gists this profile owner can pin to their profile. */\n    pinnableItems: PinnableItemConnection;\n    /** A list of repositories and gists this profile owner has pinned to their profile */\n    pinnedItems: PinnableItemConnection;\n    /** Returns how many more items this profile owner can pin to their profile. */\n    pinnedItemsRemaining: Scalars[\"Int\"];\n    /** Find project by number. */\n    project?: Maybe<Project>;\n    /** Find a project by number. */\n    projectV2?: Maybe<ProjectV2>;\n    /** A list of projects under the owner. */\n    projects: ProjectConnection;\n    /** The HTTP path listing user's projects */\n    projectsResourcePath: Scalars[\"URI\"];\n    /** The HTTP URL listing user's projects */\n    projectsUrl: Scalars[\"URI\"];\n    /** A list of projects under the owner. */\n    projectsV2: ProjectV2Connection;\n    /** A list of public keys associated with this user. */\n    publicKeys: PublicKeyConnection;\n    /** A list of pull requests associated with this user. */\n    pullRequests: PullRequestConnection;\n    /** Recent projects that this user has modified in the context of the owner. */\n    recentProjects: ProjectV2Connection;\n    /** A list of repositories that the user owns. */\n    repositories: RepositoryConnection;\n    /** A list of repositories that the user recently contributed to. */\n    repositoriesContributedTo: RepositoryConnection;\n    /** Find Repository. */\n    repository?: Maybe<Repository>;\n    /** Discussion comments this user has authored. */\n    repositoryDiscussionComments: DiscussionCommentConnection;\n    /** Discussions this user has started. */\n    repositoryDiscussions: DiscussionConnection;\n    /** The HTTP path for this user */\n    resourcePath: Scalars[\"URI\"];\n    /** Replies this user has saved */\n    savedReplies?: Maybe<SavedReplyConnection>;\n    /** List of users and organizations this entity is sponsoring. */\n    sponsoring: SponsorConnection;\n    /** List of sponsors for this user or organization. */\n    sponsors: SponsorConnection;\n    /** Events involving this sponsorable, such as new sponsorships. */\n    sponsorsActivities: SponsorsActivityConnection;\n    /** The GitHub Sponsors listing for this user or organization. */\n    sponsorsListing?: Maybe<SponsorsListing>;\n    /** The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor. */\n    sponsorshipForViewerAsSponsor?: Maybe<Sponsorship>;\n    /** The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving. */\n    sponsorshipForViewerAsSponsorable?: Maybe<Sponsorship>;\n    /** List of sponsorship updates sent from this sponsorable to sponsors. */\n    sponsorshipNewsletters: SponsorshipNewsletterConnection;\n    /** The sponsorships where this user or organization is the maintainer receiving the funds. */\n    sponsorshipsAsMaintainer: SponsorshipConnection;\n    /** The sponsorships where this user or organization is the funder. */\n    sponsorshipsAsSponsor: SponsorshipConnection;\n    /** Repositories the user has starred. */\n    starredRepositories: StarredRepositoryConnection;\n    /** The user's description of what they're currently doing. */\n    status?: Maybe<UserStatus>;\n    /**\n     * Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created\n     *\n     */\n    topRepositories: RepositoryConnection;\n    /** The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization. */\n    totalSponsorshipAmountAsSponsorInCents?: Maybe<Scalars[\"Int\"]>;\n    /** The user's Twitter username. */\n    twitterUsername?: Maybe<Scalars[\"String\"]>;\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this user */\n    url: Scalars[\"URI\"];\n    /** Can the viewer pin repositories and gists to the profile? */\n    viewerCanChangePinnedItems: Scalars[\"Boolean\"];\n    /** Can the current viewer create new projects on this owner. */\n    viewerCanCreateProjects: Scalars[\"Boolean\"];\n    /** Whether or not the viewer is able to follow the user. */\n    viewerCanFollow: Scalars[\"Boolean\"];\n    /** Whether or not the viewer is able to sponsor this user/organization. */\n    viewerCanSponsor: Scalars[\"Boolean\"];\n    /** Whether or not this user is followed by the viewer. Inverse of is_following_viewer. */\n    viewerIsFollowing: Scalars[\"Boolean\"];\n    /** True if the viewer is sponsoring this user/organization. */\n    viewerIsSponsoring: Scalars[\"Boolean\"];\n    /** A list of repositories the given user is watching. */\n    watching: RepositoryConnection;\n    /** A URL pointing to the user's public website/blog. */\n    websiteUrl?: Maybe<Scalars[\"URI\"]>;\n  };\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserAnyPinnableItemsArgs = {\n  type?: InputMaybe<PinnableItemType>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserAvatarUrlArgs = {\n  size?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserCanReceiveOrganizationEmailsWhenNotificationsRestrictedArgs = {\n  login: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserCommitCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserContributionsCollectionArgs = {\n  from?: InputMaybe<Scalars[\"DateTime\"]>;\n  organizationID?: InputMaybe<Scalars[\"ID\"]>;\n  to?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserFollowersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserFollowingArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistArgs = {\n  name: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<GistOrder>;\n  privacy?: InputMaybe<GistPrivacy>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserHovercardArgs = {\n  primarySubjectId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserIsSponsoredByArgs = {\n  accountLogin: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserIssueCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueCommentOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserIssuesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  filterBy?: InputMaybe<IssueFilters>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<IssueState>>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationArgs = {\n  login: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationVerifiedDomainEmailsArgs = {\n  login: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPackagesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  names?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>;\n  orderBy?: InputMaybe<PackageOrder>;\n  packageType?: InputMaybe<PackageType>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPinnableItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPinnedItemsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectArgs = {\n  number: Scalars[\"Int\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectV2Args = {\n  number: Scalars[\"Int\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectOrder>;\n  search?: InputMaybe<Scalars[\"String\"]>;\n  states?: InputMaybe<Array<ProjectState>>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectsV2Args = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars[\"String\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPublicKeysArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPullRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  baseRefName?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  headRefName?: InputMaybe<Scalars[\"String\"]>;\n  labels?: InputMaybe<Array<Scalars[\"String\"]>>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRecentProjectsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoriesArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isFork?: InputMaybe<Scalars[\"Boolean\"]>;\n  isLocked?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoriesContributedToArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  contributionTypes?: InputMaybe<Array<InputMaybe<RepositoryContributionType>>>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includeUserRepositories?: InputMaybe<Scalars[\"Boolean\"]>;\n  isLocked?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoryArgs = {\n  followRenames?: InputMaybe<Scalars[\"Boolean\"]>;\n  name: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoryDiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  onlyAnswers?: InputMaybe<Scalars[\"Boolean\"]>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoryDiscussionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  answered?: InputMaybe<Scalars[\"Boolean\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<DiscussionOrder>;\n  repositoryId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSavedRepliesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SavedReplyOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsoringArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorOrder>;\n  tierId?: InputMaybe<Scalars[\"ID\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorsActivitiesArgs = {\n  actions?: InputMaybe<Array<SponsorsActivityAction>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includeAsSponsor?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorsActivityOrder>;\n  period?: InputMaybe<SponsorsActivityPeriod>;\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  until?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipForViewerAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipForViewerAsSponsorableArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipNewslettersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorshipNewsletterOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipsAsMaintainerArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  includePrivate?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipsAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars[\"Boolean\"]>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  maintainerLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserStarredRepositoriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<StarOrder>;\n  ownedByViewer?: InputMaybe<Scalars[\"Boolean\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserTopRepositoriesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy: RepositoryOrder;\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserTotalSponsorshipAmountAsSponsorInCentsArgs = {\n  since?: InputMaybe<Scalars[\"DateTime\"]>;\n  sponsorableLogins?: InputMaybe<Array<Scalars[\"String\"]>>;\n  until?: InputMaybe<Scalars[\"DateTime\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserWatchingArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  isLocked?: InputMaybe<Scalars[\"Boolean\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n/** The possible durations that a user can be blocked for. */\nexport enum UserBlockDuration {\n  /** The user was blocked for 1 day */\n  OneDay = \"ONE_DAY\",\n  /** The user was blocked for 30 days */\n  OneMonth = \"ONE_MONTH\",\n  /** The user was blocked for 7 days */\n  OneWeek = \"ONE_WEEK\",\n  /** The user was blocked permanently */\n  Permanent = \"PERMANENT\",\n  /** The user was blocked for 3 days */\n  ThreeDays = \"THREE_DAYS\",\n}\n\n/** Represents a 'user_blocked' event on a given user. */\nexport type UserBlockedEvent = Node & {\n  __typename?: \"UserBlockedEvent\";\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Number of days that the user was blocked for. */\n  blockDuration: UserBlockDuration;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  id: Scalars[\"ID\"];\n  /** The user who was blocked. */\n  subject?: Maybe<User>;\n};\n\n/** The connection type for User. */\nexport type UserConnection = {\n  __typename?: \"UserConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edit on user content */\nexport type UserContentEdit = Node & {\n  __typename?: \"UserContentEdit\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the date and time when the object was deleted. */\n  deletedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** The actor who deleted this content */\n  deletedBy?: Maybe<Actor>;\n  /** A summary of the changes for this edit */\n  diff?: Maybe<Scalars[\"String\"]>;\n  /** When this content was edited */\n  editedAt: Scalars[\"DateTime\"];\n  /** The actor who edited this content */\n  editor?: Maybe<Actor>;\n  id: Scalars[\"ID\"];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** A list of edits to content. */\nexport type UserContentEditConnection = {\n  __typename?: \"UserContentEditConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserContentEditEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<UserContentEdit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type UserContentEditEdge = {\n  __typename?: \"UserContentEditEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<UserContentEdit>;\n};\n\n/** Represents a user. */\nexport type UserEdge = {\n  __typename?: \"UserEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n};\n\n/** Email attributes from External Identity */\nexport type UserEmailMetadata = {\n  __typename?: \"UserEmailMetadata\";\n  /** Boolean to identify primary emails */\n  primary?: Maybe<Scalars[\"Boolean\"]>;\n  /** Type of email */\n  type?: Maybe<Scalars[\"String\"]>;\n  /** Email id */\n  value: Scalars[\"String\"];\n};\n\n/** The user's description of what they're currently doing. */\nexport type UserStatus = Node & {\n  __typename?: \"UserStatus\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** An emoji summarizing the user's status. */\n  emoji?: Maybe<Scalars[\"String\"]>;\n  /** The status emoji as HTML. */\n  emojiHTML?: Maybe<Scalars[\"HTML\"]>;\n  /** If set, the status will not be shown after this date. */\n  expiresAt?: Maybe<Scalars[\"DateTime\"]>;\n  id: Scalars[\"ID\"];\n  /** Whether this status indicates the user is not fully available on GitHub. */\n  indicatesLimitedAvailability: Scalars[\"Boolean\"];\n  /** A brief message describing what the user is doing. */\n  message?: Maybe<Scalars[\"String\"]>;\n  /** The organization whose members can see this status. If null, this status is publicly visible. */\n  organization?: Maybe<Organization>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The user who has this status. */\n  user: User;\n};\n\n/** The connection type for UserStatus. */\nexport type UserStatusConnection = {\n  __typename?: \"UserStatusConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserStatusEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<UserStatus>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type UserStatusEdge = {\n  __typename?: \"UserStatusEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<UserStatus>;\n};\n\n/** Ordering options for user status connections. */\nexport type UserStatusOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order user statuses by. */\n  field: UserStatusOrderField;\n};\n\n/** Properties by which user status connections can be ordered. */\nexport enum UserStatusOrderField {\n  /** Order user statuses by when they were updated. */\n  UpdatedAt = \"UPDATED_AT\",\n}\n\n/** A domain that can be verified or approved for an organization or an enterprise. */\nexport type VerifiableDomain = Node & {\n  __typename?: \"VerifiableDomain\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  /** The DNS host name that should be used for verification. */\n  dnsHostName?: Maybe<Scalars[\"URI\"]>;\n  /** The unicode encoded domain. */\n  domain: Scalars[\"URI\"];\n  /** Whether a TXT record for verification with the expected host name was found. */\n  hasFoundHostName: Scalars[\"Boolean\"];\n  /** Whether a TXT record for verification with the expected verification token was found. */\n  hasFoundVerificationToken: Scalars[\"Boolean\"];\n  id: Scalars[\"ID\"];\n  /** Whether or not the domain is approved. */\n  isApproved: Scalars[\"Boolean\"];\n  /** Whether this domain is required to exist for an organization or enterprise policy to be enforced. */\n  isRequiredForPolicyEnforcement: Scalars[\"Boolean\"];\n  /** Whether or not the domain is verified. */\n  isVerified: Scalars[\"Boolean\"];\n  /** The owner of the domain. */\n  owner: VerifiableDomainOwner;\n  /** The punycode encoded domain. */\n  punycodeEncodedDomain: Scalars[\"URI\"];\n  /** The time that the current verification token will expire. */\n  tokenExpirationTime?: Maybe<Scalars[\"DateTime\"]>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n  /** The current verification token for the domain. */\n  verificationToken?: Maybe<Scalars[\"String\"]>;\n};\n\n/** The connection type for VerifiableDomain. */\nexport type VerifiableDomainConnection = {\n  __typename?: \"VerifiableDomainConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<VerifiableDomainEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<VerifiableDomain>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type VerifiableDomainEdge = {\n  __typename?: \"VerifiableDomainEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<VerifiableDomain>;\n};\n\n/** Ordering options for verifiable domain connections. */\nexport type VerifiableDomainOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order verifiable domains by. */\n  field: VerifiableDomainOrderField;\n};\n\n/** Properties by which verifiable domain connections can be ordered. */\nexport enum VerifiableDomainOrderField {\n  /** Order verifiable domains by their creation date. */\n  CreatedAt = \"CREATED_AT\",\n  /** Order verifiable domains by the domain name. */\n  Domain = \"DOMAIN\",\n}\n\n/** Types that can own a verifiable domain. */\nexport type VerifiableDomainOwner = Enterprise | Organization;\n\n/** Autogenerated input type of VerifyVerifiableDomain */\nexport type VerifyVerifiableDomainInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars[\"String\"]>;\n  /** The ID of the verifiable domain to verify. */\n  id: Scalars[\"ID\"];\n};\n\n/** Autogenerated return type of VerifyVerifiableDomain */\nexport type VerifyVerifiableDomainPayload = {\n  __typename?: \"VerifyVerifiableDomainPayload\";\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars[\"String\"]>;\n  /** The verifiable domain that was verified. */\n  domain?: Maybe<VerifiableDomain>;\n};\n\n/** A hovercard context with a message describing how the viewer is related. */\nexport type ViewerHovercardContext = HovercardContext & {\n  __typename?: \"ViewerHovercardContext\";\n  /** A string describing this context */\n  message: Scalars[\"String\"];\n  /** An octicon to accompany this context */\n  octicon: Scalars[\"String\"];\n  /** Identifies the user who is related to this context. */\n  viewer: User;\n};\n\n/** A subject that may be upvoted. */\nexport type Votable = {\n  /** Number of upvotes that this subject has received. */\n  upvoteCount: Scalars[\"Int\"];\n  /** Whether or not the current user can add or remove an upvote on this subject. */\n  viewerCanUpvote: Scalars[\"Boolean\"];\n  /** Whether or not the current user has already upvoted this subject. */\n  viewerHasUpvoted: Scalars[\"Boolean\"];\n};\n\n/** A workflow contains meta information about an Actions workflow file. */\nexport type Workflow = Node & {\n  __typename?: \"Workflow\";\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars[\"DateTime\"];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"ID\"];\n  /** The name of the workflow. */\n  name: Scalars[\"String\"];\n  /** The runs of the workflow. */\n  runs: WorkflowRunConnection;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars[\"DateTime\"];\n};\n\n/** A workflow contains meta information about an Actions workflow file. */\nexport type WorkflowRunsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n  orderBy?: InputMaybe<WorkflowRunOrder>;\n};\n\n/** A workflow run. */\nexport type WorkflowRun = Node &\n  UniformResourceLocatable & {\n    __typename?: \"WorkflowRun\";\n    /** The check suite this workflow run belongs to. */\n    checkSuite: CheckSuite;\n    /** Identifies the date and time when the object was created. */\n    createdAt: Scalars[\"DateTime\"];\n    /** Identifies the primary key from the database. */\n    databaseId?: Maybe<Scalars[\"Int\"]>;\n    /** The log of deployment reviews */\n    deploymentReviews: DeploymentReviewConnection;\n    id: Scalars[\"ID\"];\n    /** The pending deployment requests of all check runs in this workflow run */\n    pendingDeploymentRequests: DeploymentRequestConnection;\n    /** The HTTP path for this workflow run */\n    resourcePath: Scalars[\"URI\"];\n    /** A number that uniquely identifies this workflow run in its parent workflow. */\n    runNumber: Scalars[\"Int\"];\n    /** Identifies the date and time when the object was last updated. */\n    updatedAt: Scalars[\"DateTime\"];\n    /** The HTTP URL for this workflow run */\n    url: Scalars[\"URI\"];\n    /** The workflow executed in this workflow run. */\n    workflow: Workflow;\n  };\n\n/** A workflow run. */\nexport type WorkflowRunDeploymentReviewsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** A workflow run. */\nexport type WorkflowRunPendingDeploymentRequestsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>;\n  before?: InputMaybe<Scalars[\"String\"]>;\n  first?: InputMaybe<Scalars[\"Int\"]>;\n  last?: InputMaybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for WorkflowRun. */\nexport type WorkflowRunConnection = {\n  __typename?: \"WorkflowRunConnection\";\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<WorkflowRunEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<WorkflowRun>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type WorkflowRunEdge = {\n  __typename?: \"WorkflowRunEdge\";\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"];\n  /** The item at the end of the edge. */\n  node?: Maybe<WorkflowRun>;\n};\n\n/** Ways in which lists of workflow runs can be ordered upon return. */\nexport type WorkflowRunOrder = {\n  /** The direction in which to order workflow runs by the specified field. */\n  direction: OrderDirection;\n  /** The field by which to order workflows. */\n  field: WorkflowRunOrderField;\n};\n\n/** Properties by which workflow run connections can be ordered. */\nexport enum WorkflowRunOrderField {\n  /** Order workflow runs by most recently created */\n  CreatedAt = \"CREATED_AT\",\n}\n\nexport type CreateLinkedBranchMutationVariables = Exact<{\n  input: CreateLinkedBranchInput;\n}>;\n\nexport type CreateLinkedBranchMutation = {\n  __typename?: \"Mutation\";\n  createLinkedBranch?: {\n    __typename?: \"CreateLinkedBranchPayload\";\n    clientMutationId?: string | null;\n    linkedBranch?: {\n      __typename?: \"LinkedBranch\";\n      ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n    } | null;\n  } | null;\n};\n\nexport type CreateRefMutationVariables = Exact<{\n  input: CreateRefInput;\n}>;\n\nexport type CreateRefMutation = {\n  __typename?: \"Mutation\";\n  createRef?: {\n    __typename?: \"CreateRefPayload\";\n    clientMutationId?: string | null;\n    ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n  } | null;\n};\n\nexport type DeleteLinkedBranchMutationVariables = Exact<{\n  input: DeleteLinkedBranchInput;\n}>;\n\nexport type DeleteLinkedBranchMutation = {\n  __typename?: \"Mutation\";\n  deleteLinkedBranch?: { __typename?: \"DeleteLinkedBranchPayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type DiscussionFieldsFragment = {\n  __typename?: \"Discussion\";\n  id: string;\n  title: string;\n  bodyText: string;\n  publishedAt?: any | null;\n  url: any;\n  upvoteCount: number;\n  repository: {\n    __typename?: \"Repository\";\n    id: string;\n    nameWithOwner: string;\n    name: string;\n    url: any;\n    mergeCommitAllowed: boolean;\n    squashMergeAllowed: boolean;\n    rebaseMergeAllowed: boolean;\n    defaultBranchRef?: {\n      __typename?: \"Ref\";\n      target?:\n        | { __typename?: \"Blob\"; oid: any }\n        | { __typename?: \"Commit\"; oid: any }\n        | { __typename?: \"Tag\"; oid: any }\n        | { __typename?: \"Tree\"; oid: any }\n        | null;\n    } | null;\n    owner:\n      | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n      | { __typename?: \"User\"; login: string; avatarUrl: any };\n  };\n  category: { __typename?: \"DiscussionCategory\"; name: string; emoji: string; emojiHTML: any };\n  comments: { __typename?: \"DiscussionCommentConnection\"; totalCount: number };\n  answer?: { __typename?: \"DiscussionComment\"; bodyText: string } | null;\n  author?:\n    | { __typename?: \"Bot\"; login: string; avatarUrl: any }\n    | { __typename?: \"EnterpriseUserAccount\"; login: string; avatarUrl: any }\n    | { __typename?: \"Mannequin\"; login: string; avatarUrl: any }\n    | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n    | { __typename?: \"User\"; login: string; avatarUrl: any }\n    | null;\n};\n\nexport type SearchDiscussionsQueryVariables = Exact<{\n  query: Scalars[\"String\"];\n  numberOfOpenItems: Scalars[\"Int\"];\n}>;\n\nexport type SearchDiscussionsQuery = {\n  __typename?: \"Query\";\n  openDiscussions: {\n    __typename?: \"SearchResultItemConnection\";\n    nodes?: Array<\n      | { __typename?: \"App\" }\n      | {\n          __typename?: \"Discussion\";\n          id: string;\n          title: string;\n          bodyText: string;\n          publishedAt?: any | null;\n          url: any;\n          upvoteCount: number;\n          repository: {\n            __typename?: \"Repository\";\n            id: string;\n            nameWithOwner: string;\n            name: string;\n            url: any;\n            mergeCommitAllowed: boolean;\n            squashMergeAllowed: boolean;\n            rebaseMergeAllowed: boolean;\n            defaultBranchRef?: {\n              __typename?: \"Ref\";\n              target?:\n                | { __typename?: \"Blob\"; oid: any }\n                | { __typename?: \"Commit\"; oid: any }\n                | { __typename?: \"Tag\"; oid: any }\n                | { __typename?: \"Tree\"; oid: any }\n                | null;\n            } | null;\n            owner:\n              | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n              | { __typename?: \"User\"; login: string; avatarUrl: any };\n          };\n          category: { __typename?: \"DiscussionCategory\"; name: string; emoji: string; emojiHTML: any };\n          comments: { __typename?: \"DiscussionCommentConnection\"; totalCount: number };\n          answer?: { __typename?: \"DiscussionComment\"; bodyText: string } | null;\n          author?:\n            | { __typename?: \"Bot\"; login: string; avatarUrl: any }\n            | { __typename?: \"EnterpriseUserAccount\"; login: string; avatarUrl: any }\n            | { __typename?: \"Mannequin\"; login: string; avatarUrl: any }\n            | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n            | { __typename?: \"User\"; login: string; avatarUrl: any }\n            | null;\n        }\n      | { __typename?: \"Issue\" }\n      | { __typename?: \"MarketplaceListing\" }\n      | { __typename?: \"Organization\" }\n      | { __typename?: \"PullRequest\" }\n      | { __typename?: \"Repository\" }\n      | { __typename?: \"User\" }\n      | null\n    > | null;\n  };\n  searchDiscussions: {\n    __typename?: \"SearchResultItemConnection\";\n    nodes?: Array<\n      | { __typename?: \"App\" }\n      | {\n          __typename?: \"Discussion\";\n          id: string;\n          title: string;\n          bodyText: string;\n          publishedAt?: any | null;\n          url: any;\n          upvoteCount: number;\n          repository: {\n            __typename?: \"Repository\";\n            id: string;\n            nameWithOwner: string;\n            name: string;\n            url: any;\n            mergeCommitAllowed: boolean;\n            squashMergeAllowed: boolean;\n            rebaseMergeAllowed: boolean;\n            defaultBranchRef?: {\n              __typename?: \"Ref\";\n              target?:\n                | { __typename?: \"Blob\"; oid: any }\n                | { __typename?: \"Commit\"; oid: any }\n                | { __typename?: \"Tag\"; oid: any }\n                | { __typename?: \"Tree\"; oid: any }\n                | null;\n            } | null;\n            owner:\n              | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n              | { __typename?: \"User\"; login: string; avatarUrl: any };\n          };\n          category: { __typename?: \"DiscussionCategory\"; name: string; emoji: string; emojiHTML: any };\n          comments: { __typename?: \"DiscussionCommentConnection\"; totalCount: number };\n          answer?: { __typename?: \"DiscussionComment\"; bodyText: string } | null;\n          author?:\n            | { __typename?: \"Bot\"; login: string; avatarUrl: any }\n            | { __typename?: \"EnterpriseUserAccount\"; login: string; avatarUrl: any }\n            | { __typename?: \"Mannequin\"; login: string; avatarUrl: any }\n            | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n            | { __typename?: \"User\"; login: string; avatarUrl: any }\n            | null;\n        }\n      | { __typename?: \"Issue\" }\n      | { __typename?: \"MarketplaceListing\" }\n      | { __typename?: \"Organization\" }\n      | { __typename?: \"PullRequest\" }\n      | { __typename?: \"Repository\" }\n      | { __typename?: \"User\" }\n      | null\n    > | null;\n  };\n};\n\nexport type IssueFieldsFragment = {\n  __typename?: \"Issue\";\n  id: string;\n  url: any;\n  title: string;\n  number: number;\n  closed: boolean;\n  state: IssueState;\n  stateReason?: IssueStateReason | null;\n  updatedAt: any;\n  author?:\n    | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n    | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n    | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n    | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n    | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n    | null;\n  linkedBranches: {\n    __typename?: \"LinkedBranchConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"LinkedBranch\";\n      id: string;\n      ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n    } | null> | null;\n  };\n  milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n  repository: {\n    __typename?: \"Repository\";\n    id: string;\n    nameWithOwner: string;\n    name: string;\n    url: any;\n    mergeCommitAllowed: boolean;\n    squashMergeAllowed: boolean;\n    rebaseMergeAllowed: boolean;\n    defaultBranchRef?: {\n      __typename?: \"Ref\";\n      target?:\n        | { __typename?: \"Blob\"; oid: any }\n        | { __typename?: \"Commit\"; oid: any }\n        | { __typename?: \"Tag\"; oid: any }\n        | { __typename?: \"Tree\"; oid: any }\n        | null;\n    } | null;\n    owner:\n      | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n      | { __typename?: \"User\"; login: string; avatarUrl: any };\n  };\n  comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n  assignees: {\n    __typename?: \"UserConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"User\";\n      id: string;\n      avatarUrl: any;\n      name?: string | null;\n      login: string;\n      isViewer: boolean;\n    } | null> | null;\n  };\n};\n\nexport type SearchCreatedIssuesQueryVariables = Exact<{\n  createdOpenQuery: Scalars[\"String\"];\n  createdClosedQuery: Scalars[\"String\"];\n  numberOfOpenItems: Scalars[\"Int\"];\n  numberOfClosedItems: Scalars[\"Int\"];\n}>;\n\nexport type SearchCreatedIssuesQuery = {\n  __typename?: \"Query\";\n  createdOpen: {\n    __typename?: \"SearchResultItemConnection\";\n    nodes?: Array<\n      | { __typename?: \"App\" }\n      | { __typename?: \"Discussion\" }\n      | {\n          __typename?: \"Issue\";\n          id: string;\n          url: any;\n          title: string;\n          number: number;\n          closed: boolean;\n          state: IssueState;\n          stateReason?: IssueStateReason | null;\n          updatedAt: any;\n          author?:\n            | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | {\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              }\n            | null;\n          linkedBranches: {\n            __typename?: \"LinkedBranchConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"LinkedBranch\";\n              id: string;\n              ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n            } | null> | null;\n          };\n          milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n          repository: {\n            __typename?: \"Repository\";\n            id: string;\n            nameWithOwner: string;\n            name: string;\n            url: any;\n            mergeCommitAllowed: boolean;\n            squashMergeAllowed: boolean;\n            rebaseMergeAllowed: boolean;\n            defaultBranchRef?: {\n              __typename?: \"Ref\";\n              target?:\n                | { __typename?: \"Blob\"; oid: any }\n                | { __typename?: \"Commit\"; oid: any }\n                | { __typename?: \"Tag\"; oid: any }\n                | { __typename?: \"Tree\"; oid: any }\n                | null;\n            } | null;\n            owner:\n              | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n              | { __typename?: \"User\"; login: string; avatarUrl: any };\n          };\n          comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n          assignees: {\n            __typename?: \"UserConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"User\";\n              id: string;\n              avatarUrl: any;\n              name?: string | null;\n              login: string;\n              isViewer: boolean;\n            } | null> | null;\n          };\n        }\n      | { __typename?: \"MarketplaceListing\" }\n      | { __typename?: \"Organization\" }\n      | { __typename?: \"PullRequest\" }\n      | { __typename?: \"Repository\" }\n      | { __typename?: \"User\" }\n      | null\n    > | null;\n  };\n  createdClosed: {\n    __typename?: \"SearchResultItemConnection\";\n    nodes?: Array<\n      | { __typename?: \"App\" }\n      | { __typename?: \"Discussion\" }\n      | {\n          __typename?: \"Issue\";\n          id: string;\n          url: any;\n          title: string;\n          number: number;\n          closed: boolean;\n          state: IssueState;\n          stateReason?: IssueStateReason | null;\n          updatedAt: any;\n          author?:\n            | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | {\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              }\n            | null;\n          linkedBranches: {\n            __typename?: \"LinkedBranchConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"LinkedBranch\";\n              id: string;\n              ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n            } | null> | null;\n          };\n          milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n          repository: {\n            __typename?: \"Repository\";\n            id: string;\n            nameWithOwner: string;\n            name: string;\n            url: any;\n            mergeCommitAllowed: boolean;\n            squashMergeAllowed: boolean;\n            rebaseMergeAllowed: boolean;\n            defaultBranchRef?: {\n              __typename?: \"Ref\";\n              target?:\n                | { __typename?: \"Blob\"; oid: any }\n                | { __typename?: \"Commit\"; oid: any }\n                | { __typename?: \"Tag\"; oid: any }\n                | { __typename?: \"Tree\"; oid: any }\n                | null;\n            } | null;\n            owner:\n              | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n              | { __typename?: \"User\"; login: string; avatarUrl: any };\n          };\n          comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n          assignees: {\n            __typename?: \"UserConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"User\";\n              id: string;\n              avatarUrl: any;\n              name?: string | null;\n              login: string;\n              isViewer: boolean;\n            } | null> | null;\n          };\n        }\n      | { __typename?: \"MarketplaceListing\" }\n      | { __typename?: \"Organization\" }\n      | { __typename?: \"PullRequest\" }\n      | { __typename?: \"Repository\" }\n      | { __typename?: \"User\" }\n      | null\n    > | null;\n  };\n};\n\nexport type RepositoryCollaboratorsForIssuesQueryVariables = Exact<{\n  owner: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  issueNumber: Scalars[\"Int\"];\n}>;\n\nexport type RepositoryCollaboratorsForIssuesQuery = {\n  __typename?: \"Query\";\n  repository?: {\n    __typename?: \"Repository\";\n    collaborators?: {\n      __typename?: \"RepositoryCollaboratorConnection\";\n      totalCount: number;\n      nodes?: Array<{\n        __typename?: \"User\";\n        id: string;\n        avatarUrl: any;\n        name?: string | null;\n        login: string;\n        isViewer: boolean;\n      } | null> | null;\n    } | null;\n    issue?: {\n      __typename?: \"Issue\";\n      assignees: {\n        __typename?: \"UserConnection\";\n        totalCount: number;\n        nodes?: Array<{ __typename?: \"User\"; id: string } | null> | null;\n      };\n    } | null;\n  } | null;\n};\n\nexport type RepositoryProjectsForIssuesQueryVariables = Exact<{\n  owner: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  issueNumber: Scalars[\"Int\"];\n}>;\n\nexport type RepositoryProjectsForIssuesQuery = {\n  __typename?: \"Query\";\n  repository?: {\n    __typename?: \"Repository\";\n    projectsV2: {\n      __typename?: \"ProjectV2Connection\";\n      totalCount: number;\n      nodes?: Array<{ __typename?: \"ProjectV2\"; id: string; title: string; number: number } | null> | null;\n    };\n    issue?: {\n      __typename?: \"Issue\";\n      projectsV2: {\n        __typename?: \"ProjectV2Connection\";\n        totalCount: number;\n        nodes?: Array<{ __typename?: \"ProjectV2\"; id: string } | null> | null;\n      };\n    } | null;\n  } | null;\n};\n\nexport type SearchOpenIssuesQueryVariables = Exact<{\n  assignedOpenQuery: Scalars[\"String\"];\n  mentionedOpenQuery: Scalars[\"String\"];\n  numberOfOpenItems: Scalars[\"Int\"];\n}>;\n\nexport type SearchOpenIssuesQuery = {\n  __typename?: \"Query\";\n  assignedOpen: {\n    __typename?: \"SearchResultItemConnection\";\n    nodes?: Array<\n      | { __typename?: \"App\" }\n      | { __typename?: \"Discussion\" }\n      | {\n          __typename?: \"Issue\";\n          id: string;\n          url: any;\n          title: string;\n          number: number;\n          closed: boolean;\n          state: IssueState;\n          stateReason?: IssueStateReason | null;\n          updatedAt: any;\n          author?:\n            | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | {\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              }\n            | null;\n          linkedBranches: {\n            __typename?: \"LinkedBranchConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"LinkedBranch\";\n              id: string;\n              ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n            } | null> | null;\n          };\n          milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n          repository: {\n            __typename?: \"Repository\";\n            id: string;\n            nameWithOwner: string;\n            name: string;\n            url: any;\n            mergeCommitAllowed: boolean;\n            squashMergeAllowed: boolean;\n            rebaseMergeAllowed: boolean;\n            defaultBranchRef?: {\n              __typename?: \"Ref\";\n              target?:\n                | { __typename?: \"Blob\"; oid: any }\n                | { __typename?: \"Commit\"; oid: any }\n                | { __typename?: \"Tag\"; oid: any }\n                | { __typename?: \"Tree\"; oid: any }\n                | null;\n            } | null;\n            owner:\n              | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n              | { __typename?: \"User\"; login: string; avatarUrl: any };\n          };\n          comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n          assignees: {\n            __typename?: \"UserConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"User\";\n              id: string;\n              avatarUrl: any;\n              name?: string | null;\n              login: string;\n              isViewer: boolean;\n            } | null> | null;\n          };\n        }\n      | { __typename?: \"MarketplaceListing\" }\n      | { __typename?: \"Organization\" }\n      | { __typename?: \"PullRequest\" }\n      | { __typename?: \"Repository\" }\n      | { __typename?: \"User\" }\n      | null\n    > | null;\n  };\n  mentionedOpen: {\n    __typename?: \"SearchResultItemConnection\";\n    nodes?: Array<\n      | { __typename?: \"App\" }\n      | { __typename?: \"Discussion\" }\n      | {\n          __typename?: \"Issue\";\n          id: string;\n          url: any;\n          title: string;\n          number: number;\n          closed: boolean;\n          state: IssueState;\n          stateReason?: IssueStateReason | null;\n          updatedAt: any;\n          author?:\n            | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | {\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              }\n            | null;\n          linkedBranches: {\n            __typename?: \"LinkedBranchConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"LinkedBranch\";\n              id: string;\n              ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n            } | null> | null;\n          };\n          milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n          repository: {\n            __typename?: \"Repository\";\n            id: string;\n            nameWithOwner: string;\n            name: string;\n            url: any;\n            mergeCommitAllowed: boolean;\n            squashMergeAllowed: boolean;\n            rebaseMergeAllowed: boolean;\n            defaultBranchRef?: {\n              __typename?: \"Ref\";\n              target?:\n                | { __typename?: \"Blob\"; oid: any }\n                | { __typename?: \"Commit\"; oid: any }\n                | { __typename?: \"Tag\"; oid: any }\n                | { __typename?: \"Tree\"; oid: any }\n                | null;\n            } | null;\n            owner:\n              | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n              | { __typename?: \"User\"; login: string; avatarUrl: any };\n          };\n          comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n          assignees: {\n            __typename?: \"UserConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"User\";\n              id: string;\n              avatarUrl: any;\n              name?: string | null;\n              login: string;\n              isViewer: boolean;\n            } | null> | null;\n          };\n        }\n      | { __typename?: \"MarketplaceListing\" }\n      | { __typename?: \"Organization\" }\n      | { __typename?: \"PullRequest\" }\n      | { __typename?: \"Repository\" }\n      | { __typename?: \"User\" }\n      | null\n    > | null;\n  };\n};\n\nexport type IssueDetailFieldsFragment = {\n  __typename?: \"Issue\";\n  id: string;\n  url: any;\n  title: string;\n  body: string;\n  number: number;\n  closed: boolean;\n  state: IssueState;\n  stateReason?: IssueStateReason | null;\n  updatedAt: any;\n  author?:\n    | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n    | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n    | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n    | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n    | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n    | null;\n  labels?: {\n    __typename?: \"LabelConnection\";\n    totalCount: number;\n    nodes?: Array<{ __typename?: \"Label\"; id: string; name: string; color: string; isDefault: boolean } | null> | null;\n  } | null;\n  linkedBranches: {\n    __typename?: \"LinkedBranchConnection\";\n    totalCount: number;\n    nodes?: Array<{ __typename?: \"LinkedBranch\"; ref?: { __typename?: \"Ref\"; name: string } | null } | null> | null;\n  };\n  milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n  repository: {\n    __typename?: \"Repository\";\n    id: string;\n    nameWithOwner: string;\n    name: string;\n    url: any;\n    mergeCommitAllowed: boolean;\n    squashMergeAllowed: boolean;\n    rebaseMergeAllowed: boolean;\n    defaultBranchRef?: {\n      __typename?: \"Ref\";\n      target?:\n        | { __typename?: \"Blob\"; oid: any }\n        | { __typename?: \"Commit\"; oid: any }\n        | { __typename?: \"Tag\"; oid: any }\n        | { __typename?: \"Tree\"; oid: any }\n        | null;\n    } | null;\n    owner:\n      | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n      | { __typename?: \"User\"; login: string; avatarUrl: any };\n  };\n  assignees: {\n    __typename?: \"UserConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"User\";\n      id: string;\n      avatarUrl: any;\n      name?: string | null;\n      login: string;\n      isViewer: boolean;\n    } | null> | null;\n  };\n  projectsV2: {\n    __typename?: \"ProjectV2Connection\";\n    totalCount: number;\n    nodes?: Array<{ __typename?: \"ProjectV2\"; id: string; title: string } | null> | null;\n  };\n};\n\nexport type IssueDetailsQueryVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n}>;\n\nexport type IssueDetailsQuery = {\n  __typename?: \"Query\";\n  node?:\n    | { __typename?: \"AddedToProjectEvent\" }\n    | { __typename?: \"App\" }\n    | { __typename?: \"AssignedEvent\" }\n    | { __typename?: \"AutoMergeDisabledEvent\" }\n    | { __typename?: \"AutoMergeEnabledEvent\" }\n    | { __typename?: \"AutoRebaseEnabledEvent\" }\n    | { __typename?: \"AutoSquashEnabledEvent\" }\n    | { __typename?: \"AutomaticBaseChangeFailedEvent\" }\n    | { __typename?: \"AutomaticBaseChangeSucceededEvent\" }\n    | { __typename?: \"BaseRefChangedEvent\" }\n    | { __typename?: \"BaseRefDeletedEvent\" }\n    | { __typename?: \"BaseRefForcePushedEvent\" }\n    | { __typename?: \"Blob\" }\n    | { __typename?: \"Bot\" }\n    | { __typename?: \"BranchProtectionRule\" }\n    | { __typename?: \"BypassForcePushAllowance\" }\n    | { __typename?: \"BypassPullRequestAllowance\" }\n    | { __typename?: \"CWE\" }\n    | { __typename?: \"CheckRun\" }\n    | { __typename?: \"CheckSuite\" }\n    | { __typename?: \"ClosedEvent\" }\n    | { __typename?: \"CodeOfConduct\" }\n    | { __typename?: \"CommentDeletedEvent\" }\n    | { __typename?: \"Commit\" }\n    | { __typename?: \"CommitComment\" }\n    | { __typename?: \"CommitCommentThread\" }\n    | { __typename?: \"Comparison\" }\n    | { __typename?: \"ConnectedEvent\" }\n    | { __typename?: \"ConvertToDraftEvent\" }\n    | { __typename?: \"ConvertedNoteToIssueEvent\" }\n    | { __typename?: \"ConvertedToDiscussionEvent\" }\n    | { __typename?: \"CrossReferencedEvent\" }\n    | { __typename?: \"DemilestonedEvent\" }\n    | { __typename?: \"DeployKey\" }\n    | { __typename?: \"DeployedEvent\" }\n    | { __typename?: \"Deployment\" }\n    | { __typename?: \"DeploymentEnvironmentChangedEvent\" }\n    | { __typename?: \"DeploymentReview\" }\n    | { __typename?: \"DeploymentStatus\" }\n    | { __typename?: \"DisconnectedEvent\" }\n    | { __typename?: \"Discussion\" }\n    | { __typename?: \"DiscussionCategory\" }\n    | { __typename?: \"DiscussionComment\" }\n    | { __typename?: \"DiscussionPoll\" }\n    | { __typename?: \"DiscussionPollOption\" }\n    | { __typename?: \"DraftIssue\" }\n    | { __typename?: \"Enterprise\" }\n    | { __typename?: \"EnterpriseAdministratorInvitation\" }\n    | { __typename?: \"EnterpriseIdentityProvider\" }\n    | { __typename?: \"EnterpriseRepositoryInfo\" }\n    | { __typename?: \"EnterpriseServerInstallation\" }\n    | { __typename?: \"EnterpriseServerUserAccount\" }\n    | { __typename?: \"EnterpriseServerUserAccountEmail\" }\n    | { __typename?: \"EnterpriseServerUserAccountsUpload\" }\n    | { __typename?: \"EnterpriseUserAccount\" }\n    | { __typename?: \"Environment\" }\n    | { __typename?: \"ExternalIdentity\" }\n    | { __typename?: \"Gist\" }\n    | { __typename?: \"GistComment\" }\n    | { __typename?: \"HeadRefDeletedEvent\" }\n    | { __typename?: \"HeadRefForcePushedEvent\" }\n    | { __typename?: \"HeadRefRestoredEvent\" }\n    | { __typename?: \"IpAllowListEntry\" }\n    | {\n        __typename?: \"Issue\";\n        id: string;\n        url: any;\n        title: string;\n        body: string;\n        number: number;\n        closed: boolean;\n        state: IssueState;\n        stateReason?: IssueStateReason | null;\n        updatedAt: any;\n        author?:\n          | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n          | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n          | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n          | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n          | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n          | null;\n        labels?: {\n          __typename?: \"LabelConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"Label\";\n            id: string;\n            name: string;\n            color: string;\n            isDefault: boolean;\n          } | null> | null;\n        } | null;\n        linkedBranches: {\n          __typename?: \"LinkedBranchConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"LinkedBranch\";\n            ref?: { __typename?: \"Ref\"; name: string } | null;\n          } | null> | null;\n        };\n        milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n        repository: {\n          __typename?: \"Repository\";\n          id: string;\n          nameWithOwner: string;\n          name: string;\n          url: any;\n          mergeCommitAllowed: boolean;\n          squashMergeAllowed: boolean;\n          rebaseMergeAllowed: boolean;\n          defaultBranchRef?: {\n            __typename?: \"Ref\";\n            target?:\n              | { __typename?: \"Blob\"; oid: any }\n              | { __typename?: \"Commit\"; oid: any }\n              | { __typename?: \"Tag\"; oid: any }\n              | { __typename?: \"Tree\"; oid: any }\n              | null;\n          } | null;\n          owner:\n            | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n            | { __typename?: \"User\"; login: string; avatarUrl: any };\n        };\n        assignees: {\n          __typename?: \"UserConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"User\";\n            id: string;\n            avatarUrl: any;\n            name?: string | null;\n            login: string;\n            isViewer: boolean;\n          } | null> | null;\n        };\n        projectsV2: {\n          __typename?: \"ProjectV2Connection\";\n          totalCount: number;\n          nodes?: Array<{ __typename?: \"ProjectV2\"; id: string; title: string } | null> | null;\n        };\n      }\n    | { __typename?: \"IssueComment\" }\n    | { __typename?: \"Label\" }\n    | { __typename?: \"LabeledEvent\" }\n    | { __typename?: \"Language\" }\n    | { __typename?: \"License\" }\n    | { __typename?: \"LinkedBranch\" }\n    | { __typename?: \"LockedEvent\" }\n    | { __typename?: \"Mannequin\" }\n    | { __typename?: \"MarkedAsDuplicateEvent\" }\n    | { __typename?: \"MarketplaceCategory\" }\n    | { __typename?: \"MarketplaceListing\" }\n    | { __typename?: \"MembersCanDeleteReposClearAuditEntry\" }\n    | { __typename?: \"MembersCanDeleteReposDisableAuditEntry\" }\n    | { __typename?: \"MembersCanDeleteReposEnableAuditEntry\" }\n    | { __typename?: \"MentionedEvent\" }\n    | { __typename?: \"MergedEvent\" }\n    | { __typename?: \"MigrationSource\" }\n    | { __typename?: \"Milestone\" }\n    | { __typename?: \"MilestonedEvent\" }\n    | { __typename?: \"MovedColumnsInProjectEvent\" }\n    | { __typename?: \"OIDCProvider\" }\n    | { __typename?: \"OauthApplicationCreateAuditEntry\" }\n    | { __typename?: \"OrgAddBillingManagerAuditEntry\" }\n    | { __typename?: \"OrgAddMemberAuditEntry\" }\n    | { __typename?: \"OrgBlockUserAuditEntry\" }\n    | { __typename?: \"OrgConfigDisableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"OrgConfigEnableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"OrgCreateAuditEntry\" }\n    | { __typename?: \"OrgDisableOauthAppRestrictionsAuditEntry\" }\n    | { __typename?: \"OrgDisableSamlAuditEntry\" }\n    | { __typename?: \"OrgDisableTwoFactorRequirementAuditEntry\" }\n    | { __typename?: \"OrgEnableOauthAppRestrictionsAuditEntry\" }\n    | { __typename?: \"OrgEnableSamlAuditEntry\" }\n    | { __typename?: \"OrgEnableTwoFactorRequirementAuditEntry\" }\n    | { __typename?: \"OrgInviteMemberAuditEntry\" }\n    | { __typename?: \"OrgInviteToBusinessAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessApprovedAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessDeniedAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessRequestedAuditEntry\" }\n    | { __typename?: \"OrgRemoveBillingManagerAuditEntry\" }\n    | { __typename?: \"OrgRemoveMemberAuditEntry\" }\n    | { __typename?: \"OrgRemoveOutsideCollaboratorAuditEntry\" }\n    | { __typename?: \"OrgRestoreMemberAuditEntry\" }\n    | { __typename?: \"OrgUnblockUserAuditEntry\" }\n    | { __typename?: \"OrgUpdateDefaultRepositoryPermissionAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\" }\n    | { __typename?: \"Organization\" }\n    | { __typename?: \"OrganizationIdentityProvider\" }\n    | { __typename?: \"OrganizationInvitation\" }\n    | { __typename?: \"OrganizationMigration\" }\n    | { __typename?: \"Package\" }\n    | { __typename?: \"PackageFile\" }\n    | { __typename?: \"PackageTag\" }\n    | { __typename?: \"PackageVersion\" }\n    | { __typename?: \"PinnedDiscussion\" }\n    | { __typename?: \"PinnedEvent\" }\n    | { __typename?: \"PinnedIssue\" }\n    | { __typename?: \"PrivateRepositoryForkingDisableAuditEntry\" }\n    | { __typename?: \"PrivateRepositoryForkingEnableAuditEntry\" }\n    | { __typename?: \"Project\" }\n    | { __typename?: \"ProjectCard\" }\n    | { __typename?: \"ProjectColumn\" }\n    | { __typename?: \"ProjectV2\" }\n    | { __typename?: \"ProjectV2Field\" }\n    | { __typename?: \"ProjectV2Item\" }\n    | { __typename?: \"ProjectV2ItemFieldDateValue\" }\n    | { __typename?: \"ProjectV2ItemFieldIterationValue\" }\n    | { __typename?: \"ProjectV2ItemFieldNumberValue\" }\n    | { __typename?: \"ProjectV2ItemFieldSingleSelectValue\" }\n    | { __typename?: \"ProjectV2ItemFieldTextValue\" }\n    | { __typename?: \"ProjectV2IterationField\" }\n    | { __typename?: \"ProjectV2SingleSelectField\" }\n    | { __typename?: \"ProjectV2View\" }\n    | { __typename?: \"PublicKey\" }\n    | { __typename?: \"PullRequest\" }\n    | { __typename?: \"PullRequestCommit\" }\n    | { __typename?: \"PullRequestCommitCommentThread\" }\n    | { __typename?: \"PullRequestReview\" }\n    | { __typename?: \"PullRequestReviewComment\" }\n    | { __typename?: \"PullRequestReviewThread\" }\n    | { __typename?: \"PullRequestThread\" }\n    | { __typename?: \"Push\" }\n    | { __typename?: \"PushAllowance\" }\n    | { __typename?: \"Reaction\" }\n    | { __typename?: \"ReadyForReviewEvent\" }\n    | { __typename?: \"Ref\" }\n    | { __typename?: \"ReferencedEvent\" }\n    | { __typename?: \"Release\" }\n    | { __typename?: \"ReleaseAsset\" }\n    | { __typename?: \"RemovedFromProjectEvent\" }\n    | { __typename?: \"RenamedTitleEvent\" }\n    | { __typename?: \"ReopenedEvent\" }\n    | { __typename?: \"RepoAccessAuditEntry\" }\n    | { __typename?: \"RepoAddMemberAuditEntry\" }\n    | { __typename?: \"RepoAddTopicAuditEntry\" }\n    | { __typename?: \"RepoArchivedAuditEntry\" }\n    | { __typename?: \"RepoChangeMergeSettingAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableContributorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableSockpuppetDisallowedAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableContributorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableSockpuppetDisallowedAuditEntry\" }\n    | { __typename?: \"RepoConfigLockAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigUnlockAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoCreateAuditEntry\" }\n    | { __typename?: \"RepoDestroyAuditEntry\" }\n    | { __typename?: \"RepoRemoveMemberAuditEntry\" }\n    | { __typename?: \"RepoRemoveTopicAuditEntry\" }\n    | { __typename?: \"Repository\" }\n    | { __typename?: \"RepositoryInvitation\" }\n    | { __typename?: \"RepositoryMigration\" }\n    | { __typename?: \"RepositoryTopic\" }\n    | { __typename?: \"RepositoryVisibilityChangeDisableAuditEntry\" }\n    | { __typename?: \"RepositoryVisibilityChangeEnableAuditEntry\" }\n    | { __typename?: \"RepositoryVulnerabilityAlert\" }\n    | { __typename?: \"ReviewDismissalAllowance\" }\n    | { __typename?: \"ReviewDismissedEvent\" }\n    | { __typename?: \"ReviewRequest\" }\n    | { __typename?: \"ReviewRequestRemovedEvent\" }\n    | { __typename?: \"ReviewRequestedEvent\" }\n    | { __typename?: \"SavedReply\" }\n    | { __typename?: \"SecurityAdvisory\" }\n    | { __typename?: \"SponsorsActivity\" }\n    | { __typename?: \"SponsorsListing\" }\n    | { __typename?: \"SponsorsListingFeaturedItem\" }\n    | { __typename?: \"SponsorsTier\" }\n    | { __typename?: \"Sponsorship\" }\n    | { __typename?: \"SponsorshipNewsletter\" }\n    | { __typename?: \"Status\" }\n    | { __typename?: \"StatusCheckRollup\" }\n    | { __typename?: \"StatusContext\" }\n    | { __typename?: \"SubscribedEvent\" }\n    | { __typename?: \"Tag\" }\n    | { __typename?: \"Team\" }\n    | { __typename?: \"TeamAddMemberAuditEntry\" }\n    | { __typename?: \"TeamAddRepositoryAuditEntry\" }\n    | { __typename?: \"TeamChangeParentTeamAuditEntry\" }\n    | { __typename?: \"TeamDiscussion\" }\n    | { __typename?: \"TeamDiscussionComment\" }\n    | { __typename?: \"TeamRemoveMemberAuditEntry\" }\n    | { __typename?: \"TeamRemoveRepositoryAuditEntry\" }\n    | { __typename?: \"Topic\" }\n    | { __typename?: \"TransferredEvent\" }\n    | { __typename?: \"Tree\" }\n    | { __typename?: \"UnassignedEvent\" }\n    | { __typename?: \"UnlabeledEvent\" }\n    | { __typename?: \"UnlockedEvent\" }\n    | { __typename?: \"UnmarkedAsDuplicateEvent\" }\n    | { __typename?: \"UnpinnedEvent\" }\n    | { __typename?: \"UnsubscribedEvent\" }\n    | { __typename?: \"User\" }\n    | { __typename?: \"UserBlockedEvent\" }\n    | { __typename?: \"UserContentEdit\" }\n    | { __typename?: \"UserStatus\" }\n    | { __typename?: \"VerifiableDomain\" }\n    | { __typename?: \"Workflow\" }\n    | { __typename?: \"WorkflowRun\" }\n    | null;\n};\n\nexport type SearchIssuesQueryVariables = Exact<{\n  query: Scalars[\"String\"];\n  numberOfItems: Scalars[\"Int\"];\n}>;\n\nexport type SearchIssuesQuery = {\n  __typename?: \"Query\";\n  search: {\n    __typename?: \"SearchResultItemConnection\";\n    nodes?: Array<\n      | { __typename?: \"App\" }\n      | { __typename?: \"Discussion\" }\n      | {\n          __typename?: \"Issue\";\n          id: string;\n          url: any;\n          title: string;\n          number: number;\n          closed: boolean;\n          state: IssueState;\n          stateReason?: IssueStateReason | null;\n          updatedAt: any;\n          author?:\n            | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n            | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n            | {\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              }\n            | null;\n          linkedBranches: {\n            __typename?: \"LinkedBranchConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"LinkedBranch\";\n              id: string;\n              ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n            } | null> | null;\n          };\n          milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n          repository: {\n            __typename?: \"Repository\";\n            id: string;\n            nameWithOwner: string;\n            name: string;\n            url: any;\n            mergeCommitAllowed: boolean;\n            squashMergeAllowed: boolean;\n            rebaseMergeAllowed: boolean;\n            defaultBranchRef?: {\n              __typename?: \"Ref\";\n              target?:\n                | { __typename?: \"Blob\"; oid: any }\n                | { __typename?: \"Commit\"; oid: any }\n                | { __typename?: \"Tag\"; oid: any }\n                | { __typename?: \"Tree\"; oid: any }\n                | null;\n            } | null;\n            owner:\n              | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n              | { __typename?: \"User\"; login: string; avatarUrl: any };\n          };\n          comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n          assignees: {\n            __typename?: \"UserConnection\";\n            totalCount: number;\n            nodes?: Array<{\n              __typename?: \"User\";\n              id: string;\n              avatarUrl: any;\n              name?: string | null;\n              login: string;\n              isViewer: boolean;\n            } | null> | null;\n          };\n        }\n      | { __typename?: \"MarketplaceListing\" }\n      | { __typename?: \"Organization\" }\n      | { __typename?: \"PullRequest\" }\n      | { __typename?: \"Repository\" }\n      | { __typename?: \"User\" }\n      | null\n    > | null;\n  };\n};\n\nexport type CloseIssueMutationVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n  stateReason: IssueClosedStateReason;\n}>;\n\nexport type CloseIssueMutation = {\n  __typename?: \"Mutation\";\n  closeIssue?: { __typename?: \"CloseIssuePayload\"; issue?: { __typename?: \"Issue\"; id: string } | null } | null;\n};\n\nexport type ReopenIssueMutationVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n}>;\n\nexport type ReopenIssueMutation = {\n  __typename?: \"Mutation\";\n  reopenIssue?: { __typename?: \"ReopenIssuePayload\"; issue?: { __typename?: \"Issue\"; id: string } | null } | null;\n};\n\nexport type ChangeIssueAssigneesMutationVariables = Exact<{\n  issueId: Scalars[\"ID\"];\n  assigneeIds?: InputMaybe<Array<Scalars[\"ID\"]> | Scalars[\"ID\"]>;\n}>;\n\nexport type ChangeIssueAssigneesMutation = {\n  __typename?: \"Mutation\";\n  updateIssue?: { __typename?: \"UpdateIssuePayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type ChangeIssueMilestoneMutationVariables = Exact<{\n  issueId: Scalars[\"ID\"];\n  milestoneId?: InputMaybe<Scalars[\"ID\"]>;\n}>;\n\nexport type ChangeIssueMilestoneMutation = {\n  __typename?: \"Mutation\";\n  updateIssue?: { __typename?: \"UpdateIssuePayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type AddIssueToProjectMutationVariables = Exact<{\n  issueId: Scalars[\"ID\"];\n  projectId: Scalars[\"ID\"];\n}>;\n\nexport type AddIssueToProjectMutation = {\n  __typename?: \"Mutation\";\n  addProjectV2ItemById?: { __typename?: \"AddProjectV2ItemByIdPayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type CreateIssueMutationVariables = Exact<{\n  repositoryId: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  body: Scalars[\"String\"];\n  assigneeIds: Array<Scalars[\"ID\"]> | Scalars[\"ID\"];\n  labelIds: Array<Scalars[\"ID\"]> | Scalars[\"ID\"];\n  milestoneId?: InputMaybe<Scalars[\"ID\"]>;\n}>;\n\nexport type CreateIssueMutation = {\n  __typename?: \"Mutation\";\n  createIssue?: {\n    __typename?: \"CreateIssuePayload\";\n    issue?: {\n      __typename?: \"Issue\";\n      id: string;\n      url: any;\n      title: string;\n      number: number;\n      closed: boolean;\n      state: IssueState;\n      stateReason?: IssueStateReason | null;\n      updatedAt: any;\n      author?:\n        | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n        | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n        | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n        | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n        | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n        | null;\n      linkedBranches: {\n        __typename?: \"LinkedBranchConnection\";\n        totalCount: number;\n        nodes?: Array<{\n          __typename?: \"LinkedBranch\";\n          id: string;\n          ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n        } | null> | null;\n      };\n      milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n      repository: {\n        __typename?: \"Repository\";\n        id: string;\n        nameWithOwner: string;\n        name: string;\n        url: any;\n        mergeCommitAllowed: boolean;\n        squashMergeAllowed: boolean;\n        rebaseMergeAllowed: boolean;\n        defaultBranchRef?: {\n          __typename?: \"Ref\";\n          target?:\n            | { __typename?: \"Blob\"; oid: any }\n            | { __typename?: \"Commit\"; oid: any }\n            | { __typename?: \"Tag\"; oid: any }\n            | { __typename?: \"Tree\"; oid: any }\n            | null;\n        } | null;\n        owner:\n          | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n          | { __typename?: \"User\"; login: string; avatarUrl: any };\n      };\n      comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n      assignees: {\n        __typename?: \"UserConnection\";\n        totalCount: number;\n        nodes?: Array<{\n          __typename?: \"User\";\n          id: string;\n          avatarUrl: any;\n          name?: string | null;\n          login: string;\n          isViewer: boolean;\n        } | null> | null;\n      };\n    } | null;\n  } | null;\n};\n\nexport type PullRequestFieldsFragment = {\n  __typename?: \"PullRequest\";\n  id: string;\n  title: string;\n  permalink: any;\n  merged: boolean;\n  number: number;\n  isDraft: boolean;\n  closed: boolean;\n  updatedAt: any;\n  mergeable: MergeableState;\n  reviewDecision?: PullRequestReviewDecision | null;\n  headRefName: string;\n  milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n  repository: {\n    __typename?: \"Repository\";\n    id: string;\n    nameWithOwner: string;\n    name: string;\n    url: any;\n    mergeCommitAllowed: boolean;\n    squashMergeAllowed: boolean;\n    rebaseMergeAllowed: boolean;\n    defaultBranchRef?: {\n      __typename?: \"Ref\";\n      target?:\n        | { __typename?: \"Blob\"; oid: any }\n        | { __typename?: \"Commit\"; oid: any }\n        | { __typename?: \"Tag\"; oid: any }\n        | { __typename?: \"Tree\"; oid: any }\n        | null;\n    } | null;\n    owner:\n      | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n      | { __typename?: \"User\"; login: string; avatarUrl: any };\n  };\n  headRef?: { __typename?: \"Ref\"; name: string } | null;\n  author?:\n    | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n    | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n    | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n    | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n    | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n    | null;\n  comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n  reviewThreads: {\n    __typename?: \"PullRequestReviewThreadConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"PullRequestReviewThread\";\n      comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n    } | null> | null;\n  };\n  reviews?: {\n    __typename?: \"PullRequestReviewConnection\";\n    totalCount: number;\n    nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n  } | null;\n  commits: {\n    __typename?: \"PullRequestCommitConnection\";\n    nodes?: Array<{\n      __typename?: \"PullRequestCommit\";\n      commit: {\n        __typename?: \"Commit\";\n        statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n      };\n    } | null> | null;\n  };\n  assignees: {\n    __typename?: \"UserConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"User\";\n      id: string;\n      avatarUrl: any;\n      name?: string | null;\n      login: string;\n      isViewer: boolean;\n    } | null> | null;\n  };\n};\n\nexport type MyPullRequestsQueryVariables = Exact<{\n  createdOpenQuery: Scalars[\"String\"];\n  createdClosedQuery: Scalars[\"String\"];\n  assignedOpenQuery: Scalars[\"String\"];\n  assignedClosedQuery: Scalars[\"String\"];\n  mentionedOpenQuery: Scalars[\"String\"];\n  mentionedClosedQuery: Scalars[\"String\"];\n  reviewRequestsOpenQuery: Scalars[\"String\"];\n  reviewRequestsClosedQuery: Scalars[\"String\"];\n  reviewedByOpenQuery: Scalars[\"String\"];\n  reviewedByClosedQuery: Scalars[\"String\"];\n  numberOfOpenItems: Scalars[\"Int\"];\n  numberOfClosedItems: Scalars[\"Int\"];\n}>;\n\nexport type MyPullRequestsQuery = {\n  __typename?: \"Query\";\n  createdOpen: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  createdClosed: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  assignedOpen: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  assignedClosed: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  mentionedOpen: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  mentionedClosed: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  reviewRequestsOpen: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  reviewRequestsClosed: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  reviewedByOpen: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n  reviewedByClosed: {\n    __typename?: \"SearchResultItemConnection\";\n    pullRequests?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      pullRequest?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n};\n\nexport type SearchPullRequestsQueryVariables = Exact<{\n  query: Scalars[\"String\"];\n  numberOfItems: Scalars[\"Int\"];\n}>;\n\nexport type SearchPullRequestsQuery = {\n  __typename?: \"Query\";\n  search: {\n    __typename?: \"SearchResultItemConnection\";\n    edges?: Array<{\n      __typename?: \"SearchResultItemEdge\";\n      node?:\n        | { __typename?: \"App\" }\n        | { __typename?: \"Discussion\" }\n        | { __typename?: \"Issue\" }\n        | { __typename?: \"MarketplaceListing\" }\n        | { __typename?: \"Organization\" }\n        | {\n            __typename?: \"PullRequest\";\n            id: string;\n            title: string;\n            permalink: any;\n            merged: boolean;\n            number: number;\n            isDraft: boolean;\n            closed: boolean;\n            updatedAt: any;\n            mergeable: MergeableState;\n            reviewDecision?: PullRequestReviewDecision | null;\n            headRefName: string;\n            milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n            repository: {\n              __typename?: \"Repository\";\n              id: string;\n              nameWithOwner: string;\n              name: string;\n              url: any;\n              mergeCommitAllowed: boolean;\n              squashMergeAllowed: boolean;\n              rebaseMergeAllowed: boolean;\n              defaultBranchRef?: {\n                __typename?: \"Ref\";\n                target?:\n                  | { __typename?: \"Blob\"; oid: any }\n                  | { __typename?: \"Commit\"; oid: any }\n                  | { __typename?: \"Tag\"; oid: any }\n                  | { __typename?: \"Tree\"; oid: any }\n                  | null;\n              } | null;\n              owner:\n                | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n                | { __typename?: \"User\"; login: string; avatarUrl: any };\n            };\n            headRef?: { __typename?: \"Ref\"; name: string } | null;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  avatarUrl: any;\n                  name?: string | null;\n                  login: string;\n                  isViewer: boolean;\n                }\n              | null;\n            comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n            reviewThreads: {\n              __typename?: \"PullRequestReviewThreadConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"PullRequestReviewThread\";\n                comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n              } | null> | null;\n            };\n            reviews?: {\n              __typename?: \"PullRequestReviewConnection\";\n              totalCount: number;\n              nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n            } | null;\n            commits: {\n              __typename?: \"PullRequestCommitConnection\";\n              nodes?: Array<{\n                __typename?: \"PullRequestCommit\";\n                commit: {\n                  __typename?: \"Commit\";\n                  statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n                };\n              } | null> | null;\n            };\n            assignees: {\n              __typename?: \"UserConnection\";\n              totalCount: number;\n              nodes?: Array<{\n                __typename?: \"User\";\n                id: string;\n                avatarUrl: any;\n                name?: string | null;\n                login: string;\n                isViewer: boolean;\n              } | null> | null;\n            };\n          }\n        | { __typename?: \"Repository\" }\n        | { __typename?: \"User\" }\n        | null;\n    } | null> | null;\n  };\n};\n\nexport type PullRequestDetailsFieldsFragment = {\n  __typename?: \"PullRequest\";\n  id: string;\n  title: string;\n  body: string;\n  permalink: any;\n  merged: boolean;\n  number: number;\n  isDraft: boolean;\n  closed: boolean;\n  createdAt: any;\n  updatedAt: any;\n  additions: number;\n  deletions: number;\n  mergeable: MergeableState;\n  baseRefName: string;\n  headRefName: string;\n  milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n  repository: {\n    __typename?: \"Repository\";\n    id: string;\n    nameWithOwner: string;\n    name: string;\n    url: any;\n    mergeCommitAllowed: boolean;\n    squashMergeAllowed: boolean;\n    rebaseMergeAllowed: boolean;\n    defaultBranchRef?: {\n      __typename?: \"Ref\";\n      target?:\n        | { __typename?: \"Blob\"; oid: any }\n        | { __typename?: \"Commit\"; oid: any }\n        | { __typename?: \"Tag\"; oid: any }\n        | { __typename?: \"Tree\"; oid: any }\n        | null;\n    } | null;\n    owner:\n      | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n      | { __typename?: \"User\"; login: string; avatarUrl: any };\n  };\n  baseRef?: { __typename?: \"Ref\"; name: string } | null;\n  headRef?: { __typename?: \"Ref\"; name: string } | null;\n  labels?: {\n    __typename?: \"LabelConnection\";\n    totalCount: number;\n    nodes?: Array<{ __typename?: \"Label\"; id: string; name: string; color: string } | null> | null;\n  } | null;\n  author?:\n    | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n    | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n    | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n    | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n    | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n    | null;\n  comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n  reviewRequests?: {\n    __typename?: \"ReviewRequestConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"ReviewRequest\";\n      requestedReviewer?:\n        | { __typename?: \"Mannequin\"; id: string; githubUsername: string; userAvatarURL: any }\n        | { __typename?: \"Team\"; id: string; teamName: string; teamAvatarURL?: any | null }\n        | { __typename?: \"User\"; id: string; githubUsername: string; userName?: string | null; userAvatarURL: any }\n        | null;\n    } | null> | null;\n  } | null;\n  reviews?: {\n    __typename?: \"PullRequestReviewConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"PullRequestReview\";\n      state: PullRequestReviewState;\n      author?:\n        | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n        | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n        | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n        | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n        | { __typename?: \"User\"; id: string; login: string; name?: string | null; avatarUrl: any }\n        | null;\n    } | null> | null;\n  } | null;\n  assignees: {\n    __typename?: \"UserConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"User\";\n      id: string;\n      avatarUrl: any;\n      name?: string | null;\n      login: string;\n      isViewer: boolean;\n    } | null> | null;\n  };\n  projectsV2: {\n    __typename?: \"ProjectV2Connection\";\n    totalCount: number;\n    nodes?: Array<{ __typename?: \"ProjectV2\"; id: string; title: string } | null> | null;\n  };\n};\n\nexport type PullRequestDetailsQueryVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n}>;\n\nexport type PullRequestDetailsQuery = {\n  __typename?: \"Query\";\n  node?:\n    | { __typename?: \"AddedToProjectEvent\" }\n    | { __typename?: \"App\" }\n    | { __typename?: \"AssignedEvent\" }\n    | { __typename?: \"AutoMergeDisabledEvent\" }\n    | { __typename?: \"AutoMergeEnabledEvent\" }\n    | { __typename?: \"AutoRebaseEnabledEvent\" }\n    | { __typename?: \"AutoSquashEnabledEvent\" }\n    | { __typename?: \"AutomaticBaseChangeFailedEvent\" }\n    | { __typename?: \"AutomaticBaseChangeSucceededEvent\" }\n    | { __typename?: \"BaseRefChangedEvent\" }\n    | { __typename?: \"BaseRefDeletedEvent\" }\n    | { __typename?: \"BaseRefForcePushedEvent\" }\n    | { __typename?: \"Blob\" }\n    | { __typename?: \"Bot\" }\n    | { __typename?: \"BranchProtectionRule\" }\n    | { __typename?: \"BypassForcePushAllowance\" }\n    | { __typename?: \"BypassPullRequestAllowance\" }\n    | { __typename?: \"CWE\" }\n    | { __typename?: \"CheckRun\" }\n    | { __typename?: \"CheckSuite\" }\n    | { __typename?: \"ClosedEvent\" }\n    | { __typename?: \"CodeOfConduct\" }\n    | { __typename?: \"CommentDeletedEvent\" }\n    | { __typename?: \"Commit\" }\n    | { __typename?: \"CommitComment\" }\n    | { __typename?: \"CommitCommentThread\" }\n    | { __typename?: \"Comparison\" }\n    | { __typename?: \"ConnectedEvent\" }\n    | { __typename?: \"ConvertToDraftEvent\" }\n    | { __typename?: \"ConvertedNoteToIssueEvent\" }\n    | { __typename?: \"ConvertedToDiscussionEvent\" }\n    | { __typename?: \"CrossReferencedEvent\" }\n    | { __typename?: \"DemilestonedEvent\" }\n    | { __typename?: \"DeployKey\" }\n    | { __typename?: \"DeployedEvent\" }\n    | { __typename?: \"Deployment\" }\n    | { __typename?: \"DeploymentEnvironmentChangedEvent\" }\n    | { __typename?: \"DeploymentReview\" }\n    | { __typename?: \"DeploymentStatus\" }\n    | { __typename?: \"DisconnectedEvent\" }\n    | { __typename?: \"Discussion\" }\n    | { __typename?: \"DiscussionCategory\" }\n    | { __typename?: \"DiscussionComment\" }\n    | { __typename?: \"DiscussionPoll\" }\n    | { __typename?: \"DiscussionPollOption\" }\n    | { __typename?: \"DraftIssue\" }\n    | { __typename?: \"Enterprise\" }\n    | { __typename?: \"EnterpriseAdministratorInvitation\" }\n    | { __typename?: \"EnterpriseIdentityProvider\" }\n    | { __typename?: \"EnterpriseRepositoryInfo\" }\n    | { __typename?: \"EnterpriseServerInstallation\" }\n    | { __typename?: \"EnterpriseServerUserAccount\" }\n    | { __typename?: \"EnterpriseServerUserAccountEmail\" }\n    | { __typename?: \"EnterpriseServerUserAccountsUpload\" }\n    | { __typename?: \"EnterpriseUserAccount\" }\n    | { __typename?: \"Environment\" }\n    | { __typename?: \"ExternalIdentity\" }\n    | { __typename?: \"Gist\" }\n    | { __typename?: \"GistComment\" }\n    | { __typename?: \"HeadRefDeletedEvent\" }\n    | { __typename?: \"HeadRefForcePushedEvent\" }\n    | { __typename?: \"HeadRefRestoredEvent\" }\n    | { __typename?: \"IpAllowListEntry\" }\n    | { __typename?: \"Issue\" }\n    | { __typename?: \"IssueComment\" }\n    | { __typename?: \"Label\" }\n    | { __typename?: \"LabeledEvent\" }\n    | { __typename?: \"Language\" }\n    | { __typename?: \"License\" }\n    | { __typename?: \"LinkedBranch\" }\n    | { __typename?: \"LockedEvent\" }\n    | { __typename?: \"Mannequin\" }\n    | { __typename?: \"MarkedAsDuplicateEvent\" }\n    | { __typename?: \"MarketplaceCategory\" }\n    | { __typename?: \"MarketplaceListing\" }\n    | { __typename?: \"MembersCanDeleteReposClearAuditEntry\" }\n    | { __typename?: \"MembersCanDeleteReposDisableAuditEntry\" }\n    | { __typename?: \"MembersCanDeleteReposEnableAuditEntry\" }\n    | { __typename?: \"MentionedEvent\" }\n    | { __typename?: \"MergedEvent\" }\n    | { __typename?: \"MigrationSource\" }\n    | { __typename?: \"Milestone\" }\n    | { __typename?: \"MilestonedEvent\" }\n    | { __typename?: \"MovedColumnsInProjectEvent\" }\n    | { __typename?: \"OIDCProvider\" }\n    | { __typename?: \"OauthApplicationCreateAuditEntry\" }\n    | { __typename?: \"OrgAddBillingManagerAuditEntry\" }\n    | { __typename?: \"OrgAddMemberAuditEntry\" }\n    | { __typename?: \"OrgBlockUserAuditEntry\" }\n    | { __typename?: \"OrgConfigDisableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"OrgConfigEnableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"OrgCreateAuditEntry\" }\n    | { __typename?: \"OrgDisableOauthAppRestrictionsAuditEntry\" }\n    | { __typename?: \"OrgDisableSamlAuditEntry\" }\n    | { __typename?: \"OrgDisableTwoFactorRequirementAuditEntry\" }\n    | { __typename?: \"OrgEnableOauthAppRestrictionsAuditEntry\" }\n    | { __typename?: \"OrgEnableSamlAuditEntry\" }\n    | { __typename?: \"OrgEnableTwoFactorRequirementAuditEntry\" }\n    | { __typename?: \"OrgInviteMemberAuditEntry\" }\n    | { __typename?: \"OrgInviteToBusinessAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessApprovedAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessDeniedAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessRequestedAuditEntry\" }\n    | { __typename?: \"OrgRemoveBillingManagerAuditEntry\" }\n    | { __typename?: \"OrgRemoveMemberAuditEntry\" }\n    | { __typename?: \"OrgRemoveOutsideCollaboratorAuditEntry\" }\n    | { __typename?: \"OrgRestoreMemberAuditEntry\" }\n    | { __typename?: \"OrgUnblockUserAuditEntry\" }\n    | { __typename?: \"OrgUpdateDefaultRepositoryPermissionAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\" }\n    | { __typename?: \"Organization\" }\n    | { __typename?: \"OrganizationIdentityProvider\" }\n    | { __typename?: \"OrganizationInvitation\" }\n    | { __typename?: \"OrganizationMigration\" }\n    | { __typename?: \"Package\" }\n    | { __typename?: \"PackageFile\" }\n    | { __typename?: \"PackageTag\" }\n    | { __typename?: \"PackageVersion\" }\n    | { __typename?: \"PinnedDiscussion\" }\n    | { __typename?: \"PinnedEvent\" }\n    | { __typename?: \"PinnedIssue\" }\n    | { __typename?: \"PrivateRepositoryForkingDisableAuditEntry\" }\n    | { __typename?: \"PrivateRepositoryForkingEnableAuditEntry\" }\n    | { __typename?: \"Project\" }\n    | { __typename?: \"ProjectCard\" }\n    | { __typename?: \"ProjectColumn\" }\n    | { __typename?: \"ProjectV2\" }\n    | { __typename?: \"ProjectV2Field\" }\n    | { __typename?: \"ProjectV2Item\" }\n    | { __typename?: \"ProjectV2ItemFieldDateValue\" }\n    | { __typename?: \"ProjectV2ItemFieldIterationValue\" }\n    | { __typename?: \"ProjectV2ItemFieldNumberValue\" }\n    | { __typename?: \"ProjectV2ItemFieldSingleSelectValue\" }\n    | { __typename?: \"ProjectV2ItemFieldTextValue\" }\n    | { __typename?: \"ProjectV2IterationField\" }\n    | { __typename?: \"ProjectV2SingleSelectField\" }\n    | { __typename?: \"ProjectV2View\" }\n    | { __typename?: \"PublicKey\" }\n    | {\n        __typename?: \"PullRequest\";\n        id: string;\n        title: string;\n        body: string;\n        permalink: any;\n        merged: boolean;\n        number: number;\n        isDraft: boolean;\n        closed: boolean;\n        createdAt: any;\n        updatedAt: any;\n        additions: number;\n        deletions: number;\n        mergeable: MergeableState;\n        baseRefName: string;\n        headRefName: string;\n        milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n        repository: {\n          __typename?: \"Repository\";\n          id: string;\n          nameWithOwner: string;\n          name: string;\n          url: any;\n          mergeCommitAllowed: boolean;\n          squashMergeAllowed: boolean;\n          rebaseMergeAllowed: boolean;\n          defaultBranchRef?: {\n            __typename?: \"Ref\";\n            target?:\n              | { __typename?: \"Blob\"; oid: any }\n              | { __typename?: \"Commit\"; oid: any }\n              | { __typename?: \"Tag\"; oid: any }\n              | { __typename?: \"Tree\"; oid: any }\n              | null;\n          } | null;\n          owner:\n            | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n            | { __typename?: \"User\"; login: string; avatarUrl: any };\n        };\n        baseRef?: { __typename?: \"Ref\"; name: string } | null;\n        headRef?: { __typename?: \"Ref\"; name: string } | null;\n        labels?: {\n          __typename?: \"LabelConnection\";\n          totalCount: number;\n          nodes?: Array<{ __typename?: \"Label\"; id: string; name: string; color: string } | null> | null;\n        } | null;\n        author?:\n          | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n          | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n          | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n          | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n          | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n          | null;\n        comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n        reviewRequests?: {\n          __typename?: \"ReviewRequestConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"ReviewRequest\";\n            requestedReviewer?:\n              | { __typename?: \"Mannequin\"; id: string; githubUsername: string; userAvatarURL: any }\n              | { __typename?: \"Team\"; id: string; teamName: string; teamAvatarURL?: any | null }\n              | {\n                  __typename?: \"User\";\n                  id: string;\n                  githubUsername: string;\n                  userName?: string | null;\n                  userAvatarURL: any;\n                }\n              | null;\n          } | null> | null;\n        } | null;\n        reviews?: {\n          __typename?: \"PullRequestReviewConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"PullRequestReview\";\n            state: PullRequestReviewState;\n            author?:\n              | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n              | {\n                  __typename?: \"EnterpriseUserAccount\";\n                  id: string;\n                  login: string;\n                  name?: string | null;\n                  avatarUrl: any;\n                }\n              | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n              | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | { __typename?: \"User\"; id: string; login: string; name?: string | null; avatarUrl: any }\n              | null;\n          } | null> | null;\n        } | null;\n        assignees: {\n          __typename?: \"UserConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"User\";\n            id: string;\n            avatarUrl: any;\n            name?: string | null;\n            login: string;\n            isViewer: boolean;\n          } | null> | null;\n        };\n        projectsV2: {\n          __typename?: \"ProjectV2Connection\";\n          totalCount: number;\n          nodes?: Array<{ __typename?: \"ProjectV2\"; id: string; title: string } | null> | null;\n        };\n      }\n    | { __typename?: \"PullRequestCommit\" }\n    | { __typename?: \"PullRequestCommitCommentThread\" }\n    | { __typename?: \"PullRequestReview\" }\n    | { __typename?: \"PullRequestReviewComment\" }\n    | { __typename?: \"PullRequestReviewThread\" }\n    | { __typename?: \"PullRequestThread\" }\n    | { __typename?: \"Push\" }\n    | { __typename?: \"PushAllowance\" }\n    | { __typename?: \"Reaction\" }\n    | { __typename?: \"ReadyForReviewEvent\" }\n    | { __typename?: \"Ref\" }\n    | { __typename?: \"ReferencedEvent\" }\n    | { __typename?: \"Release\" }\n    | { __typename?: \"ReleaseAsset\" }\n    | { __typename?: \"RemovedFromProjectEvent\" }\n    | { __typename?: \"RenamedTitleEvent\" }\n    | { __typename?: \"ReopenedEvent\" }\n    | { __typename?: \"RepoAccessAuditEntry\" }\n    | { __typename?: \"RepoAddMemberAuditEntry\" }\n    | { __typename?: \"RepoAddTopicAuditEntry\" }\n    | { __typename?: \"RepoArchivedAuditEntry\" }\n    | { __typename?: \"RepoChangeMergeSettingAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableContributorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableSockpuppetDisallowedAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableContributorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableSockpuppetDisallowedAuditEntry\" }\n    | { __typename?: \"RepoConfigLockAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigUnlockAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoCreateAuditEntry\" }\n    | { __typename?: \"RepoDestroyAuditEntry\" }\n    | { __typename?: \"RepoRemoveMemberAuditEntry\" }\n    | { __typename?: \"RepoRemoveTopicAuditEntry\" }\n    | { __typename?: \"Repository\" }\n    | { __typename?: \"RepositoryInvitation\" }\n    | { __typename?: \"RepositoryMigration\" }\n    | { __typename?: \"RepositoryTopic\" }\n    | { __typename?: \"RepositoryVisibilityChangeDisableAuditEntry\" }\n    | { __typename?: \"RepositoryVisibilityChangeEnableAuditEntry\" }\n    | { __typename?: \"RepositoryVulnerabilityAlert\" }\n    | { __typename?: \"ReviewDismissalAllowance\" }\n    | { __typename?: \"ReviewDismissedEvent\" }\n    | { __typename?: \"ReviewRequest\" }\n    | { __typename?: \"ReviewRequestRemovedEvent\" }\n    | { __typename?: \"ReviewRequestedEvent\" }\n    | { __typename?: \"SavedReply\" }\n    | { __typename?: \"SecurityAdvisory\" }\n    | { __typename?: \"SponsorsActivity\" }\n    | { __typename?: \"SponsorsListing\" }\n    | { __typename?: \"SponsorsListingFeaturedItem\" }\n    | { __typename?: \"SponsorsTier\" }\n    | { __typename?: \"Sponsorship\" }\n    | { __typename?: \"SponsorshipNewsletter\" }\n    | { __typename?: \"Status\" }\n    | { __typename?: \"StatusCheckRollup\" }\n    | { __typename?: \"StatusContext\" }\n    | { __typename?: \"SubscribedEvent\" }\n    | { __typename?: \"Tag\" }\n    | { __typename?: \"Team\" }\n    | { __typename?: \"TeamAddMemberAuditEntry\" }\n    | { __typename?: \"TeamAddRepositoryAuditEntry\" }\n    | { __typename?: \"TeamChangeParentTeamAuditEntry\" }\n    | { __typename?: \"TeamDiscussion\" }\n    | { __typename?: \"TeamDiscussionComment\" }\n    | { __typename?: \"TeamRemoveMemberAuditEntry\" }\n    | { __typename?: \"TeamRemoveRepositoryAuditEntry\" }\n    | { __typename?: \"Topic\" }\n    | { __typename?: \"TransferredEvent\" }\n    | { __typename?: \"Tree\" }\n    | { __typename?: \"UnassignedEvent\" }\n    | { __typename?: \"UnlabeledEvent\" }\n    | { __typename?: \"UnlockedEvent\" }\n    | { __typename?: \"UnmarkedAsDuplicateEvent\" }\n    | { __typename?: \"UnpinnedEvent\" }\n    | { __typename?: \"UnsubscribedEvent\" }\n    | { __typename?: \"User\" }\n    | { __typename?: \"UserBlockedEvent\" }\n    | { __typename?: \"UserContentEdit\" }\n    | { __typename?: \"UserStatus\" }\n    | { __typename?: \"VerifiableDomain\" }\n    | { __typename?: \"Workflow\" }\n    | { __typename?: \"WorkflowRun\" }\n    | null;\n};\n\nexport type RepositoryCollaboratorsForPullRequestsQueryVariables = Exact<{\n  owner: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  pullRequestNumber: Scalars[\"Int\"];\n}>;\n\nexport type RepositoryCollaboratorsForPullRequestsQuery = {\n  __typename?: \"Query\";\n  repository?: {\n    __typename?: \"Repository\";\n    collaborators?: {\n      __typename?: \"RepositoryCollaboratorConnection\";\n      totalCount: number;\n      nodes?: Array<{\n        __typename?: \"User\";\n        id: string;\n        avatarUrl: any;\n        name?: string | null;\n        login: string;\n        isViewer: boolean;\n      } | null> | null;\n    } | null;\n    pullRequest?: {\n      __typename?: \"PullRequest\";\n      assignees: {\n        __typename?: \"UserConnection\";\n        totalCount: number;\n        nodes?: Array<{ __typename?: \"User\"; id: string } | null> | null;\n      };\n    } | null;\n  } | null;\n};\n\nexport type RepositoryProjectsForPullRequestsQueryVariables = Exact<{\n  owner: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  pullRequestNumber: Scalars[\"Int\"];\n}>;\n\nexport type RepositoryProjectsForPullRequestsQuery = {\n  __typename?: \"Query\";\n  repository?: {\n    __typename?: \"Repository\";\n    projectsV2: {\n      __typename?: \"ProjectV2Connection\";\n      totalCount: number;\n      nodes?: Array<{ __typename?: \"ProjectV2\"; id: string; title: string; number: number } | null> | null;\n    };\n    pullRequest?: {\n      __typename?: \"PullRequest\";\n      projectsV2: {\n        __typename?: \"ProjectV2Connection\";\n        totalCount: number;\n        nodes?: Array<{ __typename?: \"ProjectV2\"; id: string } | null> | null;\n      };\n    } | null;\n  } | null;\n};\n\nexport type PullRequestCommitFieldsFragment = {\n  __typename?: \"PullRequest\";\n  commits: {\n    __typename?: \"PullRequestCommitConnection\";\n    totalCount: number;\n    nodes?: Array<{\n      __typename?: \"PullRequestCommit\";\n      commit: {\n        __typename?: \"Commit\";\n        id: string;\n        authoredDate: any;\n        message: string;\n        oid: any;\n        abbreviatedOid: string;\n        url: any;\n        treeUrl: any;\n        author?: { __typename?: \"GitActor\"; avatarUrl: any; name?: string | null } | null;\n        statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n      };\n    } | null> | null;\n  };\n};\n\nexport type PullRequestCommitsQueryVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n}>;\n\nexport type PullRequestCommitsQuery = {\n  __typename?: \"Query\";\n  node?:\n    | { __typename?: \"AddedToProjectEvent\" }\n    | { __typename?: \"App\" }\n    | { __typename?: \"AssignedEvent\" }\n    | { __typename?: \"AutoMergeDisabledEvent\" }\n    | { __typename?: \"AutoMergeEnabledEvent\" }\n    | { __typename?: \"AutoRebaseEnabledEvent\" }\n    | { __typename?: \"AutoSquashEnabledEvent\" }\n    | { __typename?: \"AutomaticBaseChangeFailedEvent\" }\n    | { __typename?: \"AutomaticBaseChangeSucceededEvent\" }\n    | { __typename?: \"BaseRefChangedEvent\" }\n    | { __typename?: \"BaseRefDeletedEvent\" }\n    | { __typename?: \"BaseRefForcePushedEvent\" }\n    | { __typename?: \"Blob\" }\n    | { __typename?: \"Bot\" }\n    | { __typename?: \"BranchProtectionRule\" }\n    | { __typename?: \"BypassForcePushAllowance\" }\n    | { __typename?: \"BypassPullRequestAllowance\" }\n    | { __typename?: \"CWE\" }\n    | { __typename?: \"CheckRun\" }\n    | { __typename?: \"CheckSuite\" }\n    | { __typename?: \"ClosedEvent\" }\n    | { __typename?: \"CodeOfConduct\" }\n    | { __typename?: \"CommentDeletedEvent\" }\n    | { __typename?: \"Commit\" }\n    | { __typename?: \"CommitComment\" }\n    | { __typename?: \"CommitCommentThread\" }\n    | { __typename?: \"Comparison\" }\n    | { __typename?: \"ConnectedEvent\" }\n    | { __typename?: \"ConvertToDraftEvent\" }\n    | { __typename?: \"ConvertedNoteToIssueEvent\" }\n    | { __typename?: \"ConvertedToDiscussionEvent\" }\n    | { __typename?: \"CrossReferencedEvent\" }\n    | { __typename?: \"DemilestonedEvent\" }\n    | { __typename?: \"DeployKey\" }\n    | { __typename?: \"DeployedEvent\" }\n    | { __typename?: \"Deployment\" }\n    | { __typename?: \"DeploymentEnvironmentChangedEvent\" }\n    | { __typename?: \"DeploymentReview\" }\n    | { __typename?: \"DeploymentStatus\" }\n    | { __typename?: \"DisconnectedEvent\" }\n    | { __typename?: \"Discussion\" }\n    | { __typename?: \"DiscussionCategory\" }\n    | { __typename?: \"DiscussionComment\" }\n    | { __typename?: \"DiscussionPoll\" }\n    | { __typename?: \"DiscussionPollOption\" }\n    | { __typename?: \"DraftIssue\" }\n    | { __typename?: \"Enterprise\" }\n    | { __typename?: \"EnterpriseAdministratorInvitation\" }\n    | { __typename?: \"EnterpriseIdentityProvider\" }\n    | { __typename?: \"EnterpriseRepositoryInfo\" }\n    | { __typename?: \"EnterpriseServerInstallation\" }\n    | { __typename?: \"EnterpriseServerUserAccount\" }\n    | { __typename?: \"EnterpriseServerUserAccountEmail\" }\n    | { __typename?: \"EnterpriseServerUserAccountsUpload\" }\n    | { __typename?: \"EnterpriseUserAccount\" }\n    | { __typename?: \"Environment\" }\n    | { __typename?: \"ExternalIdentity\" }\n    | { __typename?: \"Gist\" }\n    | { __typename?: \"GistComment\" }\n    | { __typename?: \"HeadRefDeletedEvent\" }\n    | { __typename?: \"HeadRefForcePushedEvent\" }\n    | { __typename?: \"HeadRefRestoredEvent\" }\n    | { __typename?: \"IpAllowListEntry\" }\n    | { __typename?: \"Issue\" }\n    | { __typename?: \"IssueComment\" }\n    | { __typename?: \"Label\" }\n    | { __typename?: \"LabeledEvent\" }\n    | { __typename?: \"Language\" }\n    | { __typename?: \"License\" }\n    | { __typename?: \"LinkedBranch\" }\n    | { __typename?: \"LockedEvent\" }\n    | { __typename?: \"Mannequin\" }\n    | { __typename?: \"MarkedAsDuplicateEvent\" }\n    | { __typename?: \"MarketplaceCategory\" }\n    | { __typename?: \"MarketplaceListing\" }\n    | { __typename?: \"MembersCanDeleteReposClearAuditEntry\" }\n    | { __typename?: \"MembersCanDeleteReposDisableAuditEntry\" }\n    | { __typename?: \"MembersCanDeleteReposEnableAuditEntry\" }\n    | { __typename?: \"MentionedEvent\" }\n    | { __typename?: \"MergedEvent\" }\n    | { __typename?: \"MigrationSource\" }\n    | { __typename?: \"Milestone\" }\n    | { __typename?: \"MilestonedEvent\" }\n    | { __typename?: \"MovedColumnsInProjectEvent\" }\n    | { __typename?: \"OIDCProvider\" }\n    | { __typename?: \"OauthApplicationCreateAuditEntry\" }\n    | { __typename?: \"OrgAddBillingManagerAuditEntry\" }\n    | { __typename?: \"OrgAddMemberAuditEntry\" }\n    | { __typename?: \"OrgBlockUserAuditEntry\" }\n    | { __typename?: \"OrgConfigDisableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"OrgConfigEnableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"OrgCreateAuditEntry\" }\n    | { __typename?: \"OrgDisableOauthAppRestrictionsAuditEntry\" }\n    | { __typename?: \"OrgDisableSamlAuditEntry\" }\n    | { __typename?: \"OrgDisableTwoFactorRequirementAuditEntry\" }\n    | { __typename?: \"OrgEnableOauthAppRestrictionsAuditEntry\" }\n    | { __typename?: \"OrgEnableSamlAuditEntry\" }\n    | { __typename?: \"OrgEnableTwoFactorRequirementAuditEntry\" }\n    | { __typename?: \"OrgInviteMemberAuditEntry\" }\n    | { __typename?: \"OrgInviteToBusinessAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessApprovedAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessDeniedAuditEntry\" }\n    | { __typename?: \"OrgOauthAppAccessRequestedAuditEntry\" }\n    | { __typename?: \"OrgRemoveBillingManagerAuditEntry\" }\n    | { __typename?: \"OrgRemoveMemberAuditEntry\" }\n    | { __typename?: \"OrgRemoveOutsideCollaboratorAuditEntry\" }\n    | { __typename?: \"OrgRestoreMemberAuditEntry\" }\n    | { __typename?: \"OrgUnblockUserAuditEntry\" }\n    | { __typename?: \"OrgUpdateDefaultRepositoryPermissionAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\" }\n    | { __typename?: \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\" }\n    | { __typename?: \"Organization\" }\n    | { __typename?: \"OrganizationIdentityProvider\" }\n    | { __typename?: \"OrganizationInvitation\" }\n    | { __typename?: \"OrganizationMigration\" }\n    | { __typename?: \"Package\" }\n    | { __typename?: \"PackageFile\" }\n    | { __typename?: \"PackageTag\" }\n    | { __typename?: \"PackageVersion\" }\n    | { __typename?: \"PinnedDiscussion\" }\n    | { __typename?: \"PinnedEvent\" }\n    | { __typename?: \"PinnedIssue\" }\n    | { __typename?: \"PrivateRepositoryForkingDisableAuditEntry\" }\n    | { __typename?: \"PrivateRepositoryForkingEnableAuditEntry\" }\n    | { __typename?: \"Project\" }\n    | { __typename?: \"ProjectCard\" }\n    | { __typename?: \"ProjectColumn\" }\n    | { __typename?: \"ProjectV2\" }\n    | { __typename?: \"ProjectV2Field\" }\n    | { __typename?: \"ProjectV2Item\" }\n    | { __typename?: \"ProjectV2ItemFieldDateValue\" }\n    | { __typename?: \"ProjectV2ItemFieldIterationValue\" }\n    | { __typename?: \"ProjectV2ItemFieldNumberValue\" }\n    | { __typename?: \"ProjectV2ItemFieldSingleSelectValue\" }\n    | { __typename?: \"ProjectV2ItemFieldTextValue\" }\n    | { __typename?: \"ProjectV2IterationField\" }\n    | { __typename?: \"ProjectV2SingleSelectField\" }\n    | { __typename?: \"ProjectV2View\" }\n    | { __typename?: \"PublicKey\" }\n    | {\n        __typename?: \"PullRequest\";\n        commits: {\n          __typename?: \"PullRequestCommitConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"PullRequestCommit\";\n            commit: {\n              __typename?: \"Commit\";\n              id: string;\n              authoredDate: any;\n              message: string;\n              oid: any;\n              abbreviatedOid: string;\n              url: any;\n              treeUrl: any;\n              author?: { __typename?: \"GitActor\"; avatarUrl: any; name?: string | null } | null;\n              statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n            };\n          } | null> | null;\n        };\n      }\n    | { __typename?: \"PullRequestCommit\" }\n    | { __typename?: \"PullRequestCommitCommentThread\" }\n    | { __typename?: \"PullRequestReview\" }\n    | { __typename?: \"PullRequestReviewComment\" }\n    | { __typename?: \"PullRequestReviewThread\" }\n    | { __typename?: \"PullRequestThread\" }\n    | { __typename?: \"Push\" }\n    | { __typename?: \"PushAllowance\" }\n    | { __typename?: \"Reaction\" }\n    | { __typename?: \"ReadyForReviewEvent\" }\n    | { __typename?: \"Ref\" }\n    | { __typename?: \"ReferencedEvent\" }\n    | { __typename?: \"Release\" }\n    | { __typename?: \"ReleaseAsset\" }\n    | { __typename?: \"RemovedFromProjectEvent\" }\n    | { __typename?: \"RenamedTitleEvent\" }\n    | { __typename?: \"ReopenedEvent\" }\n    | { __typename?: \"RepoAccessAuditEntry\" }\n    | { __typename?: \"RepoAddMemberAuditEntry\" }\n    | { __typename?: \"RepoAddTopicAuditEntry\" }\n    | { __typename?: \"RepoArchivedAuditEntry\" }\n    | { __typename?: \"RepoChangeMergeSettingAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableContributorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigDisableSockpuppetDisallowedAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableCollaboratorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableContributorsOnlyAuditEntry\" }\n    | { __typename?: \"RepoConfigEnableSockpuppetDisallowedAuditEntry\" }\n    | { __typename?: \"RepoConfigLockAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoConfigUnlockAnonymousGitAccessAuditEntry\" }\n    | { __typename?: \"RepoCreateAuditEntry\" }\n    | { __typename?: \"RepoDestroyAuditEntry\" }\n    | { __typename?: \"RepoRemoveMemberAuditEntry\" }\n    | { __typename?: \"RepoRemoveTopicAuditEntry\" }\n    | { __typename?: \"Repository\" }\n    | { __typename?: \"RepositoryInvitation\" }\n    | { __typename?: \"RepositoryMigration\" }\n    | { __typename?: \"RepositoryTopic\" }\n    | { __typename?: \"RepositoryVisibilityChangeDisableAuditEntry\" }\n    | { __typename?: \"RepositoryVisibilityChangeEnableAuditEntry\" }\n    | { __typename?: \"RepositoryVulnerabilityAlert\" }\n    | { __typename?: \"ReviewDismissalAllowance\" }\n    | { __typename?: \"ReviewDismissedEvent\" }\n    | { __typename?: \"ReviewRequest\" }\n    | { __typename?: \"ReviewRequestRemovedEvent\" }\n    | { __typename?: \"ReviewRequestedEvent\" }\n    | { __typename?: \"SavedReply\" }\n    | { __typename?: \"SecurityAdvisory\" }\n    | { __typename?: \"SponsorsActivity\" }\n    | { __typename?: \"SponsorsListing\" }\n    | { __typename?: \"SponsorsListingFeaturedItem\" }\n    | { __typename?: \"SponsorsTier\" }\n    | { __typename?: \"Sponsorship\" }\n    | { __typename?: \"SponsorshipNewsletter\" }\n    | { __typename?: \"Status\" }\n    | { __typename?: \"StatusCheckRollup\" }\n    | { __typename?: \"StatusContext\" }\n    | { __typename?: \"SubscribedEvent\" }\n    | { __typename?: \"Tag\" }\n    | { __typename?: \"Team\" }\n    | { __typename?: \"TeamAddMemberAuditEntry\" }\n    | { __typename?: \"TeamAddRepositoryAuditEntry\" }\n    | { __typename?: \"TeamChangeParentTeamAuditEntry\" }\n    | { __typename?: \"TeamDiscussion\" }\n    | { __typename?: \"TeamDiscussionComment\" }\n    | { __typename?: \"TeamRemoveMemberAuditEntry\" }\n    | { __typename?: \"TeamRemoveRepositoryAuditEntry\" }\n    | { __typename?: \"Topic\" }\n    | { __typename?: \"TransferredEvent\" }\n    | { __typename?: \"Tree\" }\n    | { __typename?: \"UnassignedEvent\" }\n    | { __typename?: \"UnlabeledEvent\" }\n    | { __typename?: \"UnlockedEvent\" }\n    | { __typename?: \"UnmarkedAsDuplicateEvent\" }\n    | { __typename?: \"UnpinnedEvent\" }\n    | { __typename?: \"UnsubscribedEvent\" }\n    | { __typename?: \"User\" }\n    | { __typename?: \"UserBlockedEvent\" }\n    | { __typename?: \"UserContentEdit\" }\n    | { __typename?: \"UserStatus\" }\n    | { __typename?: \"VerifiableDomain\" }\n    | { __typename?: \"Workflow\" }\n    | { __typename?: \"WorkflowRun\" }\n    | null;\n};\n\nexport type CommitFieldsFragment = { __typename?: \"Commit\"; authoredDate: any; oid: any; message: string };\n\nexport type ClosePullRequestMutationVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n}>;\n\nexport type ClosePullRequestMutation = {\n  __typename?: \"Mutation\";\n  closePullRequest?: {\n    __typename?: \"ClosePullRequestPayload\";\n    pullRequest?: { __typename?: \"PullRequest\"; id: string } | null;\n  } | null;\n};\n\nexport type ReopenPullRequestMutationVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n}>;\n\nexport type ReopenPullRequestMutation = {\n  __typename?: \"Mutation\";\n  reopenPullRequest?: {\n    __typename?: \"ReopenPullRequestPayload\";\n    pullRequest?: { __typename?: \"PullRequest\"; id: string } | null;\n  } | null;\n};\n\nexport type AddPullRequestReviewMutationVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n  event?: InputMaybe<PullRequestReviewEvent>;\n  body?: InputMaybe<Scalars[\"String\"]>;\n}>;\n\nexport type AddPullRequestReviewMutation = {\n  __typename?: \"Mutation\";\n  addPullRequestReview?: {\n    __typename?: \"AddPullRequestReviewPayload\";\n    pullRequestReview?: { __typename?: \"PullRequestReview\"; id: string } | null;\n  } | null;\n};\n\nexport type ChangePullRequestAssigneesMutationVariables = Exact<{\n  pullRequestId: Scalars[\"ID\"];\n  assigneeIds?: InputMaybe<Array<Scalars[\"ID\"]> | Scalars[\"ID\"]>;\n}>;\n\nexport type ChangePullRequestAssigneesMutation = {\n  __typename?: \"Mutation\";\n  updatePullRequest?: { __typename?: \"UpdatePullRequestPayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type ChangePullRequestMilestoneMutationVariables = Exact<{\n  pullRequestId: Scalars[\"ID\"];\n  milestoneId?: InputMaybe<Scalars[\"ID\"]>;\n}>;\n\nexport type ChangePullRequestMilestoneMutation = {\n  __typename?: \"Mutation\";\n  updatePullRequest?: { __typename?: \"UpdatePullRequestPayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type AddPullRequestToProjectMutationVariables = Exact<{\n  pullRequestId: Scalars[\"ID\"];\n  projectId: Scalars[\"ID\"];\n}>;\n\nexport type AddPullRequestToProjectMutation = {\n  __typename?: \"Mutation\";\n  addProjectV2ItemById?: { __typename?: \"AddProjectV2ItemByIdPayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type RequestReviewMutationVariables = Exact<{\n  pullRequestId: Scalars[\"ID\"];\n  collaboratorId: Scalars[\"ID\"];\n}>;\n\nexport type RequestReviewMutation = {\n  __typename?: \"Mutation\";\n  requestReviews?: { __typename?: \"RequestReviewsPayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type MergePullRequestMutationVariables = Exact<{\n  nodeId: Scalars[\"ID\"];\n  method: PullRequestMergeMethod;\n}>;\n\nexport type MergePullRequestMutation = {\n  __typename?: \"Mutation\";\n  mergePullRequest?: {\n    __typename?: \"MergePullRequestPayload\";\n    pullRequest?: { __typename?: \"PullRequest\"; nodeId: string } | null;\n  } | null;\n};\n\nexport type CreatePullRequestMutationVariables = Exact<{\n  repositoryId: Scalars[\"ID\"];\n  into: Scalars[\"String\"];\n  from: Scalars[\"String\"];\n  title: Scalars[\"String\"];\n  body: Scalars[\"String\"];\n  isDraft: Scalars[\"Boolean\"];\n}>;\n\nexport type CreatePullRequestMutation = {\n  __typename?: \"Mutation\";\n  createPullRequest?: {\n    __typename?: \"CreatePullRequestPayload\";\n    pullRequest?: { __typename?: \"PullRequest\"; id: string } | null;\n  } | null;\n};\n\nexport type InitPullRequestMutationVariables = Exact<{\n  pullRequestId: Scalars[\"ID\"];\n  reviewersIds: Array<Scalars[\"ID\"]> | Scalars[\"ID\"];\n  assigneeIds: Array<Scalars[\"ID\"]> | Scalars[\"ID\"];\n  labelsIds: Array<Scalars[\"ID\"]> | Scalars[\"ID\"];\n  milestoneId?: InputMaybe<Scalars[\"ID\"]>;\n}>;\n\nexport type InitPullRequestMutation = {\n  __typename?: \"Mutation\";\n  requestReviews?: {\n    __typename?: \"RequestReviewsPayload\";\n    pullRequest?: {\n      __typename?: \"PullRequest\";\n      id: string;\n      reviewRequests?: { __typename?: \"ReviewRequestConnection\"; totalCount: number } | null;\n    } | null;\n  } | null;\n  updatePullRequest?: {\n    __typename?: \"UpdatePullRequestPayload\";\n    pullRequest?: {\n      __typename?: \"PullRequest\";\n      id: string;\n      title: string;\n      permalink: any;\n      merged: boolean;\n      number: number;\n      isDraft: boolean;\n      closed: boolean;\n      updatedAt: any;\n      mergeable: MergeableState;\n      reviewDecision?: PullRequestReviewDecision | null;\n      headRefName: string;\n      milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n      repository: {\n        __typename?: \"Repository\";\n        id: string;\n        nameWithOwner: string;\n        name: string;\n        url: any;\n        mergeCommitAllowed: boolean;\n        squashMergeAllowed: boolean;\n        rebaseMergeAllowed: boolean;\n        defaultBranchRef?: {\n          __typename?: \"Ref\";\n          target?:\n            | { __typename?: \"Blob\"; oid: any }\n            | { __typename?: \"Commit\"; oid: any }\n            | { __typename?: \"Tag\"; oid: any }\n            | { __typename?: \"Tree\"; oid: any }\n            | null;\n        } | null;\n        owner:\n          | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n          | { __typename?: \"User\"; login: string; avatarUrl: any };\n      };\n      headRef?: { __typename?: \"Ref\"; name: string } | null;\n      author?:\n        | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n        | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n        | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n        | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n        | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n        | null;\n      comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n      reviewThreads: {\n        __typename?: \"PullRequestReviewThreadConnection\";\n        totalCount: number;\n        nodes?: Array<{\n          __typename?: \"PullRequestReviewThread\";\n          comments: { __typename?: \"PullRequestReviewCommentConnection\"; totalCount: number };\n        } | null> | null;\n      };\n      reviews?: {\n        __typename?: \"PullRequestReviewConnection\";\n        totalCount: number;\n        nodes?: Array<{ __typename?: \"PullRequestReview\"; bodyText: string } | null> | null;\n      } | null;\n      commits: {\n        __typename?: \"PullRequestCommitConnection\";\n        nodes?: Array<{\n          __typename?: \"PullRequestCommit\";\n          commit: {\n            __typename?: \"Commit\";\n            statusCheckRollup?: { __typename?: \"StatusCheckRollup\"; state: StatusState } | null;\n          };\n        } | null> | null;\n      };\n      assignees: {\n        __typename?: \"UserConnection\";\n        totalCount: number;\n        nodes?: Array<{\n          __typename?: \"User\";\n          id: string;\n          avatarUrl: any;\n          name?: string | null;\n          login: string;\n          isViewer: boolean;\n        } | null> | null;\n      };\n    } | null;\n  } | null;\n};\n\nexport type ShortRepositoryFieldsFragment = {\n  __typename?: \"Repository\";\n  id: string;\n  nameWithOwner: string;\n  name: string;\n  url: any;\n  mergeCommitAllowed: boolean;\n  squashMergeAllowed: boolean;\n  rebaseMergeAllowed: boolean;\n  defaultBranchRef?: {\n    __typename?: \"Ref\";\n    target?:\n      | { __typename?: \"Blob\"; oid: any }\n      | { __typename?: \"Commit\"; oid: any }\n      | { __typename?: \"Tag\"; oid: any }\n      | { __typename?: \"Tree\"; oid: any }\n      | null;\n  } | null;\n  owner:\n    | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n    | { __typename?: \"User\"; login: string; avatarUrl: any };\n};\n\nexport type ExtendedRepositoryFieldsFragment = {\n  __typename?: \"Repository\";\n  id: string;\n  nameWithOwner: string;\n  name: string;\n  url: any;\n  mergeCommitAllowed: boolean;\n  squashMergeAllowed: boolean;\n  rebaseMergeAllowed: boolean;\n  updatedAt: any;\n  stargazerCount: number;\n  viewerHasStarred: boolean;\n  hasIssuesEnabled: boolean;\n  hasWikiEnabled: boolean;\n  hasProjectsEnabled: boolean;\n  hasDiscussionsEnabled: boolean;\n  owner:\n    | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n    | { __typename?: \"User\"; login: string; avatarUrl: any };\n  primaryLanguage?: { __typename?: \"Language\"; id: string; name: string; color?: string | null } | null;\n  releases: { __typename?: \"ReleaseConnection\"; totalCount: number };\n};\n\nexport type SearchRepositoriesQueryVariables = Exact<{\n  query: Scalars[\"String\"];\n  numberOfItems: Scalars[\"Int\"];\n}>;\n\nexport type SearchRepositoriesQuery = {\n  __typename?: \"Query\";\n  search: {\n    __typename?: \"SearchResultItemConnection\";\n    nodes?: Array<\n      | { __typename?: \"App\" }\n      | { __typename?: \"Discussion\" }\n      | { __typename?: \"Issue\" }\n      | { __typename?: \"MarketplaceListing\" }\n      | { __typename?: \"Organization\" }\n      | { __typename?: \"PullRequest\" }\n      | {\n          __typename?: \"Repository\";\n          id: string;\n          nameWithOwner: string;\n          name: string;\n          url: any;\n          mergeCommitAllowed: boolean;\n          squashMergeAllowed: boolean;\n          rebaseMergeAllowed: boolean;\n          updatedAt: any;\n          stargazerCount: number;\n          viewerHasStarred: boolean;\n          hasIssuesEnabled: boolean;\n          hasWikiEnabled: boolean;\n          hasProjectsEnabled: boolean;\n          hasDiscussionsEnabled: boolean;\n          owner:\n            | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n            | { __typename?: \"User\"; login: string; avatarUrl: any };\n          primaryLanguage?: { __typename?: \"Language\"; id: string; name: string; color?: string | null } | null;\n          releases: { __typename?: \"ReleaseConnection\"; totalCount: number };\n        }\n      | { __typename?: \"User\" }\n      | null\n    > | null;\n  };\n};\n\nexport type MilestonesForRepositoryQueryVariables = Exact<{\n  owner: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n}>;\n\nexport type MilestonesForRepositoryQuery = {\n  __typename?: \"Query\";\n  repository?: {\n    __typename?: \"Repository\";\n    milestones?: {\n      __typename?: \"MilestoneConnection\";\n      totalCount: number;\n      nodes?: Array<{ __typename?: \"Milestone\"; id: string; title: string; number: number } | null> | null;\n    } | null;\n  } | null;\n};\n\nexport type DataForRepositoryQueryVariables = Exact<{\n  owner: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n}>;\n\nexport type DataForRepositoryQuery = {\n  __typename?: \"Query\";\n  repository?: {\n    __typename?: \"Repository\";\n    defaultBranchRef?: {\n      __typename?: \"Ref\";\n      id: string;\n      name: string;\n      target?:\n        | { __typename?: \"Blob\" }\n        | { __typename?: \"Commit\"; authoredDate: any; oid: any; message: string }\n        | { __typename?: \"Tag\" }\n        | { __typename?: \"Tree\" }\n        | null;\n    } | null;\n    refs?: {\n      __typename?: \"RefConnection\";\n      totalCount: number;\n      nodes?: Array<{\n        __typename?: \"Ref\";\n        id: string;\n        name: string;\n        target?:\n          | { __typename?: \"Blob\" }\n          | { __typename?: \"Commit\"; authoredDate: any; oid: any; message: string }\n          | { __typename?: \"Tag\" }\n          | { __typename?: \"Tree\" }\n          | null;\n      } | null> | null;\n    } | null;\n    collaborators?: {\n      __typename?: \"RepositoryCollaboratorConnection\";\n      totalCount: number;\n      nodes?: Array<{\n        __typename?: \"User\";\n        id: string;\n        avatarUrl: any;\n        name?: string | null;\n        login: string;\n        isViewer: boolean;\n      } | null> | null;\n    } | null;\n    labels?: {\n      __typename?: \"LabelConnection\";\n      totalCount: number;\n      nodes?: Array<{\n        __typename?: \"Label\";\n        id: string;\n        name: string;\n        color: string;\n        isDefault: boolean;\n      } | null> | null;\n    } | null;\n    projectsV2: {\n      __typename?: \"ProjectV2Connection\";\n      totalCount: number;\n      nodes?: Array<{ __typename?: \"ProjectV2\"; id: string; title: string } | null> | null;\n    };\n    milestones?: {\n      __typename?: \"MilestoneConnection\";\n      totalCount: number;\n      nodes?: Array<{ __typename?: \"Milestone\"; id: string; title: string } | null> | null;\n    } | null;\n    pullRequestTemplateLowercase?:\n      | { __typename?: \"Blob\"; isTruncated: boolean; text?: string | null }\n      | { __typename?: \"Commit\" }\n      | { __typename?: \"Tag\" }\n      | { __typename?: \"Tree\" }\n      | null;\n    pullRequestTemplateUppercase?:\n      | { __typename?: \"Blob\"; isTruncated: boolean; text?: string | null }\n      | { __typename?: \"Commit\" }\n      | { __typename?: \"Tag\" }\n      | { __typename?: \"Tree\" }\n      | null;\n    issueTemplates?: Array<{\n      __typename?: \"IssueTemplate\";\n      name: string;\n      about?: string | null;\n      title?: string | null;\n      body?: string | null;\n    }> | null;\n  } | null;\n};\n\nexport type RepositoryIssuesQueryVariables = Exact<{\n  owner: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n}>;\n\nexport type RepositoryIssuesQuery = {\n  __typename?: \"Query\";\n  repository?: {\n    __typename?: \"Repository\";\n    url: any;\n    defaultBranchRef?: {\n      __typename?: \"Ref\";\n      id: string;\n      name: string;\n      target?:\n        | { __typename?: \"Blob\"; oid: any }\n        | { __typename?: \"Commit\"; oid: any }\n        | { __typename?: \"Tag\"; oid: any }\n        | { __typename?: \"Tree\"; oid: any }\n        | null;\n    } | null;\n    issues: {\n      __typename?: \"IssueConnection\";\n      nodes?: Array<{\n        __typename?: \"Issue\";\n        id: string;\n        url: any;\n        title: string;\n        number: number;\n        closed: boolean;\n        state: IssueState;\n        stateReason?: IssueStateReason | null;\n        updatedAt: any;\n        author?:\n          | { __typename?: \"Bot\"; id: string; login: string; avatarUrl: any }\n          | { __typename?: \"EnterpriseUserAccount\"; id: string; login: string; name?: string | null; avatarUrl: any }\n          | { __typename?: \"Mannequin\"; id: string; login: string; avatarUrl: any }\n          | { __typename?: \"Organization\"; id: string; login: string; name?: string | null; avatarUrl: any }\n          | { __typename?: \"User\"; id: string; avatarUrl: any; name?: string | null; login: string; isViewer: boolean }\n          | null;\n        linkedBranches: {\n          __typename?: \"LinkedBranchConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"LinkedBranch\";\n            id: string;\n            ref?: { __typename?: \"Ref\"; id: string; name: string } | null;\n          } | null> | null;\n        };\n        milestone?: { __typename?: \"Milestone\"; id: string; title: string } | null;\n        repository: {\n          __typename?: \"Repository\";\n          id: string;\n          nameWithOwner: string;\n          name: string;\n          url: any;\n          mergeCommitAllowed: boolean;\n          squashMergeAllowed: boolean;\n          rebaseMergeAllowed: boolean;\n          defaultBranchRef?: {\n            __typename?: \"Ref\";\n            target?:\n              | { __typename?: \"Blob\"; oid: any }\n              | { __typename?: \"Commit\"; oid: any }\n              | { __typename?: \"Tag\"; oid: any }\n              | { __typename?: \"Tree\"; oid: any }\n              | null;\n          } | null;\n          owner:\n            | { __typename?: \"Organization\"; login: string; avatarUrl: any }\n            | { __typename?: \"User\"; login: string; avatarUrl: any };\n        };\n        comments: { __typename?: \"IssueCommentConnection\"; totalCount: number };\n        assignees: {\n          __typename?: \"UserConnection\";\n          totalCount: number;\n          nodes?: Array<{\n            __typename?: \"User\";\n            id: string;\n            avatarUrl: any;\n            name?: string | null;\n            login: string;\n            isViewer: boolean;\n          } | null> | null;\n        };\n      } | null> | null;\n    };\n  } | null;\n};\n\nexport type ReleaseFieldsFragment = {\n  __typename?: \"Release\";\n  id: string;\n  description?: string | null;\n  name?: string | null;\n  publishedAt?: any | null;\n  createdAt: any;\n  tagName: string;\n  url: any;\n};\n\nexport type RepositoryReleasesQueryVariables = Exact<{\n  name: Scalars[\"String\"];\n  owner: Scalars[\"String\"];\n}>;\n\nexport type RepositoryReleasesQuery = {\n  __typename?: \"Query\";\n  repository?: {\n    __typename?: \"Repository\";\n    releases: {\n      __typename?: \"ReleaseConnection\";\n      nodes?: Array<{\n        __typename?: \"Release\";\n        id: string;\n        description?: string | null;\n        name?: string | null;\n        publishedAt?: any | null;\n        createdAt: any;\n        tagName: string;\n        url: any;\n      } | null> | null;\n    };\n  } | null;\n};\n\nexport type AddStarMutationVariables = Exact<{\n  repositoryId: Scalars[\"ID\"];\n}>;\n\nexport type AddStarMutation = {\n  __typename?: \"Mutation\";\n  addStar?: { __typename?: \"AddStarPayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type RemoveStarMutationVariables = Exact<{\n  repositoryId: Scalars[\"ID\"];\n}>;\n\nexport type RemoveStarMutation = {\n  __typename?: \"Mutation\";\n  removeStar?: { __typename?: \"RemoveStarPayload\"; clientMutationId?: string | null } | null;\n};\n\nexport type UserFieldsFragment = {\n  __typename?: \"User\";\n  id: string;\n  avatarUrl: any;\n  name?: string | null;\n  login: string;\n  isViewer: boolean;\n};\n\nexport type GetViewerQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type GetViewerQuery = {\n  __typename?: \"Query\";\n  viewer: {\n    __typename?: \"User\";\n    id: string;\n    avatarUrl: any;\n    name?: string | null;\n    login: string;\n    isViewer: boolean;\n    organizations: {\n      __typename?: \"OrganizationConnection\";\n      totalCount: number;\n      nodes?: Array<{ __typename?: \"Organization\"; avatarUrl: any; login: string } | null> | null;\n    };\n  };\n};\n\nexport const ShortRepositoryFieldsFragmentDoc = gql`\n  fragment ShortRepositoryFields on Repository {\n    id\n    defaultBranchRef {\n      target {\n        oid\n      }\n    }\n    nameWithOwner\n    name\n    owner {\n      login\n      avatarUrl(size: 64)\n    }\n    url\n    mergeCommitAllowed\n    squashMergeAllowed\n    rebaseMergeAllowed\n  }\n`;\nexport const DiscussionFieldsFragmentDoc = gql`\n  fragment DiscussionFields on Discussion {\n    id\n    title\n    bodyText\n    publishedAt\n    repository {\n      ...ShortRepositoryFields\n    }\n    url\n    upvoteCount\n    category {\n      name\n      emoji\n      emojiHTML\n    }\n    comments {\n      totalCount\n    }\n    answer {\n      bodyText\n    }\n    author {\n      login\n      avatarUrl\n    }\n  }\n  ${ShortRepositoryFieldsFragmentDoc}\n`;\nexport const UserFieldsFragmentDoc = gql`\n  fragment UserFields on User {\n    id\n    avatarUrl\n    name\n    login\n    isViewer\n  }\n`;\nexport const IssueFieldsFragmentDoc = gql`\n  fragment IssueFields on Issue {\n    id\n    url\n    title\n    number\n    closed\n    state\n    stateReason\n    updatedAt\n    author {\n      ... on Bot {\n        id\n        login\n        avatarUrl(size: 64)\n      }\n      ... on User {\n        ...UserFields\n      }\n      ... on Mannequin {\n        id\n        login\n        avatarUrl(size: 64)\n      }\n      ... on Organization {\n        id\n        login\n        name\n        avatarUrl(size: 64)\n      }\n      ... on EnterpriseUserAccount {\n        id\n        login\n        name\n        avatarUrl(size: 64)\n      }\n    }\n    linkedBranches(first: 50) {\n      totalCount\n      nodes {\n        ... on LinkedBranch {\n          id\n          ref {\n            id\n            name\n          }\n        }\n      }\n    }\n    milestone {\n      id\n      title\n    }\n    repository {\n      ...ShortRepositoryFields\n    }\n    comments(first: 0) {\n      totalCount\n    }\n    assignees(first: 50) {\n      totalCount\n      nodes {\n        ... on User {\n          ...UserFields\n        }\n      }\n    }\n  }\n  ${UserFieldsFragmentDoc}\n  ${ShortRepositoryFieldsFragmentDoc}\n`;\nexport const IssueDetailFieldsFragmentDoc = gql`\n  fragment IssueDetailFields on Issue {\n    id\n    url\n    title\n    body\n    number\n    closed\n    state\n    stateReason\n    updatedAt\n    author {\n      ... on Bot {\n        id\n        login\n        avatarUrl(size: 64)\n      }\n      ... on User {\n        ...UserFields\n      }\n      ... on Mannequin {\n        id\n        login\n        avatarUrl(size: 64)\n      }\n      ... on Organization {\n        id\n        login\n        name\n        avatarUrl(size: 64)\n      }\n      ... on EnterpriseUserAccount {\n        id\n        login\n        name\n        avatarUrl(size: 64)\n      }\n    }\n    labels(first: 50, orderBy: { field: NAME, direction: ASC }) {\n      totalCount\n      nodes {\n        id\n        name\n        color\n        isDefault\n      }\n    }\n    linkedBranches(first: 50) {\n      totalCount\n      nodes {\n        ... on LinkedBranch {\n          ref {\n            name\n          }\n        }\n      }\n    }\n    milestone {\n      id\n      title\n    }\n    repository {\n      ...ShortRepositoryFields\n    }\n    assignees(first: 50) {\n      totalCount\n      nodes {\n        ... on User {\n          ...UserFields\n        }\n      }\n    }\n    projectsV2(first: 25) {\n      totalCount\n      nodes {\n        id\n        title\n      }\n    }\n  }\n  ${UserFieldsFragmentDoc}\n  ${ShortRepositoryFieldsFragmentDoc}\n`;\nexport const PullRequestFieldsFragmentDoc = gql`\n  fragment PullRequestFields on PullRequest {\n    id\n    title\n    permalink\n    merged\n    number\n    isDraft\n    closed\n    updatedAt\n    mergeable\n    milestone {\n      id\n      title\n    }\n    reviewDecision\n    repository {\n      ...ShortRepositoryFields\n    }\n    headRefName\n    headRef {\n      name\n    }\n    author {\n      ... on Bot {\n        id\n        login\n        avatarUrl(size: 64)\n      }\n      ... on User {\n        ...UserFields\n      }\n      ... on Mannequin {\n        id\n        login\n        avatarUrl(size: 64)\n      }\n      ... on Organization {\n        id\n        login\n        name\n        avatarUrl(size: 64)\n      }\n      ... on EnterpriseUserAccount {\n        id\n        login\n        name\n        avatarUrl(size: 64)\n      }\n    }\n    comments(first: 0) {\n      totalCount\n    }\n    reviewThreads(first: 100) {\n      totalCount\n      nodes {\n        comments(first: 0) {\n          totalCount\n        }\n      }\n    }\n    reviews(first: 100) {\n      totalCount\n      nodes {\n        bodyText\n      }\n    }\n    commits(last: 1) {\n      nodes {\n        commit {\n          statusCheckRollup {\n            state\n          }\n        }\n      }\n    }\n    assignees(first: 50) {\n      totalCount\n      nodes {\n        ... on User {\n          ...UserFields\n        }\n      }\n    }\n  }\n  ${ShortRepositoryFieldsFragmentDoc}\n  ${UserFieldsFragmentDoc}\n`;\nexport const PullRequestDetailsFieldsFragmentDoc = gql`\n  fragment PullRequestDetailsFields on PullRequest {\n    id\n    title\n    body\n    permalink\n    merged\n    number\n    isDraft\n    closed\n    createdAt\n    updatedAt\n    additions\n    deletions\n    mergeable\n    milestone {\n      id\n      title\n    }\n    repository {\n      ...ShortRepositoryFields\n    }\n    baseRefName\n    baseRef {\n      name\n    }\n    headRefName\n    headRef {\n      name\n    }\n    labels(first: 50, orderBy: { field: NAME, direction: ASC }) {\n      totalCount\n      nodes {\n        id\n        name\n        color\n      }\n    }\n    author {\n      ... on Bot {\n        id\n        login\n        avatarUrl(size: 64)\n      }\n      ... on User {\n        ...UserFields\n      }\n      ... on Mannequin {\n        id\n        login\n        avatarUrl(size: 64)\n      }\n      ... on Organization {\n        id\n        login\n        name\n        avatarUrl(size: 64)\n      }\n      ... on EnterpriseUserAccount {\n        id\n        login\n        name\n        avatarUrl(size: 64)\n      }\n    }\n    comments(first: 0) {\n      totalCount\n    }\n    reviewRequests(first: 50) {\n      totalCount\n      nodes {\n        requestedReviewer {\n          ... on Team {\n            id\n            teamName: name\n            teamAvatarURL: avatarUrl(size: 64)\n          }\n          ... on User {\n            id\n            githubUsername: login\n            userName: name\n            userAvatarURL: avatarUrl(size: 64)\n          }\n          ... on Mannequin {\n            id\n            githubUsername: login\n            userAvatarURL: avatarUrl(size: 64)\n          }\n        }\n      }\n    }\n    reviews(first: 10, states: [PENDING, APPROVED, CHANGES_REQUESTED]) {\n      totalCount\n      nodes {\n        state\n        author {\n          ... on Bot {\n            id\n            login\n            avatarUrl(size: 64)\n          }\n          ... on User {\n            id\n            login\n            name\n            avatarUrl(size: 64)\n          }\n          ... on Mannequin {\n            id\n            login\n            avatarUrl(size: 64)\n          }\n          ... on Organization {\n            id\n            login\n            name\n            avatarUrl(size: 64)\n          }\n          ... on EnterpriseUserAccount {\n            id\n            login\n            name\n            avatarUrl(size: 64)\n          }\n        }\n      }\n    }\n    assignees(first: 50) {\n      totalCount\n      nodes {\n        ... on User {\n          ...UserFields\n        }\n      }\n    }\n    projectsV2(first: 20) {\n      totalCount\n      nodes {\n        id\n        title\n      }\n    }\n  }\n  ${ShortRepositoryFieldsFragmentDoc}\n  ${UserFieldsFragmentDoc}\n`;\nexport const PullRequestCommitFieldsFragmentDoc = gql`\n  fragment PullRequestCommitFields on PullRequest {\n    commits(last: 100) {\n      totalCount\n      nodes {\n        commit {\n          id\n          authoredDate\n          message\n          oid\n          abbreviatedOid\n          author {\n            avatarUrl(size: 64)\n            name\n          }\n          statusCheckRollup {\n            state\n          }\n          url\n          treeUrl\n        }\n      }\n    }\n  }\n`;\nexport const CommitFieldsFragmentDoc = gql`\n  fragment CommitFields on Commit {\n    authoredDate\n    oid\n    message\n  }\n`;\nexport const ExtendedRepositoryFieldsFragmentDoc = gql`\n  fragment ExtendedRepositoryFields on Repository {\n    id\n    nameWithOwner\n    name\n    owner {\n      login\n      avatarUrl(size: 64)\n    }\n    url\n    mergeCommitAllowed\n    squashMergeAllowed\n    rebaseMergeAllowed\n    updatedAt\n    stargazerCount\n    viewerHasStarred\n    primaryLanguage {\n      id\n      name\n      color\n    }\n    hasIssuesEnabled\n    hasWikiEnabled\n    hasProjectsEnabled\n    hasDiscussionsEnabled\n    releases {\n      totalCount\n    }\n  }\n`;\nexport const ReleaseFieldsFragmentDoc = gql`\n  fragment ReleaseFields on Release {\n    id\n    description\n    name\n    publishedAt\n    createdAt\n    tagName\n    url\n  }\n`;\nexport const CreateLinkedBranchDocument = gql`\n  mutation createLinkedBranch($input: CreateLinkedBranchInput!) {\n    createLinkedBranch(input: $input) {\n      clientMutationId\n      linkedBranch {\n        ref {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\nexport const CreateRefDocument = gql`\n  mutation createRef($input: CreateRefInput!) {\n    createRef(input: $input) {\n      clientMutationId\n      ref {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const DeleteLinkedBranchDocument = gql`\n  mutation deleteLinkedBranch($input: DeleteLinkedBranchInput!) {\n    deleteLinkedBranch(input: $input) {\n      clientMutationId\n    }\n  }\n`;\nexport const SearchDiscussionsDocument = gql`\n  query searchDiscussions($query: String!, $numberOfOpenItems: Int!) {\n    openDiscussions: search(query: $query, type: DISCUSSION, first: $numberOfOpenItems) {\n      nodes {\n        ...DiscussionFields\n      }\n    }\n    searchDiscussions: search(query: $query, type: DISCUSSION, first: $numberOfOpenItems) {\n      nodes {\n        ...DiscussionFields\n      }\n    }\n  }\n  ${DiscussionFieldsFragmentDoc}\n`;\nexport const SearchCreatedIssuesDocument = gql`\n  query searchCreatedIssues(\n    $createdOpenQuery: String!\n    $createdClosedQuery: String!\n    $numberOfOpenItems: Int!\n    $numberOfClosedItems: Int!\n  ) {\n    createdOpen: search(query: $createdOpenQuery, type: ISSUE, first: $numberOfOpenItems) {\n      nodes {\n        ...IssueFields\n      }\n    }\n    createdClosed: search(query: $createdClosedQuery, type: ISSUE, first: $numberOfClosedItems) {\n      nodes {\n        ...IssueFields\n      }\n    }\n  }\n  ${IssueFieldsFragmentDoc}\n`;\nexport const RepositoryCollaboratorsForIssuesDocument = gql`\n  query repositoryCollaboratorsForIssues($owner: String!, $name: String!, $issueNumber: Int!) {\n    repository(owner: $owner, name: $name) {\n      collaborators(first: 25) {\n        totalCount\n        nodes {\n          ... on User {\n            ...UserFields\n          }\n        }\n      }\n      issue(number: $issueNumber) {\n        assignees(first: 25) {\n          totalCount\n          nodes {\n            id\n          }\n        }\n      }\n    }\n  }\n  ${UserFieldsFragmentDoc}\n`;\nexport const RepositoryProjectsForIssuesDocument = gql`\n  query repositoryProjectsForIssues($owner: String!, $name: String!, $issueNumber: Int!) {\n    repository(owner: $owner, name: $name) {\n      projectsV2(first: 50, orderBy: { field: TITLE, direction: ASC }) {\n        totalCount\n        nodes {\n          id\n          title\n          number\n        }\n      }\n      issue(number: $issueNumber) {\n        projectsV2(first: 50) {\n          totalCount\n          nodes {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\nexport const SearchOpenIssuesDocument = gql`\n  query searchOpenIssues($assignedOpenQuery: String!, $mentionedOpenQuery: String!, $numberOfOpenItems: Int!) {\n    assignedOpen: search(query: $assignedOpenQuery, type: ISSUE, first: $numberOfOpenItems) {\n      nodes {\n        ...IssueFields\n      }\n    }\n    mentionedOpen: search(query: $mentionedOpenQuery, type: ISSUE, first: $numberOfOpenItems) {\n      nodes {\n        ...IssueFields\n      }\n    }\n  }\n  ${IssueFieldsFragmentDoc}\n`;\nexport const IssueDetailsDocument = gql`\n  query issueDetails($nodeId: ID!) {\n    node(id: $nodeId) {\n      ...IssueDetailFields\n    }\n  }\n  ${IssueDetailFieldsFragmentDoc}\n`;\nexport const SearchIssuesDocument = gql`\n  query searchIssues($query: String!, $numberOfItems: Int!) {\n    search(query: $query, type: ISSUE, first: $numberOfItems) {\n      nodes {\n        ...IssueFields\n      }\n    }\n  }\n  ${IssueFieldsFragmentDoc}\n`;\nexport const CloseIssueDocument = gql`\n  mutation closeIssue($nodeId: ID!, $stateReason: IssueClosedStateReason!) {\n    closeIssue(input: { issueId: $nodeId, stateReason: $stateReason }) {\n      issue {\n        id\n      }\n    }\n  }\n`;\nexport const ReopenIssueDocument = gql`\n  mutation reopenIssue($nodeId: ID!) {\n    reopenIssue(input: { issueId: $nodeId }) {\n      issue {\n        id\n      }\n    }\n  }\n`;\nexport const ChangeIssueAssigneesDocument = gql`\n  mutation changeIssueAssignees($issueId: ID!, $assigneeIds: [ID!]) {\n    updateIssue(input: { id: $issueId, assigneeIds: $assigneeIds }) {\n      clientMutationId\n    }\n  }\n`;\nexport const ChangeIssueMilestoneDocument = gql`\n  mutation changeIssueMilestone($issueId: ID!, $milestoneId: ID) {\n    updateIssue(input: { id: $issueId, milestoneId: $milestoneId }) {\n      clientMutationId\n    }\n  }\n`;\nexport const AddIssueToProjectDocument = gql`\n  mutation addIssueToProject($issueId: ID!, $projectId: ID!) {\n    addProjectV2ItemById(input: { projectId: $projectId, contentId: $issueId }) {\n      clientMutationId\n    }\n  }\n`;\nexport const CreateIssueDocument = gql`\n  mutation createIssue(\n    $repositoryId: ID!\n    $title: String!\n    $body: String!\n    $assigneeIds: [ID!]!\n    $labelIds: [ID!]!\n    $milestoneId: ID\n  ) {\n    createIssue(\n      input: {\n        repositoryId: $repositoryId\n        title: $title\n        body: $body\n        assigneeIds: $assigneeIds\n        labelIds: $labelIds\n        milestoneId: $milestoneId\n      }\n    ) {\n      issue {\n        ...IssueFields\n      }\n    }\n  }\n  ${IssueFieldsFragmentDoc}\n`;\nexport const MyPullRequestsDocument = gql`\n  query myPullRequests(\n    $createdOpenQuery: String!\n    $createdClosedQuery: String!\n    $assignedOpenQuery: String!\n    $assignedClosedQuery: String!\n    $mentionedOpenQuery: String!\n    $mentionedClosedQuery: String!\n    $reviewRequestsOpenQuery: String!\n    $reviewRequestsClosedQuery: String!\n    $reviewedByOpenQuery: String!\n    $reviewedByClosedQuery: String!\n    $numberOfOpenItems: Int!\n    $numberOfClosedItems: Int!\n  ) {\n    createdOpen: search(query: $createdOpenQuery, type: ISSUE, first: $numberOfOpenItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    createdClosed: search(query: $createdClosedQuery, type: ISSUE, first: $numberOfClosedItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    assignedOpen: search(query: $assignedOpenQuery, type: ISSUE, first: $numberOfOpenItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    assignedClosed: search(query: $assignedClosedQuery, type: ISSUE, first: $numberOfClosedItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    mentionedOpen: search(query: $mentionedOpenQuery, type: ISSUE, first: $numberOfOpenItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    mentionedClosed: search(query: $mentionedClosedQuery, type: ISSUE, first: $numberOfClosedItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    reviewRequestsOpen: search(query: $reviewRequestsOpenQuery, type: ISSUE, first: $numberOfOpenItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    reviewRequestsClosed: search(query: $reviewRequestsClosedQuery, type: ISSUE, first: $numberOfClosedItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    reviewedByOpen: search(query: $reviewedByOpenQuery, type: ISSUE, first: $numberOfOpenItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n    reviewedByClosed: search(query: $reviewedByClosedQuery, type: ISSUE, first: $numberOfClosedItems) {\n      pullRequests: edges {\n        pullRequest: node {\n          ...PullRequestFields\n        }\n      }\n    }\n  }\n  ${PullRequestFieldsFragmentDoc}\n`;\nexport const SearchPullRequestsDocument = gql`\n  query searchPullRequests($query: String!, $numberOfItems: Int!) {\n    search(query: $query, type: ISSUE, first: $numberOfItems) {\n      edges {\n        node {\n          ...PullRequestFields\n        }\n      }\n    }\n  }\n  ${PullRequestFieldsFragmentDoc}\n`;\nexport const PullRequestDetailsDocument = gql`\n  query pullRequestDetails($nodeId: ID!) {\n    node(id: $nodeId) {\n      ...PullRequestDetailsFields\n    }\n  }\n  ${PullRequestDetailsFieldsFragmentDoc}\n`;\nexport const RepositoryCollaboratorsForPullRequestsDocument = gql`\n  query repositoryCollaboratorsForPullRequests($owner: String!, $name: String!, $pullRequestNumber: Int!) {\n    repository(owner: $owner, name: $name) {\n      collaborators(first: 25) {\n        totalCount\n        nodes {\n          ... on User {\n            ...UserFields\n          }\n        }\n      }\n      pullRequest(number: $pullRequestNumber) {\n        assignees(first: 25) {\n          totalCount\n          nodes {\n            id\n          }\n        }\n      }\n    }\n  }\n  ${UserFieldsFragmentDoc}\n`;\nexport const RepositoryProjectsForPullRequestsDocument = gql`\n  query repositoryProjectsForPullRequests($owner: String!, $name: String!, $pullRequestNumber: Int!) {\n    repository(owner: $owner, name: $name) {\n      projectsV2(first: 50, orderBy: { field: TITLE, direction: ASC }) {\n        totalCount\n        nodes {\n          id\n          title\n          number\n        }\n      }\n      pullRequest(number: $pullRequestNumber) {\n        projectsV2(first: 50) {\n          totalCount\n          nodes {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\nexport const PullRequestCommitsDocument = gql`\n  query pullRequestCommits($nodeId: ID!) {\n    node(id: $nodeId) {\n      ...PullRequestCommitFields\n    }\n  }\n  ${PullRequestCommitFieldsFragmentDoc}\n`;\nexport const ClosePullRequestDocument = gql`\n  mutation closePullRequest($nodeId: ID!) {\n    closePullRequest(input: { pullRequestId: $nodeId }) {\n      pullRequest {\n        id\n      }\n    }\n  }\n`;\nexport const ReopenPullRequestDocument = gql`\n  mutation reopenPullRequest($nodeId: ID!) {\n    reopenPullRequest(input: { pullRequestId: $nodeId }) {\n      pullRequest {\n        id\n      }\n    }\n  }\n`;\nexport const AddPullRequestReviewDocument = gql`\n  mutation addPullRequestReview($nodeId: ID!, $event: PullRequestReviewEvent, $body: String) {\n    addPullRequestReview(input: { pullRequestId: $nodeId, event: $event, body: $body }) {\n      pullRequestReview {\n        id\n      }\n    }\n  }\n`;\nexport const ChangePullRequestAssigneesDocument = gql`\n  mutation changePullRequestAssignees($pullRequestId: ID!, $assigneeIds: [ID!]) {\n    updatePullRequest(input: { pullRequestId: $pullRequestId, assigneeIds: $assigneeIds }) {\n      clientMutationId\n    }\n  }\n`;\nexport const ChangePullRequestMilestoneDocument = gql`\n  mutation changePullRequestMilestone($pullRequestId: ID!, $milestoneId: ID) {\n    updatePullRequest(input: { pullRequestId: $pullRequestId, milestoneId: $milestoneId }) {\n      clientMutationId\n    }\n  }\n`;\nexport const AddPullRequestToProjectDocument = gql`\n  mutation addPullRequestToProject($pullRequestId: ID!, $projectId: ID!) {\n    addProjectV2ItemById(input: { projectId: $projectId, contentId: $pullRequestId }) {\n      clientMutationId\n    }\n  }\n`;\nexport const RequestReviewDocument = gql`\n  mutation requestReview($pullRequestId: ID!, $collaboratorId: ID!) {\n    requestReviews(input: { pullRequestId: $pullRequestId, userIds: [$collaboratorId], union: true }) {\n      clientMutationId\n    }\n  }\n`;\nexport const MergePullRequestDocument = gql`\n  mutation mergePullRequest($nodeId: ID!, $method: PullRequestMergeMethod!) {\n    mergePullRequest(input: { pullRequestId: $nodeId, mergeMethod: $method }) {\n      pullRequest {\n        nodeId: id\n      }\n    }\n  }\n`;\nexport const CreatePullRequestDocument = gql`\n  mutation createPullRequest(\n    $repositoryId: ID!\n    $into: String!\n    $from: String!\n    $title: String!\n    $body: String!\n    $isDraft: Boolean!\n  ) {\n    createPullRequest(\n      input: {\n        repositoryId: $repositoryId\n        baseRefName: $into\n        headRefName: $from\n        title: $title\n        body: $body\n        draft: $isDraft\n      }\n    ) {\n      pullRequest {\n        id\n      }\n    }\n  }\n`;\nexport const InitPullRequestDocument = gql`\n  mutation initPullRequest(\n    $pullRequestId: ID!\n    $reviewersIds: [ID!]!\n    $assigneeIds: [ID!]!\n    $labelsIds: [ID!]!\n    $milestoneId: ID\n  ) {\n    requestReviews(input: { pullRequestId: $pullRequestId, userIds: $reviewersIds }) {\n      pullRequest {\n        id\n        reviewRequests {\n          totalCount\n        }\n      }\n    }\n    updatePullRequest(\n      input: {\n        pullRequestId: $pullRequestId\n        assigneeIds: $assigneeIds\n        labelIds: $labelsIds\n        milestoneId: $milestoneId\n      }\n    ) {\n      pullRequest {\n        ...PullRequestFields\n      }\n    }\n  }\n  ${PullRequestFieldsFragmentDoc}\n`;\nexport const SearchRepositoriesDocument = gql`\n  query searchRepositories($query: String!, $numberOfItems: Int!) {\n    search(query: $query, first: $numberOfItems, type: REPOSITORY) {\n      nodes {\n        ...ExtendedRepositoryFields\n      }\n    }\n  }\n  ${ExtendedRepositoryFieldsFragmentDoc}\n`;\nexport const MilestonesForRepositoryDocument = gql`\n  query milestonesForRepository($owner: String!, $name: String!) {\n    repository(owner: $owner, name: $name) {\n      milestones(first: 25, orderBy: { field: DUE_DATE, direction: ASC }) {\n        totalCount\n        nodes {\n          id\n          title\n          number\n        }\n      }\n    }\n  }\n`;\nexport const DataForRepositoryDocument = gql`\n  query dataForRepository($owner: String!, $name: String!) {\n    repository(owner: $owner, name: $name) {\n      defaultBranchRef {\n        id\n        name\n        target {\n          ...CommitFields\n        }\n      }\n      refs(refPrefix: \"refs/heads/\", direction: ASC, first: 50) {\n        totalCount\n        nodes {\n          id\n          name\n          target {\n            ...CommitFields\n          }\n        }\n      }\n      collaborators(first: 50) {\n        totalCount\n        nodes {\n          ...UserFields\n        }\n      }\n      labels(first: 50) {\n        totalCount\n        nodes {\n          id\n          name\n          color\n          isDefault\n        }\n      }\n      projectsV2(first: 50) {\n        totalCount\n        nodes {\n          id\n          title\n        }\n      }\n      milestones(first: 50, states: OPEN, orderBy: { field: DUE_DATE, direction: ASC }) {\n        totalCount\n        nodes {\n          id\n          title\n        }\n      }\n      pullRequestTemplateLowercase: object(expression: \"main:.github/pull_request_template.md\") {\n        ... on Blob {\n          isTruncated\n          text\n        }\n      }\n      pullRequestTemplateUppercase: object(expression: \"main:.github/PULL_REQUEST_TEMPLATE.md\") {\n        ... on Blob {\n          isTruncated\n          text\n        }\n      }\n      issueTemplates {\n        name\n        about\n        title\n        body\n      }\n    }\n  }\n  ${CommitFieldsFragmentDoc}\n  ${UserFieldsFragmentDoc}\n`;\nexport const RepositoryIssuesDocument = gql`\n  query repositoryIssues($owner: String!, $name: String!) {\n    repository(owner: $owner, name: $name) {\n      url\n      defaultBranchRef {\n        id\n        name\n        target {\n          oid\n        }\n      }\n      issues(first: 50, states: OPEN, orderBy: { field: CREATED_AT, direction: DESC }) {\n        nodes {\n          ...IssueFields\n        }\n      }\n    }\n  }\n  ${IssueFieldsFragmentDoc}\n`;\nexport const RepositoryReleasesDocument = gql`\n  query repositoryReleases($name: String!, $owner: String!) {\n    repository(name: $name, owner: $owner) {\n      ... on Repository {\n        releases(first: 30, orderBy: { field: CREATED_AT, direction: DESC }) {\n          nodes {\n            ...ReleaseFields\n          }\n        }\n      }\n    }\n  }\n  ${ReleaseFieldsFragmentDoc}\n`;\nexport const AddStarDocument = gql`\n  mutation addStar($repositoryId: ID!) {\n    addStar(input: { starrableId: $repositoryId }) {\n      clientMutationId\n    }\n  }\n`;\nexport const RemoveStarDocument = gql`\n  mutation removeStar($repositoryId: ID!) {\n    removeStar(input: { starrableId: $repositoryId }) {\n      clientMutationId\n    }\n  }\n`;\nexport const GetViewerDocument = gql`\n  query getViewer {\n    viewer {\n      ...UserFields\n      organizations(first: 50) {\n        totalCount\n        nodes {\n          avatarUrl\n          login\n        }\n      }\n    }\n  }\n  ${UserFieldsFragmentDoc}\n`;\n\nexport type SdkFunctionWrapper = <T>(\n  action: (requestHeaders?: Record<string, string>) => Promise<T>,\n  operationName: string,\n  operationType?: string\n) => Promise<T>;\n\nconst defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();\n\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n    createLinkedBranch(\n      variables: CreateLinkedBranchMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<CreateLinkedBranchMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<CreateLinkedBranchMutation>(CreateLinkedBranchDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"createLinkedBranch\",\n        \"mutation\"\n      );\n    },\n    createRef(\n      variables: CreateRefMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<CreateRefMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<CreateRefMutation>(CreateRefDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"createRef\",\n        \"mutation\"\n      );\n    },\n    deleteLinkedBranch(\n      variables: DeleteLinkedBranchMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<DeleteLinkedBranchMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<DeleteLinkedBranchMutation>(DeleteLinkedBranchDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"deleteLinkedBranch\",\n        \"mutation\"\n      );\n    },\n    searchDiscussions(\n      variables: SearchDiscussionsQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<SearchDiscussionsQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<SearchDiscussionsQuery>(SearchDiscussionsDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"searchDiscussions\",\n        \"query\"\n      );\n    },\n    searchCreatedIssues(\n      variables: SearchCreatedIssuesQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<SearchCreatedIssuesQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<SearchCreatedIssuesQuery>(SearchCreatedIssuesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"searchCreatedIssues\",\n        \"query\"\n      );\n    },\n    repositoryCollaboratorsForIssues(\n      variables: RepositoryCollaboratorsForIssuesQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<RepositoryCollaboratorsForIssuesQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<RepositoryCollaboratorsForIssuesQuery>(RepositoryCollaboratorsForIssuesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"repositoryCollaboratorsForIssues\",\n        \"query\"\n      );\n    },\n    repositoryProjectsForIssues(\n      variables: RepositoryProjectsForIssuesQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<RepositoryProjectsForIssuesQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<RepositoryProjectsForIssuesQuery>(RepositoryProjectsForIssuesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"repositoryProjectsForIssues\",\n        \"query\"\n      );\n    },\n    searchOpenIssues(\n      variables: SearchOpenIssuesQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<SearchOpenIssuesQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<SearchOpenIssuesQuery>(SearchOpenIssuesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"searchOpenIssues\",\n        \"query\"\n      );\n    },\n    issueDetails(\n      variables: IssueDetailsQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<IssueDetailsQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<IssueDetailsQuery>(IssueDetailsDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"issueDetails\",\n        \"query\"\n      );\n    },\n    searchIssues(\n      variables: SearchIssuesQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<SearchIssuesQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<SearchIssuesQuery>(SearchIssuesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"searchIssues\",\n        \"query\"\n      );\n    },\n    closeIssue(\n      variables: CloseIssueMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<CloseIssueMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<CloseIssueMutation>(CloseIssueDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"closeIssue\",\n        \"mutation\"\n      );\n    },\n    reopenIssue(\n      variables: ReopenIssueMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<ReopenIssueMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<ReopenIssueMutation>(ReopenIssueDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"reopenIssue\",\n        \"mutation\"\n      );\n    },\n    changeIssueAssignees(\n      variables: ChangeIssueAssigneesMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<ChangeIssueAssigneesMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<ChangeIssueAssigneesMutation>(ChangeIssueAssigneesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"changeIssueAssignees\",\n        \"mutation\"\n      );\n    },\n    changeIssueMilestone(\n      variables: ChangeIssueMilestoneMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<ChangeIssueMilestoneMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<ChangeIssueMilestoneMutation>(ChangeIssueMilestoneDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"changeIssueMilestone\",\n        \"mutation\"\n      );\n    },\n    addIssueToProject(\n      variables: AddIssueToProjectMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<AddIssueToProjectMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<AddIssueToProjectMutation>(AddIssueToProjectDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"addIssueToProject\",\n        \"mutation\"\n      );\n    },\n    createIssue(\n      variables: CreateIssueMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<CreateIssueMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<CreateIssueMutation>(CreateIssueDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"createIssue\",\n        \"mutation\"\n      );\n    },\n    myPullRequests(\n      variables: MyPullRequestsQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<MyPullRequestsQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<MyPullRequestsQuery>(MyPullRequestsDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"myPullRequests\",\n        \"query\"\n      );\n    },\n    searchPullRequests(\n      variables: SearchPullRequestsQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<SearchPullRequestsQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<SearchPullRequestsQuery>(SearchPullRequestsDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"searchPullRequests\",\n        \"query\"\n      );\n    },\n    pullRequestDetails(\n      variables: PullRequestDetailsQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<PullRequestDetailsQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<PullRequestDetailsQuery>(PullRequestDetailsDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"pullRequestDetails\",\n        \"query\"\n      );\n    },\n    repositoryCollaboratorsForPullRequests(\n      variables: RepositoryCollaboratorsForPullRequestsQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<RepositoryCollaboratorsForPullRequestsQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<RepositoryCollaboratorsForPullRequestsQuery>(\n            RepositoryCollaboratorsForPullRequestsDocument,\n            variables,\n            { ...requestHeaders, ...wrappedRequestHeaders }\n          ),\n        \"repositoryCollaboratorsForPullRequests\",\n        \"query\"\n      );\n    },\n    repositoryProjectsForPullRequests(\n      variables: RepositoryProjectsForPullRequestsQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<RepositoryProjectsForPullRequestsQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<RepositoryProjectsForPullRequestsQuery>(RepositoryProjectsForPullRequestsDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"repositoryProjectsForPullRequests\",\n        \"query\"\n      );\n    },\n    pullRequestCommits(\n      variables: PullRequestCommitsQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<PullRequestCommitsQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<PullRequestCommitsQuery>(PullRequestCommitsDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"pullRequestCommits\",\n        \"query\"\n      );\n    },\n    closePullRequest(\n      variables: ClosePullRequestMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<ClosePullRequestMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<ClosePullRequestMutation>(ClosePullRequestDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"closePullRequest\",\n        \"mutation\"\n      );\n    },\n    reopenPullRequest(\n      variables: ReopenPullRequestMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<ReopenPullRequestMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<ReopenPullRequestMutation>(ReopenPullRequestDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"reopenPullRequest\",\n        \"mutation\"\n      );\n    },\n    addPullRequestReview(\n      variables: AddPullRequestReviewMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<AddPullRequestReviewMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<AddPullRequestReviewMutation>(AddPullRequestReviewDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"addPullRequestReview\",\n        \"mutation\"\n      );\n    },\n    changePullRequestAssignees(\n      variables: ChangePullRequestAssigneesMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<ChangePullRequestAssigneesMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<ChangePullRequestAssigneesMutation>(ChangePullRequestAssigneesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"changePullRequestAssignees\",\n        \"mutation\"\n      );\n    },\n    changePullRequestMilestone(\n      variables: ChangePullRequestMilestoneMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<ChangePullRequestMilestoneMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<ChangePullRequestMilestoneMutation>(ChangePullRequestMilestoneDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"changePullRequestMilestone\",\n        \"mutation\"\n      );\n    },\n    addPullRequestToProject(\n      variables: AddPullRequestToProjectMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<AddPullRequestToProjectMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<AddPullRequestToProjectMutation>(AddPullRequestToProjectDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"addPullRequestToProject\",\n        \"mutation\"\n      );\n    },\n    requestReview(\n      variables: RequestReviewMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<RequestReviewMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<RequestReviewMutation>(RequestReviewDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"requestReview\",\n        \"mutation\"\n      );\n    },\n    mergePullRequest(\n      variables: MergePullRequestMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<MergePullRequestMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<MergePullRequestMutation>(MergePullRequestDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"mergePullRequest\",\n        \"mutation\"\n      );\n    },\n    createPullRequest(\n      variables: CreatePullRequestMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<CreatePullRequestMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<CreatePullRequestMutation>(CreatePullRequestDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"createPullRequest\",\n        \"mutation\"\n      );\n    },\n    initPullRequest(\n      variables: InitPullRequestMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<InitPullRequestMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<InitPullRequestMutation>(InitPullRequestDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"initPullRequest\",\n        \"mutation\"\n      );\n    },\n    searchRepositories(\n      variables: SearchRepositoriesQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<SearchRepositoriesQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<SearchRepositoriesQuery>(SearchRepositoriesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"searchRepositories\",\n        \"query\"\n      );\n    },\n    milestonesForRepository(\n      variables: MilestonesForRepositoryQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<MilestonesForRepositoryQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<MilestonesForRepositoryQuery>(MilestonesForRepositoryDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"milestonesForRepository\",\n        \"query\"\n      );\n    },\n    dataForRepository(\n      variables: DataForRepositoryQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<DataForRepositoryQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<DataForRepositoryQuery>(DataForRepositoryDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"dataForRepository\",\n        \"query\"\n      );\n    },\n    repositoryIssues(\n      variables: RepositoryIssuesQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<RepositoryIssuesQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<RepositoryIssuesQuery>(RepositoryIssuesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"repositoryIssues\",\n        \"query\"\n      );\n    },\n    repositoryReleases(\n      variables: RepositoryReleasesQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<RepositoryReleasesQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<RepositoryReleasesQuery>(RepositoryReleasesDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"repositoryReleases\",\n        \"query\"\n      );\n    },\n    addStar(\n      variables: AddStarMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<AddStarMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<AddStarMutation>(AddStarDocument, variables, { ...requestHeaders, ...wrappedRequestHeaders }),\n        \"addStar\",\n        \"mutation\"\n      );\n    },\n    removeStar(\n      variables: RemoveStarMutationVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<RemoveStarMutation> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<RemoveStarMutation>(RemoveStarDocument, variables, {\n            ...requestHeaders,\n            ...wrappedRequestHeaders,\n          }),\n        \"removeStar\",\n        \"mutation\"\n      );\n    },\n    getViewer(\n      variables?: GetViewerQueryVariables,\n      requestHeaders?: Dom.RequestInit[\"headers\"]\n    ): Promise<GetViewerQuery> {\n      return withWrapper(\n        (wrappedRequestHeaders) =>\n          client.request<GetViewerQuery>(GetViewerDocument, variables, { ...requestHeaders, ...wrappedRequestHeaders }),\n        \"getViewer\",\n        \"query\"\n      );\n    },\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;\n", "import { withGithubClient } from \"../helpers/withGithubClient\";\n\n/**\n * Makes sure that we have a authenticated github client available in the children\n */\nexport default function View({ children }: { children: JSX.Element }) {\n  return withGithubClient(children);\n}\n", "export function getErrorMessage(error: any) {\n  if (error?.response?.errors) {\n    return error.response.errors[0].message;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return String(error);\n}\n", "import { Color } from \"@raycast/api\";\n\nimport { IssueDetailFieldsFragment, IssueFieldsFragment, IssueStateReason } from \"../generated/graphql\";\n\nimport { getGitHubUser } from \"./users\";\n\nexport function getIssueStatus(issue: IssueFieldsFragment | IssueDetailFieldsFragment) {\n  if (issue.stateReason === IssueStateReason.NotPlanned) {\n    return {\n      icon: { source: \"skip.svg\", tintColor: Color.SecondaryText },\n      text: \"Closed as not planned\",\n      color: Color.Purple,\n    };\n  }\n\n  if (issue.stateReason === IssueStateReason.Completed) {\n    return {\n      icon: { source: \"issue-closed.svg\", tintColor: Color.Purple },\n      text: \"Closed as completed\",\n      color: Color.Purple,\n    };\n  }\n\n  return {\n    icon: { source: \"issue-opened.svg\", tintColor: Color.Green },\n    text: \"Open\",\n    color: Color.Green,\n  };\n}\n\nexport function getIssueAuthor(issue: IssueFieldsFragment | IssueDetailFieldsFragment) {\n  return getGitHubUser(issue.author);\n}\n", "import { Icon, Image } from \"@raycast/api\";\n\nexport function getGitHubUser(user?: { name?: string | null; login?: string; avatarUrl: string } | null) {\n  if (!user) {\n    return { icon: Icon.Person, text: \"Unknown\" };\n  }\n\n  return {\n    icon: { source: user?.avatarUrl, mask: Image.Mask.Circle },\n    text: (user.name ? user.name : user.login) ?? \"-\",\n  };\n}\n", "import { useCachedPromise } from \"@raycast/utils\";\n\nimport { ExtendedRepositoryFieldsFragment } from \"../generated/graphql\";\nimport { getGitHubClient } from \"../helpers/withGithubClient\";\n\nimport { useViewer } from \"./useViewer\";\n\nexport function useMyRepositories() {\n  const { github } = getGitHubClient();\n  const viewer = useViewer();\n\n  return useCachedPromise(async () => {\n    const result = await github.searchRepositories({\n      query: `user:@me ${viewer?.organizations?.nodes?.map((org) => `org:${org?.login}`).join(\" \")}`,\n      numberOfItems: 100,\n    });\n\n    return result.search.nodes as ExtendedRepositoryFieldsFragment[];\n  });\n}\n\nexport function useReleases(repository: ExtendedRepositoryFieldsFragment) {\n  const { github } = getGitHubClient();\n\n  const [owner, name] = repository.nameWithOwner.split(\"/\");\n  return useCachedPromise((owner, name) => github.repositoryReleases({ owner, name }), [owner, name]);\n}\n", "import { useCachedPromise } from \"@raycast/utils\";\n\nimport { getGitHubClient } from \"../helpers/withGithubClient\";\n\nexport function useViewer() {\n  const { github } = getGitHubClient();\n\n  const { data: viewer } = useCachedPromise(async () => {\n    const result = await github.getViewer();\n    return result.viewer;\n  });\n\n  return viewer;\n}\n"],
  "mappings": "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AW,IACjB,MAAMD,EACVT,OAAAA,EAAM,GACC,CACHQ,MAAO,CACHE,OAAQ,IACRX,QAAS,CAAA,EACTnB,KAAM,CAAA,QAOlC,CCrCO,SAAS+B,GAASpB,EAASC,EAAOC,EAAYmB,EAAO,CACxD,OAAI,OAAOnB,GAAe,aACtBmB,EAAQnB,EACRA,EAAaoB,QAEVC,GAAOvB,EAAS,CAAA,EAAID,GAASC,EAASC,EAAOC,CAAU,EAAEQ,OAAOC,eAAc,EAAIU,CAAK,CAClG,CACA,SAASE,GAAOvB,EAASwB,EAASzB,EAAUsB,EAAO,CAC/C,OAAOtB,EAASa,KAAI,EAAGa,KAAMC,GAAW,CACpC,GAAIA,EAAOb,KACP,OAAOW,EAEX,IAAIG,EAAY,GAChB,SAASd,GAAO,CACZc,EAAY,GAGhB,OADAH,EAAUA,EAAQI,OAAOP,EAAQA,EAAMK,EAAOT,MAAOJ,CAAI,EAAIa,EAAOT,MAAM5B,IAAI,EAC1EsC,EACOH,EAEJD,GAAOvB,EAASwB,EAASzB,EAAUsB,CAAK,EAClD,CACL,KCrBaQ,GAAsBhC,OAAOiC,OAAOV,GAAU,CACvDrB,SAAAA,EACJ,CAAC,ECJYgC,GAAsB,CAC/B,2BACA,yBACA,kEACA,sDACA,sFACA,gFACA,gDACA,qDACA,uDACA,mEACA,cACA,aACA,oBACA,qBACA,gCACA,+BACA,6BACA,iCACA,cACA,gBACA,iCACA,oDACA,yCACA,4DACA,sCACA,qBACA,qBACA,8CACA,yEACA,oDACA,mDACA,wCACA,uEACA,kEACA,kCACA,kCACA,6DACA,yBACA,uCACA,6BACA,qCACA,gEACA,yBACA,qCACA,wBACA,6CACA,gCACA,8BACA,oDACA,yBACA,0BACA,6BACA,yDACA,wCACA,2BACA,kEACA,2BACA,iCACA,wBACA,yCACA,qDACA,wBACA,gDACA,6EACA,wGACA,8EACA,gDACA,4CACA,6CACA,0CACA,0CACA,0CACA,2CACA,qCACA,8CACA,2CACA,4CACA,yCACA,4DACA,iFACA,uDACA,4CACA,8CACA,iEACA,sCACA,qCACA,kEACA,qEACA,iDACA,0EACA,mDACA,uCACA,qDACA,+CACA,0CACA,qCACA,4DACA,oCACA,0DACA,uDACA,qDACA,uDACA,iDACA,mDACA,yCACA,8CACA,+CACA,wCACA,iEACA,yCACA,uFACA,mCACA,kCACA,kCACA,uDACA,wCACA,mCACA,4CACA,mEACA,0CACA,2DACA,yDACA,yDACA,4DACA,2DACA,iCACA,mCACA,uCACA,iEACA,0CACA,yCACA,qCACA,kCACA,2CACA,kEACA,yDACA,wDACA,sDACA,wDACA,6EACA,qCACA,yDACA,4DACA,mDACA,4EACA,uCACA,wCACA,iCACA,kCACA,mCACA,oBACA,4EACA,mBACA,sBACA,qBACA,qBACA,2BACA,qBACA,oBACA,mCACA,gEACA,2FACA,iEACA,mCACA,+BACA,gCACA,6BACA,6BACA,mBACA,uBACA,+BACA,mBACA,sBACA,sBACA,qBACA,0BACA,yDACA,mBACA,iBACA,kCACA,0CACA,6BACA,uBACA,mDACA,iBACA,qBACA,4DACA,0BACA,kBACA,mCACA,6BACA,oBACA,0BACA,kBACA,aACA,+BACA,0CACA,sCACA,kCACA,kCACA,8BACA,iCACA,6BACA,6BACA,iCACA,iCACA,wCACA,+CACA,8BACA,yCACA,gCACA,qCAAqC,EClNlC,SAASC,GAAqBC,EAAK,CACtC,OAAI,OAAOA,GAAQ,SACRF,GAAoBG,SAASD,CAAG,EAGhC,EAEf,CCAO,SAASE,GAAanC,EAAS,CAClC,MAAO,CACHoB,SAAUvB,OAAOiC,OAAOV,GAASgB,KAAK,KAAMpC,CAAO,EAAG,CAClDD,SAAUA,GAASqC,KAAK,KAAMpC,CAAO,EACxC,EAET,CACAmC,GAAajD,QAAUA,oLChBvB,IAAMmD,GAAY,CACdC,QAAS,CACLC,wCAAyC,CACrC,qDAAqD,EAEzDC,yCAA0C,CACtC,+DAA+D,EAEnEC,2BAA4B,CACxB,4EAA4E,EAEhFC,mBAAoB,CAChB,0DAA0D,EAE9DC,kBAAmB,CACf,yDAAyD,EAE7DC,gCAAiC,CAC7B,yFAAyF,EAE7FC,wBAAyB,CAAC,+CAA+C,EACzEC,yBAA0B,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ACA,iBACA,sBACA,gBACA,iBACA,gBACA,oBACA,gBACA,gBACA,kBACA,qBACA,oBACA,mBACA,kBACA,kBACA,QACA,gBACA,gBACA,eACA,uBACA,iCACA,+BACA,sCACA,gDACA,iCACA,SACA,eACA,gBACA,iBACA,aACA,mBACA,qBACA,cACA,+BACA,OACA,eACA,YACA,mBACA,oBACA,oBACA,mBACA,mBACA,YACA,oBACA,sBACA,eACA,uBACA,4BACA,8BACA,8BACA,uBACA,UACA,oBACA,kBACA,aACA,OACA,UACA,iBACA,kBACA,kBACA,iBACA,mBACA,eACA,yBACA,uBACA,uBACA,sBACA,qBACA,iBACA,yBACA,yBACA,wBACA,uBACA,mBACA,4BACA,6BACA,2BACA,2BACA,0BACA,6BACA,4BACA,SACA,eACA,wBACA,mCACA,kCACA,sBACA,kCACA,wBACA,sBACA,uBACA,sBACA,sBACA,sBACA,gCACA,wBACA,sCACA,gCACA,2BACA,0BACA,yBACA,wBACA,sBACA,gCACA,6BACA,gCACA,8BACA,sCACA,sCACA,qCACA,6BACA,sCACA,wCACA,OACA,UACA,kBACA,kBACA,iBACA,sBACA,oBACA,mBACA,sBACA,aACA,sBACA,qBACA,qBACA,oBACA,wBACA,wBACA,qBACA,yBACA,wBACA,sBACA,oBACA,iCACA,wCACA,yCACA,wCACA,yCACA,wBACA,gCACA,iCACA,iCACA,oBACA,8BACA,8BACA,4BACA,8BACA,cACA,wBACA,sBACA,qBACA,mCACA,kCACA,2BACA,OACA,eACA,eACA,SACA,OACA,2BACA,eACA,eACA,cACA,+BACA,WACA,QACA,gBACA,oBACA,eACA,yBACA,2BACA,sBACA,eACA,yBACA,2BACA,wBA3P6B,ECDjC,SAASC,GAAoBC,EAAOC,EAAaC,EAAS,CACjDF,EAAMG,MAAMF,KACbD,EAAMG,MAAMF,GAAe,CAAA,GAE/BD,EAAMG,MAAMF,GAAaG,KAAKF,CAA9B,CACH,CACM,SAASG,GAAWL,EAAOM,EAAoBJ,EAAS,CAC3D,GAAIK,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BACA,OACF,CACF,EACA,iBACEF,EACAC,EACgC,CAChC,OAAOF,EACJG,GACCJ,EAAO,QAA+BtC,GAA0BwC,EAAW,CACzE,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,mBACA,OACF,CACF,EACA,aACEF,EACAC,EAC4B,CAC5B,OAAOF,EACJG,GACCJ,EAAO,QAA2BrC,GAAsBuC,EAAW,CACjE,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,eACA,OACF,CACF,EACA,aACEF,EACAC,EAC4B,CAC5B,OAAOF,EACJG,GACCJ,EAAO,QAA2BpC,GAAsBsC,EAAW,CACjE,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,eACA,OACF,CACF,EACA,WACEF,EACAC,EAC6B,CAC7B,OAAOF,EACJG,GACCJ,EAAO,QAA4BnC,GAAoBqC,EAAW,CAChE,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,aACA,UACF,CACF,EACA,YACEF,EACAC,EAC8B,CAC9B,OAAOF,EACJG,GACCJ,EAAO,QAA6BlC,GAAqBoC,EAAW,CAClE,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,cACA,UACF,CACF,EACA,qBACEF,EACAC,EACuC,CACvC,OAAOF,EACJG,GACCJ,EAAO,QAAsCjC,GAA8BmC,EAAW,CACpF,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,uBACA,UACF,CACF,EACA,qBACEF,EACAC,EACuC,CACvC,OAAOF,EACJG,GACCJ,EAAO,QAAsChC,GAA8BkC,EAAW,CACpF,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,uBACA,UACF,CACF,EACA,kBACEF,EACAC,EACoC,CACpC,OAAOF,EACJG,GACCJ,EAAO,QAAmC/B,GAA2BiC,EAAW,CAC9E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,oBACA,UACF,CACF,EACA,YACEF,EACAC,EAC8B,CAC9B,OAAOF,EACJG,GACCJ,EAAO,QAA6B9B,GAAqBgC,EAAW,CAClE,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,cACA,UACF,CACF,EACA,eACEF,EACAC,EAC8B,CAC9B,OAAOF,EACJG,GACCJ,EAAO,QAA6B7B,GAAwB+B,EAAW,CACrE,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,iBACA,OACF,CACF,EACA,mBACEF,EACAC,EACkC,CAClC,OAAOF,EACJG,GACCJ,EAAO,QAAiC5B,GAA4B8B,EAAW,CAC7E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,qBACA,OACF,CACF,EACA,mBACEF,EACAC,EACkC,CAClC,OAAOF,EACJG,GACCJ,EAAO,QAAiC3B,GAA4B6B,EAAW,CAC7E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,qBACA,OACF,CACF,EACA,uCACEF,EACAC,EACsD,CACtD,OAAOF,EACJG,GACCJ,EAAO,QACL1B,GACA4B,EACA,CAAE,GAAGC,EAAgB,GAAGC,CAAsB,CAChD,EACF,yCACA,OACF,CACF,EACA,kCACEF,EACAC,EACiD,CACjD,OAAOF,EACJG,GACCJ,EAAO,QAAgDzB,GAA2C2B,EAAW,CAC3G,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,oCACA,OACF,CACF,EACA,mBACEF,EACAC,EACkC,CAClC,OAAOF,EACJG,GACCJ,EAAO,QAAiCxB,GAA4B0B,EAAW,CAC7E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,qBACA,OACF,CACF,EACA,iBACEF,EACAC,EACmC,CACnC,OAAOF,EACJG,GACCJ,EAAO,QAAkCvB,GAA0ByB,EAAW,CAC5E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,mBACA,UACF,CACF,EACA,kBACEF,EACAC,EACoC,CACpC,OAAOF,EACJG,GACCJ,EAAO,QAAmCtB,GAA2BwB,EAAW,CAC9E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,oBACA,UACF,CACF,EACA,qBACEF,EACAC,EACuC,CACvC,OAAOF,EACJG,GACCJ,EAAO,QAAsCrB,GAA8BuB,EAAW,CACpF,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,uBACA,UACF,CACF,EACA,2BACEF,EACAC,EAC6C,CAC7C,OAAOF,EACJG,GACCJ,EAAO,QAA4CpB,GAAoCsB,EAAW,CAChG,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,6BACA,UACF,CACF,EACA,2BACEF,EACAC,EAC6C,CAC7C,OAAOF,EACJG,GACCJ,EAAO,QAA4CnB,GAAoCqB,EAAW,CAChG,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,6BACA,UACF,CACF,EACA,wBACEF,EACAC,EAC0C,CAC1C,OAAOF,EACJG,GACCJ,EAAO,QAAyClB,GAAiCoB,EAAW,CAC1F,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,0BACA,UACF,CACF,EACA,cACEF,EACAC,EACgC,CAChC,OAAOF,EACJG,GACCJ,EAAO,QAA+BjB,GAAuBmB,EAAW,CACtE,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,gBACA,UACF,CACF,EACA,iBACEF,EACAC,EACmC,CACnC,OAAOF,EACJG,GACCJ,EAAO,QAAkChB,GAA0BkB,EAAW,CAC5E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,mBACA,UACF,CACF,EACA,kBACEF,EACAC,EACoC,CACpC,OAAOF,EACJG,GACCJ,EAAO,QAAmCf,GAA2BiB,EAAW,CAC9E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,oBACA,UACF,CACF,EACA,gBACEF,EACAC,EACkC,CAClC,OAAOF,EACJG,GACCJ,EAAO,QAAiCd,GAAyBgB,EAAW,CAC1E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,kBACA,UACF,CACF,EACA,mBACEF,EACAC,EACkC,CAClC,OAAOF,EACJG,GACCJ,EAAO,QAAiCb,GAA4Be,EAAW,CAC7E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,qBACA,OACF,CACF,EACA,wBACEF,EACAC,EACuC,CACvC,OAAOF,EACJG,GACCJ,EAAO,QAAsCZ,GAAiCc,EAAW,CACvF,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,0BACA,OACF,CACF,EACA,kBACEF,EACAC,EACiC,CACjC,OAAOF,EACJG,GACCJ,EAAO,QAAgCX,GAA2Ba,EAAW,CAC3E,GAAGC,EACH,GAAGC,CACL,CAAC,EACH,oBACA,OACF,CACF,EACA,iBACEF,EACAC,EAC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",
  "names": ["require_lite", "__commonJSMin", "exports", "has", "dequal", "foo", "bar", "ctor", "len", "require_useDeepMemo", "__commonJSMin", "exports", "react_1", "lite_1", "useDeepMemo", "value", "ref", "signalRef", "require_useLatest", "__commonJSMin", "exports", "react_1", "useLatest", "value", "ref", "require_usePromise", "__commonJSMin", "exports", "react_1", "api_1", "useDeepMemo_1", "useLatest_1", "usePromise", "fn", "args", "options", "lastCallId", "state", "set", "fnRef", "latestAbortable", "latestArgs", "latestOnError", "latestOnData", "latestOnWillExecute", "latestValue", "latestCallback", "callback", "callId", "prevState", "data", "error", "toast", "revalidate", "mutate", "asyncUpdate", "dataBeforeOptimisticUpdate", "update", "err", "require_useCachedState", "__commonJSMin", "exports", "react_1", "api_1", "useLatest_1", "replacer", "key", "_value", "value", "reviver", "_key", "rootCache", "cacheMap", "useCachedState", "initialState", "config", "cacheKey", "cache", "keyRef", "initialValueRef", "cachedState", "error", "state", "err", "stateRef", "setStateAndCache", "updater", "newValue", "stringifiedValue", "require_object_hash", "__commonJSMin", "exports", "module", "crypto", "objectHash", "object", "options", "applyDefaults", "hash", "hashes", "encodings", "sourceOptions", "i", "isNativeFunction", "f", "exp", "hashingStream", "PassThrough", "hasher", "typeHasher", "buf", "stream", "writeTo", "context", "write", "str", "value", "type", "pattern", "objString", "objType", "objectNumber", "keys", "key", "self", "arr", "unordered", "entry", "contextAdditions", "entries", "strm", "localContext", "date", "sym", "err", "bool", "string", "fn", "number", "xml", "regex", "url", "map", "set", "file", "b", "require_useCachedPromise", "__commonJSMin", "exports", "__importDefault", "mod", "react_1", "object_hash_1", "useCachedState_1", "usePromise_1", "useLatest_1", "emptyCache", "useCachedPromise", "fn", "args", "options", "initialData", "keepPreviousData", "usePromiseOptions", "lastUpdateFrom", "cachedData", "mutateCache", "laggyDataRef", "_mutate", "revalidate", "state", "data", "returnedData", "latestData", "mutate", "asyncUpdate", "dataBeforeOptimisticUpdate", "err", "require_media_typer", "__commonJSMin", "exports", "SUBTYPE_NAME_REGEXP", "TYPE_NAME_REGEXP", "TYPE_REGEXP", "format", "parse", "test", "obj", "subtype", "suffix", "type", "string", "match", "index", "MediaType", "require_content_type", "__commonJSMin", "exports", "PARAM_REGEXP", "TEXT_REGEXP", "TOKEN_REGEXP", "QESC_REGEXP", "QUOTE_REGEXP", "TYPE_REGEXP", "format", "parse", "obj", "parameters", "type", "string", "param", "params", "i", "qstring", "header", "getcontenttype", "index", "ContentType", "key", "match", "value", "val", "str", "require_lib", "__commonJSMin", "exports", "module", "conversions", "sign", "x", "evenRound", "createNumberConversion", "bitLength", "typeOpts", "lowerBound", "upperBound", "moduloVal", "moduloBound", "V", "opts", "val", "c", "i", "S", "n", "U", "d", "a", "b", "require_utils", "__commonJSMin", "exports", "module", "target", "source", "keys", "i", "impl", "wrapper", "require_tr46", "__commonJSMin", "exports", "module", "punycode", "mappingTable", "PROCESSING_OPTIONS", "normalize", "str", "s", "findStatus", "val", "start", "end", "mid", "target", "regexAstralSymbols", "countSymbols", "string", "mapChars", "domain_name", "useSTD3", "processing_option", "hasError", "processed", "len", "i", "codePoint", "status", "combiningMarksRegex", "validateLabel", "label", "error", "processing", "result", "labels", "validation", "verifyDnsLength", "total", "require_url_state_machine", "__commonJSMin", "exports", "module", "punycode", "tr46", "specialSchemes", "failure", "countSymbols", "str", "at", "input", "idx", "c", "isASCIIDigit", "isASCIIAlpha", "isASCIIAlphanumeric", "isASCIIHex", "isSingleDot", "buffer", "isDoubleDot", "isWindowsDriveLetterCodePoints", "cp1", "cp2", "isWindowsDriveLetterString", "string", "isNormalizedWindowsDriveLetterString", "containsForbiddenHostCodePoint", "containsForbiddenHostCodePointExcludingPercent", "isSpecialScheme", "scheme", "isSpecial", "url", "defaultPort", "percentEncode", "hex", "utf8PercentEncode", "buf", "i", "utf8PercentDecode", "output", "isC0ControlPercentEncode", "extraPathPercentEncodeSet", "isPathPercentEncode", "extraUserinfoPercentEncodeSet", "isUserinfoPercentEncode", "percentEncodeChar", "encodeSetPredicate", "cStr", "parseIPv4Number", "R", "parseIPv4", "parts", "numbers", "part", "n", "ipv4", "counter", "serializeIPv4", "address", "parseIPv6", "pieceIndex", "compress", "pointer", "value", "length", "numbersSeen", "ipv4Piece", "number", "swaps", "temp", "serializeIPv6", "findLongestZeroSequence", "ignore0", "parseHost", "isSpecialArg", "parseOpaqueHost", "domain", "asciiDomain", "ipv4Host", "decoded", "arr", "maxIdx", "maxLen", "currStart", "currLen", "serializeHost", "host", "trimControlChars", "trimTabAndNewline", "shortenPath", "path", "isNormalizedWindowsDriveLetter", "includesCredentials", "cannotHaveAUsernamePasswordPort", "URLStateMachine", "base", "encodingOverride", "stateOverride", "res", "ret", "len", "codePoint", "encodedCodePoints", "port", "fileOtherwiseCodePoints", "serializeURL", "excludeFragment", "serializeOrigin", "tuple", "result", "options", "usm", "username", "password", "integer", "require_URL_impl", "__commonJSMin", "exports", "usm", "constructorArgs", "url", "base", "parsedBase", "parsedURL", "v", "input", "require_URL", "__commonJSMin", "exports", "module", "conversions", "utils", "Impl", "impl", "URL", "url", "args", "i", "V", "obj", "constructorArgs", "privateData", "require_public_api", "__commonJSMin", "exports", "require_lib", "__commonJSMin", "exports", "module", "_interopDefault", "ex", "Stream", "http", "Url", "whatwgUrl", "https", "zlib", "Readable", "BUFFER", "TYPE", "Blob", "blobParts", "options", "buffers", "size", "a", "length", "i", "element", "buffer", "type", "buf", "ab", "readable", "start", "end", "relativeStart", "relativeEnd", "span", "slicedBuffer", "blob", "FetchError", "message", "systemError", "convert", "INTERNALS", "PassThrough", "Body", "body", "_this", "_ref", "_ref$size", "_ref$timeout", "timeout", "isURLSearchParams", "isBlob", "err", "error", "consumeBody", "ct", "_this2", "_this3", "convertBody", "proto", "name", "desc", "_this4", "accum", "accumBytes", "abort", "resolve", "reject", "resTimeout", "chunk", "headers", "charset", "res", "str", "obj", "clone", "instance", "p1", "p2", "extractContentType", "getTotalBytes", "writeToStream", "dest", "invalidTokenRegex", "invalidHeaderCharRegex", "validateName", "validateValue", "value", "find", "map", "key", "MAP", "Headers", "init", "rawHeaders", "headerNames", "headerName", "method", "pairs", "pair", "callback", "thisArg", "getHeaders", "_pairs$i", "createHeadersIterator", "kind", "k", "INTERNAL", "target", "iterator", "HeadersIteratorPrototype", "_INTERNAL", "index", "values", "len", "exportNodeCompatibleHeaders", "hostHeaderKey", "createHeadersLenient", "val", "INTERNALS$1", "STATUS_CODES", "Response", "opts", "status", "contentType", "INTERNALS$2", "URL", "parse_url", "format_url", "parseURL", "urlStr", "streamDestructionSupported", "isRequest", "input", "isAbortSignal", "signal", "Request", "parsedURL", "inputBody", "getNodeRequestOptions", "request", "contentLengthValue", "totalBytes", "agent", "AbortError", "URL$1", "PassThrough$1", "isDomainOrSubdomain", "destination", "original", "orig", "fetch", "url", "send", "response", "abortAndFinalize", "finalize", "req", "reqTimeout", "socket", "location", "locationURL", "requestOpts", "response_options", "codings", "zlibOptions", "code", "require_node_ponyfill", "__commonJSMin", "exports", "module", "nodeFetch", "realFetch", "fetch", "url", "options", "require_useFetch", "__commonJSMin", "exports", "__importDefault", "mod", "react_1", "media_typer_1", "content_type_1", "useCachedPromise_1", "useLatest_1", "cross_fetch_1", "isJSON", "contentTypeHeader", "ct", "mediaType", "defaultParsing", "response", "useFetch", "url", "options", "parseResponse", "initialData", "execute", "keepPreviousData", "onError", "onData", "onWillExecute", "fetchOptions", "useCachedPromiseOptions", "parseResponseRef", "abortable", "fn", "res", "require_signals", "__commonJSMin", "exports", "module", "require_signal_exit", "__commonJSMin", "exports", "module", "process", "processOk", "assert", "signals", "isWin", "EE", "emitter", "cb", "opts", "loaded", "load", "ev", "remove", "unload", "sig", "sigListeners", "originalProcessEmit", "originalProcessReallyExit", "emit", "event", "code", "signal", "listeners", "processEmit", "processReallyExit", "arg", "ret", "require_exec_utils", "__commonJSMin", "exports", "__importDefault", "mod", "node_buffer_1", "node_stream_1", "node_util_1", "signal_exit_1", "getSpawnedPromise", "spawned", "timeout", "spawnedPromise", "resolve", "reject", "exitCode", "signal", "error", "timeoutId", "timeoutPromise", "_resolve", "safeSpawnedPromise", "removeExitHandler", "MaxBufferError", "streamPipelinePromisified", "bufferStream", "options", "encoding", "isBuffer", "stream", "length", "chunks", "chunk", "getStream", "inputStream", "rejectPromise", "getBufferedData", "streamPromise", "getSpawnedResult", "stdout", "stderr", "processDone", "stdoutPromise", "stderrPromise", "require_useExec", "__commonJSMin", "exports", "__importDefault", "mod", "node_child_process_1", "react_1", "useCachedPromise_1", "useLatest_1", "exec_utils_1", "SPACES_REGEXP", "parseCommand", "command", "args", "tokens", "token", "previousToken", "stripFinalNewline", "input", "LF", "CR", "handleOutput", "options", "value", "getErrorPrefix", "timedOut", "timeout", "signal", "exitCode", "makeError", "stdout", "stderr", "error", "execaMessage", "shortMessage", "message", "defaultParsing", "useExec", "optionsOrArgs", "parseOutput", "onData", "onWillExecute", "initialData", "execute", "keepPreviousData", "onError", "execOptions", "useCachedPromiseOptions", "abortable", "parseOutputRef", "fn", "_command", "_args", "_options", "file", "spawned", "spawnedPromise", "stdoutResult", "stderrResult", "require_useSQL", "__commonJSMin", "exports", "__importDefault", "mod", "jsx_runtime_1", "api_1", "node_fs_1", "promises_1", "node_os_1", "node_child_process_1", "node_path_1", "object_hash_1", "react_1", "usePromise_1", "useLatest_1", "exec_utils_1", "useSQL", "databasePath", "query", "options", "permissionPriming", "usePromiseOptions", "permissionView", "setPermissionView", "latestOptions", "abortable", "handleError", "_error", "error", "PermissionError", "isPermissionError", "PermissionErrorScreen", "toast", "fn", "workaroundCopiedDb", "abortSignal", "spawned", "spawnedPromise", "exitCode", "signal", "stdoutResult", "stderrResult", "checkAborted", "tempFolder", "message", "macosVenturaAndLater", "preferencesString", "props", "action", "require_useForm", "__commonJSMin", "exports", "react_1", "useLatest_1", "FormValidation", "validationError", "validation", "value", "valueIsValid", "useForm", "props", "_onSubmit", "initialValues", "values", "setValues", "errors", "setErrors", "refs", "latestValidation", "latestOnSubmit", "focus", "id", "handleSubmit", "validationErrors", "error", "result", "setValidationError", "setValue", "itemProps", "target", "event", "instance", "reset", "require_color", "__commonJSMin", "exports", "hexToRGB", "hex", "r", "g", "b", "rgbToHex", "rString", "gString", "bString", "rgbToHSL", "cmin", "cmax", "delta", "h", "s", "hslToRGB", "l", "c", "x", "m", "hexToHSL", "hslToHex", "hsl", "clamp", "value", "min", "max", "offset", "slightlyDarkerColor", "slightlyLighterColor", "require_avatar", "__commonJSMin", "exports", "color_1", "getWholeCharAndI", "str", "i", "code", "next", "prev", "avatarColorSet", "getAvatarIcon", "name", "options", "words", "initials", "firstWordFirstLetter", "lastWordFirstLetter", "backgroundColor", "initialsCharIndex", "char", "colorIndex", "radius", "require_favicon", "__commonJSMin", "exports", "api_1", "url_1", "getFavicon", "url", "options", "hostname", "e", "require_progress", "__commonJSMin", "exports", "api_1", "polarToCartesian", "centerX", "centerY", "radius", "angleInDegrees", "angleInRadians", "describeArc", "x", "y", "startAngle", "endAngle", "start", "end", "largeArcFlag", "getProgressIcon", "progress", "color", "options", "background", "backgroundOpacity", "stroke", "require_icon", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_dist", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_isObjectLike", "__commonJSMin", "exports", "isObjectLike", "value", "require_invariant", "__commonJSMin", "exports", "invariant", "condition", "message", "require_location", "__commonJSMin", "exports", "getLocation", "_invariant", "LineRegExp", "source", "position", "lastLineStart", "line", "match", "require_printLocation", "__commonJSMin", "exports", "printLocation", "printSourceLocation", "_location", "location", "source", "sourceLocation", "firstLineColumnOffset", "body", "lineIndex", "lineOffset", "lineNum", "columnOffset", "columnNum", "locationStr", "lines", "locationLine", "subLineIndex", "subLineColumnNum", "subLines", "i", "printPrefixedLines", "subLine", "existingLines", "_", "line", "padLen", "prefix", "require_GraphQLError", "__commonJSMin", "exports", "formatError", "printError", "_isObjectLike", "_location", "_printLocation", "toNormalizedOptions", "args", "firstArg", "GraphQLError", "message", "rawArgs", "_this$nodes", "_nodeLocations$", "_ref", "nodes", "source", "positions", "path", "originalError", "extensions", "undefinedIfEmpty", "nodeLocations", "node", "loc", "pos", "originalExtensions", "output", "location", "formattedError", "array", "error", "require_syntaxError", "__commonJSMin", "exports", "syntaxError", "_GraphQLError", "source", "position", "description", "require_ast", "__commonJSMin", "exports", "isNode", "Location", "startToken", "endToken", "source", "Token", "kind", "start", "end", "line", "column", "value", "QueryDocumentKeys", "kindValues", "maybeNode", "maybeKind", "OperationTypeNode", "require_directiveLocation", "__commonJSMin", "exports", "DirectiveLocation", "require_kinds", "__commonJSMin", "exports", "Kind", "require_characterClasses", "__commonJSMin", "exports", "isDigit", "isLetter", "isNameContinue", "isNameStart", "isWhiteSpace", "code", "require_blockString", "__commonJSMin", "exports", "dedentBlockStringLines", "isPrintableAsBlockString", "printBlockString", "_characterClasses", "lines", "_firstNonEmptyLine2", "commonIndent", "firstNonEmptyLine", "lastNonEmptyLine", "i", "_firstNonEmptyLine", "line", "indent", "leadingWhitespace", "str", "value", "isEmptyLine", "hasIndent", "hasCommonIndent", "seenNonEmptyLine", "options", "escapedValue", "isSingleLine", "forceLeadingNewLine", "hasTrailingTripleQuotes", "hasTrailingQuote", "hasTrailingSlash", "forceTrailingNewline", "printAsMultipleLines", "result", "skipLeadingNewLine", "require_tokenKind", "__commonJSMin", "exports", "TokenKind", "require_lexer", "__commonJSMin", "exports", "isPunctuatorTokenKind", "_syntaxError", "_ast", "_blockString", "_characterClasses", "_tokenKind", "Lexer", "source", "startOfFileToken", "token", "nextToken", "readNextToken", "kind", "isUnicodeScalarValue", "code", "isSupplementaryCodePoint", "body", "location", "isLeadingSurrogate", "isTrailingSurrogate", "printCodePointAt", "lexer", "char", "createToken", "start", "end", "value", "line", "col", "bodyLength", "position", "readComment", "readBlockString", "readString", "readNumber", "readName", "firstCode", "isFloat", "readDigits", "chunkStart", "escape", "readEscapedUnicodeVariableWidth", "readEscapedUnicodeFixedWidth", "readEscapedCharacter", "point", "size", "readHexDigit", "read16BitHexCode", "trailingCode", "lineStart", "currentLine", "blockLines", "require_devAssert", "__commonJSMin", "exports", "devAssert", "condition", "message", "require_inspect", "__commonJSMin", "exports", "inspect", "MAX_ARRAY_LENGTH", "MAX_RECURSIVE_DEPTH", "value", "formatValue", "seenValues", "formatObjectValue", "previouslySeenValues", "isJSONable", "jsonValue", "formatArray", "formatObject", "object", "entries", "getObjectTag", "properties", "key", "array", "len", "remaining", "items", "tag", "name", "require_instanceOf", "__commonJSMin", "exports", "_inspect", "instanceOf", "value", "constructor", "_value$constructor", "className", "valueClassName", "stringifiedValue", "require_source", "__commonJSMin", "exports", "isSource", "_devAssert", "_inspect", "_instanceOf", "Source", "body", "name", "locationOffset", "source", "require_parser", "__commonJSMin", "exports", "parse", "parseConstValue", "parseType", "parseValue", "_syntaxError", "_ast", "_directiveLocation", "_kinds", "_lexer", "_source", "_tokenKind", "source", "options", "Parser", "parser", "value", "type", "sourceObj", "token", "hasDescription", "keywordToken", "start", "operation", "name", "operationToken", "nameOrAlias", "alias", "isConst", "item", "hasTypeCondition", "varName", "directives", "innerType", "description", "operationTypes", "interfaces", "fields", "args", "defaultValue", "types", "values", "getTokenDesc", "repeatable", "locations", "startToken", "node", "kind", "getTokenKindDesc", "atToken", "openKind", "parseFn", "closeKind", "nodes", "delimiterKind", "maxTokens", "require_printString", "__commonJSMin", "exports", "printString", "str", "escapedRegExp", "escapedReplacer", "escapeSequences", "require_visitor", "__commonJSMin", "exports", "getEnterLeaveForKind", "getVisitFn", "visit", "visitInParallel", "_devAssert", "_inspect", "_ast", "_kinds", "BREAK", "root", "visitor", "visitorKeys", "enterLeaveMap", "kind", "stack", "inArray", "keys", "index", "edits", "node", "key", "parent", "path", "ancestors", "isLeaving", "isEdited", "editOffset", "editKey", "editValue", "arrayKey", "result", "_enterLeaveMap$get", "_enterLeaveMap$get2", "visitFn", "_node$kind", "visitors", "skipping", "mergedVisitor", "hasVisitor", "enterList", "leaveList", "i", "enter", "leave", "mergedEnterLeave", "args", "_enterList$i", "_leaveList$i", "kindVisitor", "require_printer", "__commonJSMin", "exports", "print", "_blockString", "_printString", "_visitor", "ast", "printDocASTReducer", "MAX_LINE_LENGTH", "node", "join", "varDefs", "wrap", "prefix", "variable", "type", "defaultValue", "directives", "selections", "block", "alias", "name", "args", "selectionSet", "argsLine", "indent", "value", "typeCondition", "variableDefinitions", "isBlockString", "values", "fields", "description", "operationTypes", "operation", "interfaces", "hasMultilineItems", "types", "repeatable", "locations", "maybeArray", "separator", "_maybeArray$filter$jo", "x", "array", "start", "maybeString", "end", "str", "_maybeArray$some", "require_ReactNativeFile", "__commonJSMin", "exports", "module", "_ref", "uri", "name", "type", "require_isExtractableFile", "__commonJSMin", "exports", "module", "ReactNativeFile", "value", "require_extractFiles", "__commonJSMin", "exports", "module", "defaultIsExtractableFile", "extractFiles", "value", "path", "isExtractableFile", "clone", "files", "addFile", "paths", "file", "storedPaths", "prefix", "i", "child", "result", "require_public", "__commonJSMin", "exports", "require_delayed_stream", "__commonJSMin", "exports", "module", "Stream", "util", "DelayedStream", "source", "options", "delayedStream", "option", "realEmit", "args", "r", "message", "require_combined_stream", "__commonJSMin", "exports", "module", "util", "Stream", "DelayedStream", "CombinedStream", "options", "combinedStream", "option", "stream", "isStreamLike", "newStream", "dest", "getStream", "value", "self", "err", "data", "message", "require_mime_db", "__commonJSMin", "exports", "module", "require_mime_types", "__commonJSMin", "exports", "db", "extname", "EXTRACT_TYPE_REGEXP", "TEXT_TYPE_REGEXP", "charset", "contentType", "extension", "lookup", "populateMaps", "type", "match", "mime", "str", "exts", "path", "extensions", "types", "preference", "i", "from", "to", "require_defer", "__commonJSMin", "exports", "module", "defer", "fn", "nextTick", "require_async", "__commonJSMin", "exports", "module", "defer", "async", "callback", "isAsync", "err", "result", "require_abort", "__commonJSMin", "exports", "module", "abort", "state", "clean", "key", "require_iterate", "__commonJSMin", "exports", "module", "async", "abort", "iterate", "list", "iterator", "state", "callback", "key", "runJob", "error", "output", "item", "aborter", "require_state", "__commonJSMin", "exports", "module", "state", "list", "sortMethod", "isNamedList", "initState", "a", "b", "require_terminator", "__commonJSMin", "exports", "module", "abort", "async", "terminator", "callback", "require_parallel", "__commonJSMin", "exports", "module", "iterate", "initState", "terminator", "parallel", "list", "iterator", "callback", "state", "error", "result", "require_serialOrdered", "__commonJSMin", "exports", "module", "iterate", "initState", "terminator", "serialOrdered", "ascending", "descending", "list", "iterator", "sortMethod", "callback", "state", "iteratorHandler", "error", "result", "a", "b", "require_serial", "__commonJSMin", "exports", "module", "serialOrdered", "serial", "list", "iterator", "callback", "require_asynckit", "__commonJSMin", "exports", "module", "require_populate", "__commonJSMin", "exports", "module", "dst", "src", "prop", "require_form_data", "__commonJSMin", "exports", "module", "CombinedStream", "util", "path", "http", "https", "parseUrl", "fs", "mime", "asynckit", "populate", "FormData", "options", "option", "field", "value", "append", "header", "footer", "valueLength", "callback", "err", "stat", "fileSize", "response", "contentDisposition", "contentType", "contents", "headers", "prop", "filename", "next", "lastPart", "userHeaders", "formHeaders", "boundary", "dataBuffer", "i", "len", "knownLength", "hasKnownLength", "cb", "values", "length", "params", "request", "defaults", "onResponse", "error", "responce", "exports", "extract_files_1", "form_data_1", "__importDefault", "defaultJsonSerializer_1", "isExtractableFileEnhanced", "value", "createRequestBody", "query", "variables", "operationName", "jsonSerializer", "_a", "clone", "files", "payload", "accu", "currentQuery", "index", "Form", "form", "map", "i", "paths", "file", "exports", "parseRequestArgs", "documentOrOptions", "variables", "requestHeaders", "exports", "parseRawRequestArgs", "queryOrOptions", "parseBatchRequestArgs", "documentsOrOptions", "parseRequestExtendedArgs", "urlOrOptions", "document", "parseRawRequestExtendedArgs", "query", "parseBatchRequestsExtendedArgs", "documents", "ClientError", "_super", "__extends", "response", "request", "_this", "message", "exports", "types_1", "_1", "CONNECTION_INIT", "CONNECTION_ACK", "PING", "PONG", "SUBSCRIBE", "NEXT", "ERROR", "COMPLETE", "GraphQLWebSocketMessage", "type", "payload", "id", "result", "data", "f", "_a", "GraphQLWebSocketClient", "socket", "_this", "onInit", "onAcknowledged", "onPing", "onPong", "e", "__awaiter", "_b", "_c", "ConnectionInit", "_d", "_e", "message", "parseMessage", "r", "Pong", "query", "variables", "subscriber", "__assign", "operationName", "subscriptionId", "Subscribe", "Complete", "resolve", "reject", "extensions", "document", "Ping", "exports", "a", "m", "cross_fetch_1", "__importStar", "CrossFetch", "parser_1", "printer_1", "createRequestBody_1", "__importDefault", "defaultJsonSerializer_1", "parseArgs_1", "types_1", "exports", "resolveHeaders", "headers", "oHeaders", "HeadersInstanceToPlainObject", "_a", "name", "value", "queryCleanner", "str", "buildGetQueryParams", "query", "variables", "operationName", "jsonSerializer", "search", "payload", "accu", "currentQuery", "index", "post", "url", "fetch", "fetchOptions", "middleware", "body", "options", "__assign", "_b", "get", "queryParams", "GraphQLClient", "queryOrOptions", "requestHeaders", "rawRequestOptions", "_c", "method", "requestMiddleware", "responseMiddleware", "__rest", "resolveRequestDocument", "makeRequest", "callOrIdentity", "response", "error", "documentOrOptions", "variablesAndRequestHeaders", "_i", "requestOptions", "_d", "documentsOrOptions", "batchRequestOptions", "queries", "document", "key", "fetcher", "isBathchingQuery", "getResult", "result", "successfullyReceivedData", "data", "successfullyPassedErrorPolicy", "headers_1", "status_1", "errors", "rest", "errorResult", "rawRequest", "urlOrOptions", "client", "request", "batchRequests", "documents", "contentType", "extractOperationName", "operationDefinitions", "definition", "operationName_1", "parsedDocument", "gql", "chunks", "accumulator", "chunk", "o", "v", "k", "graphql_ws_1", "getUserAgent", "navigator", "userAgent", "process", "version", "substr", "platform", "arch", "require_register", "__commonJSMin", "exports", "module", "register", "state", "name", "method", "options", "callback", "registered", "require_add", "__commonJSMin", "exports", "module", "addHook", "state", "kind", "name", "hook", "orig", "method", "options", "result", "result_", "error", "require_remove", "__commonJSMin", "exports", "module", "removeHook", "state", "name", "method", "index", "registered", "require_before_after_hook", "__commonJSMin", "exports", "module", "register", "addHook", "removeHook", "bind", "bindable", "bindApi", "hook", "state", "name", "removeHookRef", "kind", "args", "HookSingular", "singularHookName", "singularHookState", "singularHook", "HookCollection", "collectionHookDeprecationMessageDisplayed", "Hook", "require_is_plain_object", "__commonJSMin", "exports", "isObject", "o", "isPlainObject", "ctor", "prot", "lowercaseKeys", "object", "Object", "keys", "reduce", "newObj", "key", "toLowerCase", "mergeDeep", "defaults", "options", "result", "assign", "forEach", "isPlainObject", "removeUndefinedProperties", "obj", "undefined", "merge", "route", "method", "url", "split", "headers", "mergedOptions", "mediaType", "previews", "length", "filter", "preview", "includes", "concat", "map", "replace", "addQueryParameters", "parameters", "separator", "test", "names", "name", "q", "encodeURIComponent", "join", "urlVariableRegex", "removeNonChars", "variableName", "extractUrlVariableNames", "matches", "match", "a", "b", "omit", "keysToOmit", "option", "encodeReserved", "str", "part", "encodeURI", "encodeUnreserved", "c", "charCodeAt", "toString", "toUpperCase", "encodeValue", "operator", "value", "isDefined", "isKeyOperator", "getValues", "context", "modifier", "substring", "parseInt", "push", "Array", "isArray", "k", "tmp", "parseUrl", "template", "expand", "bind", "operators", "_", "expression", "literal", "values", "indexOf", "charAt", "substr", "variable", "exec", "parse", "body", "urlVariableNames", "baseUrl", "omittedParameters", "remainingParameters", "accept", "format", "previewsFromAcceptHeader", "data", "request", "endpointWithDefaults", "withDefaults", "oldDefaults", "newDefaults", "DEFAULTS", "endpoint", "VERSION", "userAgent", "getUserAgent", "require_lib", "__commonJSMin", "exports", "module", "_interopDefault", "ex", "Stream", "http", "Url", "whatwgUrl", "https", "zlib", "Readable", "BUFFER", "TYPE", "Blob", "blobParts", "options", "buffers", "size", "a", "length", "i", "element", "buffer", "type", "buf", "ab", "readable", "start", "end", "relativeStart", "relativeEnd", "span", "slicedBuffer", "blob", "FetchError", "message", "systemError", "convert", "INTERNALS", "PassThrough", "Body", "body", "_this", "_ref", "_ref$size", "_ref$timeout", "timeout", "isURLSearchParams", "isBlob", "err", "error", "consumeBody", "ct", "_this2", "_this3", "convertBody", "proto", "name", "desc", "_this4", "accum", "accumBytes", "abort", "resolve", "reject", "resTimeout", "chunk", "headers", "charset", "res", "str", "obj", "clone", "instance", "p1", "p2", "extractContentType", "getTotalBytes", "writeToStream", "dest", "invalidTokenRegex", "invalidHeaderCharRegex", "validateName", "validateValue", "value", "find", "map", "key", "MAP", "Headers", "init", "rawHeaders", "headerNames", "headerName", "method", "pairs", "pair", "callback", "thisArg", "getHeaders", "_pairs$i", "createHeadersIterator", "kind", "k", "INTERNAL", "target", "iterator", "HeadersIteratorPrototype", "_INTERNAL", "index", "values", "len", "exportNodeCompatibleHeaders", "hostHeaderKey", "createHeadersLenient", "val", "INTERNALS$1", "STATUS_CODES", "Response", "opts", "status", "contentType", "INTERNALS$2", "URL", "parse_url", "format_url", "parseURL", "urlStr", "streamDestructionSupported", "isRequest", "input", "isAbortSignal", "signal", "Request", "parsedURL", "inputBody", "getNodeRequestOptions", "request", "contentLengthValue", "totalBytes", "agent", "AbortError", "URL$1", "PassThrough$1", "isDomainOrSubdomain", "destination", "original", "orig", "fetch", "url", "send", "response", "abortAndFinalize", "finalize", "req", "reqTimeout", "socket", "location", "locationURL", "requestOpts", "response_options", "codings", "zlibOptions", "code", "require_dist_node", "__commonJSMin", "exports", "Deprecation", "message", "require_wrappy", "__commonJSMin", "exports", "module", "wrappy", "fn", "cb", "k", "wrapper", "args", "i", "ret", "require_once", "__commonJSMin", "exports", "module", "wrappy", "once", "onceStrict", "fn", "f", "name", "logOnceCode", "once", "deprecation", "console", "warn", "logOnceHeaders", "RequestError", "Error", "constructor", "message", "statusCode", "options", "captureStackTrace", "name", "status", "headers", "response", "requestCopy", "Object", "assign", "request", "authorization", "replace", "url", "defineProperty", "get", "Deprecation", "VERSION", "getBufferResponse", "response", "arrayBuffer", "fetchWrapper", "requestOptions", "log", "request", "console", "isPlainObject", "body", "Array", "isArray", "JSON", "stringify", "headers", "status", "url", "fetch", "globalThis", "nodeFetch", "Object", "assign", "method", "redirect", "then", "keyAndValue", "matches", "link", "match", "deprecationLink", "pop", "warn", "sunset", "RequestError", "statusText", "data", "undefined", "getResponseData", "toErrorMessage", "catch", "error", "name", "message", "contentType", "get", "test", "json", "text", "getBuffer", "errors", "map", "join", "withDefaults", "oldEndpoint", "newDefaults", "endpoint", "defaults", "route", "parameters", "endpointOptions", "merge", "hook", "parse", "bind", "getUserAgent", "VERSION", "_buildMessageForResponseErrors", "data", "errors", "map", "e", "message", "join", "GraphqlResponseError", "Error", "constructor", "request", "headers", "response", "name", "captureStackTrace", "NON_VARIABLE_OPTIONS", "FORBIDDEN_VARIABLE_OPTIONS", "GHES_V3_SUFFIX_REGEX", "graphql", "query", "options", "Promise", "reject", "key", "includes", "parsedOptions", "Object", "assign", "requestOptions", "keys", "reduce", "result", "variables", "baseUrl", "endpoint", "DEFAULTS", "test", "url", "replace", "then", "withDefaults", "newDefaults", "newRequest", "defaults", "bind", "getUserAgent", "method", "withCustomRequest", "customRequest", "REGEX_IS_INSTALLATION_LEGACY", "REGEX_IS_INSTALLATION", "REGEX_IS_USER_TO_SERVER", "auth", "token", "isApp", "split", "length", "isInstallation", "test", "isUserToServer", "type", "tokenType", "withAuthorizationPrefix", "hook", "request", "route", "parameters", "endpoint", "merge", "headers", "authorization", "createTokenAuth", "Error", "replace", "Object", "assign", "bind", "VERSION", "Octokit", "constructor", "options", "hook", "Collection", "requestDefaults", "baseUrl", "request", "endpoint", "DEFAULTS", "headers", "Object", "assign", "bind", "mediaType", "previews", "format", "userAgent", "getUserAgent", "filter", "Boolean", "join", "timeZone", "defaults", "graphql", "withCustomRequest", "log", "debug", "info", "warn", "console", "error", "authStrategy", "otherOptions", "auth", "octokit", "octokitOptions", "wrap", "type", "createTokenAuth", "plugins", "forEach", "plugin", "args", "newPlugins", "_a", "currentPlugins", "concat", "includes", "VERSION", "normalizePaginatedListResponse", "response", "data", "incompleteResults", "incomplete_results", "repositorySelection", "repository_selection", "totalCount", "total_count", "namespaceKey", "Object", "keys", "iterator", "octokit", "route", "parameters", "options", "endpoint", "request", "requestMethod", "method", "headers", "url", "Symbol", "asyncIterator", "next", "done", "normalizedResponse", "link", "match", "value", "error", "status", "paginate", "mapFn", "undefined", "gather", "results", "then", "result", "earlyExit", "concat", "composePaginateRest", "assign", "paginatingEndpoints", "isPaginatingEndpoint", "arg", "includes", "paginateRest", "bind", "Endpoints", "actions", "addCustomLabelsToSelfHostedRunnerForOrg", "addCustomLabelsToSelfHostedRunnerForRepo", "addSelectedRepoToOrgSecret", "approveWorkflowRun", "cancelWorkflowRun", "createOrUpdateEnvironmentSecret", "createOrUpdateOrgSecret", "createOrUpdateRepoSecret", "createRegistrationTokenForOrg", "createRegistrationTokenForRepo", "createRemoveTokenForOrg", "createRemoveTokenForRepo", "createWorkflowDispatch", "deleteActionsCacheById", "deleteActionsCacheByKey", "deleteArtifact", "deleteEnvironmentSecret", "deleteOrgSecret", "deleteRepoSecret", "deleteSelfHostedRunnerFromOrg", "deleteSelfHostedRunnerFromRepo", "deleteWorkflowRun", "deleteWorkflowRunLogs", "disableSelectedRepositoryGithubActionsOrganization", "disableWorkflow", "downloadArtifact", "downloadJobLogsForWorkflowRun", "downloadWorkflowRunAttemptLogs", "downloadWorkflowRunLogs", "enableSelectedRepositoryGithubActionsOrganization", "enableWorkflow", "getActionsCacheList", "getActionsCacheUsage", "getActionsCacheUsageByRepoForOrg", "getActionsCacheUsageForEnterprise", "getActionsCacheUsageForOrg", "getAllowedActionsOrganization", "getAllowedActionsRepository", "getArtifact", "getEnvironmentPublicKey", "getEnvironmentSecret", "getGithubActionsDefaultWorkflowPermissionsEnterprise", "getGithubActionsDefaultWorkflowPermissionsOrganization", "getGithubActionsDefaultWorkflowPermissionsRepository", "getGithubActionsPermissionsOrganization", "getGithubActionsPermissionsRepository", "getJobForWorkflowRun", "getOrgPublicKey", "getOrgSecret", "getPendingDeploymentsForRun", "getRepoPermissions", "renamed", "getRepoPublicKey", "getRepoSecret", "getReviewsForRun", "getSelfHostedRunnerForOrg", "getSelfHostedRunnerForRepo", "getWorkflow", "getWorkflowAccessToRepository", "getWorkflowRun", "getWorkflowRunAttempt", "getWorkflowRunUsage", "getWorkflowUsage", "listArtifactsForRepo", "listEnvironmentSecrets", "listJobsForWorkflowRun", "listJobsForWorkflowRunAttempt", "listLabelsForSelfHostedRunnerForOrg", "listLabelsForSelfHostedRunnerForRepo", "listOrgSecrets", "listRepoSecrets", "listRepoWorkflows", "listRunnerApplicationsForOrg", "listRunnerApplicationsForRepo", "listSelectedReposForOrgSecret", "listSelectedRepositoriesEnabledGithubActionsOrganization", "listSelfHostedRunnersForOrg", "listSelfHostedRunnersForRepo", "listWorkflowRunArtifacts", "listWorkflowRuns", "listWorkflowRunsForRepo", "reRunJobForWorkflowRun", "reRunWorkflow", "reRunWorkflowFailedJobs", "removeAllCustomLabelsFromSelfHostedRunnerForOrg", "removeAllCustomLabelsFromSelfHostedRunnerForRepo", "removeCustomLabelFromSelfHostedRunnerForOrg", "removeCustomLabelFromSelfHostedRunnerForRepo", "removeSelectedRepoFromOrgSecret", "reviewPendingDeploymentsForRun", "setAllowedActionsOrganization", "setAllowedActionsRepository", "setCustomLabelsForSelfHostedRunnerForOrg", "setCustomLabelsForSelfHostedRunnerForRepo", "setGithubActionsDefaultWorkflowPermissionsEnterprise", "setGithubActionsDefaultWorkflowPermissionsOrganization", "setGithubActionsDefaultWorkflowPermissionsRepository", "setGithubActionsPermissionsOrganization", "setGithubActionsPermissionsRepository", "setSelectedReposForOrgSecret", "setSelectedRepositoriesEnabledGithubActionsOrganization", "setWorkflowAccessToRepository", "activity", "checkRepoIsStarredByAuthenticatedUser", "deleteRepoSubscription", "deleteThreadSubscription", "getFeeds", "getRepoSubscription", "getThread", "getThreadSubscriptionForAuthenticatedUser", "listEventsForAuthenticatedUser", "listNotificationsForAuthenticatedUser", "listOrgEventsForAuthenticatedUser", "listPublicEvents", "listPublicEventsForRepoNetwork", "listPublicEventsForUser", "listPublicOrgEvents", "listReceivedEventsForUser", "listReceivedPublicEventsForUser", "listRepoEvents", "listRepoNotificationsForAuthenticatedUser", "listReposStarredByAuthenticatedUser", "listReposStarredByUser", "listReposWatchedByUser", "listStargazersForRepo", "listWatchedReposForAuthenticatedUser", "listWatchersForRepo", "markNotificationsAsRead", "markRepoNotificationsAsRead", "markThreadAsRead", "setRepoSubscription", "setThreadSubscription", "starRepoForAuthenticatedUser", "unstarRepoForAuthenticatedUser", "apps", "addRepoToInstallation", "addRepoToInstallationForAuthenticatedUser", "checkToken", "createFromManifest", "createInstallationAccessToken", "deleteAuthorization", "deleteInstallation", "deleteToken", "getAuthenticated", "getBySlug", "getInstallation", "getOrgInstallation", "getRepoInstallation", "getSubscriptionPlanForAccount", "getSubscriptionPlanForAccountStubbed", "getUserInstallation", "getWebhookConfigForApp", "getWebhookDelivery", "listAccountsForPlan", "listAccountsForPlanStubbed", "listInstallationReposForAuthenticatedUser", "listInstallations", "listInstallationsForAuthenticatedUser", "listPlans", "listPlansStubbed", "listReposAccessibleToInstallation", "listSubscriptionsForAuthenticatedUser", "listSubscriptionsForAuthenticatedUserStubbed", "listWebhookDeliveries", "redeliverWebhookDelivery", "removeRepoFromInstallation", "removeRepoFromInstallationForAuthenticatedUser", "resetToken", "revokeInstallationAccessToken", "scopeToken", "suspendInstallation", "unsuspendInstallation", "updateWebhookConfigForApp", "billing", "getGithubActionsBillingOrg", "getGithubActionsBillingUser", "getGithubAdvancedSecurityBillingGhe", "getGithubAdvancedSecurityBillingOrg", "getGithubPackagesBillingOrg", "getGithubPackagesBillingUser", "getSharedStorageBillingOrg", "getSharedStorageBillingUser", "checks", "create", "createSuite", "get", "getSuite", "listAnnotations", "listForRef", "listForSuite", "listSuitesForRef", "rerequestRun", "rerequestSuite", "setSuitesPreferences", "update", "codeScanning", "deleteAnalysis", "getAlert", "renamedParameters", "alert_id", "getAnalysis", "getCodeqlDatabase", "getSarif", "listAlertInstances", "listAlertsForEnterprise", "listAlertsForOrg", "listAlertsForRepo", "listAlertsInstances", "listCodeqlDatabases", "listRecentAnalyses", "updateAlert", "uploadSarif", "codesOfConduct", "getAllCodesOfConduct", "getConductCode", "codespaces", "addRepositoryForSecretForAuthenticatedUser", "codespaceMachinesForAuthenticatedUser", "createForAuthenticatedUser", "createOrUpdateSecretForAuthenticatedUser", "createWithPrForAuthenticatedUser", "createWithRepoForAuthenticatedUser", "deleteForAuthenticatedUser", "deleteFromOrganization", "deleteSecretForAuthenticatedUser", "exportForAuthenticatedUser", "getExportDetailsForAuthenticatedUser", "getForAuthenticatedUser", "getPublicKeyForAuthenticatedUser", "getSecretForAuthenticatedUser", "listDevcontainersInRepositoryForAuthenticatedUser", "listForAuthenticatedUser", "listInOrganization", "org_id", "listInRepositoryForAuthenticatedUser", "listRepositoriesForSecretForAuthenticatedUser", "listSecretsForAuthenticatedUser", "preFlightWithRepoForAuthenticatedUser", "removeRepositoryForSecretForAuthenticatedUser", "repoMachinesForAuthenticatedUser", "setRepositoriesForSecretForAuthenticatedUser", "startForAuthenticatedUser", "stopForAuthenticatedUser", "stopInOrganization", "updateForAuthenticatedUser", "dependabot", "dependencyGraph", "createRepositorySnapshot", "diffRange", "emojis", "enterpriseAdmin", "addCustomLabelsToSelfHostedRunnerForEnterprise", "disableSelectedOrganizationGithubActionsEnterprise", "enableSelectedOrganizationGithubActionsEnterprise", "getAllowedActionsEnterprise", "getGithubActionsPermissionsEnterprise", "getServerStatistics", "listLabelsForSelfHostedRunnerForEnterprise", "listSelectedOrganizationsEnabledGithubActionsEnterprise", "removeAllCustomLabelsFromSelfHostedRunnerForEnterprise", "removeCustomLabelFromSelfHostedRunnerForEnterprise", "setAllowedActionsEnterprise", "setCustomLabelsForSelfHostedRunnerForEnterprise", "setGithubActionsPermissionsEnterprise", "setSelectedOrganizationsEnabledGithubActionsEnterprise", "gists", "checkIsStarred", "createComment", "delete", "deleteComment", "fork", "getComment", "getRevision", "list", "listComments", "listCommits", "listForUser", "listForks", "listPublic", "listStarred", "star", "unstar", "updateComment", "git", "createBlob", "createCommit", "createRef", "createTag", "createTree", "deleteRef", "getBlob", "getCommit", "getRef", "getTag", "getTree", "listMatchingRefs", "updateRef", "gitignore", "getAllTemplates", "getTemplate", "interactions", "getRestrictionsForAuthenticatedUser", "getRestrictionsForOrg", "getRestrictionsForRepo", "getRestrictionsForYourPublicRepos", "removeRestrictionsForAuthenticatedUser", "removeRestrictionsForOrg", "removeRestrictionsForRepo", "removeRestrictionsForYourPublicRepos", "setRestrictionsForAuthenticatedUser", "setRestrictionsForOrg", "setRestrictionsForRepo", "setRestrictionsForYourPublicRepos", "issues", "addAssignees", "addLabels", "checkUserCanBeAssigned", "createLabel", "createMilestone", "deleteLabel", "deleteMilestone", "getEvent", "getLabel", "getMilestone", "listAssignees", "listCommentsForRepo", "listEvents", "listEventsForRepo", "listEventsForTimeline", "listForOrg", "listForRepo", "listLabelsForMilestone", "listLabelsForRepo", "listLabelsOnIssue", "listMilestones", "lock", "removeAllLabels", "removeAssignees", "removeLabel", "setLabels", "unlock", "updateLabel", "updateMilestone", "licenses", "getAllCommonlyUsed", "getForRepo", "markdown", "render", "renderRaw", "headers", "meta", "getOctocat", "getZen", "root", "migrations", "cancelImport", "deleteArchiveForAuthenticatedUser", "deleteArchiveForOrg", "downloadArchiveForOrg", "getArchiveForAuthenticatedUser", "getCommitAuthors", "getImportStatus", "getLargeFiles", "getStatusForAuthenticatedUser", "getStatusForOrg", "listReposForAuthenticatedUser", "listReposForOrg", "listReposForUser", "mapCommitAuthor", "setLfsPreference", "startForOrg", "startImport", "unlockRepoForAuthenticatedUser", "unlockRepoForOrg", "updateImport", "orgs", "addSecurityManagerTeam", "blockUser", "cancelInvitation", "checkBlockedUser", "checkMembershipForUser", "checkPublicMembershipForUser", "convertMemberToOutsideCollaborator", "createCustomRole", "createInvitation", "createWebhook", "deleteCustomRole", "deleteWebhook", "enableOrDisableSecurityProductOnAllOrgRepos", "getMembershipForAuthenticatedUser", "getMembershipForUser", "getWebhook", "getWebhookConfigForOrg", "listAppInstallations", "listBlockedUsers", "listCustomRoles", "listFailedInvitations", "listFineGrainedPermissions", "listInvitationTeams", "listMembers", "listMembershipsForAuthenticatedUser", "listOutsideCollaborators", "listPendingInvitations", "listPublicMembers", "listSecurityManagerTeams", "listWebhooks", "pingWebhook", "removeMember", "removeMembershipForUser", "removeOutsideCollaborator", "removePublicMembershipForAuthenticatedUser", "removeSecurityManagerTeam", "setMembershipForUser", "setPublicMembershipForAuthenticatedUser", "unblockUser", "updateCustomRole", "updateMembershipForAuthenticatedUser", "updateWebhook", "updateWebhookConfigForOrg", "packages", "deletePackageForAuthenticatedUser", "deletePackageForOrg", "deletePackageForUser", "deletePackageVersionForAuthenticatedUser", "deletePackageVersionForOrg", "deletePackageVersionForUser", "getAllPackageVersionsForAPackageOwnedByAnOrg", "getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser", "getAllPackageVersionsForPackageOwnedByAuthenticatedUser", "getAllPackageVersionsForPackageOwnedByOrg", "getAllPackageVersionsForPackageOwnedByUser", "getPackageForAuthenticatedUser", "getPackageForOrganization", "getPackageForUser", "getPackageVersionForAuthenticatedUser", "getPackageVersionForOrganization", "getPackageVersionForUser", "listPackagesForAuthenticatedUser", "listPackagesForOrganization", "listPackagesForUser", "restorePackageForAuthenticatedUser", "restorePackageForOrg", "restorePackageForUser", "restorePackageVersionForAuthenticatedUser", "restorePackageVersionForOrg", "restorePackageVersionForUser", "projects", "addCollaborator", "createCard", "createColumn", "createForOrg", "createForRepo", "deleteCard", "deleteColumn", "getCard", "getColumn", "getPermissionForUser", "listCards", "listCollaborators", "listColumns", "moveCard", "moveColumn", "removeCollaborator", "updateCard", "updateColumn", "pulls", "checkIfMerged", "createReplyForReviewComment", "createReview", "createReviewComment", "deletePendingReview", "deleteReviewComment", "dismissReview", "getReview", "getReviewComment", "listCommentsForReview", "listFiles", "listRequestedReviewers", "listReviewComments", "listReviewCommentsForRepo", "listReviews", "merge", "removeRequestedReviewers", "requestReviewers", "submitReview", "updateBranch", "updateReview", "updateReviewComment", "rateLimit", "reactions", "createForCommitComment", "createForIssue", "createForIssueComment", "createForPullRequestReviewComment", "createForRelease", "createForTeamDiscussionCommentInOrg", "createForTeamDiscussionInOrg", "deleteForCommitComment", "deleteForIssue", "deleteForIssueComment", "deleteForPullRequestComment", "deleteForRelease", "deleteForTeamDiscussion", "deleteForTeamDiscussionComment", "listForCommitComment", "listForIssue", "listForIssueComment", "listForPullRequestReviewComment", "listForRelease", "listForTeamDiscussionCommentInOrg", "listForTeamDiscussionInOrg", "repos", "acceptInvitation", "acceptInvitationForAuthenticatedUser", "addAppAccessRestrictions", "mapToData", "addStatusCheckContexts", "addTeamAccessRestrictions", "addUserAccessRestrictions", "checkCollaborator", "checkVulnerabilityAlerts", "codeownersErrors", "compareCommits", "compareCommitsWithBasehead", "createAutolink", "createCommitComment", "createCommitSignatureProtection", "createCommitStatus", "createDeployKey", "createDeployment", "createDeploymentBranchPolicy", "createDeploymentStatus", "createDispatchEvent", "createFork", "createInOrg", "createOrUpdateEnvironment", "createOrUpdateFileContents", "createPagesDeployment", "createPagesSite", "createRelease", "createTagProtection", "createUsingTemplate", "declineInvitation", "declineInvitationForAuthenticatedUser", "deleteAccessRestrictions", "deleteAdminBranchProtection", "deleteAnEnvironment", "deleteAutolink", "deleteBranchProtection", "deleteCommitComment", "deleteCommitSignatureProtection", "deleteDeployKey", "deleteDeployment", "deleteDeploymentBranchPolicy", "deleteFile", "deleteInvitation", "deletePagesSite", "deletePullRequestReviewProtection", "deleteRelease", "deleteReleaseAsset", "deleteTagProtection", "disableAutomatedSecurityFixes", "disableLfsForRepo", "disableVulnerabilityAlerts", "downloadArchive", "downloadTarballArchive", "downloadZipballArchive", "enableAutomatedSecurityFixes", "enableLfsForRepo", "enableVulnerabilityAlerts", "generateReleaseNotes", "getAccessRestrictions", "getAdminBranchProtection", "getAllEnvironments", "getAllStatusCheckContexts", "getAllTopics", "getAppsWithAccessToProtectedBranch", "getAutolink", "getBranch", "getBranchProtection", "getClones", "getCodeFrequencyStats", "getCollaboratorPermissionLevel", "getCombinedStatusForRef", "getCommitActivityStats", "getCommitComment", "getCommitSignatureProtection", "getCommunityProfileMetrics", "getContent", "getContributorsStats", "getDeployKey", "getDeployment", "getDeploymentBranchPolicy", "getDeploymentStatus", "getEnvironment", "getLatestPagesBuild", "getLatestRelease", "getPages", "getPagesBuild", "getPagesHealthCheck", "getParticipationStats", "getPullRequestReviewProtection", "getPunchCardStats", "getReadme", "getReadmeInDirectory", "getRelease", "getReleaseAsset", "getReleaseByTag", "getStatusChecksProtection", "getTeamsWithAccessToProtectedBranch", "getTopPaths", "getTopReferrers", "getUsersWithAccessToProtectedBranch", "getViews", "getWebhookConfigForRepo", "listAutolinks", "listBranches", "listBranchesForHeadCommit", "listCommentsForCommit", "listCommitCommentsForRepo", "listCommitStatusesForRef", "listContributors", "listDeployKeys", "listDeploymentBranchPolicies", "listDeploymentStatuses", "listDeployments", "listInvitations", "listInvitationsForAuthenticatedUser", "listLanguages", "listPagesBuilds", "listPullRequestsAssociatedWithCommit", "listReleaseAssets", "listReleases", "listTagProtection", "listTags", "listTeams", "mergeUpstream", "removeAppAccessRestrictions", "removeStatusCheckContexts", "removeStatusCheckProtection", "removeTeamAccessRestrictions", "removeUserAccessRestrictions", "renameBranch", "replaceAllTopics", "requestPagesBuild", "setAdminBranchProtection", "setAppAccessRestrictions", "setStatusCheckContexts", "setTeamAccessRestrictions", "setUserAccessRestrictions", "testPushWebhook", "transfer", "updateBranchProtection", "updateCommitComment", "updateDeploymentBranchPolicy", "updateInformationAboutPagesSite", "updateInvitation", "updatePullRequestReviewProtection", "updateRelease", "updateReleaseAsset", "updateStatusCheckPotection", "updateStatusCheckProtection", "updateWebhookConfigForRepo", "uploadReleaseAsset", "baseUrl", "search", "code", "commits", "issuesAndPullRequests", "labels", "topics", "users", "secretScanning", "listLocationsForAlert", "teams", "addOrUpdateMembershipForUserInOrg", "addOrUpdateProjectPermissionsInOrg", "addOrUpdateRepoPermissionsInOrg", "checkPermissionsForProjectInOrg", "checkPermissionsForRepoInOrg", "createDiscussionCommentInOrg", "createDiscussionInOrg", "deleteDiscussionCommentInOrg", "deleteDiscussionInOrg", "deleteInOrg", "getByName", "getDiscussionCommentInOrg", "getDiscussionInOrg", "getMembershipForUserInOrg", "listChildInOrg", "listDiscussionCommentsInOrg", "listDiscussionsInOrg", "listMembersInOrg", "listPendingInvitationsInOrg", "listProjectsInOrg", "listReposInOrg", "removeMembershipForUserInOrg", "removeProjectInOrg", "removeRepoInOrg", "updateDiscussionCommentInOrg", "updateDiscussionInOrg", "updateInOrg", "addEmailForAuthenticated", "addEmailForAuthenticatedUser", "block", "checkBlocked", "checkFollowingForUser", "checkPersonIsFollowedByAuthenticated", "createGpgKeyForAuthenticated", "createGpgKeyForAuthenticatedUser", "createPublicSshKeyForAuthenticated", "createPublicSshKeyForAuthenticatedUser", "createSshSigningKeyForAuthenticatedUser", "deleteEmailForAuthenticated", "deleteEmailForAuthenticatedUser", "deleteGpgKeyForAuthenticated", "deleteGpgKeyForAuthenticatedUser", "deletePublicSshKeyForAuthenticated", "deletePublicSshKeyForAuthenticatedUser", "deleteSshSigningKeyForAuthenticatedUser", "follow", "getByUsername", "getContextForUser", "getGpgKeyForAuthenticated", "getGpgKeyForAuthenticatedUser", "getPublicSshKeyForAuthenticated", "getPublicSshKeyForAuthenticatedUser", "getSshSigningKeyForAuthenticatedUser", "listBlockedByAuthenticated", "listBlockedByAuthenticatedUser", "listEmailsForAuthenticated", "listEmailsForAuthenticatedUser", "listFollowedByAuthenticated", "listFollowedByAuthenticatedUser", "listFollowersForAuthenticatedUser", "listFollowersForUser", "listFollowingForUser", "listGpgKeysForAuthenticated", "listGpgKeysForAuthenticatedUser", "listGpgKeysForUser", "listPublicEmailsForAuthenticated", "listPublicEmailsForAuthenticatedUser", "listPublicKeysForUser", "listPublicSshKeysForAuthenticated", "listPublicSshKeysForAuthenticatedUser", "listSshSigningKeysForAuthenticatedUser", "listSshSigningKeysForUser", "setPrimaryEmailVisibilityForAuthenticated", "setPrimaryEmailVisibilityForAuthenticatedUser", "unblock", "unfollow", "updateAuthenticated", "VERSION", "endpointsToMethods", "octokit", "endpointsMap", "newMethods", "scope", "endpoints", "Object", "entries", "methodName", "endpoint", "route", "defaults", "decorations", "method", "url", "split", "endpointDefaults", "assign", "scopeMethods", "decorate", "request", "requestWithDefaults", "withDecorations", "args", "options", "data", "undefined", "newScope", "newMethodName", "log", "warn", "deprecated", "name", "alias", "restEndpointMethods", "rest", "ENDPOINTS", "legacyRestEndpointMethods", "api", "require_light", "__commonJSMin", "exports", "module", "global", "factory", "commonjsGlobal", "getCjsExportFromNamespace", "n", "load", "received", "defaults", "onto", "k", "ref", "v", "overwrite", "parser", "DLList", "incr", "decr", "value", "node", "results", "cb", "ref1", "ref2", "DLList_1", "Events", "instance", "name", "status", "base", "args", "e", "promises", "listener", "returned", "error", "x", "Events_1", "DLList$1", "Events$1", "Queues", "num_priorities", "i", "j", "job", "priority", "fn", "list", "arr", "len", "Queues_1", "BottleneckError", "BottleneckError_1", "BottleneckError$1", "DEFAULT_PRIORITY", "Job", "NUM_PRIORITIES", "parser$1", "task", "options", "jobDefaults", "rejectOnDrop", "_states", "Promise", "_resolve", "_reject", "sProperty", "message", "expected", "reachedHWM", "blocked", "chained", "clearGlobalState", "run", "free", "eventInfo", "passed", "error1", "retry", "retryAfter", "Job_1", "BottleneckError$2", "LocalDatastore", "parser$2", "storeOptions", "storeInstanceOptions", "amount", "maximum", "now", "reservoir", "flush", "t", "resolve", "reject", "time", "maxConcurrent", "weight", "capacity", "index", "expiration", "wait", "queueLength", "LocalDatastore_1", "BottleneckError$3", "States", "status1", "id", "current", "next", "initial", "pos", "acc", "States_1", "DLList$2", "Sync", "promise", "Sync_1", "version", "version$1", "version$2", "require$$2", "require$$3", "require$$4", "Events$2", "Group", "IORedisConnection$1", "RedisConnection$1", "Scripts$1", "parser$3", "limiterOptions", "Bottleneck_1", "key", "limiter", "deleted", "cursor", "end", "found", "keys", "start", "Group_1", "Batcher", "Events$3", "parser$4", "res", "rej", "data", "ret", "Batcher_1", "require$$4$1", "require$$8", "Bottleneck", "DEFAULT_PRIORITY$1", "Events$4", "Job$1", "LocalDatastore$1", "NUM_PRIORITIES$1", "Queues$1", "RedisDatastore$1", "States$1", "Sync$1", "parser$5", "splice", "invalid", "_limiter", "running", "queue", "success", "empty", "total", "drained", "newCapacity", "done", "waitForExecuting", "at", "finished", "counts", "shifted", "strategy", "schedule", "wrapped", "lib", "errorRequest", "octokit", "state", "error", "options", "request", "status", "doNotRetry", "includes", "retries", "retryAfter", "Math", "pow", "retryCount", "retry", "retryRequest", "wrapRequest", "limiter", "Bottleneck", "on", "info", "maxRetries", "after", "retryAfterBaseValue", "schedule", "VERSION", "octokitOptions", "Object", "assign", "enabled", "hook", "bind", "wrap", "VERSION", "noop", "Promise", "resolve", "wrapRequest", "state", "request", "options", "retryLimiter", "schedule", "doRequest", "isWrite", "method", "pathname", "URL", "url", "isSearch", "startsWith", "isGraphQL", "jobOptions", "retryCount", "priority", "weight", "clustering", "expiration", "write", "key", "id", "triggersNotification", "notifications", "search", "req", "global", "res", "data", "errors", "some", "error", "type", "Object", "assign", "Error", "response", "triggersNotificationPaths", "routeMatcher", "paths", "regex", "map", "path", "split", "c", "join", "r", "RegExp", "test", "bind", "groups", "createGroups", "Bottleneck", "common", "Group", "maxConcurrent", "minTime", "throttling", "octokit", "octokitOptions", "enabled", "BottleneckLight", "timeout", "connection", "throttle", "minimumSecondaryRateRetryAfter", "retryAfterBaseValue", "isUsingDeprecatedOnAbuseLimitHandler", "onAbuseLimit", "onSecondaryRateLimit", "onRateLimit", "events", "emitter", "Events", "on", "args", "log", "warn", "e", "info", "length", "status", "wantRetry", "retryAfter", "message", "Math", "max", "headers", "trigger", "rateLimitReset", "Date", "getTime", "ceil", "now", "hook", "wrap", "require_btoa_node", "__commonJSMin", "exports", "module", "str", "oauthAuthorizationUrl", "options", "clientType", "baseUrl", "result", "allowSignup", "clientId", "login", "redirectUrl", "state", "Math", "random", "toString", "substr", "url", "scopes", "split", "filter", "Boolean", "urlBuilderAuthorize", "base", "map", "Object", "keys", "k", "Array", "isArray", "length", "key", "forEach", "value", "index", "encodeURIComponent", "VERSION", "requestToOAuthBaseUrl", "request", "endpointDefaults", "endpoint", "DEFAULTS", "test", "baseUrl", "replace", "oauthRequest", "route", "parameters", "withOAuthParameters", "headers", "accept", "response", "data", "error", "RequestError", "error_description", "error_uri", "merge", "getWebFlowAuthorizationUrl", "defaultRequest", "options", "oauthAuthorizationUrl", "exchangeWebFlowCode", "client_id", "clientId", "client_secret", "clientSecret", "code", "redirect_uri", "redirectUrl", "authentication", "clientType", "token", "access_token", "scopes", "scope", "split", "filter", "Boolean", "apiTimeInMs", "Date", "date", "getTime", "refreshToken", "refresh_token", "expiresAt", "toTimestamp", "expires_in", "refreshTokenExpiresAt", "refresh_token_expires_in", "expirationInSeconds", "toISOString", "createDeviceCode", "Array", "isArray", "join", "exchangeDeviceCode", "device_code", "grant_type", "checkToken", "authorization", "btoa", "expires_at", "scopeToken", "optionsRequest", "requestOptions", "Object", "assign", "resetToken", "auth", "deleteToken", "deleteAuthorization", "getOAuthAccessToken", "state", "options", "cachedAuthentication", "getCachedAuthentication", "auth", "data", "verification", "createDeviceCode", "clientType", "clientId", "request", "scopes", "onVerification", "authentication", "waitForAccessToken", "refresh", "newScope", "join", "currentScope", "wait", "seconds", "Promise", "resolve", "setTimeout", "code", "device_code", "exchangeDeviceCode", "type", "tokenType", "error", "response", "errorType", "interval", "authOptions", "hook", "route", "parameters", "endpoint", "merge", "test", "url", "token", "headers", "authorization", "VERSION", "createOAuthDeviceAuth", "requestWithDefaults", "octokitRequest", "defaults", "getUserAgent", "otherOptions", "Error", "Object", "assign", "bind", "VERSION", "getAuthentication", "state", "strategyOptions", "authentication", "exchangeWebFlowCode", "clientId", "clientSecret", "clientType", "request", "type", "tokenType", "createOAuthDeviceAuth", "Error", "auth", "options", "invalid", "currentAuthentication", "Date", "expiresAt", "refreshToken", "hasOwnProperty", "method", "checkToken", "resetToken", "token", "error", "status", "message", "deleteToken", "deleteAuthorization", "ROUTES_REQUIRING_BASIC_AUTH", "requiresBasicAuth", "url", "test", "hook", "route", "parameters", "endpoint", "merge", "credentials", "btoa", "headers", "authorization", "createOAuthUserAuth", "octokitRequest", "defaults", "getUserAgent", "Object", "assign", "bind", "auth", "state", "authOptions", "type", "clientId", "clientSecret", "clientType", "headers", "authorization", "btoa", "options", "factory", "common", "request", "createOAuthUserAuth", "hook", "route", "parameters", "endpoint", "merge", "test", "url", "requiresBasicAuth", "Error", "method", "credentials", "error", "status", "message", "VERSION", "createOAuthAppAuth", "Object", "assign", "defaults", "getUserAgent", "bind", "require_safe_buffer", "__commonJSMin", "exports", "module", "buffer", "Buffer", "copyProps", "src", "dst", "key", "SafeBuffer", "arg", "encodingOrOffset", "length", "size", "fill", "encoding", "buf", "require_data_stream", "__commonJSMin", "exports", "module", "Buffer", "Stream", "util", "DataStream", "data", "require_buffer_equal_constant_time", "__commonJSMin", "exports", "module", "Buffer", "SlowBuffer", "bufferEq", "a", "b", "c", "i", "that", "origBufEqual", "origSlowBufEqual", "require_param_bytes_for_alg", "__commonJSMin", "exports", "module", "getParamSize", "keySize", "result", "paramBytesForAlg", "getParamBytesForAlg", "alg", "paramBytes", "require_ecdsa_sig_formatter", "__commonJSMin", "exports", "module", "Buffer", "getParamBytesForAlg", "MAX_OCTET", "CLASS_UNIVERSAL", "PRIMITIVE_BIT", "TAG_SEQ", "TAG_INT", "ENCODED_TAG_SEQ", "ENCODED_TAG_INT", "base64Url", "base64", "signatureAsBuffer", "signature", "derToJose", "alg", "paramBytes", "maxEncodedParamLength", "inputLength", "offset", "seqLength", "rLength", "rOffset", "sLength", "sOffset", "rPadding", "sPadding", "dst", "o", "countPadding", "buf", "start", "stop", "padding", "needsSign", "joseToDer", "signatureBytes", "rsBytes", "shortLength", "require_jwa", "__commonJSMin", "exports", "module", "bufferEqual", "Buffer", "crypto", "formatEcdsa", "util", "MSG_INVALID_ALGORITHM", "MSG_INVALID_SECRET", "MSG_INVALID_VERIFIER_KEY", "MSG_INVALID_SIGNER_KEY", "supportsKeyObjects", "checkIsPublicKey", "key", "typeError", "checkIsPrivateKey", "checkIsSecretKey", "fromBase64", "base64", "toBase64", "base64url", "padding", "i", "template", "args", "errMsg", "bufferOrString", "obj", "normalizeInput", "thing", "createHmacSigner", "bits", "secret", "hmac", "sig", "createHmacVerifier", "signature", "computedSig", "createKeySigner", "privateKey", "signer", "createKeyVerifier", "publicKey", "verifier", "createPSSKeySigner", "createPSSKeyVerifier", "createECDSASigner", "inner", "createECDSAVerifer", "result", "createNoneSigner", "createNoneVerifier", "algorithm", "signerFactories", "verifierFactories", "match", "algo", "require_tostring", "__commonJSMin", "exports", "module", "Buffer", "obj", "require_sign_stream", "__commonJSMin", "exports", "module", "Buffer", "DataStream", "jwa", "Stream", "toString", "util", "base64url", "string", "encoding", "jwsSecuredInput", "header", "payload", "encodedHeader", "encodedPayload", "jwsSign", "opts", "secretOrKey", "algo", "securedInput", "signature", "SignStream", "secret", "secretStream", "e", "require_verify_stream", "__commonJSMin", "exports", "module", "Buffer", "DataStream", "jwa", "Stream", "toString", "util", "JWS_REGEX", "isObject", "thing", "safeJsonParse", "headerFromJWS", "jwsSig", "encodedHeader", "securedInputFromJWS", "signatureFromJWS", "payloadFromJWS", "encoding", "payload", "isValidJws", "string", "jwsVerify", "algorithm", "secretOrKey", "err", "signature", "securedInput", "algo", "jwsDecode", "opts", "header", "VerifyStream", "secretStream", "valid", "obj", "e", "require_jws", "__commonJSMin", "exports", "SignStream", "VerifyStream", "ALGORITHMS", "opts", "require_decode", "__commonJSMin", "exports", "module", "jws", "jwt", "options", "decoded", "payload", "obj", "require_JsonWebTokenError", "__commonJSMin", "exports", "module", "JsonWebTokenError", "message", "error", "require_NotBeforeError", "__commonJSMin", "exports", "module", "JsonWebTokenError", "NotBeforeError", "message", "date", "require_TokenExpiredError", "__commonJSMin", "exports", "module", "JsonWebTokenError", "TokenExpiredError", "message", "expiredAt", "require_ms", "__commonJSMin", "exports", "module", "s", "m", "h", "d", "w", "y", "val", "options", "type", "parse", "fmtLong", "fmtShort", "str", "match", "n", "ms", "msAbs", "plural", "name", "isPlural", "require_timespan", "__commonJSMin", "exports", "module", "ms", "time", "iat", "timestamp", "milliseconds", "require_semver", "__commonJSMin", "exports", "module", "SemVer", "debug", "args", "MAX_LENGTH", "MAX_SAFE_INTEGER", "MAX_SAFE_COMPONENT_LENGTH", "re", "src", "R", "NUMERICIDENTIFIER", "NUMERICIDENTIFIERLOOSE", "NONNUMERICIDENTIFIER", "MAINVERSION", "MAINVERSIONLOOSE", "PRERELEASEIDENTIFIER", "PRERELEASEIDENTIFIERLOOSE", "PRERELEASE", "PRERELEASELOOSE", "BUILDIDENTIFIER", "BUILD", "FULL", "FULLPLAIN", "LOOSEPLAIN", "LOOSE", "GTLT", "XRANGEIDENTIFIERLOOSE", "XRANGEIDENTIFIER", "XRANGEPLAIN", "XRANGEPLAINLOOSE", "XRANGE", "XRANGELOOSE", "COERCE", "LONETILDE", "TILDETRIM", "tildeTrimReplace", "TILDE", "TILDELOOSE", "LONECARET", "CARETTRIM", "caretTrimReplace", "CARET", "CARETLOOSE", "COMPARATORLOOSE", "COMPARATOR", "COMPARATORTRIM", "comparatorTrimReplace", "HYPHENRANGE", "HYPHENRANGELOOSE", "STAR", "i", "parse", "version", "options", "r", "valid", "v", "clean", "s", "m", "id", "num", "other", "compareIdentifiers", "b", "release", "identifier", "inc", "loose", "diff", "version1", "version2", "eq", "v1", "v2", "prefix", "defaultResult", "key", "numeric", "a", "anum", "bnum", "rcompareIdentifiers", "major", "minor", "patch", "compare", "compareLoose", "rcompare", "sort", "list", "rsort", "gt", "lt", "neq", "gte", "lte", "cmp", "op", "Comparator", "comp", "ANY", "rangeTmp", "Range", "satisfies", "sameDirectionIncreasing", "sameDirectionDecreasing", "sameSemVer", "differentDirectionsInclusive", "oppositeDirectionsLessThan", "oppositeDirectionsGreaterThan", "range", "c", "comps", "hr", "hyphenReplace", "compRe", "set", "parseComparator", "thisComparators", "thisComparator", "rangeComparators", "rangeComparator", "toComparators", "replaceCarets", "replaceTildes", "replaceXRanges", "replaceStars", "isX", "replaceTilde", "_", "M", "p", "pr", "ret", "replaceCaret", "replaceXRange", "gtlt", "xM", "xm", "xp", "anyX", "$0", "from", "fM", "fm", "fp", "fpr", "fb", "to", "tM", "tm", "tp", "tpr", "tb", "testSet", "allowed", "maxSatisfying", "versions", "max", "maxSV", "rangeObj", "minSatisfying", "min", "minSV", "minVersion", "minver", "comparators", "comparator", "compver", "validRange", "ltr", "outside", "gtr", "hilo", "gtfn", "ltefn", "ltfn", "ecomp", "high", "low", "prerelease", "parsed", "intersects", "r1", "r2", "coerce", "match", "require_psSupported", "__commonJSMin", "exports", "module", "semver", "require_verify", "__commonJSMin", "exports", "module", "JsonWebTokenError", "NotBeforeError", "TokenExpiredError", "decode", "timespan", "PS_SUPPORTED", "jws", "PUB_KEY_ALGS", "RSA_KEY_ALGS", "HS_ALGS", "jwtString", "secretOrPublicKey", "options", "callback", "done", "err", "data", "clockTimestamp", "parts", "decodedToken", "header", "getSecret", "secretCallback", "hasSignature", "valid", "e", "payload", "audiences", "target", "match", "targetAudience", "audience", "invalid_issuer", "maxAgeTimestamp", "signature", "require_lodash", "__commonJSMin", "exports", "module", "INFINITY", "MAX_SAFE_INTEGER", "MAX_INTEGER", "NAN", "argsTag", "funcTag", "genTag", "stringTag", "symbolTag", "reTrim", "reIsBadHex", "reIsBinary", "reIsOctal", "reIsUint", "freeParseInt", "arrayMap", "array", "iteratee", "index", "length", "result", "baseFindIndex", "predicate", "fromIndex", "fromRight", "baseIndexOf", "value", "baseIsNaN", "baseTimes", "n", "baseValues", "object", "props", "key", "overArg", "func", "transform", "arg", "objectProto", "hasOwnProperty", "objectToString", "propertyIsEnumerable", "nativeKeys", "nativeMax", "arrayLikeKeys", "inherited", "isArray", "isArguments", "skipIndexes", "isIndex", "baseKeys", "isPrototype", "Ctor", "proto", "includes", "collection", "guard", "isArrayLike", "values", "toInteger", "isString", "isArrayLikeObject", "isLength", "isFunction", "isObjectLike", "tag", "isObject", "type", "isSymbol", "toFinite", "toNumber", "sign", "remainder", "other", "isBinary", "keys", "require_lodash", "__commonJSMin", "exports", "module", "boolTag", "objectProto", "objectToString", "isBoolean", "value", "isObjectLike", "require_lodash", "__commonJSMin", "exports", "module", "INFINITY", "MAX_INTEGER", "NAN", "symbolTag", "reTrim", "reIsBadHex", "reIsBinary", "reIsOctal", "freeParseInt", "objectProto", "objectToString", "isInteger", "value", "toInteger", "isObject", "type", "isObjectLike", "isSymbol", "toFinite", "toNumber", "sign", "result", "remainder", "other", "isBinary", "require_lodash", "__commonJSMin", "exports", "module", "numberTag", "objectProto", "objectToString", "isObjectLike", "value", "isNumber", "require_lodash", "__commonJSMin", "exports", "module", "objectTag", "isHostObject", "value", "result", "overArg", "func", "transform", "arg", "funcProto", "objectProto", "funcToString", "hasOwnProperty", "objectCtorString", "objectToString", "getPrototype", "isObjectLike", "isPlainObject", "proto", "Ctor", "require_lodash", "__commonJSMin", "exports", "module", "stringTag", "objectProto", "objectToString", "isArray", "isObjectLike", "value", "isString", "require_lodash", "__commonJSMin", "exports", "module", "FUNC_ERROR_TEXT", "INFINITY", "MAX_INTEGER", "NAN", "symbolTag", "reTrim", "reIsBadHex", "reIsBinary", "reIsOctal", "freeParseInt", "objectProto", "objectToString", "before", "n", "func", "result", "toInteger", "once", "isObject", "value", "type", "isObjectLike", "isSymbol", "toFinite", "toNumber", "sign", "remainder", "other", "isBinary", "require_sign", "__commonJSMin", "exports", "module", "timespan", "PS_SUPPORTED", "jws", "includes", "isBoolean", "isInteger", "isNumber", "isPlainObject", "isString", "once", "SUPPORTED_ALGS", "sign_options_schema", "value", "registered_claims_schema", "validate", "schema", "allowUnknown", "object", "parameterName", "key", "validator", "validateOptions", "options", "validatePayload", "payload", "options_to_payload", "options_for_objects", "secretOrPrivateKey", "callback", "isObjectPayload", "header", "failure", "err", "error", "invalid_options", "opt", "timestamp", "claim", "encoding", "signature", "require_jsonwebtoken", "__commonJSMin", "exports", "module", "getToken", "privateKey", "payload", "jsonwebtoken", "sign", "algorithm", "githubAppJwt", "id", "now", "Math", "floor", "Date", "nowWithSafetyMargin", "expiration", "token", "iat", "exp", "iss", "appId", "require_iterator", "__commonJSMin", "exports", "module", "Yallist", "walker", "require_yallist", "__commonJSMin", "exports", "module", "Yallist", "Node", "list", "self", "item", "i", "l", "node", "next", "prev", "head", "tail", "push", "unshift", "res", "fn", "thisp", "walker", "n", "initial", "acc", "arr", "from", "to", "ret", "start", "deleteCount", "nodes", "insert", "p", "value", "inserted", "require_lru_cache", "__commonJSMin", "exports", "module", "Yallist", "MAX", "LENGTH", "LENGTH_CALCULATOR", "ALLOW_STALE", "MAX_AGE", "DISPOSE", "NO_DISPOSE_ON_SET", "LRU_LIST", "CACHE", "UPDATE_AGE_ON_GET", "naiveLength", "LRUCache", "options", "max", "lc", "mL", "trim", "allowStale", "mA", "lC", "hit", "fn", "thisp", "walker", "prev", "forEachStep", "next", "k", "isStale", "h", "key", "value", "maxAge", "now", "len", "del", "item", "Entry", "get", "node", "arr", "l", "expiresAt", "self", "doUse", "diff", "length", "getAppAuthentication", "appId", "privateKey", "timeDifference", "appAuthentication", "githubAppJwt", "id", "now", "Math", "floor", "Date", "type", "token", "expiresAt", "expiration", "toISOString", "error", "Error", "getCache", "LRU", "max", "maxAge", "get", "cache", "options", "cacheKey", "optionsToCacheKey", "result", "createdAt", "repositorySelection", "permissionsString", "singleFileName", "split", "permissions", "reduce", "string", "test", "slice", "repositoryIds", "repositoryNames", "set", "data", "key", "Object", "keys", "map", "name", "join", "value", "installationId", "sort", "repositoryIdsString", "repositoryNamesString", "filter", "Boolean", "toTokenAuthentication", "assign", "tokenType", "getInstallationAuthentication", "state", "customRequest", "Number", "factory", "oauthApp", "factoryAuthOptions", "optionsWithInstallationTokenFromState", "refresh", "request", "expires_at", "repositories", "permissionsOptional", "repository_selection", "repositorySelectionOptional", "single_file", "installation_id", "repository_ids", "mediaType", "previews", "headers", "authorization", "r", "repo", "auth", "authOptions", "log", "warn", "Deprecation", "PATHS", "routeMatcher", "paths", "regex", "p", "c", "startsWith", "RegExp", "REGEX", "requiresAppAuth", "url", "FIVE_SECONDS_IN_MS", "isNotTimeSkewError", "message", "match", "hook", "route", "parameters", "endpoint", "merge", "replace", "DEFAULTS", "baseUrl", "response", "date", "diff", "parse", "toString", "requiresBasicAuth", "authentication", "sendRequestWithRetries", "retries", "timeSinceTokenCreationInMs", "status", "awaitTime", "Promise", "resolve", "setTimeout", "VERSION", "createAppAuth", "isFinite", "console", "bind", "defaultRequest", "defaults", "getUserAgent", "createOAuthAppAuth", "clientType", "clientId", "clientSecret", "auth", "reason", "type", "isRateLimitError", "error", "status", "response", "headers", "REGEX_ABUSE_LIMIT_MESSAGE", "isAbuseLimitError", "test", "message", "hook", "request", "route", "parameters", "endpoint", "merge", "catch", "method", "url", "replace", "createUnauthenticatedAuth", "options", "Error", "Object", "assign", "bind", "require_fromentries", "__commonJSMin", "exports", "module", "iterable", "obj", "key", "val", "VERSION", "addEventHandler", "state", "eventName", "eventHandler", "Array", "isArray", "singleEventName", "eventHandlers", "push", "OAuthAppOctokit", "Octokit", "defaults", "userAgent", "getUserAgent", "emitEvent", "context", "name", "action", "getUserOctokitWithState", "options", "octokit", "auth", "type", "factory", "authStrategy", "createOAuthUserAuth", "authentication", "token", "scopes", "getWebFlowAuthorizationUrlWithState", "optionsWithDefaults", "clientId", "request", "allowSignup", "defaultScopes", "OAuthMethods", "clientType", "createTokenWithState", "OAuthAppAuth", "clientSecret", "refreshToken", "expiresAt", "refreshTokenExpiresAt", "checkTokenWithState", "result", "Object", "assign", "tokenType", "resetTokenWithState", "response", "undefined", "refreshTokenWithState", "Error", "scopeTokenWithState", "deleteTokenWithState", "createUnauthenticatedAuth", "reason", "deleteAuthorizationWithState", "handleRequest", "app", "pathPrefix", "method", "status", "headers", "pathname", "URL", "url", "route", "join", "routes", "getLogin", "getCallback", "createToken", "getToken", "patchToken", "patchRefreshToken", "scopeToken", "deleteToken", "deleteGrant", "values", "includes", "json", "text", "JSON", "parse", "stringify", "error", "searchParams", "query", "fromEntries", "_headers$authorizatio6", "getWebFlowAuthorizationUrl", "split", "redirectUrl", "location", "error_description", "code", "_headers$authorizatio", "authorization", "substr", "checkToken", "_headers$authorizatio2", "resetToken", "_headers$authorizatio3", "_headers$authorizatio4", "_headers$authorizatio5", "deleteAuthorization", "message", "parseRequest", "Promise", "resolve", "reject", "bodyChunks", "on", "chunk", "Buffer", "concat", "toString", "sendResponse", "octokitResponse", "writeHead", "end", "onUnhandledRequestDefault", "onUnhandledRequestDefaultNode", "octokitRequest", "createNodeMiddleware", "onUnhandledRequest", "log", "warn", "next", "entries", "Response", "onUnhandledRequestDefaultWebWorker", "createWebWorkerHandler", "createCloudflareHandler", "args", "requestContext", "http", "rawPath", "stage", "startsWith", "substring", "length", "rawQueryString", "body", "statusCode", "onUnhandledRequestDefaultAWSAPIGatewayV2", "event", "createAWSLambdaAPIGatewayV2Handler", "OAuthApp", "constructor", "createOAuthAppAuth", "baseUrl", "bind", "getUserOctokit", "require_indent_string", "__commonJSMin", "exports", "module", "string", "count", "options", "regex", "require_clean_stack", "__commonJSMin", "exports", "module", "os", "extractPathRegex", "pathRegex", "homeDir", "stack", "options", "line", "pathMatches", "match", "m", "p1", "require_aggregate_error", "__commonJSMin", "exports", "module", "indentString", "cleanStack", "cleanInternalStack", "stack", "AggregateError", "errors", "error", "message", "Algorithm", "VERSION", "sign", "options", "payload", "secret", "algorithm", "SHA256", "TypeError", "Object", "values", "includes", "createHmac", "update", "digest", "getAlgorithm", "signature", "startsWith", "verify", "eventPayload", "signatureBuffer", "Buffer", "from", "verificationBuffer", "length", "timingSafeEqual", "createLogger", "logger", "debug", "info", "warn", "console", "bind", "error", "emitterEventNames", "handleEventHandlers", "state", "webhookName", "handler", "hooks", "push", "receiverOn", "webhookNameOrNames", "Array", "isArray", "forEach", "includes", "message", "charAt", "toUpperCase", "slice", "Error", "log", "receiverOnAny", "receiverOnError", "wrapErrorHandler", "returnValue", "catch", "getHooks", "eventPayloadAction", "eventName", "unshift", "concat", "filter", "Boolean", "receiverHandle", "event", "errorHandlers", "Object", "assign", "AggregateError", "errors", "Promise", "reject", "name", "payload", "action", "length", "resolve", "promises", "map", "promise", "transform", "then", "all", "removeListener", "i", "splice", "createEventHandler", "options", "on", "onAny", "onError", "receive", "toNormalizedJsonString", "JSON", "stringify", "replace", "s", "substr", "sign", "secret", "signMethod", "verify", "signature", "verifyMethod", "verifyAndReceive", "eventHandler", "status", "id", "parse", "WEBHOOK_HEADERS", "getMissingHeaders", "request", "header", "headers", "getPayload", "body", "data", "setEncoding", "chunk", "middleware", "webhooks", "response", "next", "pathname", "URL", "url", "writeHead", "end", "isUnknownRoute", "method", "path", "isExpressMiddleware", "onUnhandledRequest", "missingHeaders", "join", "signatureSHA256", "didTimeout", "timeout", "setTimeout", "statusCode", "unref", "clearTimeout", "err", "from", "errorMessage", "onUnhandledRequestDefault", "createNodeMiddleware", "Webhooks", "constructor", "VERSION", "webhooks", "appOctokit", "options", "Webhooks", "secret", "transform", "event", "payload", "installation", "octokit", "constructor", "authStrategy", "createUnauthenticatedAuth", "auth", "reason", "installationId", "id", "type", "factory", "octokitOptions", "createAppAuth", "getInstallationOctokit", "app", "eachInstallationFactory", "Object", "assign", "eachInstallation", "bind", "iterator", "eachInstallationIterator", "callback", "i", "Symbol", "asyncIterator", "result", "next", "done", "value", "composePaginateRest", "data", "installations", "eachRepositoryFactory", "eachRepository", "eachRepositoryIterator", "queryOrCallback", "undefined", "singleInstallationIterator", "query", "repositoriesIterator", "repositories", "repository", "onUnhandledRequestDefault", "request", "response", "writeHead", "end", "JSON", "stringify", "error", "method", "url", "noop", "createNodeMiddleware", "log", "debug", "info", "warn", "console", "optionsWithDefaults", "onUnhandledRequest", "pathPrefix", "webhooksMiddleware", "webhooksNodeMiddleware", "path", "oauthMiddleware", "oauthNodeMiddleware", "oauth", "middleware", "pathname", "URL", "startsWith", "App", "Octokit", "OctokitCore", "authOptions", "appId", "privateKey", "clientId", "clientSecret", "defineProperty", "get", "Error", "OAuthApp", "clientType", "defaults", "args", "VERSION", "Octokit", "OctokitCore", "plugin", "restEndpointMethods", "paginateRest", "retry", "throttling", "defaults", "userAgent", "throttle", "onRateLimit", "onSecondaryRateLimit", "retryAfter", "options", "octokit", "log", "warn", "method", "url", "request", "retryCount", "info", "App", "DefaultApp", "OAuthApp", "DefaultOAuthApp", "SymbolPolyfill", "description", "noop", "getGlobals", "globals", "typeIsObject", "x", "rethrowAssertionErrorRejection", "originalPromise", "originalPromiseThen", "originalPromiseResolve", "originalPromiseReject", "newPromise", "executor", "promiseResolvedWith", "value", "promiseRejectedWith", "reason", "PerformPromiseThen", "promise", "onFulfilled", "onRejected", "uponPromise", "uponFulfillment", "uponRejection", "transformPromiseWith", "fulfillmentHandler", "rejectionHandler", "setPromiseIsHandledToTrue", "queueMicrotask", "globalQueueMicrotask", "resolvedPromise", "fn", "reflectCall", "F", "V", "args", "promiseCall", "QUEUE_MAX_ARRAY_SIZE", "SimpleQueue", "element", "oldBack", "newBack", "oldFront", "newFront", "oldCursor", "newCursor", "elements", "callback", "i", "node", "front", "cursor", "ReadableStreamReaderGenericInitialize", "reader", "stream", "defaultReaderClosedPromiseInitialize", "defaultReaderClosedPromiseInitializeAsResolved", "defaultReaderClosedPromiseInitializeAsRejected", "ReadableStreamReaderGenericCancel", "ReadableStreamCancel", "ReadableStreamReaderGenericRelease", "defaultReaderClosedPromiseReject", "defaultReaderClosedPromiseResetToRejected", "readerLockException", "name", "resolve", "reject", "defaultReaderClosedPromiseResolve", "AbortSteps", "Symbol", "ErrorSteps", "CancelSteps", "PullSteps", "NumberIsFinite", "MathTrunc", "v", "isDictionary", "assertDictionary", "obj", "context", "assertFunction", "isObject", "assertObject", "assertRequiredArgument", "position", "assertRequiredField", "field", "convertUnrestrictedDouble", "censorNegativeZero", "integerPart", "convertUnsignedLongLongWithEnforceRange", "upperBound", "assertReadableStream", "IsReadableStream", "AcquireReadableStreamDefaultReader", "ReadableStreamDefaultReader", "ReadableStreamAddReadRequest", "readRequest", "ReadableStreamFulfillReadRequest", "chunk", "done", "ReadableStreamGetNumReadRequests", "ReadableStreamHasDefaultReader", "IsReadableStreamDefaultReader", "IsReadableStreamLocked", "defaultReaderBrandCheckException", "resolvePromise", "rejectPromise", "ReadableStreamDefaultReaderRead", "e", "AsyncIteratorPrototype", "ReadableStreamAsyncIteratorImpl", "preventCancel", "nextSteps", "returnSteps", "result", "ReadableStreamAsyncIteratorPrototype", "IsReadableStreamAsyncIterator", "streamAsyncIteratorBrandCheckException", "AcquireReadableStreamAsyncIterator", "impl", "iterator", "NumberIsNaN", "CreateArrayFromList", "CopyDataBlockBytes", "dest", "destOffset", "src", "srcOffset", "n", "TransferArrayBuffer", "O", "IsDetachedBuffer", "ArrayBufferSlice", "buffer", "begin", "end", "length", "slice", "IsNonNegativeNumber", "CloneAsUint8Array", "DequeueValue", "container", "pair", "EnqueueValueWithSize", "size", "PeekQueueValue", "ResetQueue", "ReadableStreamBYOBRequest", "IsReadableStreamBYOBRequest", "byobRequestBrandCheckException", "bytesWritten", "ReadableByteStreamControllerRespond", "view", "ReadableByteStreamControllerRespondWithNewView", "ReadableByteStreamController", "IsReadableByteStreamController", "byteStreamControllerBrandCheckException", "ReadableByteStreamControllerGetBYOBRequest", "ReadableByteStreamControllerGetDesiredSize", "state", "ReadableByteStreamControllerClose", "ReadableByteStreamControllerEnqueue", "ReadableByteStreamControllerError", "ReadableByteStreamControllerClearPendingPullIntos", "ReadableByteStreamControllerClearAlgorithms", "entry", "ReadableByteStreamControllerHandleQueueDrain", "autoAllocateChunkSize", "bufferE", "pullIntoDescriptor", "ReadableByteStreamControllerCallPullIfNeeded", "controller", "ReadableByteStreamControllerShouldCallPull", "pullPromise", "ReadableByteStreamControllerInvalidateBYOBRequest", "ReadableByteStreamControllerCommitPullIntoDescriptor", "filledView", "ReadableByteStreamControllerConvertPullIntoDescriptor", "ReadableStreamFulfillReadIntoRequest", "bytesFilled", "elementSize", "ReadableByteStreamControllerEnqueueChunkToQueue", "byteOffset", "byteLength", "ReadableByteStreamControllerFillPullIntoDescriptorFromQueue", "currentAlignedBytes", "maxBytesToCopy", "maxBytesFilled", "maxAlignedBytes", "totalBytesToCopyRemaining", "ready", "queue", "headOfQueue", "bytesToCopy", "destStart", "ReadableByteStreamControllerFillHeadPullIntoDescriptor", "ReadableStreamClose", "ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue", "ReadableByteStreamControllerShiftPendingPullInto", "ReadableByteStreamControllerPullInto", "readIntoRequest", "ctor", "ReadableStreamAddReadIntoRequest", "emptyView", "ReadableByteStreamControllerRespondInClosedState", "firstDescriptor", "ReadableStreamHasBYOBReader", "ReadableStreamGetNumReadIntoRequests", "ReadableByteStreamControllerRespondInReadableState", "remainderSize", "remainder", "ReadableByteStreamControllerRespondInternal", "transferredBuffer", "firstPendingPullInto", "transferredView", "ReadableStreamError", "byobRequest", "SetUpReadableStreamBYOBRequest", "viewByteLength", "SetUpReadableByteStreamController", "startAlgorithm", "pullAlgorithm", "cancelAlgorithm", "highWaterMark", "startResult", "r", "SetUpReadableByteStreamControllerFromUnderlyingSource", "underlyingByteSource", "request", "AcquireReadableStreamBYOBReader", "ReadableStreamBYOBReader", "IsReadableStreamBYOBReader", "byobReaderBrandCheckException", "ReadableStreamBYOBReaderRead", "ExtractHighWaterMark", "strategy", "defaultHWM", "ExtractSizeAlgorithm", "convertQueuingStrategy", "init", "convertQueuingStrategySize", "convertUnderlyingSink", "original", "abort", "close", "start", "type", "write", "convertUnderlyingSinkAbortCallback", "convertUnderlyingSinkCloseCallback", "convertUnderlyingSinkStartCallback", "convertUnderlyingSinkWriteCallback", "assertWritableStream", "IsWritableStream", "isAbortSignal", "supportsAbortController", "createAbortController", "WritableStream", "rawUnderlyingSink", "rawStrategy", "underlyingSink", "InitializeWritableStream", "sizeAlgorithm", "SetUpWritableStreamDefaultControllerFromUnderlyingSink", "streamBrandCheckException", "IsWritableStreamLocked", "WritableStreamAbort", "WritableStreamCloseQueuedOrInFlight", "WritableStreamClose", "AcquireWritableStreamDefaultWriter", "WritableStreamDefaultWriter", "CreateWritableStream", "writeAlgorithm", "closeAlgorithm", "abortAlgorithm", "WritableStreamDefaultController", "SetUpWritableStreamDefaultController", "_a", "wasAlreadyErroring", "WritableStreamStartErroring", "closeRequest", "writer", "defaultWriterReadyPromiseResolve", "WritableStreamDefaultControllerClose", "WritableStreamAddWriteRequest", "writeRequest", "WritableStreamDealWithRejection", "error", "WritableStreamFinishErroring", "WritableStreamDefaultWriterEnsureReadyPromiseRejected", "WritableStreamHasOperationMarkedInFlight", "storedError", "WritableStreamRejectCloseAndClosedPromiseIfNeeded", "abortRequest", "WritableStreamFinishInFlightWrite", "WritableStreamFinishInFlightWriteWithError", "WritableStreamFinishInFlightClose", "defaultWriterClosedPromiseResolve", "WritableStreamFinishInFlightCloseWithError", "WritableStreamMarkCloseRequestInFlight", "WritableStreamMarkFirstWriteRequestInFlight", "defaultWriterClosedPromiseReject", "WritableStreamUpdateBackpressure", "backpressure", "defaultWriterReadyPromiseReset", "defaultWriterReadyPromiseInitialize", "defaultWriterReadyPromiseInitializeAsResolved", "defaultWriterClosedPromiseInitialize", "defaultWriterReadyPromiseInitializeAsRejected", "defaultWriterClosedPromiseInitializeAsResolved", "defaultWriterClosedPromiseInitializeAsRejected", "IsWritableStreamDefaultWriter", "defaultWriterBrandCheckException", "defaultWriterLockException", "WritableStreamDefaultWriterGetDesiredSize", "WritableStreamDefaultWriterAbort", "WritableStreamDefaultWriterClose", "WritableStreamDefaultWriterRelease", "WritableStreamDefaultWriterWrite", "WritableStreamDefaultWriterCloseWithErrorPropagation", "WritableStreamDefaultWriterEnsureClosedPromiseRejected", "defaultWriterClosedPromiseResetToRejected", "defaultWriterReadyPromiseReject", "defaultWriterReadyPromiseResetToRejected", "WritableStreamDefaultControllerGetDesiredSize", "releasedError", "chunkSize", "WritableStreamDefaultControllerGetChunkSize", "WritableStreamDefaultControllerWrite", "closeSentinel", "IsWritableStreamDefaultController", "defaultControllerBrandCheckException", "WritableStreamDefaultControllerError", "WritableStreamDefaultControllerClearAlgorithms", "WritableStreamDefaultControllerGetBackpressure", "startPromise", "WritableStreamDefaultControllerAdvanceQueueIfNeeded", "chunkSizeE", "WritableStreamDefaultControllerErrorIfNeeded", "enqueueE", "WritableStreamDefaultControllerProcessClose", "WritableStreamDefaultControllerProcessWrite", "sinkClosePromise", "sinkWritePromise", "NativeDOMException", "isDOMExceptionConstructor", "createDOMExceptionPolyfill", "message", "DOMException", "ReadableStreamPipeTo", "source", "preventClose", "preventAbort", "signal", "shuttingDown", "currentWrite", "actions", "shutdownWithAction", "action", "pipeLoop", "resolveLoop", "rejectLoop", "next", "pipeStep", "resolveRead", "rejectRead", "isOrBecomesErrored", "shutdown", "isOrBecomesClosed", "destClosed", "waitForWritesToFinish", "oldCurrentWrite", "originalIsError", "originalError", "doTheRest", "finalize", "newError", "isError", "ReadableStreamDefaultController", "IsReadableStreamDefaultController", "ReadableStreamDefaultControllerGetDesiredSize", "ReadableStreamDefaultControllerCanCloseOrEnqueue", "ReadableStreamDefaultControllerClose", "ReadableStreamDefaultControllerEnqueue", "ReadableStreamDefaultControllerError", "ReadableStreamDefaultControllerClearAlgorithms", "ReadableStreamDefaultControllerCallPullIfNeeded", "ReadableStreamDefaultControllerShouldCallPull", "ReadableStreamDefaultControllerHasBackpressure", "SetUpReadableStreamDefaultController", "SetUpReadableStreamDefaultControllerFromUnderlyingSource", "underlyingSource", "ReadableStreamTee", "cloneForBranch2", "ReadableByteStreamTee", "ReadableStreamDefaultTee", "reading", "readAgain", "canceled1", "canceled2", "reason1", "reason2", "branch1", "branch2", "resolveCancelPromise", "cancelPromise", "chunk1", "chunk2", "cancel1Algorithm", "compositeReason", "cancelResult", "cancel2Algorithm", "CreateReadableStream", "readAgainForBranch1", "readAgainForBranch2", "forwardReaderError", "thisReader", "pullWithDefaultReader", "cloneE", "pull1Algorithm", "pull2Algorithm", "pullWithBYOBReader", "forBranch2", "byobBranch", "otherBranch", "byobCanceled", "clonedChunk", "otherCanceled", "CreateReadableByteStream", "convertUnderlyingDefaultOrByteSource", "cancel", "pull", "convertUnderlyingSourceCancelCallback", "convertUnderlyingSourcePullCallback", "convertUnderlyingSourceStartCallback", "convertReadableStreamType", "convertReaderOptions", "options", "mode", "convertReadableStreamReaderMode", "convertIteratorOptions", "convertPipeOptions", "assertAbortSignal", "convertReadableWritablePair", "readable", "writable", "ReadableStream", "rawUnderlyingSource", "InitializeReadableStream", "rawOptions", "rawTransform", "transform", "destination", "branches", "sourceCancelPromise", "convertQueuingStrategyInit", "byteLengthSizeFunction", "ByteLengthQueuingStrategy", "IsByteLengthQueuingStrategy", "byteLengthBrandCheckException", "countSizeFunction", "CountQueuingStrategy", "IsCountQueuingStrategy", "countBrandCheckException", "convertTransformer", "flush", "readableType", "writableType", "convertTransformerFlushCallback", "convertTransformerStartCallback", "convertTransformerTransformCallback", "TransformStream", "rawTransformer", "rawWritableStrategy", "rawReadableStrategy", "writableStrategy", "readableStrategy", "transformer", "readableHighWaterMark", "readableSizeAlgorithm", "writableHighWaterMark", "writableSizeAlgorithm", "startPromise_resolve", "InitializeTransformStream", "SetUpTransformStreamDefaultControllerFromTransformer", "IsTransformStream", "TransformStreamDefaultSinkWriteAlgorithm", "TransformStreamDefaultSinkAbortAlgorithm", "TransformStreamDefaultSinkCloseAlgorithm", "TransformStreamDefaultSourcePullAlgorithm", "TransformStreamErrorWritableAndUnblockWrite", "TransformStreamSetBackpressure", "TransformStreamError", "TransformStreamDefaultControllerClearAlgorithms", "TransformStreamDefaultController", "IsTransformStreamDefaultController", "readableController", "TransformStreamDefaultControllerEnqueue", "TransformStreamDefaultControllerError", "TransformStreamDefaultControllerTerminate", "SetUpTransformStreamDefaultController", "transformAlgorithm", "flushAlgorithm", "transformResultE", "TransformStreamDefaultControllerPerformTransform", "transformPromise", "backpressureChangePromise", "flushPromise", "require_streams", "__commonJSMin", "process", "emitWarning", "error", "Blob", "params", "position", "blob", "ctrl", "buffer", "toIterator", "parts", "clone", "part", "position", "end", "size", "POOL_SIZE", "chunk", "b", "buffer", "import_streams", "_Blob", "Blob", "fetch_blob_default", "init_fetch_blob", "__esmMin", "#parts", "#type", "#size", "#endings", "blobParts", "options", "encoder", "element", "type", "decoder", "str", "data", "offset", "it", "ctrl", "start", "relativeStart", "relativeEnd", "span", "added", "blob", "object", "_File", "File", "file_default", "init_file", "__esmMin", "init_fetch_blob", "fetch_blob_default", "#lastModified", "#name", "fileBits", "fileName", "options", "lastModified", "object", "formDataToBlob", "F", "B", "fetch_blob_default", "b", "r", "c", "p", "v", "n", "e", "t", "i", "h", "m", "f", "x", "FormData", "init_esm_min", "__esmMin", "init_fetch_blob", "init_file", "a", "file_default", "#d", "o", "l", "d", "require_node_domexception", "__commonJSMin", "exports", "module", "MessageChannel", "port", "ab", "err", "import_node_fs", "import_node_domexception", "stat", "BlobDataItem", "init_from", "__esmMin", "init_file", "init_fetch_blob", "fs", "#path", "#start", "options", "start", "end", "mtimeMs", "DOMException", "multipart_parser_exports", "__export", "toFormData", "_fileName", "headerValue", "m", "match", "filename", "code", "Body", "ct", "parser", "MultipartParser", "headerField", "entryValue", "entryName", "contentType", "entryChunks", "formData", "FormData", "onPartData", "ui8a", "decoder", "appendToFile", "appendFileToFormData", "file", "file_default", "appendEntryToFormData", "chunk", "s", "S", "f", "F", "LF", "CR", "SPACE", "HYPHEN", "COLON", "A", "Z", "lower", "noop", "init_multipart_parser", "__esmMin", "init_from", "init_esm_min", "c", "boundary", "i", "data", "length_", "previousIndex", "lookbehind", "boundaryChars", "index", "state", "flags", "boundaryLength", "boundaryEnd", "bufferLength", "cl", "mark", "name", "clear", "callback", "callbackSymbol", "start", "end", "dataCallback", "markSymbol", "_lookbehind", "require_tslib", "__commonJSMin", "exports", "module", "__extends", "__assign", "__rest", "__decorate", "__param", "__metadata", "__awaiter", "__generator", "__exportStar", "__values", "__read", "__spread", "__spreadArrays", "__spreadArray", "__await", "__asyncGenerator", "__asyncDelegator", "__asyncValues", "__makeTemplateObject", "__importStar", "__importDefault", "__classPrivateFieldGet", "__classPrivateFieldSet", "__classPrivateFieldIn", "__createBinding", "factory", "root", "createExporter", "previous", "id", "v", "exporter", "extendStatics", "d", "b", "p", "__", "t", "s", "n", "e", "i", "decorators", "target", "key", "desc", "c", "r", "paramIndex", "decorator", "metadataKey", "metadataValue", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "rejected", "result", "body", "_", "f", "y", "g", "verb", "op", "m", "o", "k", "k2", "ar", "error", "il", "a", "j", "jl", "to", "from", "pack", "l", "q", "resume", "settle", "fulfill", "cooked", "raw", "__setModuleDefault", "mod", "receiver", "state", "kind", "require_version", "__commonJSMin", "exports", "version", "versionInfo", "require_isPromise", "__commonJSMin", "exports", "isPromise", "value", "require_didYouMean", "__commonJSMin", "exports", "didYouMean", "MAX_SUGGESTIONS", "firstArg", "secondArg", "subMessage", "suggestionsArg", "message", "suggestions", "x", "selected", "lastItem", "require_identityFunc", "__commonJSMin", "exports", "identityFunc", "x", "require_keyMap", "__commonJSMin", "exports", "keyMap", "list", "keyFn", "result", "item", "require_keyValMap", "__commonJSMin", "exports", "keyValMap", "list", "keyFn", "valFn", "result", "item", "require_mapValue", "__commonJSMin", "exports", "mapValue", "map", "fn", "result", "key", "require_naturalCompare", "__commonJSMin", "exports", "naturalCompare", "aStr", "bStr", "aIndex", "bIndex", "aChar", "bChar", "isDigit", "aNum", "DIGIT_0", "bNum", "DIGIT_9", "code", "require_suggestionList", "__commonJSMin", "exports", "suggestionList", "_naturalCompare", "input", "options", "optionsByDistance", "lexicalDistance", "LexicalDistance", "threshold", "option", "distance", "a", "b", "distanceDiff", "stringToArray", "optionLowerCase", "tmp", "aLength", "bLength", "rows", "j", "i", "upRow", "currentRow", "smallestCell", "cost", "currentCell", "doubleDiagonalCell", "str", "strLength", "array", "require_toObjMap", "__commonJSMin", "exports", "toObjMap", "obj", "map", "key", "value", "require_valueFromASTUntyped", "__commonJSMin", "exports", "valueFromASTUntyped", "_keyValMap", "_kinds", "valueNode", "variables", "node", "field", "require_assertName", "__commonJSMin", "exports", "assertEnumValueName", "assertName", "_devAssert", "_GraphQLError", "_characterClasses", "name", "i", "require_definition", "__commonJSMin", "exports", "argsToArgsConfig", "assertAbstractType", "assertCompositeType", "assertEnumType", "assertInputObjectType", "assertInputType", "assertInterfaceType", "assertLeafType", "assertListType", "assertNamedType", "assertNonNullType", "assertNullableType", "assertObjectType", "assertOutputType", "assertScalarType", "assertType", "assertUnionType", "assertWrappingType", "defineArguments", "getNamedType", "getNullableType", "isAbstractType", "isCompositeType", "isEnumType", "isInputObjectType", "isInputType", "isInterfaceType", "isLeafType", "isListType", "isNamedType", "isNonNullType", "isNullableType", "isObjectType", "isOutputType", "isRequiredArgument", "isRequiredInputField", "isScalarType", "isType", "isUnionType", "isWrappingType", "resolveObjMapThunk", "resolveReadonlyArrayThunk", "_devAssert", "_didYouMean", "_identityFunc", "_inspect", "_instanceOf", "_isObjectLike", "_keyMap", "_keyValMap", "_mapValue", "_suggestionList", "_toObjMap", "_GraphQLError", "_kinds", "_printer", "_valueFromASTUntyped", "_assertName", "type", "GraphQLScalarType", "GraphQLObjectType", "GraphQLInterfaceType", "GraphQLUnionType", "GraphQLEnumType", "GraphQLInputObjectType", "GraphQLList", "GraphQLNonNull", "ofType", "unwrappedType", "thunk", "config", "_config$parseValue", "_config$serialize", "_config$parseLiteral", "_config$extensionASTN", "parseValue", "node", "variables", "_config$extensionASTN2", "defineFieldMap", "defineInterfaces", "fieldsToFieldsConfig", "_config$interfaces", "interfaces", "fieldMap", "isPlainObj", "fieldConfig", "fieldName", "_fieldConfig$args", "argsConfig", "argName", "argConfig", "obj", "fields", "field", "args", "arg", "_config$extensionASTN3", "_config$extensionASTN4", "defineTypes", "types", "_config$extensionASTN5", "defineEnumValues", "enumValue", "value", "name", "outputValue", "inputValue", "valueStr", "didYouMeanEnumValue", "valueNode", "_variables", "values", "enumType", "unknownValueStr", "allNames", "suggestedValues", "typeName", "valueMap", "valueName", "valueConfig", "_config$extensionASTN6", "defineInputFieldMap", "require_typeComparators", "__commonJSMin", "exports", "doTypesOverlap", "isEqualType", "isTypeSubTypeOf", "_definition", "typeA", "typeB", "schema", "maybeSubType", "superType", "type", "require_scalars", "__commonJSMin", "exports", "isSpecifiedScalarType", "_inspect", "_isObjectLike", "_GraphQLError", "_kinds", "_printer", "_definition", "GRAPHQL_MAX_INT", "GRAPHQL_MIN_INT", "GraphQLInt", "outputValue", "coercedValue", "serializeObject", "num", "inputValue", "valueNode", "GraphQLFloat", "GraphQLString", "GraphQLBoolean", "GraphQLID", "specifiedScalarTypes", "type", "name", "valueOfResult", "require_directives", "__commonJSMin", "exports", "assertDirective", "isDirective", "isSpecifiedDirective", "_devAssert", "_inspect", "_instanceOf", "_isObjectLike", "_toObjMap", "_directiveLocation", "_assertName", "_definition", "_scalars", "directive", "GraphQLDirective", "config", "_config$isRepeatable", "_config$args", "args", "GraphQLIncludeDirective", "GraphQLSkipDirective", "DEFAULT_DEPRECATION_REASON", "GraphQLDeprecatedDirective", "GraphQLSpecifiedByDirective", "specifiedDirectives", "name", "require_isIterableObject", "__commonJSMin", "exports", "isIterableObject", "maybeIterable", "require_astFromValue", "__commonJSMin", "exports", "astFromValue", "_inspect", "_invariant", "_isIterableObject", "_isObjectLike", "_kinds", "_definition", "_scalars", "value", "type", "astValue", "itemType", "valuesNodes", "item", "itemNode", "fieldNodes", "field", "fieldValue", "serialized", "stringNum", "integerStringRegExp", "require_introspection", "__commonJSMin", "exports", "isIntrospectionType", "_inspect", "_invariant", "_directiveLocation", "_printer", "_astFromValue", "_definition", "_scalars", "__Schema", "schema", "__Type", "__Directive", "directive", "__DirectiveLocation", "__InputValue", "field", "includeDeprecated", "arg", "__TypeKind", "type", "TypeKind", "obj", "__Field", "fields", "_args", "_context", "__EnumValue", "values", "inputValue", "defaultValue", "valueAST", "enumValue", "SchemaMetaFieldDef", "_source", "TypeMetaFieldDef", "name", "TypeNameMetaFieldDef", "parentType", "introspectionTypes", "require_schema", "__commonJSMin", "exports", "assertSchema", "isSchema", "_devAssert", "_inspect", "_instanceOf", "_isObjectLike", "_toObjMap", "_ast", "_definition", "_directives", "_introspection", "schema", "GraphQLSchema", "config", "_config$extensionASTN", "_config$directives", "allReferencedTypes", "type", "collectReferencedTypes", "directive", "arg", "namedType", "typeName", "iface", "implementations", "operation", "name", "abstractType", "interfaceType", "maybeSubType", "map", "typeSet", "memberType", "field", "require_validate", "__commonJSMin", "exports", "assertValidSchema", "validateSchema", "_inspect", "_GraphQLError", "_ast", "_typeComparators", "_definition", "_directives", "_introspection", "_schema", "schema", "context", "SchemaValidationContext", "validateRootTypes", "validateDirectives", "validateTypes", "errors", "error", "message", "nodes", "_nodes", "queryType", "_getOperationTypeNode", "getOperationTypeNode", "mutationType", "_getOperationTypeNode2", "subscriptionType", "_getOperationTypeNode3", "operation", "_flatMap$find", "schemaNode", "_schemaNode$operation", "operationNode", "directive", "validateName", "arg", "_arg$astNode", "getDeprecatedDirectiveNode", "node", "validateInputObjectCircularRefs", "createInputObjectCircularRefsValidator", "typeMap", "type", "validateFields", "validateInterfaces", "validateUnionMembers", "validateEnumValues", "validateInputFields", "fields", "field", "_field$astNode", "argName", "_arg$astNode2", "_arg$astNode3", "ifaceTypeNames", "iface", "getAllImplementsInterfaceNodes", "validateTypeImplementsAncestors", "validateTypeImplementsInterface", "typeFieldMap", "ifaceField", "fieldName", "typeField", "_ifaceField$astNode", "_typeField$astNode", "ifaceArg", "typeArg", "_ifaceArg$astNode", "_typeArg$astNode", "ifaceInterfaces", "transitive", "union", "memberTypes", "includedTypeNames", "memberType", "getUnionMemberTypeNodes", "enumType", "enumValues", "enumValue", "inputObj", "_field$astNode2", "_field$astNode3", "visitedTypes", "fieldPath", "fieldPathIndexByTypeName", "detectCycleRecursive", "fieldType", "cycleIndex", "cyclePath", "pathStr", "fieldObj", "astNode", "extensionASTNodes", "typeNode", "_typeNode$interfaces", "ifaceNode", "typeName", "unionNode", "_unionNode$types", "definitionNode", "_definitionNode$direc", "require_typeFromAST", "__commonJSMin", "exports", "typeFromAST", "_kinds", "_definition", "schema", "typeNode", "innerType", "require_TypeInfo", "__commonJSMin", "exports", "visitWithTypeInfo", "_ast", "_kinds", "_visitor", "_definition", "_introspection", "_typeFromAST", "TypeInfo", "schema", "initialType", "getFieldDefFn", "getFieldDef", "node", "namedType", "parentType", "fieldDef", "fieldType", "rootType", "typeConditionAST", "outputType", "inputType", "_this$getDirective", "argDef", "argType", "fieldOrDirective", "arg", "listType", "itemType", "objectType", "inputFieldType", "inputField", "enumType", "enumValue", "fieldNode", "name", "typeInfo", "visitor", "args", "fn", "result", "require_predicates", "__commonJSMin", "exports", "isConstValueNode", "isDefinitionNode", "isExecutableDefinitionNode", "isSelectionNode", "isTypeDefinitionNode", "isTypeExtensionNode", "isTypeNode", "isTypeSystemDefinitionNode", "isTypeSystemExtensionNode", "isValueNode", "_kinds", "node", "field", "require_ExecutableDefinitionsRule", "__commonJSMin", "exports", "ExecutableDefinitionsRule", "_GraphQLError", "_kinds", "_predicates", "context", "node", "definition", "defName", "require_FieldsOnCorrectTypeRule", "__commonJSMin", "exports", "FieldsOnCorrectTypeRule", "_didYouMean", "_naturalCompare", "_suggestionList", "_GraphQLError", "_definition", "context", "node", "type", "schema", "fieldName", "suggestion", "getSuggestedTypeNames", "getSuggestedFieldNames", "suggestedTypes", "usageCount", "possibleType", "possibleInterface", "_usageCount$possibleI", "typeA", "typeB", "usageCountDiff", "x", "possibleFieldNames", "require_FragmentsOnCompositeTypesRule", "__commonJSMin", "exports", "FragmentsOnCompositeTypesRule", "_GraphQLError", "_printer", "_definition", "_typeFromAST", "context", "node", "typeCondition", "type", "typeStr", "require_KnownArgumentNamesRule", "__commonJSMin", "exports", "KnownArgumentNamesOnDirectivesRule", "KnownArgumentNamesRule", "_didYouMean", "_suggestionList", "_GraphQLError", "_kinds", "_directives", "context", "argNode", "argDef", "fieldDef", "parentType", "argName", "knownArgsNames", "arg", "suggestions", "directiveArgs", "schema", "definedDirectives", "directive", "astDefinitions", "def", "_def$arguments", "argsNodes", "directiveNode", "directiveName", "knownArgs", "require_KnownDirectivesRule", "__commonJSMin", "exports", "KnownDirectivesRule", "_inspect", "_invariant", "_GraphQLError", "_ast", "_directiveLocation", "_kinds", "_directives", "context", "locationsMap", "schema", "definedDirectives", "directive", "astDefinitions", "def", "name", "node", "_key", "_parent", "_path", "ancestors", "locations", "candidateLocation", "getDirectiveLocationForASTPath", "appliedTo", "getDirectiveLocationForOperation", "parentNode", "operation", "require_KnownFragmentNamesRule", "__commonJSMin", "exports", "KnownFragmentNamesRule", "_GraphQLError", "context", "node", "fragmentName", "require_KnownTypeNamesRule", "__commonJSMin", "exports", "KnownTypeNamesRule", "_didYouMean", "_suggestionList", "_GraphQLError", "_predicates", "_introspection", "_scalars", "context", "schema", "existingTypesMap", "definedTypes", "def", "typeNames", "node", "_1", "parent", "_2", "ancestors", "typeName", "_ancestors$", "definitionNode", "isSDL", "isSDLNode", "standardTypeNames", "suggestedTypes", "type", "value", "require_LoneAnonymousOperationRule", "__commonJSMin", "exports", "LoneAnonymousOperationRule", "_GraphQLError", "_kinds", "context", "operationCount", "node", "definition", "require_LoneSchemaDefinitionRule", "__commonJSMin", "exports", "LoneSchemaDefinitionRule", "_GraphQLError", "context", "_ref", "_ref2", "_oldSchema$astNode", "oldSchema", "alreadyDefined", "schemaDefinitionsCount", "node", "require_NoFragmentCyclesRule", "__commonJSMin", "exports", "NoFragmentCyclesRule", "_GraphQLError", "context", "visitedFrags", "spreadPath", "spreadPathIndexByName", "node", "detectCycleRecursive", "fragment", "fragmentName", "spreadNodes", "spreadNode", "spreadName", "cycleIndex", "spreadFragment", "cyclePath", "viaPath", "s", "require_NoUndefinedVariablesRule", "__commonJSMin", "exports", "NoUndefinedVariablesRule", "_GraphQLError", "context", "variableNameDefined", "operation", "usages", "node", "varName", "require_NoUnusedFragmentsRule", "__commonJSMin", "exports", "NoUnusedFragmentsRule", "_GraphQLError", "context", "operationDefs", "fragmentDefs", "node", "fragmentNameUsed", "operation", "fragment", "fragmentDef", "fragName", "require_NoUnusedVariablesRule", "__commonJSMin", "exports", "NoUnusedVariablesRule", "_GraphQLError", "context", "variableDefs", "operation", "variableNameUsed", "usages", "node", "variableDef", "variableName", "def", "require_sortValueNode", "__commonJSMin", "exports", "sortValueNode", "_naturalCompare", "_kinds", "valueNode", "sortFields", "fields", "fieldNode", "fieldA", "fieldB", "require_OverlappingFieldsCanBeMergedRule", "__commonJSMin", "exports", "OverlappingFieldsCanBeMergedRule", "_inspect", "_GraphQLError", "_kinds", "_printer", "_definition", "_sortValueNode", "_typeFromAST", "reasonMessage", "reason", "responseName", "subReason", "context", "comparedFragmentPairs", "PairSet", "cachedFieldsAndFragmentNames", "selectionSet", "conflicts", "findConflictsWithinSelectionSet", "fields1", "fields2", "reasonMsg", "parentType", "fieldMap", "fragmentNames", "getFieldsAndFragmentNames", "collectConflictsWithin", "i", "collectConflictsBetweenFieldsAndFragment", "j", "collectConflictsBetweenFragments", "areMutuallyExclusive", "fragmentName", "fragment", "fieldMap2", "referencedFragmentNames", "getReferencedFieldsAndFragmentNames", "collectConflictsBetween", "referencedFragmentName", "fragmentName1", "fragmentName2", "fragment1", "fragment2", "fieldMap1", "referencedFragmentNames1", "referencedFragmentNames2", "referencedFragmentName2", "referencedFragmentName1", "findConflictsBetweenSubSelectionSets", "parentType1", "selectionSet1", "parentType2", "selectionSet2", "fragmentNames1", "fragmentNames2", "fields", "conflict", "findConflict", "parentFieldsAreMutuallyExclusive", "field1", "field2", "node1", "def1", "node2", "def2", "name1", "name2", "stringifyArguments", "type1", "type2", "doTypesConflict", "subfieldConflicts", "fieldNode", "_fieldNode$arguments", "args", "inputObjectWithArgs", "argNode", "cached", "nodeAndDefs", "_collectFieldsAndFragmentNames", "result", "fragmentType", "selection", "fieldName", "fieldDef", "typeCondition", "inlineFragmentType", "a", "b", "_this$_data$get", "key1", "key2", "map", "require_PossibleFragmentSpreadsRule", "__commonJSMin", "exports", "PossibleFragmentSpreadsRule", "_inspect", "_GraphQLError", "_definition", "_typeComparators", "_typeFromAST", "context", "node", "fragType", "parentType", "parentTypeStr", "fragTypeStr", "fragName", "getFragmentType", "name", "frag", "type", "require_PossibleTypeExtensionsRule", "__commonJSMin", "exports", "PossibleTypeExtensionsRule", "_didYouMean", "_inspect", "_invariant", "_suggestionList", "_GraphQLError", "_kinds", "_predicates", "_definition", "context", "schema", "definedTypes", "def", "checkExtension", "node", "typeName", "defNode", "existingType", "expectedKind", "defKindToExtKind", "typeToExtKind", "kindStr", "extensionKindToTypeName", "allTypeNames", "suggestedTypes", "type", "kind", "require_ProvidedRequiredArgumentsRule", "__commonJSMin", "exports", "ProvidedRequiredArgumentsOnDirectivesRule", "ProvidedRequiredArgumentsRule", "_inspect", "_keyMap", "_GraphQLError", "_kinds", "_printer", "_definition", "_directives", "context", "fieldNode", "_fieldNode$arguments", "fieldDef", "providedArgs", "arg", "argDef", "argTypeStr", "_schema$getDirectives", "requiredArgsMap", "schema", "definedDirectives", "directive", "astDefinitions", "def", "_def$arguments", "argNodes", "isRequiredArgumentNode", "directiveNode", "directiveName", "requiredArgs", "_directiveNode$argume", "argNodeMap", "argName", "argType", "require_ScalarLeafsRule", "__commonJSMin", "exports", "ScalarLeafsRule", "_inspect", "_GraphQLError", "_definition", "context", "node", "type", "selectionSet", "fieldName", "typeStr", "require_printPathArray", "__commonJSMin", "exports", "printPathArray", "path", "key", "require_Path", "__commonJSMin", "exports", "addPath", "pathToArray", "prev", "key", "typename", "path", "flattened", "curr", "require_coerceInputValue", "__commonJSMin", "exports", "coerceInputValue", "_didYouMean", "_inspect", "_invariant", "_isIterableObject", "_isObjectLike", "_Path", "_printPathArray", "_suggestionList", "_GraphQLError", "_definition", "inputValue", "type", "onError", "defaultOnError", "coerceInputValueImpl", "path", "invalidValue", "error", "errorPrefix", "itemType", "itemValue", "index", "itemPath", "coercedValue", "fieldDefs", "field", "fieldValue", "typeStr", "fieldName", "suggestions", "parseResult", "require_valueFromAST", "__commonJSMin", "exports", "valueFromAST", "_inspect", "_invariant", "_keyMap", "_kinds", "_definition", "valueNode", "type", "variables", "variableName", "variableValue", "itemType", "coercedValues", "itemNode", "isMissingVariable", "itemValue", "coercedValue", "coercedObj", "fieldNodes", "field", "fieldNode", "fieldValue", "result", "require_values", "__commonJSMin", "exports", "getArgumentValues", "getDirectiveValues", "getVariableValues", "_inspect", "_keyMap", "_printPathArray", "_GraphQLError", "_kinds", "_printer", "_definition", "_coerceInputValue", "_typeFromAST", "_valueFromAST", "schema", "varDefNodes", "inputs", "options", "errors", "maxErrors", "coerced", "coerceVariableValues", "error", "onError", "coercedValues", "varDefNode", "varName", "varType", "varTypeStr", "hasOwnProperty", "value", "path", "invalidValue", "prefix", "def", "node", "variableValues", "_node$arguments", "argumentNodes", "argNodeMap", "arg", "argDef", "name", "argType", "argumentNode", "valueNode", "isNull", "variableName", "coercedValue", "directiveDef", "_node$directives", "directiveNode", "directive", "obj", "prop", "require_collectFields", "__commonJSMin", "exports", "collectFields", "collectSubfields", "_kinds", "_definition", "_directives", "_typeFromAST", "_values", "schema", "fragments", "variableValues", "runtimeType", "selectionSet", "fields", "collectFieldsImpl", "returnType", "fieldNodes", "subFieldNodes", "visitedFragmentNames", "node", "selection", "shouldIncludeNode", "name", "getFieldEntryKey", "fieldList", "doesFragmentConditionMatch", "fragName", "fragment", "skip", "include", "type", "typeConditionNode", "conditionalType", "require_SingleFieldSubscriptionsRule", "__commonJSMin", "exports", "SingleFieldSubscriptionsRule", "_GraphQLError", "_kinds", "_collectFields", "context", "node", "schema", "subscriptionType", "operationName", "variableValues", "document", "fragments", "definition", "fields", "extraFieldSelections", "fieldNodes", "require_groupBy", "__commonJSMin", "exports", "groupBy", "list", "keyFn", "result", "item", "key", "group", "require_UniqueArgumentDefinitionNamesRule", "__commonJSMin", "exports", "UniqueArgumentDefinitionNamesRule", "_groupBy", "_GraphQLError", "context", "directiveNode", "_directiveNode$argume", "argumentNodes", "checkArgUniqueness", "checkArgUniquenessPerField", "typeNode", "_typeNode$fields", "typeName", "fieldNodes", "fieldDef", "_fieldDef$arguments", "fieldName", "parentName", "seenArgs", "arg", "argName", "argNodes", "node", "require_UniqueArgumentNamesRule", "__commonJSMin", "exports", "UniqueArgumentNamesRule", "_groupBy", "_GraphQLError", "context", "checkArgUniqueness", "parentNode", "_parentNode$arguments", "argumentNodes", "seenArgs", "arg", "argName", "argNodes", "node", "require_UniqueDirectiveNamesRule", "__commonJSMin", "exports", "UniqueDirectiveNamesRule", "_GraphQLError", "context", "knownDirectiveNames", "schema", "node", "directiveName", "require_UniqueDirectivesPerLocationRule", "__commonJSMin", "exports", "UniqueDirectivesPerLocationRule", "_GraphQLError", "_kinds", "_predicates", "_directives", "context", "uniqueDirectiveMap", "schema", "definedDirectives", "directive", "astDefinitions", "def", "schemaDirectives", "typeDirectivesMap", "node", "seenDirectives", "typeName", "directiveName", "require_UniqueEnumValueNamesRule", "__commonJSMin", "exports", "UniqueEnumValueNamesRule", "_GraphQLError", "_definition", "context", "schema", "existingTypeMap", "knownValueNames", "checkValueUniqueness", "node", "_node$values", "typeName", "valueNodes", "valueNames", "valueDef", "valueName", "existingType", "require_UniqueFieldDefinitionNamesRule", "__commonJSMin", "exports", "UniqueFieldDefinitionNamesRule", "_GraphQLError", "_definition", "context", "schema", "existingTypeMap", "knownFieldNames", "checkFieldUniqueness", "node", "_node$fields", "typeName", "fieldNodes", "fieldNames", "fieldDef", "fieldName", "hasField", "type", "require_UniqueFragmentNamesRule", "__commonJSMin", "exports", "UniqueFragmentNamesRule", "_GraphQLError", "context", "knownFragmentNames", "node", "fragmentName", "require_UniqueInputFieldNamesRule", "__commonJSMin", "exports", "UniqueInputFieldNamesRule", "_invariant", "_GraphQLError", "context", "knownNameStack", "knownNames", "prevKnownNames", "node", "fieldName", "require_UniqueOperationNamesRule", "__commonJSMin", "exports", "UniqueOperationNamesRule", "_GraphQLError", "context", "knownOperationNames", "node", "operationName", "require_UniqueOperationTypesRule", "__commonJSMin", "exports", "UniqueOperationTypesRule", "_GraphQLError", "context", "schema", "definedOperationTypes", "existingOperationTypes", "checkOperationTypes", "node", "_node$operationTypes", "operationTypesNodes", "operationType", "operation", "alreadyDefinedOperationType", "require_UniqueTypeNamesRule", "__commonJSMin", "exports", "UniqueTypeNamesRule", "_GraphQLError", "context", "knownTypeNames", "schema", "checkTypeName", "node", "typeName", "require_UniqueVariableNamesRule", "__commonJSMin", "exports", "UniqueVariableNamesRule", "_groupBy", "_GraphQLError", "context", "operationNode", "_operationNode$variab", "variableDefinitions", "seenVariableDefinitions", "node", "variableName", "variableNodes", "require_ValuesOfCorrectTypeRule", "__commonJSMin", "exports", "ValuesOfCorrectTypeRule", "_didYouMean", "_inspect", "_keyMap", "_suggestionList", "_GraphQLError", "_printer", "_definition", "context", "node", "type", "isValidValueNode", "fieldNodeMap", "field", "fieldDef", "typeStr", "parentType", "suggestions", "locationType", "error", "require_VariablesAreInputTypesRule", "__commonJSMin", "exports", "VariablesAreInputTypesRule", "_GraphQLError", "_printer", "_definition", "_typeFromAST", "context", "node", "type", "variableName", "typeName", "require_VariablesInAllowedPositionRule", "__commonJSMin", "exports", "VariablesInAllowedPositionRule", "_inspect", "_GraphQLError", "_kinds", "_definition", "_typeComparators", "_typeFromAST", "context", "varDefMap", "operation", "usages", "node", "type", "defaultValue", "varName", "varDef", "schema", "varType", "allowedVariableUsage", "varTypeStr", "typeStr", "varDefaultValue", "locationType", "locationDefaultValue", "nullableLocationType", "require_specifiedRules", "__commonJSMin", "exports", "_ExecutableDefinitionsRule", "_FieldsOnCorrectTypeRule", "_FragmentsOnCompositeTypesRule", "_KnownArgumentNamesRule", "_KnownDirectivesRule", "_KnownFragmentNamesRule", "_KnownTypeNamesRule", "_LoneAnonymousOperationRule", "_LoneSchemaDefinitionRule", "_NoFragmentCyclesRule", "_NoUndefinedVariablesRule", "_NoUnusedFragmentsRule", "_NoUnusedVariablesRule", "_OverlappingFieldsCanBeMergedRule", "_PossibleFragmentSpreadsRule", "_PossibleTypeExtensionsRule", "_ProvidedRequiredArgumentsRule", "_ScalarLeafsRule", "_SingleFieldSubscriptionsRule", "_UniqueArgumentDefinitionNamesRule", "_UniqueArgumentNamesRule", "_UniqueDirectiveNamesRule", "_UniqueDirectivesPerLocationRule", "_UniqueEnumValueNamesRule", "_UniqueFieldDefinitionNamesRule", "_UniqueFragmentNamesRule", "_UniqueInputFieldNamesRule", "_UniqueOperationNamesRule", "_UniqueOperationTypesRule", "_UniqueTypeNamesRule", "_UniqueVariableNamesRule", "_ValuesOfCorrectTypeRule", "_VariablesAreInputTypesRule", "_VariablesInAllowedPositionRule", "specifiedRules", "specifiedSDLRules", "require_ValidationContext", "__commonJSMin", "exports", "_kinds", "_visitor", "_TypeInfo", "ASTValidationContext", "ast", "onError", "error", "name", "fragments", "defNode", "node", "spreads", "setsToVisit", "set", "selection", "operation", "collectedNames", "nodesToVisit", "spread", "fragName", "fragment", "SDLValidationContext", "schema", "ValidationContext", "typeInfo", "usages", "newUsages", "variable", "frag", "require_validate", "__commonJSMin", "exports", "assertValidSDL", "assertValidSDLExtension", "validate", "validateSDL", "_devAssert", "_GraphQLError", "_visitor", "_validate", "_TypeInfo", "_specifiedRules", "_ValidationContext", "schema", "documentAST", "rules", "options", "typeInfo", "_options$maxErrors", "maxErrors", "abortObj", "errors", "context", "error", "visitor", "rule", "e", "schemaToExtend", "visitors", "require_memoize3", "__commonJSMin", "exports", "memoize3", "fn", "cache0", "a1", "a2", "a3", "cache1", "cache2", "fnResult", "require_promiseForObject", "__commonJSMin", "exports", "promiseForObject", "object", "resolvedValues", "resolvedObject", "i", "key", "require_promiseReduce", "__commonJSMin", "exports", "promiseReduce", "_isPromise", "values", "callbackFn", "initialValue", "accumulator", "value", "resolved", "require_toError", "__commonJSMin", "exports", "toError", "_inspect", "thrownValue", "NonErrorThrown", "require_locatedError", "__commonJSMin", "exports", "locatedError", "_toError", "_GraphQLError", "rawOriginalError", "nodes", "path", "_nodes", "originalError", "isLocatedGraphQLError", "error", "require_execute", "__commonJSMin", "exports", "assertValidExecutionArguments", "buildExecutionContext", "buildResolveInfo", "execute", "executeSync", "getFieldDef", "_devAssert", "_inspect", "_invariant", "_isIterableObject", "_isObjectLike", "_isPromise", "_memoize", "_Path", "_promiseForObject", "_promiseReduce", "_GraphQLError", "_locatedError", "_ast", "_kinds", "_definition", "_introspection", "_validate", "_collectFields", "_values", "collectSubfields", "exeContext", "returnType", "fieldNodes", "args", "schema", "document", "variableValues", "rootValue", "operation", "result", "executeOperation", "data", "buildResponse", "error", "errors", "rawVariableValues", "_definition$name", "_operation$variableDe", "contextValue", "operationName", "fieldResolver", "typeResolver", "subscribeFieldResolver", "fragments", "definition", "variableDefinitions", "coercedVariableValues", "defaultFieldResolver", "defaultTypeResolver", "rootType", "rootFields", "path", "executeFields", "executeFieldsSerially", "parentType", "sourceValue", "fields", "results", "responseName", "fieldPath", "executeField", "resolvedResult", "containsPromise", "source", "_fieldDef$resolve", "fieldDef", "resolveFn", "info", "completed", "resolved", "completeValue", "rawError", "handleFieldError", "completeListValue", "completeLeafValue", "completeAbstractValue", "completeObjectValue", "itemType", "completedResults", "item", "index", "itemPath", "completedItem", "serializedResult", "_returnType$resolveTy", "resolveTypeFn", "runtimeType", "resolvedRuntimeType", "ensureValidRuntimeType", "runtimeTypeName", "subFieldNodes", "isTypeOf", "resolvedIsTypeOf", "invalidReturnTypeError", "value", "abstractType", "possibleTypes", "promisedIsTypeOfResults", "i", "type", "isTypeOfResult", "isTypeOfResults", "property", "fieldNode", "fieldName", "require_graphql", "__commonJSMin", "exports", "graphql", "graphqlSync", "_devAssert", "_isPromise", "_parser", "_validate", "_validate2", "_execute", "args", "resolve", "graphqlImpl", "result", "schema", "source", "rootValue", "contextValue", "variableValues", "operationName", "fieldResolver", "typeResolver", "schemaValidationErrors", "document", "syntaxError", "validationErrors", "require_type", "__commonJSMin", "exports", "_directives", "_scalars", "_definition", "_schema", "_introspection", "_assertName", "_validate", "require_language", "__commonJSMin", "exports", "_visitor", "_directiveLocation", "_kinds", "_lexer", "_ast", "_source", "_tokenKind", "_location", "_predicates", "_parser", "_printer", "_printLocation", "require_isAsyncIterable", "__commonJSMin", "exports", "isAsyncIterable", "maybeAsyncIterable", "require_mapAsyncIterator", "__commonJSMin", "exports", "mapAsyncIterator", "iterable", "callback", "iterator", "mapResult", "result", "error", "require_subscribe", "__commonJSMin", "exports", "createSourceEventStream", "subscribe", "_devAssert", "_inspect", "_isAsyncIterable", "_Path", "_GraphQLError", "_locatedError", "_collectFields", "_execute", "_mapAsyncIterator", "_values", "args", "resultOrStream", "mapSourceToResponse", "payload", "toNormalizedArgs", "firstArg", "rawArgs", "schema", "document", "variableValues", "exeContext", "eventStream", "executeSubscription", "error", "fragments", "operation", "rootValue", "rootType", "rootFields", "responseName", "fieldNodes", "fieldDef", "fieldName", "path", "info", "_fieldDef$subscribe", "contextValue", "require_execution", "__commonJSMin", "exports", "_subscribe", "_execute", "_values", "_Path", "require_NoDeprecatedCustomRule", "__commonJSMin", "exports", "NoDeprecatedCustomRule", "_invariant", "_GraphQLError", "_definition", "context", "node", "fieldDef", "deprecationReason", "parentType", "argDef", "directiveDef", "inputObjectDef", "inputFieldDef", "enumValueDef", "enumTypeDef", "require_NoSchemaIntrospectionCustomRule", "__commonJSMin", "exports", "NoSchemaIntrospectionCustomRule", "_GraphQLError", "_definition", "_introspection", "context", "node", "type", "require_validation", "__commonJSMin", "exports", "_ExecutableDefinitionsRule", "_FieldsOnCorrectTypeRule", "_FragmentsOnCompositeTypesRule", "_KnownArgumentNamesRule", "_KnownDirectivesRule", "_KnownFragmentNamesRule", "_KnownTypeNamesRule", "_LoneAnonymousOperationRule", "_LoneSchemaDefinitionRule", "_NoDeprecatedCustomRule", "_NoFragmentCyclesRule", "_NoSchemaIntrospectionCustomRule", "_NoUndefinedVariablesRule", "_NoUnusedFragmentsRule", "_NoUnusedVariablesRule", "_OverlappingFieldsCanBeMergedRule", "_PossibleFragmentSpreadsRule", "_PossibleTypeExtensionsRule", "_ProvidedRequiredArgumentsRule", "_ScalarLeafsRule", "_SingleFieldSubscriptionsRule", "_UniqueArgumentDefinitionNamesRule", "_UniqueArgumentNamesRule", "_UniqueDirectiveNamesRule", "_UniqueDirectivesPerLocationRule", "_UniqueEnumValueNamesRule", "_UniqueFieldDefinitionNamesRule", "_UniqueFragmentNamesRule", "_UniqueInputFieldNamesRule", "_UniqueOperationNamesRule", "_UniqueOperationTypesRule", "_UniqueTypeNamesRule", "_UniqueVariableNamesRule", "_ValidationContext", "_ValuesOfCorrectTypeRule", "_VariablesAreInputTypesRule", "_VariablesInAllowedPositionRule", "_specifiedRules", "_validate", "require_error", "__commonJSMin", "exports", "_GraphQLError", "_locatedError", "_syntaxError", "require_getIntrospectionQuery", "__commonJSMin", "exports", "getIntrospectionQuery", "options", "optionsWithDefault", "descriptions", "specifiedByUrl", "directiveIsRepeatable", "schemaDescription", "inputDeprecation", "str", "require_getOperationAST", "__commonJSMin", "exports", "getOperationAST", "_kinds", "documentAST", "operationName", "operation", "definition", "_definition$name", "require_getOperationRootType", "__commonJSMin", "exports", "getOperationRootType", "_GraphQLError", "schema", "operation", "queryType", "mutationType", "subscriptionType", "require_introspectionFromSchema", "__commonJSMin", "exports", "introspectionFromSchema", "_invariant", "_parser", "_execute", "_getIntrospectionQuery", "schema", "options", "optionsWithDefaults", "document", "result", "require_buildClientSchema", "__commonJSMin", "exports", "buildClientSchema", "_devAssert", "_inspect", "_isObjectLike", "_keyValMap", "_parser", "_definition", "_directives", "_introspection", "_scalars", "_schema", "_valueFromAST", "introspection", "options", "schemaIntrospection", "typeMap", "typeIntrospection", "buildType", "stdType", "queryType", "getObjectType", "mutationType", "subscriptionType", "directives", "buildDirective", "getType", "typeRef", "itemRef", "nullableRef", "nullableType", "getNamedType", "typeName", "type", "getInterfaceType", "buildScalarDef", "buildObjectDef", "buildInterfaceDef", "buildUnionDef", "buildEnumDef", "buildInputObjectDef", "typeStr", "scalarIntrospection", "buildImplementationsList", "implementingIntrospection", "implementingIntrospectionStr", "objectIntrospection", "buildFieldDefMap", "interfaceIntrospection", "unionIntrospection", "unionIntrospectionStr", "enumIntrospection", "enumIntrospectionStr", "valueIntrospection", "inputObjectIntrospection", "inputObjectIntrospectionStr", "buildInputValueDefMap", "fieldIntrospection", "buildField", "fieldIntrospectionStr", "inputValueIntrospections", "inputValue", "buildInputValue", "inputValueIntrospection", "defaultValue", "directiveIntrospection", "directiveIntrospectionStr", "require_extendSchema", "__commonJSMin", "exports", "extendSchema", "extendSchemaImpl", "_devAssert", "_inspect", "_invariant", "_keyMap", "_mapValue", "_kinds", "_predicates", "_definition", "_directives", "_introspection", "_scalars", "_schema", "_validate", "_values", "_valueFromAST", "schema", "documentAST", "options", "schemaConfig", "extendedConfig", "_schemaDef", "_schemaDef$descriptio", "_schemaDef2", "_options$assumeValid", "typeDefs", "typeExtensionsMap", "directiveDefs", "schemaDef", "schemaExtensions", "def", "extendedTypeName", "existingTypeExtensions", "typeMap", "existingType", "extendNamedType", "typeNode", "_stdTypeMap$name", "name", "stdTypeMap", "buildType", "operationTypes", "replaceNamedType", "getOperationTypes", "replaceDirective", "buildDirective", "replaceType", "type", "directive", "config", "extendArg", "extendScalarType", "extendObjectType", "extendInterfaceType", "extendUnionType", "extendEnumType", "extendInputObjectType", "_typeExtensionsMap$co", "extensions", "field", "buildInputFieldMap", "_typeExtensionsMap$ty", "buildEnumValueMap", "_typeExtensionsMap$co2", "specifiedByURL", "extensionNode", "_getSpecifiedByURL", "getSpecifiedByURL", "_typeExtensionsMap$co3", "buildInterfaces", "extendField", "buildFieldMap", "_typeExtensionsMap$co4", "_typeExtensionsMap$co5", "buildUnionTypes", "arg", "nodes", "opTypes", "node", "_node$operationTypes", "operationTypesNodes", "operationType", "getNamedType", "_stdTypeMap$name2", "getWrappedType", "_node$description", "value", "buildArgumentMap", "fieldConfigMap", "_node$fields", "nodeFields", "_field$description", "getDeprecationReason", "args", "argsNodes", "argConfigMap", "_arg$description", "inputFieldMap", "_node$fields2", "fieldsNodes", "_field$description2", "enumValueMap", "_node$values", "valuesNodes", "_value$description", "_node$interfaces$map", "_node$interfaces", "_node$types$map", "_node$types", "astNode", "_typeExtensionsMap$na", "extensionASTNodes", "_astNode$description", "allNodes", "_astNode$description2", "_astNode$description3", "_astNode$description4", "_astNode$description5", "_astNode$description6", "deprecated", "specifiedBy", "require_buildASTSchema", "__commonJSMin", "exports", "buildASTSchema", "buildSchema", "_devAssert", "_kinds", "_parser", "_directives", "_schema", "_validate", "_extendSchema", "documentAST", "options", "emptySchemaConfig", "config", "type", "directives", "stdDirective", "directive", "source", "document", "require_lexicographicSortSchema", "__commonJSMin", "exports", "lexicographicSortSchema", "_inspect", "_invariant", "_keyValMap", "_naturalCompare", "_definition", "_directives", "_introspection", "_schema", "schema", "schemaConfig", "typeMap", "sortByName", "type", "sortNamedType", "sortDirective", "replaceMaybeType", "replaceType", "replaceNamedType", "maybeType", "directive", "config", "sortBy", "x", "sortArgs", "args", "sortObjMap", "arg", "sortFields", "fieldsMap", "field", "sortInputFields", "sortTypes", "array", "value", "map", "sortValueFn", "sortedMap", "key", "obj", "mapToKey", "obj1", "obj2", "key1", "key2", "require_printSchema", "__commonJSMin", "exports", "printIntrospectionSchema", "printSchema", "printType", "_inspect", "_invariant", "_blockString", "_kinds", "_printer", "_definition", "_directives", "_introspection", "_scalars", "_astFromValue", "schema", "printFilteredSchema", "n", "isDefinedType", "type", "directiveFilter", "typeFilter", "directives", "types", "printSchemaDefinition", "directive", "printDirective", "isSchemaOfCommonNames", "operationTypes", "queryType", "mutationType", "subscriptionType", "printDescription", "printScalar", "printObject", "printInterface", "printUnion", "printEnum", "printInputObject", "printSpecifiedByURL", "printImplementedInterfaces", "interfaces", "i", "printFields", "possibleTypes", "values", "value", "printDeprecated", "printBlock", "fields", "f", "printInputValue", "printArgs", "items", "args", "indentation", "arg", "defaultAST", "argDecl", "reason", "scalar", "def", "firstInBlock", "description", "blockString", "require_concatAST", "__commonJSMin", "exports", "concatAST", "_kinds", "documents", "definitions", "doc", "require_separateOperations", "__commonJSMin", "exports", "separateOperations", "_kinds", "_visitor", "documentAST", "operations", "depGraph", "definitionNode", "collectDependencies", "separatedDocumentASTs", "operation", "dependencies", "fragmentName", "collectTransitiveDependencies", "operationName", "node", "collected", "fromName", "immediateDeps", "toName", "selectionSet", "require_stripIgnoredCharacters", "__commonJSMin", "exports", "stripIgnoredCharacters", "_blockString", "_lexer", "_source", "_tokenKind", "source", "sourceObj", "body", "lexer", "strippedBody", "wasLastAddedTokenNonPunctuator", "currentToken", "tokenKind", "isNonPunctuator", "tokenBody", "require_assertValidName", "__commonJSMin", "exports", "assertValidName", "isValidNameError", "_devAssert", "_GraphQLError", "_assertName", "name", "error", "require_findBreakingChanges", "__commonJSMin", "exports", "findBreakingChanges", "findDangerousChanges", "_inspect", "_invariant", "_keyMap", "_printer", "_definition", "_scalars", "_astFromValue", "_sortValueNode", "BreakingChangeType", "DangerousChangeType", "oldSchema", "newSchema", "findSchemaChanges", "change", "findTypeChanges", "findDirectiveChanges", "schemaChanges", "directivesDiff", "diff", "oldDirective", "newDirective", "argsDiff", "newArg", "oldArg", "location", "typesDiff", "oldType", "newType", "findEnumTypeChanges", "findUnionTypeChanges", "findInputObjectTypeChanges", "findFieldChanges", "findImplementedInterfacesChanges", "typeKindName", "fieldsDiff", "newField", "oldField", "isChangeSafeForInputObjectFieldOrFieldArg", "possibleTypesDiff", "newPossibleType", "oldPossibleType", "valuesDiff", "newValue", "oldValue", "interfacesDiff", "newInterface", "oldInterface", "findArgChanges", "isChangeSafeForObjectOrInterfaceField", "oldValueStr", "stringifyValue", "newValueStr", "type", "value", "ast", "oldArray", "newArray", "added", "removed", "persisted", "oldMap", "name", "newMap", "oldItem", "newItem", "require_utilities", "__commonJSMin", "exports", "_findBreakingChanges", "_TypeInfo", "_assertValidName", "_astFromValue", "_buildASTSchema", "_buildClientSchema", "_coerceInputValue", "_concatAST", "_typeComparators", "_extendSchema", "_getIntrospectionQuery", "_getOperationAST", "_getOperationRootType", "_introspectionFromSchema", "_lexicographicSortSchema", "_printSchema", "_separateOperations", "_stripIgnoredCharacters", "_typeFromAST", "_valueFromAST", "_valueFromASTUntyped", "require_graphql", "__commonJSMin", "exports", "_index2", "_index6", "_index", "_index4", "_index5", "_index3", "_graphql", "_version", "docCache", "fragmentSourceMap", "printFragmentWarnings", "experimentalFragmentVariables", "normalize", "string", "cacheKeyFromLoc", "loc", "processFragments", "ast", "seenKeys", "definitions", "fragmentDefinition", "fragmentName", "sourceKey", "sourceKeySet", "tslib", "stripLoc", "doc", "workSet", "node", "key", "value", "parseDocument", "source", "cacheKey", "parsed", "parse", "gql", "literals", "args", "_i", "result", "arg", "i", "resetCaches", "disableFragmentWarnings", "enableExperimentalFragmentVariables", "disableExperimentalFragmentVariables", "extras", "gql_1", "gql$1", "require_main", "__commonJSMin", "exports", "module", "create_branch_exports", "__export", "BranchForm", "Command", "__toCommonJS", "import_api", "import_utils", "import_react", "import_api", "import_graphql_request", "import_octokit", "import_react", "import_api", "import_node_http", "import_node_https", "import_node_zlib", "import_node_stream", "import_node_buffer", "dataUriToBuffer", "uri", "firstComma", "meta", "charset", "base64", "type", "typeFull", "i", "encoding", "data", "buffer", "dist_default", "import_node_stream", "import_node_util", "import_node_buffer", "init_fetch_blob", "init_esm_min", "FetchBaseError", "message", "type", "FetchError", "FetchBaseError", "message", "type", "systemError", "NAME", "isURLSearchParameters", "object", "isBlob", "isAbortSignal", "isDomainOrSubdomain", "destination", "original", "orig", "dest", "isSameProtocol", "pipeline", "Stream", "INTERNALS", "Body", "body", "size", "boundary", "isURLSearchParameters", "isBlob", "FormData", "formDataToBlob", "stream", "error_", "error", "FetchBaseError", "FetchError", "buffer", "byteOffset", "byteLength", "consumeBody", "ct", "formData", "parameters", "name", "value", "toFormData", "buf", "fetch_blob_default", "text", "data", "accum", "accumBytes", "chunk", "c", "clone", "instance", "highWaterMark", "p1", "p2", "getNonSpecFormDataBoundary", "extractContentType", "request", "getTotalBytes", "writeToStream", "dest", "import_node_util", "import_node_http", "validateHeaderName", "http", "name", "error", "validateHeaderValue", "value", "Headers", "init", "result", "raw", "values", "method", "pair", "target", "p", "receiver", "callback", "thisArg", "key", "property", "fromRawHeaders", "headers", "index", "array", "redirectStatus", "isRedirect", "code", "INTERNALS", "Response", "Body", "body", "options", "status", "headers", "Headers", "contentType", "extractContentType", "clone", "url", "isRedirect", "response", "import_node_url", "import_node_util", "getSearch", "parsedURL", "lastOffset", "hash", "import_node_net", "stripURLForUseAsAReferrer", "url", "originOnly", "ReferrerPolicy", "DEFAULT_REFERRER_POLICY", "validateReferrerPolicy", "referrerPolicy", "isOriginPotentiallyTrustworthy", "hostIp", "hostIPVersion", "isUrlPotentiallyTrustworthy", "determineRequestsReferrer", "request", "referrerURLCallback", "referrerOriginCallback", "policy", "referrerSource", "referrerURL", "referrerOrigin", "currentURL", "parseReferrerPolicyFromHeader", "headers", "policyTokens", "token", "INTERNALS", "isRequest", "object", "doBadDataWarn", "Request", "Body", "input", "init", "parsedURL", "method", "inputBody", "clone", "headers", "Headers", "contentType", "extractContentType", "signal", "isAbortSignal", "referrer", "parsedReferrer", "formatUrl", "referrerPolicy", "validateReferrerPolicy", "getNodeRequestOptions", "request", "contentLengthValue", "totalBytes", "getTotalBytes", "DEFAULT_REFERRER_POLICY", "determineRequestsReferrer", "agent", "search", "getSearch", "options", "AbortError", "FetchBaseError", "message", "type", "init_esm_min", "init_from", "supportedSchemas", "fetch", "url", "options_", "resolve", "reject", "request", "Request", "parsedURL", "options", "getNodeRequestOptions", "data", "dist_default", "response", "Response", "send", "https", "http", "signal", "abort", "error", "AbortError", "Stream", "abortAndFinalize", "finalize", "request_", "FetchError", "fixResponseChunkedTransferBadEnding", "s", "endedWithEventsCount", "hadError", "response_", "headers", "fromRawHeaders", "isRedirect", "location", "locationURL", "requestOptions", "Headers", "clone", "isDomainOrSubdomain", "isSameProtocol", "name", "responseReferrerPolicy", "parseReferrerPolicyFromHeader", "body", "pump", "responseOptions", "codings", "zlibOptions", "zlib", "raw", "chunk", "writeToStream", "errorCallback", "LAST_CHUNK", "isChunkedTransfer", "properLastChunkReceived", "previousChunk", "socket", "onSocketClose", "onData", "buf", "clientId", "oauthClient", "authorize", "existingTokens", "authRequest", "authorizationCode", "tokens", "fetchTokens", "authCode", "response", "fetch", "import_graphql_tag", "ShortRepositoryFieldsFragmentDoc", "gql", "DiscussionFieldsFragmentDoc", "UserFieldsFragmentDoc", "IssueFieldsFragmentDoc", "IssueDetailFieldsFragmentDoc", "PullRequestFieldsFragmentDoc", "PullRequestDetailsFieldsFragmentDoc", "PullRequestCommitFieldsFragmentDoc", "CommitFieldsFragmentDoc", "ExtendedRepositoryFieldsFragmentDoc", "ReleaseFieldsFragmentDoc", "CreateLinkedBranchDocument", "CreateRefDocument", "DeleteLinkedBranchDocument", "SearchDiscussionsDocument", "SearchCreatedIssuesDocument", "RepositoryCollaboratorsForIssuesDocument", "RepositoryProjectsForIssuesDocument", "SearchOpenIssuesDocument", "IssueDetailsDocument", "SearchIssuesDocument", "CloseIssueDocument", "ReopenIssueDocument", "ChangeIssueAssigneesDocument", "ChangeIssueMilestoneDocument", "AddIssueToProjectDocument", "CreateIssueDocument", "MyPullRequestsDocument", "SearchPullRequestsDocument", "PullRequestDetailsDocument", "RepositoryCollaboratorsForPullRequestsDocument", "RepositoryProjectsForPullRequestsDocument", "PullRequestCommitsDocument", "ClosePullRequestDocument", "ReopenPullRequestDocument", "AddPullRequestReviewDocument", "ChangePullRequestAssigneesDocument", "ChangePullRequestMilestoneDocument", "AddPullRequestToProjectDocument", "RequestReviewDocument", "MergePullRequestDocument", "CreatePullRequestDocument", "InitPullRequestDocument", "SearchRepositoriesDocument", "MilestonesForRepositoryDocument", "DataForRepositoryDocument", "RepositoryIssuesDocument", "RepositoryReleasesDocument", "AddStarDocument", "RemoveStarDocument", "GetViewerDocument", "defaultWrapper", "action", "_operationName", "_operationType", "getSdk", "client", "withWrapper", "variables", "requestHeaders", "wrappedRequestHeaders", "import_jsx_runtime", "github", "octokit", "withGithubClient", "component", "x", "forceRerender", "personalAccessToken", "token", "authorize", "authorization", "getSdk", "getGitHubClient", "View", "children", "withGithubClient", "getErrorMessage", "error", "import_api", "import_api", "getIssueStatus", "issue", "import_utils", "import_utils", "useViewer", "github", "getGitHubClient", "viewer", "useMyRepositories", "github", "getGitHubClient", "viewer", "useViewer", "org", "import_jsx_runtime", "BranchForm", "draftValues", "github", "getGitHubClient", "repositoryId", "setRepositoryId", "issue", "setIssue", "name", "setName", "nameError", "setNameError", "repositories", "repositoriesIsLoading", "useMyRepositories", "data", "repositoryIsLoading", "repository", "selectedRepository", "r", "issues", "node", "oid", "repositoryUrl", "onSubmit", "values", "toast", "branchName", "payload", "error", "getErrorMessage", "getIssueStatus", "newName", "event", "Command", "props", "View"]
}
