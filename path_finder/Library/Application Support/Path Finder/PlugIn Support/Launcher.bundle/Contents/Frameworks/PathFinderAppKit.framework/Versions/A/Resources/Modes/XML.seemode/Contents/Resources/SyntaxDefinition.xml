<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE syntax SYSTEM "syntax.dtd">
<syntax>
	<head>
		<name>XML</name>
		<!-- The definitions title -->
		<charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@]]></charsintokens>
		<!-- Valid Characters for Variables -->
		<folding toplevel="4"/>
		<bracketmatching brackets="&lt;[({})]>"/>
	</head>
	<states>
		<default id="Base" scope="meta.default">
			<keywords id="Bad Ampersand" useforautocomplete="no" scope="meta.invalid.ampersand">
				<regex>(&amp;)</regex>
			</keywords>
			<keywords id="Tags" useforautocomplete="no" scope="markup.tag">
				<regex>(&lt;[/\s]*[^/?!][-:_\w]*\s*(?:[-:_\w]+[ \t]*=[ \t]*(?:".*?"|'.*?'|[\w:]+)\s*)*[/\s]*&gt;)</regex>
			</keywords>
			<keywords id="Attributes in Tags" useforautocomplete="no" scope="markup.tag.attribute.name">
				<regex>([\w-]*)(?=[ \t]*=[^&lt;]+&gt;)</regex>
			</keywords>
			<keywords id="Strings in Tags" type="string" useforautocomplete="no" scope="markup.tag.attribute.value.string">
				<regex>=[ \t]*("[^"]*"|'[^']*')(?=[^&lt;]*&gt;)</regex>
			</keywords>
			<keywords id="Entities" useforautocomplete="no" scope="markup.constant.entity">
				<regex>(&amp;#\d+;)</regex>
				<regex>(&amp;#x\h+;)</regex>
				<regex>(&amp;[\w\d\.\-]+;)</regex>
			</keywords>
			<state id="Comment" type="comment" scope="markup.comment">
				<begin><regex>&lt;!--</regex><autoend>--&gt;</autoend></begin>
				<end><regex>--&gt;</regex></end>
				<keywords id="SGML Double Dash" useforautocomplete="no" scope="meta.invalid.sgmlcomment">
					<regex>(?&lt;!\!)(--)(?!&gt;)</regex>
				</keywords>
				<import mode="Base" state="EmailAndURLContainerState" keywords-only="yes"/>
			</state>
			<state id="CDATA" foldable="yes" scope="markup.inline.cdata">
				<begin>
					<regex>&lt;!\s*\[CDATA\s*\[</regex>
					<autoend>\]\]&gt;</autoend>
				</begin>
				<end>
					<regex>\]\s*\]\s*&gt;</regex>
				</end>
			</state>
			<state id="Doctype" foldable="no" scope="markup.declaration">
				<begin>
					<regex>&lt;!</regex>
				</begin>
				<end>
					<regex>&gt;</regex>
				</end>
				<state id="String" type="string" scope="markup.declaration.string.double">
					<begin><regex>"</regex></begin>
					<end><regex>"</regex></end>
				</state>
				<state id="SingleString" type="string" scope="markup.declaration.string.single">
					<begin><regex>'</regex></begin>
					<end><regex>'</regex></end>
				</state>
				<state id="Block" type="block" foldable="yes" indent="yes" scope="meta.block.square">
					<begin><regex>\[</regex><autoend>\]</autoend></begin>
					<end><regex>]</regex></end>
					<import/>
				</state>
			</state>
			<state id="Escape" foldable="no" scope="markup.processing">
				<begin>
					<regex>&lt;\?</regex>
				</begin>
				<end>
					<regex>\?&gt;</regex>
				</end>
				<state id="ProcessingString" type="string" scope="markup.processing.attribute.value.string">
					<begin><regex>"</regex></begin>
					<end><regex>"</regex></end>
				</state>
				<state id="ProcessingSingleString" type="string" scope="markup.processing.attribute.value.string">
					<begin><regex>'</regex></begin>
					<end><regex>'</regex></end>
				</state>
			</state>
			<state id="Single Tag" foldable="no" scope="markup.tag">
				<begin>
					<regex>&lt;\s*[^/?!][-:_\w]*\s*(?:[-:_\w]+\s*=\s*(?:"[^"]*"|'[^']*'|\w+)\s*)*/\s*(?=&gt;)</regex>
				</begin>
				<end>
					<regex>&gt;</regex>
				</end>
				<import/>
			</state>
			<state id="Tag State" foldable="yes" indent="yes" usespellchecking="no" scope="meta.default">
				<begin>
					<regex>&lt;\s*(?'xmltagstatename'[^/?!][-:_\w]*)\s*(?:[-:_\w]+[ \t]*=[ \t]*(?:"[^"]*"|'[^']*'|\w+)\s*)*\s*&gt;</regex>
					<autoend>&lt;/\g&lt;xmltagstatename&gt;&gt;</autoend>
				</begin>
				<end>
					<regex>&lt;\s*/\s*(?#see-insert-start-group:xmltagstatename)\s*&gt;</regex>
				</end>
				<import/>
			</state>
		</default>
	</states>
</syntax>
